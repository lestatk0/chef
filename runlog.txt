[2017-04-05T17:47:40+01:00] DEBUG: Current chef_repo_path is /root
[2017-04-05T17:47:40+01:00] DEBUG: Sleeping for 0 seconds
[2017-04-05T17:47:40+01:00] INFO: Started chef-zero at chefzero://localhost:8889 with repository at /root
  One version per cookbook

[2017-04-05T17:47:40+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889"}
[2017-04-05T17:47:40+01:00] INFO: Forking chef instance to converge...
[2017-04-05T17:47:40+01:00] DEBUG: Fork successful. Waiting for new chef pid: 7856
[2017-04-05T17:47:40+01:00] DEBUG: Forked instance now converging
[2017-04-05T17:47:40+01:00] INFO: *** Chef 12.18.31 ***
[2017-04-05T17:47:40+01:00] INFO: Platform: x86_64-linux
[2017-04-05T17:47:40+01:00] INFO: Chef-client pid: 7856
[2017-04-05T17:47:40+01:00] DEBUG: Chef-client request_id: f3657ac3-1434-4931-b42d-280e97752daa
[2017-04-05T17:47:40+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[]}
[2017-04-05T17:47:40+01:00] DEBUG: Searching for Ohai plugins in /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/lua.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ssh_host_key.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/python.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/joyent.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/os.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sysconf.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/go.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/eucalyptus.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network_route.rb
[2017-04-05T17:47:40+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/vmware.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/os.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/drivers.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/fips.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/chef.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/php.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/passwd.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/timezone.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/root_group.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ruby.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/keys.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/scala.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/dmi.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/zpools.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai_time.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/groovy.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualbox.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/nodejs.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openstack.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rackspace.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/haskell.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/uptime.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/os.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/softlayer.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ec2.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ps.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud_v2.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/packages.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/c.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/azure.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/mono.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/perl.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shells.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/kernel.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/uptime.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/os.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/kernel.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/elixir.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ip_scopes.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/gce.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/erlang.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/digital_ocean.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/machineid.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/lsb.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/block_device.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/fips.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/hostnamectl.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/mdadm.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/sessions.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem2.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linode.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network_listeners.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/init_package.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/network.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/system_profiler.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/memory.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/cpu.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/virtualization.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/platform.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem2.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/hardware.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/command.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rust.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/java.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/languages.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/hostname.rb
[2017-04-05T17:47:40+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/powershell.rb
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: default route table is 'main'
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran 'ip addr' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran 'ip -d -s link' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran 'ip -f inet neigh show' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet route show table main' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing 10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing 169.254.0.0/16 dev eth0  scope link  metric 1002
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing default via 10.0.2.2 dev eth0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: default_interface set to eth0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: default_gateway set to 10.0.2.2
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran 'ip -f inet6 neigh show' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet6 route show table main' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable ::/96 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable ::ffff:0.0.0.0/96 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:a00::/24 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:7f00::/24 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:a9fe::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:ac10::/28 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:c0a8::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:e000::/19 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing unreachable 3ffe:ffff::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing fe80::/64 dev eth0  proto kernel  metric 256  mtu 1500
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Unable to determine 'default_inet6_interface' as no default routes were found for that interface family
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth0' and returned 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: Settings for eth0:
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported ports: [ TP ]
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        1000baseT/Full 
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported pause frame use: No
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        1000baseT/Full 
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised pause frame use: No
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Speed: 1000Mb/s
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Duplex: Full
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Port: Twisted Pair
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	PHYAD: 0
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Transceiver: internal
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Auto-negotiation: on
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	MDI-X: off (auto)
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supports Wake-on: umbg
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Wake-on: d
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 			       drv probe link
[2017-04-05T17:47:40+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Link detected: yes
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth0' and returned 0
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Network: Parsing ethtool output: Ring parameters for eth0:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2017-04-05T17:47:41+01:00] DEBUG: Plugin Network: [inet] Using default interface eth0 and default gateway 10.0.2.2 to set the default ip to 10.0.2.15
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Network: [inet6] no default interface, picking the first ipaddress
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Lua: ran 'lua -v' and returned 0
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Python: ran 'python -c "import sys; print (sys.version)"' and returned 0
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Go: ran 'go version' and failed #<Errno::ENOENT: No such file or directory - go>
[2017-04-05T17:47:41+01:00] DEBUG: Go plugin: Could not shell_out "go version". Skipping plugin
[2017-04-05T17:47:41+01:00] DEBUG: Plugin PHP: ran 'php -v' and failed #<Errno::ENOENT: No such file or directory - php>
[2017-04-05T17:47:41+01:00] DEBUG: Php plugin: Could not shell_out "php -v". Skipping plugin
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %Q(platform=#{RUBY_PLATFORM},version=#{RUBY_VERSION},release_date=#{RUBY_RELEASE_DATE},target=#{RbConfig::CONFIG['target']},target_cpu=#{RbConfig::CONFIG['target_cpu']},target_vendor=#{RbConfig::CONFIG['target_vendor']},target_os=#{RbConfig::CONFIG['target_os']},host=#{RbConfig::CONFIG['host']},host_cpu=#{RbConfig::CONFIG['host_cpu']},host_os=#{RbConfig::CONFIG['host_os']},host_vendor=#{RbConfig::CONFIG['host_vendor']},bin_dir=#{RbConfig::CONFIG['bindir']},ruby_bin=#{::File.join(RbConfig::CONFIG['bindir'], RbConfig::CONFIG['ruby_install_name'])},)"' and returned 0
[2017-04-05T17:47:41+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; require 'rubygems'; puts ::Gem.default_exec_format % 'gem'"' and returned 0
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %x{/opt/chefdk/embedded/bin/ruby /opt/chefdk/embedded/bin/gem env gemdir}.chomp!"' and returned 0
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Scala: ran 'scala -version' and failed #<Errno::ENOENT: No such file or directory - scala>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Scala: Could not shell_out "scala -version". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Scala: ran 'sbt --version' and failed #<Errno::ENOENT: No such file or directory - sbt>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Scala: Could not shell_out "sbt --version". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Groovy: ran 'groovy -v' and failed #<Errno::ENOENT: No such file or directory - groovy>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Groovy: Could not shell_out "groovy -v". Skipping plugin
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Nodejs: ran 'node -v' and failed #<Errno::ENOENT: No such file or directory - node>
[2017-04-05T17:47:42+01:00] DEBUG: Nodejs plugin: Could not shell_out "node -v". Skipping plugin
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: ran 'ghc --version' and failed #<Errno::ENOENT: No such file or directory - ghc>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: Could not shell_out "ghc --version". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: ran 'ghci --version' and failed #<Errno::ENOENT: No such file or directory - ghci>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: Could not shell_out "ghci --version". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: ran 'cabal --version' and failed #<Errno::ENOENT: No such file or directory - cabal>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: Could not shell_out "cabal --version". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: ran 'stack --version' and failed #<Errno::ENOENT: No such file or directory - stack>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Haskell: Could not shell_out "stack --version". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin C: ran 'gcc -v' and returned 0
[2017-04-05T17:47:42+01:00] DEBUG: Plugin C: ran '/lib/libc.so.6' and failed #<Errno::ENOENT: No such file or directory - /lib/libc.so.6>
[2017-04-05T17:47:42+01:00] DEBUG: Plugin C: '/lib/libc.so.6' binary could not be found. Skipping data.
[2017-04-05T17:47:42+01:00] DEBUG: Plugin C: ran '/lib64/libc.so.6' and returned 0
[2017-04-05T17:47:42+01:00] DEBUG: Plugin C: ran 'cc -V -flags' and returned 0
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Mono: ran 'mono -V' and failed #<Errno::ENOENT: No such file or directory - mono>
[2017-04-05T17:47:42+01:00] DEBUG: Mono plugin: Could not shell_out "mono -V". Skipping plugin
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Perl: ran 'perl -V:version -V:archname' and returned 0
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Elixir: ran 'elixir -v' and failed #<Errno::ENOENT: No such file or directory - elixir>
[2017-04-05T17:47:42+01:00] DEBUG: Elixir plugin: Could not shell_out "elixir -v". Skipping plugin
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Erlang: ran 'erl -eval '{ok, Ver} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), Vsn = binary:bin_to_list(Ver, {0, byte_size(Ver) - 1}), io:format("~s,~s,~s", [Vsn, erlang:system_info(version), erlang:system_info(nif_version)]), halt().' -noshell' and returned 127
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Erlang: ran 'erl +V' and failed #<Errno::ENOENT: No such file or directory - erl>
[2017-04-05T17:47:42+01:00] DEBUG: Erlang plugin: Could not shell_out "erl +V". Skipping data
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Rust: ran 'rustc --version' and failed #<Errno::ENOENT: No such file or directory - rustc>
[2017-04-05T17:47:42+01:00] DEBUG: Rust plugin: Could not shell_out "rustc --version". Skipping plugin
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Java: ran 'java -mx64m -version' and failed #<Errno::ENOENT: No such file or directory - java>
[2017-04-05T17:47:42+01:00] DEBUG: Java plugin: Could not shell_out "java -mx64m -version". Skipping plugin
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Powershell: No data to collect. Skipping...
[2017-04-05T17:47:42+01:00] DEBUG: Plugin Kernel: ran 'uname -s' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Kernel: ran 'uname -r' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Kernel: ran 'uname -v' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Kernel: ran 'uname -m' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Kernel: ran 'uname -p' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Kernel: ran 'uname -o' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Kernel: ran 'env lsmod' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Skipping LSB, cannot find /etc/lsb-release or /usr/bin/lsb_release
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Virtualization: /proc/modules contains vboxguest. Detecting as vbox guest
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Virtualization: did not find nova
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Virtualization: did not find lxc-version
[2017-04-05T17:47:43+01:00] DEBUG: Plugin DMI: ran 'dmidecode' and failed #<Errno::ENOENT: No such file or directory - dmidecode>
[2017-04-05T17:47:43+01:00] DEBUG: Plugin DMI threw #<Ohai::Exceptions::Exec: No such file or directory - dmidecode>
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/mixin/command.rb:43:in `rescue in shell_out'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/mixin/command.rb:37:in `shell_out'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb:47:in `block (2 levels) in <main>'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:90:in `instance_eval'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:90:in `run_plugin'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:100:in `run'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:184:in `safe_run'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:43:in `run_plugin'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:98:in `block in run_plugins'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `each'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `run_plugins'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:75:in `all_plugins'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:561:in `run_ohai'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:265:in `run'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:295:in `block in fork_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:248:in `block in run_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:236:in `run_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `loop'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:434:in `run_application'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:59:in `run'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/solo.rb:226:in `run'
[2017-04-05T17:47:43+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/bin/chef-solo:25:in `<top (required)>'
[2017-04-05T17:47:43+01:00] DEBUG: /usr/bin/chef-solo:57:in `load'
[2017-04-05T17:47:43+01:00] DEBUG: /usr/bin/chef-solo:57:in `<main>'
[2017-04-05T17:47:43+01:00] DEBUG: Could not load sigar gem. Skipping NetworkListeners plugin
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Sysconf: found getconf at /usr/bin/getconf
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Sysconf: ran '/usr/bin/getconf -a' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint eucalyptus.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Eucalyptus: has_euca_mac? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Eucalyptus: looks_like_euca? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Filesystem: ran 'df -P' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Filesystem: ran 'df -iP' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Filesystem: ran 'mount' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,FSTYPE' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,UUID' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,LABEL' and returned 0
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Drivers: No data to collect. Skipping...
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint ec2.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin EC2: has_ec2_xen_uuid? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin EC2: has_ec2_dmi? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin EC2: has_amazon_org? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin EC2: looks_like_ec2? == false
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint gce.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Mixin GCE: can_metadata_connect? failed setting up socket: getaddrinfo: Name or service not known
[2017-04-05T17:47:43+01:00] DEBUG: Plugin GCE: looks_like_gce? == false
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint rackspace.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Rackspace: ran 'xenstore-read vm-data/provider_data/provider' and failed #<Errno::ENOENT: No such file or directory - xenstore-read>
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint linode.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Linode: looks_like_linode? == false
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint openstack.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Openstack: openstack hint not present
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Openstack: has_openstack_dmi? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Openstack: Node does not appear to be an Openstack node
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint azure.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Azure: No hints present for azure and doesn't appear to be azure.
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint digital_ocean.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Digitalocean: No hints present for and doesn't look like digitalocean
[2017-04-05T17:47:43+01:00] DEBUG: Did not find hint softlayer.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Softlayer: looks_like_softlayer? == false
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Zpools: No data to collect. Skipping...
[2017-04-05T17:47:43+01:00] DEBUG: Plugin Virtualbox: ran 'VBoxControl guestproperty enumerate' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Packages: ran 'rpm -qa --qf '%{NAME}\t%|EPOCH?{%{EPOCH}}:{0}|\t%{VERSION}\t%{RELEASE}\t%{INSTALLTIME}\t%{ARCH}\n'' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Hostname: ran 'hostname -s' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Hostname: ran 'hostname' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Hostname: ran 'hostname --fqdn' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin ShardSeed threw #<NoMethodError: undefined method `[]' for nil:NilClass>
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:27:in `block in get_dmi_property'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:26:in `each'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:26:in `get_dmi_property'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:74:in `block (3 levels) in <main>'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:53:in `block in create_seed'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:42:in `each'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:42:in `create_seed'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:71:in `block (2 levels) in <main>'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:88:in `instance_eval'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:88:in `run_plugin'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:100:in `run'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:184:in `safe_run'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:43:in `run_plugin'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:98:in `block in run_plugins'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `each'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `run_plugins'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:75:in `all_plugins'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:561:in `run_ohai'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:265:in `run'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:295:in `block in fork_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:248:in `block in run_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:236:in `run_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `loop'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:434:in `run_application'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:59:in `run'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/solo.rb:226:in `run'
[2017-04-05T17:47:44+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/bin/chef-solo:25:in `<top (required)>'
[2017-04-05T17:47:44+01:00] DEBUG: /usr/bin/chef-solo:57:in `load'
[2017-04-05T17:47:44+01:00] DEBUG: /usr/bin/chef-solo:57:in `<main>'
[2017-04-05T17:47:44+01:00] DEBUG: Plugin IpScopes: cannot load gem, plugin disabled: cannot load such file -- ipaddr_extensions
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Hostnamectl: did not find hostnamectl
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Sessions: did not find loginctl
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Sessions: Could not find loginctl. Skipping plugin.
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Filesystem2: ran 'df -P' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Filesystem2: ran 'df -iP' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Filesystem2: ran 'mount' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Filesystem2: ran 'lsblk -n -P -o NAME,UUID,LABEL,FSTYPE' and returned 0
[2017-04-05T17:47:44+01:00] DEBUG: Plugin SystemProfile: No data to collect. Skipping...
[2017-04-05T17:47:44+01:00] DEBUG: Plugin Hardware: No data to collect. Skipping...
[2017-04-05T17:47:44+01:00] DEBUG: Client key is unspecified - skipping registration
[2017-04-05T17:47:44+01:00] DEBUG: data collector URL is not configured, disabling data collector
[2017-04-05T17:47:44+01:00] DEBUG: Building node object for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: GET /organizations/chef/nodes/epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:44+01:00] DEBUG: #<ChefZero::RestRequest:0x000000028a3db8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/nodes/epplkraw0381t1.budapest.epam.com",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000028a3ea8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations", "chef", "nodes", "epplkraw0381t1.budapest.epam.com"]>

[2017-04-05T17:47:44+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:44+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:47:44+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:44+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:47:44+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:44+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:47:44+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "epplkraw0381t1.budapest.epam.com",
  "json_class": "Chef::Node",
  "chef_type": "node",
  "chef_environment": "_default",
  "override": {

  },
  "normal": {
    "tags": [

    ]
  },
  "default": {

  },
  "automatic": {

  },
  "run_list": [

  ]
}
--- END RESPONSE ---
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Extracting run list from JSON attributes provided on command line
[2017-04-05T17:47:44+01:00] INFO: Setting the run_list to ["recipe[chef_nginx::default]", "recipe[iptables::default]"] from CLI options
[2017-04-05T17:47:44+01:00] DEBUG: Applying attributes from json file
[2017-04-05T17:47:44+01:00] DEBUG: Platform is centos version 6.8
[2017-04-05T17:47:44+01:00] INFO: Run List is [recipe[chef_nginx::default], recipe[iptables::default]]
[2017-04-05T17:47:44+01:00] INFO: Run List expands to [chef_nginx::default, iptables::default]
[2017-04-05T17:47:44+01:00] INFO: Starting Chef Run for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:44+01:00] INFO: Running start handlers
[2017-04-05T17:47:44+01:00] INFO: Start handlers complete.
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: POST /organizations/chef/reports/nodes/epplkraw0381t1.budapest.epam.com/runs
--- POST BODY ---
{"action":"start","run_id":"f3657ac3-1434-4931-b42d-280e97752daa","start_time":"2017-04-05 17:47:44 +0100"}
--- END POST BODY ---
[2017-04-05T17:47:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000251d018
 @body=
  "{\"action\":\"start\",\"run_id\":\"f3657ac3-1434-4931-b42d-280e97752daa\",\"start_time\":\"2017-04-05 17:47:44 +0100\"}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"POST",
   "PATH_INFO"=>"/reports/nodes/epplkraw0381t1.budapest.epam.com/runs",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000251d0e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "reports",
   "nodes",
   "epplkraw0381t1.budapest.epam.com",
   "runs"]>

[2017-04-05T17:47:44+01:00] DEBUG: 
--- RESPONSE (404) ---
{
  "error": [
    "Object not found: "
  ]
}
--- END RESPONSE ---
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2017-04-05T17:47:44+01:00] INFO: HTTP Request Returned 404 Not Found: Object not found: 
[2017-04-05T17:47:44+01:00] DEBUG: Reporting error starting run. URL: reports/nodes/epplkraw0381t1.budapest.epam.com/runs Received 404. Disabling reporting for run.
[2017-04-05T17:47:44+01:00] DEBUG: Synchronizing cookbooks
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:44+01:00] DEBUG: POST /organizations/chef/environments/_default/cookbook_versions
--- POST BODY ---
{"run_list":["chef_nginx::default","iptables::default"]}
--- END POST BODY ---
[2017-04-05T17:47:44+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000228cab0
 @body="{\"run_list\":[\"chef_nginx::default\",\"iptables::default\"]}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"POST",
   "PATH_INFO"=>"/environments/_default/cookbook_versions",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000228cb00>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations", "chef", "environments", "_default", "cookbook_versions"]>

[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:44+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "chef_nginx": {
    "recipes": [
      {
        "name": "authorized_ips.rb",
        "path": "recipes/authorized_ips.rb",
        "checksum": "eb5810fef787498ab1b00d33fc0677e2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/authorized_ips.rb"
      },
      {
        "name": "commons.rb",
        "path": "recipes/commons.rb",
        "checksum": "dd273a6c500d1b8ee144be48797255d6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons.rb"
      },
      {
        "name": "commons_conf.rb",
        "path": "recipes/commons_conf.rb",
        "checksum": "fc171e346987eede69daeb0d9e8c3225",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_conf.rb"
      },
      {
        "name": "commons_dir.rb",
        "path": "recipes/commons_dir.rb",
        "checksum": "e02314320e392f33f20626b826925b08",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_dir.rb"
      },
      {
        "name": "commons_script.rb",
        "path": "recipes/commons_script.rb",
        "checksum": "22f5436c3ee869e76e0c39a7c77dac15",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_script.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "3c15927c62551d8d8d402dc532ff6816",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/default.rb"
      },
      {
        "name": "headers_more_module.rb",
        "path": "recipes/headers_more_module.rb",
        "checksum": "6d83ce48253eb38e7ad3423ca39850b1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/headers_more_module.rb"
      },
      {
        "name": "http_auth_request_module.rb",
        "path": "recipes/http_auth_request_module.rb",
        "checksum": "053d3107c3ac0c4315b864aa99135496",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_auth_request_module.rb"
      },
      {
        "name": "http_echo_module.rb",
        "path": "recipes/http_echo_module.rb",
        "checksum": "becb8d8fa9206f347193c6437e918c52",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_echo_module.rb"
      },
      {
        "name": "http_geoip_module.rb",
        "path": "recipes/http_geoip_module.rb",
        "checksum": "1325afdcfcd400a418c4eae16cd8c699",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_geoip_module.rb"
      },
      {
        "name": "http_gzip_static_module.rb",
        "path": "recipes/http_gzip_static_module.rb",
        "checksum": "428588357a964123adcdbbcc78e243bf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_gzip_static_module.rb"
      },
      {
        "name": "http_mp4_module.rb",
        "path": "recipes/http_mp4_module.rb",
        "checksum": "e5f3850a8534adefc75a4b3f84a69299",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_mp4_module.rb"
      },
      {
        "name": "http_perl_module.rb",
        "path": "recipes/http_perl_module.rb",
        "checksum": "17076af0fe5ce35c5d03c9e0f49179bb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_perl_module.rb"
      },
      {
        "name": "http_realip_module.rb",
        "path": "recipes/http_realip_module.rb",
        "checksum": "a902b5902841068582805e9d03daa30c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_realip_module.rb"
      },
      {
        "name": "http_spdy_module.rb",
        "path": "recipes/http_spdy_module.rb",
        "checksum": "8ea7ac2a723d6102a6d466128af6452d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_spdy_module.rb"
      },
      {
        "name": "http_ssl_module.rb",
        "path": "recipes/http_ssl_module.rb",
        "checksum": "56831d993127edcfc0e7bd938a7987b9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_ssl_module.rb"
      },
      {
        "name": "http_stub_status_module.rb",
        "path": "recipes/http_stub_status_module.rb",
        "checksum": "57fdc87b4c632fc2b6b51393e7896c35",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_stub_status_module.rb"
      },
      {
        "name": "http_v2_module.rb",
        "path": "recipes/http_v2_module.rb",
        "checksum": "1b02f8f6a172f2945d155a90799c352f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_v2_module.rb"
      },
      {
        "name": "ipv6.rb",
        "path": "recipes/ipv6.rb",
        "checksum": "10a5bbc17d47cdd00f13b3b05a4ca0d9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ipv6.rb"
      },
      {
        "name": "lua.rb",
        "path": "recipes/lua.rb",
        "checksum": "62f505e804189baaba5d7f085dfa8369",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/lua.rb"
      },
      {
        "name": "naxsi_module.rb",
        "path": "recipes/naxsi_module.rb",
        "checksum": "1bed9aaa8cc51bc2eed861f867dd25cc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/naxsi_module.rb"
      },
      {
        "name": "ngx_devel_module.rb",
        "path": "recipes/ngx_devel_module.rb",
        "checksum": "f3001ff6f852f672688ec505b69228bc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_devel_module.rb"
      },
      {
        "name": "ngx_lua_module.rb",
        "path": "recipes/ngx_lua_module.rb",
        "checksum": "44855dc261136d13688e8c52fe25834b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_lua_module.rb"
      },
      {
        "name": "ohai_plugin.rb",
        "path": "recipes/ohai_plugin.rb",
        "checksum": "1930b47c57d4eec7a535754dac28804c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ohai_plugin.rb"
      },
      {
        "name": "openssl_source.rb",
        "path": "recipes/openssl_source.rb",
        "checksum": "482e459e4efb1497aef2de3828a5538d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/openssl_source.rb"
      },
      {
        "name": "package.rb",
        "path": "recipes/package.rb",
        "checksum": "19c76e713e4244f83afdcb0298bcbd8d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/package.rb"
      },
      {
        "name": "pagespeed_module.rb",
        "path": "recipes/pagespeed_module.rb",
        "checksum": "23a62f99ac7228800718fef61a26fc9a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/pagespeed_module.rb"
      },
      {
        "name": "passenger.rb",
        "path": "recipes/passenger.rb",
        "checksum": "5e810c5e92c0443aafc438b37392cd79",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/passenger.rb"
      },
      {
        "name": "repo.rb",
        "path": "recipes/repo.rb",
        "checksum": "2f1c9e4ab32966be7f238dc24a45351f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo.rb"
      },
      {
        "name": "repo_passenger.rb",
        "path": "recipes/repo_passenger.rb",
        "checksum": "50900d9b8617f27edd90a0c4a7b77459",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo_passenger.rb"
      },
      {
        "name": "set_misc.rb",
        "path": "recipes/set_misc.rb",
        "checksum": "4dba887dc98ccf98dbacd9c765f03ae2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/set_misc.rb"
      },
      {
        "name": "socketproxy.rb",
        "path": "recipes/socketproxy.rb",
        "checksum": "793e4b99d2f61e5d23551981fa292552",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/socketproxy.rb"
      },
      {
        "name": "source.rb",
        "path": "recipes/source.rb",
        "checksum": "39239e78612a61c0bb7237fc53a51564",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/source.rb"
      },
      {
        "name": "syslog_module.rb",
        "path": "recipes/syslog_module.rb",
        "checksum": "43686e0eca555badcf702c86f12d3cb0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/syslog_module.rb"
      },
      {
        "name": "upload_progress_module.rb",
        "path": "recipes/upload_progress_module.rb",
        "checksum": "6fb7bd2f186b22551306af4ecc1d80cd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/upload_progress_module.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "helpers.rb",
        "path": "libraries/helpers.rb",
        "checksum": "31f5ffa35a8499dd722237370e83e026",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/helpers.rb"
      },
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "f93030cf096a8f50d3188469b9f47aeb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "auth_request.rb",
        "path": "attributes/auth_request.rb",
        "checksum": "7093b82f914bad92eb6a7445d99b0be6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/auth_request.rb"
      },
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "72de3401fce57cad7a26d6c76c3faa75",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/default.rb"
      },
      {
        "name": "devel.rb",
        "path": "attributes/devel.rb",
        "checksum": "8472d318a5c67816bd569c314b3998cf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/devel.rb"
      },
      {
        "name": "echo.rb",
        "path": "attributes/echo.rb",
        "checksum": "4db4320997696d961a0226aac1d3c8f7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/echo.rb"
      },
      {
        "name": "geoip.rb",
        "path": "attributes/geoip.rb",
        "checksum": "984a6032f7cac4046fe603ada0d373f2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/geoip.rb"
      },
      {
        "name": "headers_more.rb",
        "path": "attributes/headers_more.rb",
        "checksum": "3660850e7b5867315d4c37283a5e5dc7",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/headers_more.rb"
      },
      {
        "name": "lua.rb",
        "path": "attributes/lua.rb",
        "checksum": "ba654117acfafb64c55dfabc58fe6723",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/lua.rb"
      },
      {
        "name": "naxsi.rb",
        "path": "attributes/naxsi.rb",
        "checksum": "ac355d12c382b0b2c0297af86fb104eb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/naxsi.rb"
      },
      {
        "name": "openssl_source.rb",
        "path": "attributes/openssl_source.rb",
        "checksum": "13ac0bc29663aa8093db009acc41fc81",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/openssl_source.rb"
      },
      {
        "name": "pagespeed.rb",
        "path": "attributes/pagespeed.rb",
        "checksum": "5d320b232022a0c954e1a8155124e092",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/pagespeed.rb"
      },
      {
        "name": "passenger.rb",
        "path": "attributes/passenger.rb",
        "checksum": "102f0a3973c67941ac6b2fafbf23b567",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/passenger.rb"
      },
      {
        "name": "rate_limiting.rb",
        "path": "attributes/rate_limiting.rb",
        "checksum": "2096e19448c3ac453f606b7b4a4a86ad",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/rate_limiting.rb"
      },
      {
        "name": "repo.rb",
        "path": "attributes/repo.rb",
        "checksum": "018a2ed46290d14f1e8d0ef089601f61",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/repo.rb"
      },
      {
        "name": "set_misc.rb",
        "path": "attributes/set_misc.rb",
        "checksum": "24981232aebfb08579d3cdda5fcfe49c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/set_misc.rb"
      },
      {
        "name": "socketproxy.rb",
        "path": "attributes/socketproxy.rb",
        "checksum": "3b55406bdd2c20c06f8e008537ba821d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/socketproxy.rb"
      },
      {
        "name": "source.rb",
        "path": "attributes/source.rb",
        "checksum": "68a6c3c2e0cf27e8a1b0aececcbf4021",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/source.rb"
      },
      {
        "name": "status.rb",
        "path": "attributes/status.rb",
        "checksum": "d5fa986c47a9460140099821d136a3dd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/status.rb"
      },
      {
        "name": "syslog.rb",
        "path": "attributes/syslog.rb",
        "checksum": "7d8d98a8fab0d7843f23c59d2ec7715c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/syslog.rb"
      },
      {
        "name": "upload_progress.rb",
        "path": "attributes/upload_progress.rb",
        "checksum": "f376645ab9f28057be450647fdc0edfc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/upload_progress.rb"
      }
    ],
    "files": [
      {
        "name": "mime.types",
        "path": "files/default/mime.types",
        "checksum": "ff022487923824d5c3f5eec283ee3047",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/mime.types"
      },
      {
        "name": "naxsi_core.rules",
        "path": "files/default/naxsi_core.rules",
        "checksum": "e51d0753f33db2dc0647069dd6729500",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/naxsi_core.rules"
      }
    ],
    "templates": [
      {
        "name": "nginx.init.erb",
        "path": "templates/debian/nginx.init.erb",
        "checksum": "72bdc31e3503acdbadc97b7664edfed4",
        "specificity": "debian",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/debian/nginx.init.erb"
      },
      {
        "name": "default-site.erb",
        "path": "templates/default/default-site.erb",
        "checksum": "282e5ef755b521b75e4daae9b72fee12",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/default-site.erb"
      },
      {
        "name": "authorized_ip.erb",
        "path": "templates/default/modules/authorized_ip.erb",
        "checksum": "00de1147914315cd8f7d4e592b1a91e2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb"
      },
      {
        "name": "http_geoip.conf.erb",
        "path": "templates/default/modules/http_geoip.conf.erb",
        "checksum": "b99cb264ff12c46175a7100c974cbb34",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb"
      },
      {
        "name": "http_gzip_static.conf.erb",
        "path": "templates/default/modules/http_gzip_static.conf.erb",
        "checksum": "af39c4f3abe53ed442c62b3077e109ad",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb"
      },
      {
        "name": "http_realip.conf.erb",
        "path": "templates/default/modules/http_realip.conf.erb",
        "checksum": "9247a86f075102220ca91e9c18eee8a9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb"
      },
      {
        "name": "nginx_status.erb",
        "path": "templates/default/modules/nginx_status.erb",
        "checksum": "6dbe2be673c6cf911fea96fada03fc5b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/nginx_status.erb"
      },
      {
        "name": "passenger.conf.erb",
        "path": "templates/default/modules/passenger.conf.erb",
        "checksum": "09e3ffcb3fdb095d0d2097d4d322626c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb"
      },
      {
        "name": "socketproxy.conf.erb",
        "path": "templates/default/modules/socketproxy.conf.erb",
        "checksum": "9ca555a3a3080e2bcd48e47e08cd4835",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb"
      },
      {
        "name": "upload_progress.erb",
        "path": "templates/default/modules/upload_progress.erb",
        "checksum": "6bebd6809ab6ca51d1ba5f4493bbb3c9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/upload_progress.erb"
      },
      {
        "name": "nginx-upstart.conf.erb",
        "path": "templates/default/nginx-upstart.conf.erb",
        "checksum": "aac2abab34392f57c0a302c851c028ad",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb"
      },
      {
        "name": "nginx.conf.erb",
        "path": "templates/default/nginx.conf.erb",
        "checksum": "997939f4cfb70e8895a24bc411a9a5b2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.conf.erb"
      },
      {
        "name": "nginx.init.erb",
        "path": "templates/default/nginx.init.erb",
        "checksum": "735741e2e231b2b89e012d6b55c6d6cf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.init.erb"
      },
      {
        "name": "nginx.service.erb",
        "path": "templates/default/nginx.service.erb",
        "checksum": "f215be4d8f646cb788770d771d4e210b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.service.erb"
      },
      {
        "name": "nginx.sysconfig.erb",
        "path": "templates/default/nginx.sysconfig.erb",
        "checksum": "26a3872e8bdbdd614fa17ef13ff9e310",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb"
      },
      {
        "name": "nxdissite.erb",
        "path": "templates/default/nxdissite.erb",
        "checksum": "e54bbff0120a2342ef2ffd8f7c0b962b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxdissite.erb"
      },
      {
        "name": "nxensite.erb",
        "path": "templates/default/nxensite.erb",
        "checksum": "d0a082a3abd9fa78bc178f560d89c5d3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxensite.erb"
      },
      {
        "name": "ohai-nginx.rb.erb",
        "path": "templates/default/plugins/ohai-nginx.rb.erb",
        "checksum": "0d7028b99bea2508b52ae30f3f72ab4b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb"
      },
      {
        "name": "sv-nginx-log-run.erb",
        "path": "templates/default/sv-nginx-log-run.erb",
        "checksum": "09f2bf988663175cd1b7973198dfb5eb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb"
      },
      {
        "name": "sv-nginx-run.erb",
        "path": "templates/default/sv-nginx-run.erb",
        "checksum": "0891c2f6a528af6c722eb5833684af65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-run.erb"
      },
      {
        "name": "nginx.init.erb",
        "path": "templates/ubuntu/nginx.init.erb",
        "checksum": "72bdc31e3503acdbadc97b7664edfed4",
        "specificity": "ubuntu",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb"
      }
    ],
    "resources": [
      {
        "name": "site.rb",
        "path": "resources/site.rb",
        "checksum": "ff2be9d5c97b04cdfdb0813ed32c497a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/resources/site.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.toml",
        "path": "MAINTAINERS.toml",
        "checksum": "9bd599f7de7a787f8621cc21c234ad13",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.toml"
      },
      {
        "name": "chefignore",
        "path": "chefignore",
        "checksum": "7adae8823ab24044147fb4498e5f1d65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/chefignore"
      },
      {
        "name": "LICENSE",
        "path": "LICENSE",
        "checksum": "8f7bb094c7232b058c7e9f2e431f389c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/LICENSE"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "4c059ebdeb86c1ee07599450d438c97e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.foodcritic"
      },
      {
        "name": ".gitignore",
        "path": ".gitignore",
        "checksum": "b0c1dde28bbf04f6557e3b8af5885924",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.gitignore"
      },
      {
        "name": "Thorfile",
        "path": "Thorfile",
        "checksum": "330a3ce1d5fb746427a1b62dc9b13705",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Thorfile"
      },
      {
        "name": "Berksfile",
        "path": "Berksfile",
        "checksum": "136788a4ae057d98cbd46e0608c3e219",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile"
      },
      {
        "name": "Berksfile.lock",
        "path": "Berksfile.lock",
        "checksum": "69a8aa07bf17770824557dc257e528b3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile.lock"
      },
      {
        "name": ".rubocop.yml",
        "path": ".rubocop.yml",
        "checksum": "3e3cfab5c5076e89c88fc2f1df178d3b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.rubocop.yml"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "9b6ff646a4e9b434a8da23aabcc1050a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/README.md"
      },
      {
        "name": ".kitchen.dokken.yml",
        "path": ".kitchen.dokken.yml",
        "checksum": "1ab06a17e0714fe4e4ae91d780492df2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.dokken.yml"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "8d495d4a2165a3d8f5246449b3275f37",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.md"
      },
      {
        "name": "TESTING.md",
        "path": "TESTING.md",
        "checksum": "1bb53d176751639d2e090d8ca030890a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/TESTING.md"
      },
      {
        "name": ".kitchen.yml",
        "path": ".kitchen.yml",
        "checksum": "61cb978a58d9bf5fc557a12fa0a7db27",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.yml"
      },
      {
        "name": "Gemfile",
        "path": "Gemfile",
        "checksum": "2d08a3f2d136d49850c8fb46c1e6c841",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Gemfile"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "2ddfa40a24bbe8c46a3ea49a9886b1da",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/metadata.json"
      },
      {
        "name": ".travis.yml",
        "path": ".travis.yml",
        "checksum": "f89bf26a2098459d21bdbd2e71091d26",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.travis.yml"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "67dcd608d3e23063a5aa2c694ef877bb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CHANGELOG.md"
      },
      {
        "name": "Vagrantfile",
        "path": "Vagrantfile",
        "checksum": "0133b1a08d4fca5866f3db76cc81e2f2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Vagrantfile"
      }
    ],
    "metadata": {
      "name": "chef_nginx",
      "description": "Installs and configures nginx",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache-2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "ubuntu": ">= 0.0.0",
        "suse": ">= 0.0.0",
        "opensuse": ">= 0.0.0",
        "opensuseleap": ">= 0.0.0"
      },
      "dependencies": {
        "build-essential": ">= 0.0.0",
        "ohai": ">= 4.1.0",
        "yum-epel": ">= 0.0.0",
        "compat_resource": ">= 12.16.3",
        "zypper": ">= 0.0.0"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "chef_nginx::authorized_ips": ">= 0.0.0",
        "chef_nginx::commons": ">= 0.0.0",
        "chef_nginx::commons_conf": ">= 0.0.0",
        "chef_nginx::commons_dir": ">= 0.0.0",
        "chef_nginx::commons_script": ">= 0.0.0",
        "chef_nginx": ">= 0.0.0",
        "chef_nginx::headers_more_module": ">= 0.0.0",
        "chef_nginx::http_auth_request_module": ">= 0.0.0",
        "chef_nginx::http_echo_module": ">= 0.0.0",
        "chef_nginx::http_geoip_module": ">= 0.0.0",
        "chef_nginx::http_gzip_static_module": ">= 0.0.0",
        "chef_nginx::http_mp4_module": ">= 0.0.0",
        "chef_nginx::http_perl_module": ">= 0.0.0",
        "chef_nginx::http_realip_module": ">= 0.0.0",
        "chef_nginx::http_spdy_module": ">= 0.0.0",
        "chef_nginx::http_ssl_module": ">= 0.0.0",
        "chef_nginx::http_stub_status_module": ">= 0.0.0",
        "chef_nginx::http_v2_module": ">= 0.0.0",
        "chef_nginx::ipv6": ">= 0.0.0",
        "chef_nginx::lua": ">= 0.0.0",
        "chef_nginx::naxsi_module": ">= 0.0.0",
        "chef_nginx::ngx_devel_module": ">= 0.0.0",
        "chef_nginx::ngx_lua_module": ">= 0.0.0",
        "chef_nginx::ohai_plugin": ">= 0.0.0",
        "chef_nginx::openssl_source": ">= 0.0.0",
        "chef_nginx::package": ">= 0.0.0",
        "chef_nginx::pagespeed_module": ">= 0.0.0",
        "chef_nginx::passenger": ">= 0.0.0",
        "chef_nginx::repo": ">= 0.0.0",
        "chef_nginx::repo_passenger": ">= 0.0.0",
        "chef_nginx::set_misc": ">= 0.0.0",
        "chef_nginx::socketproxy": ">= 0.0.0",
        "chef_nginx::source": ">= 0.0.0",
        "chef_nginx::syslog_module": ">= 0.0.0",
        "chef_nginx::upload_progress_module": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "chef_nginx": "Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available",
        "chef_nginx::source": "Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available",
        "chef_nginx::authorized_ips": "",
        "chef_nginx::commons": "",
        "chef_nginx::commons_conf": "",
        "chef_nginx::commons_dir": "",
        "chef_nginx::commons_script": "",
        "chef_nginx::headers_more_module": "",
        "chef_nginx::http_auth_request_module": "",
        "chef_nginx::http_echo_module": "",
        "chef_nginx::http_geoip_module": "",
        "chef_nginx::http_gzip_static_module": "",
        "chef_nginx::http_mp4_module": "",
        "chef_nginx::http_perl_module": "",
        "chef_nginx::http_realip_module": "",
        "chef_nginx::http_spdy_module": "",
        "chef_nginx::http_ssl_module": "",
        "chef_nginx::http_stub_status_module": "",
        "chef_nginx::http_v2_module": "",
        "chef_nginx::ipv6": "",
        "chef_nginx::lua": "",
        "chef_nginx::naxsi_module": "",
        "chef_nginx::ngx_devel_module": "",
        "chef_nginx::ngx_lua_module": "",
        "chef_nginx::ohai_plugin": "",
        "chef_nginx::openssl_source": "",
        "chef_nginx::package": "",
        "chef_nginx::pagespeed_module": "",
        "chef_nginx::passenger": "",
        "chef_nginx::repo": "",
        "chef_nginx::repo_passenger": "",
        "chef_nginx::set_misc": "",
        "chef_nginx::socketproxy": "",
        "chef_nginx::syslog_module": "",
        "chef_nginx::upload_progress_module": ""
      },
      "version": "6.0.1",
      "source_url": "https://github.com/chef-cookbooks/chef_nginx",
      "issues_url": "https://github.com/chef-cookbooks/chef_nginx/issues",
      "privacy": false,
      "chef_versions": [
        [
          ">= 12.1"
        ]
      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "6.0.1",
    "name": "chef_nginx-6.0.1",
    "cookbook_name": "chef_nginx",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "iptables": {
    "recipes": [
      {
        "name": "_package.rb",
        "path": "recipes/_package.rb",
        "checksum": "5b4f94ef595fe23dfc7d4717e4243429",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "38ddcf2c86e8836715e6e064d5be3d2d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb"
      },
      {
        "name": "disabled.rb",
        "path": "recipes/disabled.rb",
        "checksum": "1119f015fde5ce16f6452c7fb623e528",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "f12847b26e2c9b1ca35782d2444dd713",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "da541dac9cc55e4db0c83fdd8c2ccafd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [
      {
        "name": "iptables-config.erb",
        "path": "templates/default/iptables-config.erb",
        "checksum": "375a02610e0c4703fe9ac43bcb19819b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb"
      },
      {
        "name": "iptables_load.erb",
        "path": "templates/default/iptables_load.erb",
        "checksum": "2df62510beedaefde3f8e312aedb70a4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb"
      },
      {
        "name": "rebuild-iptables.erb",
        "path": "templates/default/rebuild-iptables.erb",
        "checksum": "445723b2c440fb53f3425e6fbce7dedd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb"
      }
    ],
    "resources": [
      {
        "name": "rule.rb",
        "path": "resources/rule.rb",
        "checksum": "817fa03bf7387255892385865f658267",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "MAINTAINERS.toml",
        "path": "MAINTAINERS.toml",
        "checksum": "9bd599f7de7a787f8621cc21c234ad13",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.toml"
      },
      {
        "name": "chefignore",
        "path": "chefignore",
        "checksum": "7adae8823ab24044147fb4498e5f1d65",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore"
      },
      {
        "name": "LICENSE",
        "path": "LICENSE",
        "checksum": "fa818a259cbed7ce8bc2a22d35a464fc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE"
      },
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "4c059ebdeb86c1ee07599450d438c97e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.foodcritic"
      },
      {
        "name": ".gitignore",
        "path": ".gitignore",
        "checksum": "b0c1dde28bbf04f6557e3b8af5885924",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.gitignore"
      },
      {
        "name": "Thorfile",
        "path": "Thorfile",
        "checksum": "330a3ce1d5fb746427a1b62dc9b13705",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Thorfile"
      },
      {
        "name": "Berksfile",
        "path": "Berksfile",
        "checksum": "136788a4ae057d98cbd46e0608c3e219",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile"
      },
      {
        "name": "Berksfile.lock",
        "path": "Berksfile.lock",
        "checksum": "5e21a41216160b1426c2be11e11a585c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile.lock"
      },
      {
        "name": ".rubocop.yml",
        "path": ".rubocop.yml",
        "checksum": "a7119d106e5ba93c13fdd1d1bb4bfe90",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.rubocop.yml"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "2c8c6487bf3ab0a21b16440da0404bc9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "8d495d4a2165a3d8f5246449b3275f37",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md"
      },
      {
        "name": "TESTING.md",
        "path": "TESTING.md",
        "checksum": "1bb53d176751639d2e090d8ca030890a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/TESTING.md"
      },
      {
        "name": ".kitchen.yml",
        "path": ".kitchen.yml",
        "checksum": "d225ace351127ea559bdd8e689cc8fcc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.kitchen.yml"
      },
      {
        "name": "Gemfile",
        "path": "Gemfile",
        "checksum": "2d08a3f2d136d49850c8fb46c1e6c841",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "2cb483bbeb68fd57c3cce7e9d6d8cc29",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json"
      },
      {
        "name": ".travis.yml",
        "path": ".travis.yml",
        "checksum": "97c7702bfd42757554dc46fe2a3a852a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.travis.yml"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "331dbbd2f008a611036d01f5705ba49b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CHANGELOG.md"
      },
      {
        "name": "Vagrantfile",
        "path": "Vagrantfile",
        "checksum": "f7ecfa4a62c562b8248101095d8444af",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Vagrantfile"
      }
    ],
    "metadata": {
      "name": "iptables",
      "description": "Installs the iptables daemon and provides a LWRP for managing rules",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache-2.0",
      "platforms": {
        "redhat": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "ubuntu": ">= 0.0.0",
        "amazon": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "iptables::_package": ">= 0.0.0",
        "iptables": ">= 0.0.0",
        "iptables::disabled": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "default": "Installs iptables and sets up .d style config directory of iptables rules",
        "disabled": "Disables iptables",
        "iptables::_package": "",
        "iptables": "",
        "iptables::disabled": ""
      },
      "version": "4.0.1",
      "source_url": "https://github.com/chef-cookbooks/iptables",
      "issues_url": "https://github.com/chef-cookbooks/iptables/issues",
      "privacy": false,
      "chef_versions": [
        [
          ">= 12.10"
        ]
      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "4.0.1",
    "name": "iptables-4.0.1",
    "cookbook_name": "iptables",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "build-essential": {
    "recipes": [
      {
        "name": "_windows.rb",
        "path": "recipes/_windows.rb",
        "checksum": "5876e95dab5983b180a140a2132dbd60",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb"
      },
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "b5b8c97dca0d163b90cfad44d0adcdc5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "7469625f32551144a31f7fad8ff9a4b3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "1f2d8cc8ab31d1a56bc8bb5d9f04b419",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "build_essential.rb",
        "path": "resources/build_essential.rb",
        "checksum": "5fe73a4f90d112363e90eb1304393079",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/build_essential.rb"
      },
      {
        "name": "xcode_command_line_tools.rb",
        "path": "resources/xcode_command_line_tools.rb",
        "checksum": "9c85e6573885c806ea11c533ba08d683",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/xcode_command_line_tools.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "11dfb2135d515ba6c32d23de155c8cfe",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "cf0b9a2cb6e1364e4069a524dc342501",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "8d495d4a2165a3d8f5246449b3275f37",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "97646db69a0b4416fd879523344393c4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "504efb383765853b7d600e703c08b28a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "build-essential",
      "description": "Installs C compiler / build tools",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "freebsd": ">= 0.0.0",
        "mac_os_x": ">= 10.9.0",
        "mac_os_x_server": ">= 10.9.0",
        "opensuse": ">= 0.0.0",
        "opensuseleap": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "smartos": ">= 0.0.0",
        "solaris": ">= 0.0.0",
        "suse": ">= 0.0.0",
        "ubuntu": ">= 0.0.0",
        "windows": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {
        "seven_zip": ">= 0.0.0",
        "mingw": ">= 1.1"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "build-essential::_windows": ">= 0.0.0",
        "build-essential": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "build-essential": "Installs packages required for compiling C software from source.",
        "build-essential::_windows": ""
      },
      "version": "8.0.0",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "8.0.0",
    "name": "build-essential-8.0.0",
    "cookbook_name": "build-essential",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "ohai": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "fce07df9c94e01f31de413d1e27defa9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "47a8b0fd84b889c51dc00253ec3efb42",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb"
      }
    ],
    "attributes": [

    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "hint.rb",
        "path": "resources/hint.rb",
        "checksum": "f25223553246bf7e29a4a4b74b5dd4f1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb"
      },
      {
        "name": "plugin.rb",
        "path": "resources/plugin.rb",
        "checksum": "f7bfc4e93fcd5078c73687e296729fe2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/plugin.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "066ddcf7d032ed7d4897f3324aab9faa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/.foodcritic"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "e88b41e9aab63b6307dbb21fbcdaeaf6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "8d495d4a2165a3d8f5246449b3275f37",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "58cb3b16d96bbfc4412aecf472078dfd",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "28ec0352fc089d68560c05ac51b06d5d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "ohai",
      "description": "Provides custom resources for installing Ohai hints and plugins",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache-2.0",
      "platforms": {
        "ubuntu": ">= 0.0.0",
        "debian": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "amazon": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "fedora": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "suse": ">= 0.0.0",
        "opensuse": ">= 0.0.0",
        "opensuseleap": ">= 0.0.0",
        "freebsd": ">= 0.0.0",
        "windows": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "ohai": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "ohai": ""
      },
      "version": "5.0.2",
      "source_url": "https://github.com/chef-cookbooks/ohai",
      "issues_url": "https://github.com/chef-cookbooks/ohai/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "5.0.2",
    "name": "ohai-5.0.2",
    "cookbook_name": "ohai",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "yum-epel": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "f2643170721adda2d6d4ec751a262f0d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [

    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "f80126ed93186566144b8d109dd1329e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb"
      },
      {
        "name": "epel-debuginfo.rb",
        "path": "attributes/epel-debuginfo.rb",
        "checksum": "0e9c3e4348b0943b3d56ee72f82888f8",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb"
      },
      {
        "name": "epel-source.rb",
        "path": "attributes/epel-source.rb",
        "checksum": "d60571afb86ffa3738aebc0f9d22f707",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb"
      },
      {
        "name": "epel-testing-debuginfo.rb",
        "path": "attributes/epel-testing-debuginfo.rb",
        "checksum": "439a5549f85402178ef6a6ad7b8ac77e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb"
      },
      {
        "name": "epel-testing-source.rb",
        "path": "attributes/epel-testing-source.rb",
        "checksum": "bca86324a3408935adc9e5d70f36ec6e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb"
      },
      {
        "name": "epel-testing.rb",
        "path": "attributes/epel-testing.rb",
        "checksum": "2c2272eb7a231dff026f2337a3f6b9fb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb"
      },
      {
        "name": "epel.rb",
        "path": "attributes/epel.rb",
        "checksum": "8c1c45fdba3e376781d504d52a3fb9e4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "4e3edf97534d8b72b460cb87345fdad5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "5649d1c4d6da35fef8180b592afda0d6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "80e8aa7e34f7d07d3fabcb814b184259",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "a0655a1e071f60af4cb0d570cf87d832",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "yum-epel",
      "description": "Installs and configures the EPEL Yum repository",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "amazon": ">= 0.0.0",
        "centos": ">= 0.0.0",
        "oracle": ">= 0.0.0",
        "redhat": ">= 0.0.0",
        "scientific": ">= 0.0.0",
        "zlinux": ">= 0.0.0"
      },
      "dependencies": {
        "compat_resource": ">= 12.16.3"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "yum-epel": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "yum-epel": ""
      },
      "version": "2.1.1",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.1.1",
    "name": "yum-epel-2.1.1",
    "cookbook_name": "yum-epel",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "compat_resource": {
    "recipes": [

    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "autoload.rb",
        "path": "libraries/autoload.rb",
        "checksum": "6c8d358479384218b72a221d3813eb67",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb"
      }
    ],
    "attributes": [

    ],
    "files": [
      {
        "name": "constants.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/constants.rb",
        "checksum": "efd4289af6a720c2710a23b88ea0aafb",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb"
      },
      {
        "name": "delayed_evaluator.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb",
        "checksum": "7038f6ec92541b206b0f1bd7a851f5b6",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"
      },
      {
        "name": "core.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb",
        "checksum": "1223b735e667b29a55645771c07a807e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"
      },
      {
        "name": "declare_resource.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb",
        "checksum": "a059f48fedeb6db0b9c1c6b40111b409",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"
      },
      {
        "name": "platform_introspection.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb",
        "checksum": "2690ff8e2c5dc987bc4123947cf0e3f3",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"
      },
      {
        "name": "recipe.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb",
        "checksum": "ca4e2ed78545fd62843f237ebbe03c30",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"
      },
      {
        "name": "universal.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb",
        "checksum": "23eaa572a0716678499c2f46aeeec820",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"
      },
      {
        "name": "lazy_module_include.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb",
        "checksum": "b906fc248e4a6b162941475d8e2bfd9d",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"
      },
      {
        "name": "notifying_block.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb",
        "checksum": "583adee37f6d51a8adbf74159cdc423a",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"
      },
      {
        "name": "params_validate.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb",
        "checksum": "8696257c66e53b46af59d751d851039e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"
      },
      {
        "name": "powershell_out.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb",
        "checksum": "b9f9b62c3acb285ddb97d73ead121adf",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"
      },
      {
        "name": "properties.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb",
        "checksum": "f546297a0749500f39ba062e373393db",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"
      },
      {
        "name": "property.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/property.rb",
        "checksum": "9e10276c12ba8907a23d2987af801fa0",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb"
      },
      {
        "name": "apt_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb",
        "checksum": "c8bbb0dfa023ddcbee61ab1c7c219e91",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"
      },
      {
        "name": "apt_update.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb",
        "checksum": "f7694882de201f6e2cb1f10cfd2a68ea",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"
      },
      {
        "name": "noop.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb",
        "checksum": "c64a1d50ecad452ef89ea703c7a7e7dd",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"
      },
      {
        "name": "yum_repo.erb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb",
        "checksum": "99b50ead88c791eb0e1920a3c57c7ac4",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb"
      },
      {
        "name": "systemd_unit.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb",
        "checksum": "de48a8fec80152d131033558c1ec4dad",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb"
      },
      {
        "name": "yum_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb",
        "checksum": "c330ae1ffbd94b1cfe2d01774cce12d8",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"
      },
      {
        "name": "provider.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/provider.rb",
        "checksum": "ecca0fc6e3ce187b02ed8fcbf5d7ebb4",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb"
      },
      {
        "name": "action_class.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb",
        "checksum": "4f8cda115f4560988e84cf41ad813be4",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"
      },
      {
        "name": "apt_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb",
        "checksum": "5705f579343ec7dff89cc1c34e9ef10c",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"
      },
      {
        "name": "apt_update.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb",
        "checksum": "5fa9c14ec63384c51fe1071dbdd52cab",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"
      },
      {
        "name": "systemd_unit.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb",
        "checksum": "7a76020d1e5498db33261a94c4d4d23a",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb"
      },
      {
        "name": "yum_repository.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb",
        "checksum": "a7ef1b53740ee638e88a9c1c82d480c2",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"
      },
      {
        "name": "resource.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource.rb",
        "checksum": "d19f359202755a398965aade0ef43f53",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb"
      },
      {
        "name": "resource_builder.rb",
        "path": "files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb",
        "checksum": "0a3eeed3ac838e236f32182287c28a4e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"
      },
      {
        "name": "copied_from_chef.rb",
        "path": "files/lib/chef_compat/copied_from_chef.rb",
        "checksum": "99864174cd4ffa5d3a9f5d028ec08acb",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb"
      },
      {
        "name": "properties.rb",
        "path": "files/lib/chef_compat/mixin/properties.rb",
        "checksum": "3ff71fa0b65269aab0ab5f2c75d80e6e",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb"
      },
      {
        "name": "exceptions.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/exceptions.rb",
        "checksum": "3b200c3cbc9200da7dd99a93c03bb68c",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb"
      },
      {
        "name": "log.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/log.rb",
        "checksum": "bcf79fcc571c428f06ce449e96d49b46",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb"
      },
      {
        "name": "params_validate.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb",
        "checksum": "f9b44255d786e7203bf548a4c82abb12",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"
      },
      {
        "name": "node.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/node.rb",
        "checksum": "9f36cd47c9de8ae8b836ac63a915148b",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb"
      },
      {
        "name": "property.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/property.rb",
        "checksum": "ecf6b84f34b5b1b3b50755cc6df2d061",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb"
      },
      {
        "name": "provider.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/provider.rb",
        "checksum": "9873a10ab5808cbc46729dbd1b3b6bf3",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb"
      },
      {
        "name": "recipe.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/recipe.rb",
        "checksum": "be7a0b25333f68e355eff48ffe5aac73",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb"
      },
      {
        "name": "recipe_hook.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb",
        "checksum": "8b91d52fdc51fa090357946998e73587",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"
      },
      {
        "name": "lwrp_base.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb",
        "checksum": "96227071b1f592e172998e1af8a48058",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"
      },
      {
        "name": "resource.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource.rb",
        "checksum": "61cd6ea9ba2268188a9e60d82f9986eb",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb"
      },
      {
        "name": "resource_builder.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_builder.rb",
        "checksum": "b5c39505d9ad1c122f086180e9506f69",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"
      },
      {
        "name": "resource_list.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb",
        "checksum": "18fe49afa215382cf565d5a8a6c99d8c",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"
      },
      {
        "name": "resource_set.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb",
        "checksum": "8854c764ed4f33c339e2b65f55eceba5",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"
      },
      {
        "name": "resource_collection.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/resource_collection.rb",
        "checksum": "214c3e75087c9311e33225a7106c1b45",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"
      },
      {
        "name": "run_context.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/run_context.rb",
        "checksum": "11839066accfb74ca5c51f881b8e6c44",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb"
      },
      {
        "name": "runner.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef/runner.rb",
        "checksum": "a2c586b8fe7833770ce3ae5a1eca2e3a",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb"
      },
      {
        "name": "chef.rb",
        "path": "files/lib/chef_compat/monkeypatches/chef.rb",
        "checksum": "1bce1d5d2c63e9ae1bed6bfd15927611",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb"
      },
      {
        "name": "monkeypatches.rb",
        "path": "files/lib/chef_compat/monkeypatches.rb",
        "checksum": "b2404022c1051b495c90aaf110bfa218",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb"
      },
      {
        "name": "property.rb",
        "path": "files/lib/chef_compat/property.rb",
        "checksum": "daf82ee6985f4e02e41fc73636925361",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb"
      },
      {
        "name": "recipe.rb",
        "path": "files/lib/chef_compat/recipe.rb",
        "checksum": "63ccbe80441aff3a4232a920c1780a76",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb"
      },
      {
        "name": "lwrp_base.rb",
        "path": "files/lib/chef_compat/resource/lwrp_base.rb",
        "checksum": "22edef9e101aacbb839c1ab567735115",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb"
      },
      {
        "name": "resource.rb",
        "path": "files/lib/chef_compat/resource.rb",
        "checksum": "5883119a6ad28ede763c0895dbbf35d1",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb"
      },
      {
        "name": "chef_upstream_version.rb",
        "path": "files/lib/chef_upstream_version.rb",
        "checksum": "f9fedf2ccf027e8522ae433f65e5ef46",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb"
      },
      {
        "name": "compat_resource.rb",
        "path": "files/lib/compat_resource.rb",
        "checksum": "3bb9286305bb960c501a9e4b0796ee09",
        "specificity": "lib",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb"
      }
    ],
    "templates": [

    ],
    "resources": [

    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "1b265aad411c98128df5cfb2d2326cdb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "e776d5a2b4fd316772d225ffbc77b186",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "43ec1565eead6c906029e9f7408ac3a4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "c02b49cafd0a41286e063c76bd6609aa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "compat_resource",
      "description": "Backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards",
      "maintainer": "Lamont Granquist",
      "maintainer_email": "lamont@chef.io",
      "license": "Apache 2.0",
      "platforms": {

      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {

      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {

      },
      "version": "12.16.3",
      "source_url": "https://github.com/chef-cookbooks/compat_resource",
      "issues_url": "https://github.com/chef-cookbooks/compat_resource/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "12.16.3",
    "name": "compat_resource-12.16.3",
    "cookbook_name": "compat_resource",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "zypper": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "e1fe27c1fcb485e84e6d3001dd61891b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/default.rb"
      },
      {
        "name": "smt_client.rb",
        "path": "recipes/smt_client.rb",
        "checksum": "acee7ae6c634ec0e32665b5ab38799d3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/smt_client.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "60b62c47d7d3608069e4101be3d092ba",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "9ed87c9bc43c9201c4e9309975f7c89a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "repo.rb",
        "path": "resources/repo.rb",
        "checksum": "ca0a6d844b7ee147ca05550e81c3116c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/resources/repo.rb"
      }
    ],
    "providers": [
      {
        "name": "repo.rb",
        "path": "providers/repo.rb",
        "checksum": "117be753f77208600e53344dc5bc59a3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/providers/repo.rb"
      }
    ],
    "root_files": [
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "99b03585ecb89c1cccc1a8be6063420e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/README.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "a3790730d2c7973f6fd24a1e351dac48",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "3cc5325d74d258437aaaed0589390212",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/zypper/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "zypper",
      "description": "Provides resources for managing zypper repositories",
      "maintainer": "Jim Rosser",
      "maintainer_email": "jarosser06@gmail.com",
      "license": "MIT",
      "platforms": {
        "suse": ">= 0.0.0",
        "opensuse": ">= 0.0.0",
        "opensuseleap": ">= 0.0.0"
      },
      "dependencies": {

      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "zypper": ">= 0.0.0",
        "zypper::smt_client": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "zypper": "",
        "zypper::smt_client": ""
      },
      "version": "0.3.0",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "0.3.0",
    "name": "zypper-0.3.0",
    "cookbook_name": "zypper",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "seven_zip": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "0c76379ce8319c8e5403ff1f02e4986a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "5063c2c31a42b74ea4a03b6cf940d88e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/libraries/matchers.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "5777d35638fa84433bb53779e4a9bdfc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/attributes/default.rb"
      }
    ],
    "files": [

    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "archive.rb",
        "path": "resources/archive.rb",
        "checksum": "6ac8ca9ef422a32c7b5339c8036c27b2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/resources/archive.rb"
      }
    ],
    "providers": [
      {
        "name": "archive.rb",
        "path": "providers/archive.rb",
        "checksum": "11ccf7577c0e0112ba6ca11ea3e698ad",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/providers/archive.rb"
      }
    ],
    "root_files": [
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "b7905d22422684c33f3df9657adbb255",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/README.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "a2a02656327c9c97503dc88868a3cbf4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "463df7ac82878f1c44ffc8d88f84271a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "seven_zip",
      "description": "Installs/Configures the 7-zip file archiver",
      "maintainer": "Shawn Neal",
      "maintainer_email": "sneal@sneal.net",
      "license": "Apache 2.0",
      "platforms": {
        "windows": ">= 0.0.0"
      },
      "dependencies": {
        "windows": ">= 1.2.2"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "seven_zip": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "seven_zip": ""
      },
      "version": "2.0.2",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.0.2",
    "name": "seven_zip-2.0.2",
    "cookbook_name": "seven_zip",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "mingw": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "b9f4fa4319a1b924f10a33584c41bd6f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "_helper.rb",
        "path": "libraries/_helper.rb",
        "checksum": "3ff7dfd9043c980669c81473c579e109",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/libraries/_helper.rb"
      }
    ],
    "attributes": [

    ],
    "files": [
      {
        "name": "bash.bat",
        "path": "files/default/bash.bat",
        "checksum": "bff7bf31993d8fff21b06afc1723b3d5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/bash.bat"
      },
      {
        "name": "custom-upgrade.sh",
        "path": "files/default/custom-upgrade.sh",
        "checksum": "1d5f9d600f8969f7e5588b01b1d252d2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom-upgrade.sh"
      },
      {
        "name": "custom_prefix.sh",
        "path": "files/default/custom_prefix.sh",
        "checksum": "ec587997a7d5e69b331f15fc81010af1",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom_prefix.sh"
      },
      {
        "name": "pthread.h",
        "path": "files/default/pthread.h",
        "checksum": "21224fed216b86f07a80848507f8786f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/pthread.h"
      },
      {
        "name": "time.h",
        "path": "files/default/time.h",
        "checksum": "dbe4d6272395519ce88e511634ae2f2c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/time.h"
      }
    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "get.rb",
        "path": "resources/get.rb",
        "checksum": "e75a387d8267a60153de528318b68016",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/get.rb"
      },
      {
        "name": "msys2_package.rb",
        "path": "resources/msys2_package.rb",
        "checksum": "ef463cd7973d025eb835db6e5eab9bb6",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/msys2_package.rb"
      },
      {
        "name": "tdm_gcc.rb",
        "path": "resources/tdm_gcc.rb",
        "checksum": "baef66781fab161191f04ce9b4456cc5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/tdm_gcc.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "4c059ebdeb86c1ee07599450d438c97e",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/.foodcritic"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "19cf16ac8be12da9a8206052dd431ff9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "dd8099219106905afb425e292e9c24d9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/MAINTAINERS.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "2c8504aec7d004003324157ed411ef28",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "70906c21a0863e8520e468ef8f1c6381",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "mingw",
      "description": "Installs a mingw/msys based toolchain on windows",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache 2.0",
      "platforms": {
        "windows": ">= 0.0.0"
      },
      "dependencies": {
        "seven_zip": ">= 0.0.0"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "mingw": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "mingw": ""
      },
      "version": "2.0.0",
      "source_url": "",
      "issues_url": "",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "2.0.0",
    "name": "mingw-2.0.0",
    "cookbook_name": "mingw",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  },
  "windows": {
    "recipes": [
      {
        "name": "default.rb",
        "path": "recipes/default.rb",
        "checksum": "1c657b722a68ef9cea10dca2c49d01bf",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb"
      }
    ],
    "definitions": [

    ],
    "libraries": [
      {
        "name": "matchers.rb",
        "path": "libraries/matchers.rb",
        "checksum": "b8ed88d644d14d5e3a38b82629a6d8fb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb"
      },
      {
        "name": "powershell_helper.rb",
        "path": "libraries/powershell_helper.rb",
        "checksum": "6420f54143d8b6b2c06ef826b43e48d5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb"
      },
      {
        "name": "registry_helper.rb",
        "path": "libraries/registry_helper.rb",
        "checksum": "b69ac89e38a5fc437d8c0ee652031763",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb"
      },
      {
        "name": "version.rb",
        "path": "libraries/version.rb",
        "checksum": "9156282869cb0c8ccc6d03a2146926e4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb"
      },
      {
        "name": "version_helper.rb",
        "path": "libraries/version_helper.rb",
        "checksum": "06e0daf9ec90b7c67d801f24c149121f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version_helper.rb"
      },
      {
        "name": "windows_helper.rb",
        "path": "libraries/windows_helper.rb",
        "checksum": "0d80b1cc35892d55f1895f584e0617cc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb"
      },
      {
        "name": "windows_privileged.rb",
        "path": "libraries/windows_privileged.rb",
        "checksum": "093d53cda1fbb53d96e4de4cf23b3cfb",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb"
      },
      {
        "name": "wmi_helper.rb",
        "path": "libraries/wmi_helper.rb",
        "checksum": "13b996802dad31f91eea671ab3478ec9",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb"
      }
    ],
    "attributes": [
      {
        "name": "default.rb",
        "path": "attributes/default.rb",
        "checksum": "a56d2d3a598f15aff23c887adcb60d5c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb"
      }
    ],
    "files": [
      {
        "name": "dism_features.rb",
        "path": "files/dism_features.rb",
        "checksum": "2f263356800ad7627ee29c10f444c6b9",
        "specificity": "root_default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/files/dism_features.rb"
      }
    ],
    "templates": [

    ],
    "resources": [
      {
        "name": "auto_run.rb",
        "path": "resources/auto_run.rb",
        "checksum": "45106d67b63c0caa57308570f1e2b06c",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb"
      },
      {
        "name": "certificate.rb",
        "path": "resources/certificate.rb",
        "checksum": "5fd1d9a8d285e93da654ea937fa9d904",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb"
      },
      {
        "name": "certificate_binding.rb",
        "path": "resources/certificate_binding.rb",
        "checksum": "854ee4947a10fa00a095c19db5d1917f",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb"
      },
      {
        "name": "feature.rb",
        "path": "resources/feature.rb",
        "checksum": "9c96048b1e6f68f01e44dfa645dd33a0",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb"
      },
      {
        "name": "feature_dism.rb",
        "path": "resources/feature_dism.rb",
        "checksum": "bd802a4e59c1e15be420ef736e8dc2fa",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_dism.rb"
      },
      {
        "name": "feature_powershell.rb",
        "path": "resources/feature_powershell.rb",
        "checksum": "b97917daa100243e3616edd03bdf9728",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_powershell.rb"
      },
      {
        "name": "feature_servermanagercmd.rb",
        "path": "resources/feature_servermanagercmd.rb",
        "checksum": "c6fa37157816a2e54b66007ade9b287b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_servermanagercmd.rb"
      },
      {
        "name": "font.rb",
        "path": "resources/font.rb",
        "checksum": "cc549ad375266a2434ca9d944de27f74",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb"
      },
      {
        "name": "http_acl.rb",
        "path": "resources/http_acl.rb",
        "checksum": "822b89d21e418e84f89eac0de071ae70",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb"
      },
      {
        "name": "pagefile.rb",
        "path": "resources/pagefile.rb",
        "checksum": "ef7f90961eee6dec39f0fc1c46163942",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb"
      },
      {
        "name": "path.rb",
        "path": "resources/path.rb",
        "checksum": "bccad3bfa513b8445fce981a36638adc",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb"
      },
      {
        "name": "printer.rb",
        "path": "resources/printer.rb",
        "checksum": "eb0effc8c69546e5044e0d5f31db57b5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb"
      },
      {
        "name": "printer_port.rb",
        "path": "resources/printer_port.rb",
        "checksum": "2669df868a4a8275c5e5287b2c6d18ad",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb"
      },
      {
        "name": "share.rb",
        "path": "resources/share.rb",
        "checksum": "62b80de4f4000aaf208dfa1e011ff040",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/share.rb"
      },
      {
        "name": "shortcut.rb",
        "path": "resources/shortcut.rb",
        "checksum": "6256bade233499d9677515352c3489c3",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb"
      },
      {
        "name": "task.rb",
        "path": "resources/task.rb",
        "checksum": "59cf007fe285308553b1145843804f6d",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb"
      },
      {
        "name": "zipfile.rb",
        "path": "resources/zipfile.rb",
        "checksum": "8c7e8b84ec3e31cda3b41ff511b6f964",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb"
      }
    ],
    "providers": [

    ],
    "root_files": [
      {
        "name": ".foodcritic",
        "path": ".foodcritic",
        "checksum": "2c86323308e2ecf6eac55dbe7858ab1b",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic"
      },
      {
        "name": "README.md",
        "path": "README.md",
        "checksum": "7d9909ab3614b2460ee1c7cad1dd81a5",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md"
      },
      {
        "name": "MAINTAINERS.md",
        "path": "MAINTAINERS.md",
        "checksum": "4604b38cc9ea81e35a41d1eac5d4a66a",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md"
      },
      {
        "name": "CONTRIBUTING.md",
        "path": "CONTRIBUTING.md",
        "checksum": "851a37baf4e39196fc664e393cdf2e11",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md"
      },
      {
        "name": "metadata.json",
        "path": "metadata.json",
        "checksum": "7f19a650018188e2e68be82024fce3c2",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json"
      },
      {
        "name": "CHANGELOG.md",
        "path": "CHANGELOG.md",
        "checksum": "6e22078cedb503ad3bf91e15034696e4",
        "specificity": "default",
        "url": "chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md"
      }
    ],
    "metadata": {
      "name": "windows",
      "description": "Provides a set of useful Windows-specific primitives.",
      "maintainer": "Chef Software, Inc.",
      "maintainer_email": "cookbooks@chef.io",
      "license": "Apache-2.0",
      "platforms": {
        "windows": ">= 0.0.0"
      },
      "dependencies": {
        "ohai": ">= 4.0.0"
      },
      "recommendations": {

      },
      "suggestions": {

      },
      "conflicting": {

      },
      "providing": {
        "windows": ">= 0.0.0"
      },
      "replacing": {

      },
      "groupings": {

      },
      "recipes": {
        "windows": ""
      },
      "version": "3.0.4",
      "source_url": "https://github.com/chef-cookbooks/windows",
      "issues_url": "https://github.com/chef-cookbooks/windows/issues",
      "privacy": false,
      "chef_versions": [

      ],
      "ohai_versions": [

      ],
      "gems": [

      ]
    },
    "version": "3.0.4",
    "name": "windows-3.0.4",
    "cookbook_name": "windows",
    "frozen?": false,
    "chef_type": "cookbook_version",
    "json_class": "Chef::CookbookVersion"
  }
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2017-04-05T17:47:45+01:00] INFO: Loading cookbooks [chef_nginx@6.0.1, iptables@4.0.1, build-essential@8.0.0, ohai@5.0.2, yum-epel@2.1.1, compat_resource@12.16.3, zypper@0.3.0, seven_zip@2.0.2, mingw@2.0.0, windows@3.0.4]
[2017-04-05T17:47:45+01:00] DEBUG: Cookbooks detail: [#<Chef::CookbookVersion:0x00000004c2dea0 @name="chef_nginx", @root_paths=[], @frozen=false, @attribute_filenames=["auth_request.rb", "default.rb", "devel.rb", "echo.rb", "geoip.rb", "headers_more.rb", "lua.rb", "naxsi.rb", "openssl_source.rb", "pagespeed.rb", "passenger.rb", "rate_limiting.rb", "repo.rb", "set_misc.rb", "socketproxy.rb", "source.rb", "status.rb", "syslog.rb", "upload_progress.rb"], @definition_filenames=[], @template_filenames=["nginx.init.erb", "default-site.erb", "authorized_ip.erb", "http_geoip.conf.erb", "http_gzip_static.conf.erb", "http_realip.conf.erb", "nginx_status.erb", "passenger.conf.erb", "socketproxy.conf.erb", "upload_progress.erb", "nginx-upstart.conf.erb", "nginx.conf.erb", "nginx.init.erb", "nginx.service.erb", "nginx.sysconfig.erb", "nxdissite.erb", "nxensite.erb", "ohai-nginx.rb.erb", "sv-nginx-log-run.erb", "sv-nginx-run.erb", "nginx.init.erb"], @file_filenames=["mime.types", "naxsi_core.rules"], @recipe_filenames=["authorized_ips.rb", "commons.rb", "commons_conf.rb", "commons_dir.rb", "commons_script.rb", "default.rb", "headers_more_module.rb", "http_auth_request_module.rb", "http_echo_module.rb", "http_geoip_module.rb", "http_gzip_static_module.rb", "http_mp4_module.rb", "http_perl_module.rb", "http_realip_module.rb", "http_spdy_module.rb", "http_ssl_module.rb", "http_stub_status_module.rb", "http_v2_module.rb", "ipv6.rb", "lua.rb", "naxsi_module.rb", "ngx_devel_module.rb", "ngx_lua_module.rb", "ohai_plugin.rb", "openssl_source.rb", "package.rb", "pagespeed_module.rb", "passenger.rb", "repo.rb", "repo_passenger.rb", "set_misc.rb", "socketproxy.rb", "source.rb", "syslog_module.rb", "upload_progress_module.rb"], @recipe_filenames_by_name={"authorized_ips"=>"authorized_ips.rb", "commons"=>"commons.rb", "commons_conf"=>"commons_conf.rb", "commons_dir"=>"commons_dir.rb", "commons_script"=>"commons_script.rb", "default"=>"default.rb", "headers_more_module"=>"headers_more_module.rb", "http_auth_request_module"=>"http_auth_request_module.rb", "http_echo_module"=>"http_echo_module.rb", "http_geoip_module"=>"http_geoip_module.rb", "http_gzip_static_module"=>"http_gzip_static_module.rb", "http_mp4_module"=>"http_mp4_module.rb", "http_perl_module"=>"http_perl_module.rb", "http_realip_module"=>"http_realip_module.rb", "http_spdy_module"=>"http_spdy_module.rb", "http_ssl_module"=>"http_ssl_module.rb", "http_stub_status_module"=>"http_stub_status_module.rb", "http_v2_module"=>"http_v2_module.rb", "ipv6"=>"ipv6.rb", "lua"=>"lua.rb", "naxsi_module"=>"naxsi_module.rb", "ngx_devel_module"=>"ngx_devel_module.rb", "ngx_lua_module"=>"ngx_lua_module.rb", "ohai_plugin"=>"ohai_plugin.rb", "openssl_source"=>"openssl_source.rb", "package"=>"package.rb", "pagespeed_module"=>"pagespeed_module.rb", "passenger"=>"passenger.rb", "repo"=>"repo.rb", "repo_passenger"=>"repo_passenger.rb", "set_misc"=>"set_misc.rb", "socketproxy"=>"socketproxy.rb", "source"=>"source.rb", "syslog_module"=>"syslog_module.rb", "upload_progress_module"=>"upload_progress_module.rb"}, @library_filenames=["helpers.rb", "matchers.rb"], @resource_filenames=["site.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.toml", "chefignore", "LICENSE", ".foodcritic", ".gitignore", "Thorfile", "Berksfile", "Berksfile.lock", ".rubocop.yml", "README.md", ".kitchen.dokken.yml", "MAINTAINERS.md", "TESTING.md", ".kitchen.yml", "Gemfile", "CONTRIBUTING.md", "metadata.json", ".travis.yml", "CHANGELOG.md", "Vagrantfile"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004c2d630 @name="chef_nginx", @description="Installs and configures nginx", @long_description="", @license="Apache-2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "suse"=>">= 0.0.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0"}, @dependencies={"build-essential"=>">= 0.0.0", "ohai"=>">= 4.1.0", "yum-epel"=>">= 0.0.0", "compat_resource"=>">= 12.16.3", "zypper"=>">= 0.0.0"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"chef_nginx::authorized_ips"=>">= 0.0.0", "chef_nginx::commons"=>">= 0.0.0", "chef_nginx::commons_conf"=>">= 0.0.0", "chef_nginx::commons_dir"=>">= 0.0.0", "chef_nginx::commons_script"=>">= 0.0.0", "chef_nginx"=>">= 0.0.0", "chef_nginx::headers_more_module"=>">= 0.0.0", "chef_nginx::http_auth_request_module"=>">= 0.0.0", "chef_nginx::http_echo_module"=>">= 0.0.0", "chef_nginx::http_geoip_module"=>">= 0.0.0", "chef_nginx::http_gzip_static_module"=>">= 0.0.0", "chef_nginx::http_mp4_module"=>">= 0.0.0", "chef_nginx::http_perl_module"=>">= 0.0.0", "chef_nginx::http_realip_module"=>">= 0.0.0", "chef_nginx::http_spdy_module"=>">= 0.0.0", "chef_nginx::http_ssl_module"=>">= 0.0.0", "chef_nginx::http_stub_status_module"=>">= 0.0.0", "chef_nginx::http_v2_module"=>">= 0.0.0", "chef_nginx::ipv6"=>">= 0.0.0", "chef_nginx::lua"=>">= 0.0.0", "chef_nginx::naxsi_module"=>">= 0.0.0", "chef_nginx::ngx_devel_module"=>">= 0.0.0", "chef_nginx::ngx_lua_module"=>">= 0.0.0", "chef_nginx::ohai_plugin"=>">= 0.0.0", "chef_nginx::openssl_source"=>">= 0.0.0", "chef_nginx::package"=>">= 0.0.0", "chef_nginx::pagespeed_module"=>">= 0.0.0", "chef_nginx::passenger"=>">= 0.0.0", "chef_nginx::repo"=>">= 0.0.0", "chef_nginx::repo_passenger"=>">= 0.0.0", "chef_nginx::set_misc"=>">= 0.0.0", "chef_nginx::socketproxy"=>">= 0.0.0", "chef_nginx::source"=>">= 0.0.0", "chef_nginx::syslog_module"=>">= 0.0.0", "chef_nginx::upload_progress_module"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"chef_nginx"=>"Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available", "chef_nginx::source"=>"Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available", "chef_nginx::authorized_ips"=>"", "chef_nginx::commons"=>"", "chef_nginx::commons_conf"=>"", "chef_nginx::commons_dir"=>"", "chef_nginx::commons_script"=>"", "chef_nginx::headers_more_module"=>"", "chef_nginx::http_auth_request_module"=>"", "chef_nginx::http_echo_module"=>"", "chef_nginx::http_geoip_module"=>"", "chef_nginx::http_gzip_static_module"=>"", "chef_nginx::http_mp4_module"=>"", "chef_nginx::http_perl_module"=>"", "chef_nginx::http_realip_module"=>"", "chef_nginx::http_spdy_module"=>"", "chef_nginx::http_ssl_module"=>"", "chef_nginx::http_stub_status_module"=>"", "chef_nginx::http_v2_module"=>"", "chef_nginx::ipv6"=>"", "chef_nginx::lua"=>"", "chef_nginx::naxsi_module"=>"", "chef_nginx::ngx_devel_module"=>"", "chef_nginx::ngx_lua_module"=>"", "chef_nginx::ohai_plugin"=>"", "chef_nginx::openssl_source"=>"", "chef_nginx::package"=>"", "chef_nginx::pagespeed_module"=>"", "chef_nginx::passenger"=>"", "chef_nginx::repo"=>"", "chef_nginx::repo_passenger"=>"", "chef_nginx::set_misc"=>"", "chef_nginx::socketproxy"=>"", "chef_nginx::syslog_module"=>"", "chef_nginx::upload_progress_module"=>""}, @version="6.0.1", @source_url="https://github.com/chef-cookbooks/chef_nginx", @issues_url="https://github.com/chef-cookbooks/chef_nginx/issues", @privacy=false, @chef_versions=[<Gem::Dependency type=:runtime name="chef" requirements=">= 12.1">], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"auth_request"=>"auth_request.rb", "default"=>"default.rb", "devel"=>"devel.rb", "echo"=>"echo.rb", "geoip"=>"geoip.rb", "headers_more"=>"headers_more.rb", "lua"=>"lua.rb", "naxsi"=>"naxsi.rb", "openssl_source"=>"openssl_source.rb", "pagespeed"=>"pagespeed.rb", "passenger"=>"passenger.rb", "rate_limiting"=>"rate_limiting.rb", "repo"=>"repo.rb", "set_misc"=>"set_misc.rb", "socketproxy"=>"socketproxy.rb", "source"=>"source.rb", "status"=>"status.rb", "syslog"=>"syslog.rb", "upload_progress"=>"upload_progress.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004c1bde0 @cookbook_version=#<Chef::CookbookVersion:0x00000004c2dea0 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"authorized_ips.rb", "path"=>"recipes/authorized_ips.rb", "checksum"=>"eb5810fef787498ab1b00d33fc0677e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/authorized_ips.rb"}, {"name"=>"commons.rb", "path"=>"recipes/commons.rb", "checksum"=>"dd273a6c500d1b8ee144be48797255d6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons.rb"}, {"name"=>"commons_conf.rb", "path"=>"recipes/commons_conf.rb", "checksum"=>"fc171e346987eede69daeb0d9e8c3225", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_conf.rb"}, {"name"=>"commons_dir.rb", "path"=>"recipes/commons_dir.rb", "checksum"=>"e02314320e392f33f20626b826925b08", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_dir.rb"}, {"name"=>"commons_script.rb", "path"=>"recipes/commons_script.rb", "checksum"=>"22f5436c3ee869e76e0c39a7c77dac15", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_script.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"3c15927c62551d8d8d402dc532ff6816", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/default.rb"}, {"name"=>"headers_more_module.rb", "path"=>"recipes/headers_more_module.rb", "checksum"=>"6d83ce48253eb38e7ad3423ca39850b1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/headers_more_module.rb"}, {"name"=>"http_auth_request_module.rb", "path"=>"recipes/http_auth_request_module.rb", "checksum"=>"053d3107c3ac0c4315b864aa99135496", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_auth_request_module.rb"}, {"name"=>"http_echo_module.rb", "path"=>"recipes/http_echo_module.rb", "checksum"=>"becb8d8fa9206f347193c6437e918c52", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_echo_module.rb"}, {"name"=>"http_geoip_module.rb", "path"=>"recipes/http_geoip_module.rb", "checksum"=>"1325afdcfcd400a418c4eae16cd8c699", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_geoip_module.rb"}, {"name"=>"http_gzip_static_module.rb", "path"=>"recipes/http_gzip_static_module.rb", "checksum"=>"428588357a964123adcdbbcc78e243bf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_gzip_static_module.rb"}, {"name"=>"http_mp4_module.rb", "path"=>"recipes/http_mp4_module.rb", "checksum"=>"e5f3850a8534adefc75a4b3f84a69299", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_mp4_module.rb"}, {"name"=>"http_perl_module.rb", "path"=>"recipes/http_perl_module.rb", "checksum"=>"17076af0fe5ce35c5d03c9e0f49179bb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_perl_module.rb"}, {"name"=>"http_realip_module.rb", "path"=>"recipes/http_realip_module.rb", "checksum"=>"a902b5902841068582805e9d03daa30c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_realip_module.rb"}, {"name"=>"http_spdy_module.rb", "path"=>"recipes/http_spdy_module.rb", "checksum"=>"8ea7ac2a723d6102a6d466128af6452d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_spdy_module.rb"}, {"name"=>"http_ssl_module.rb", "path"=>"recipes/http_ssl_module.rb", "checksum"=>"56831d993127edcfc0e7bd938a7987b9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_ssl_module.rb"}, {"name"=>"http_stub_status_module.rb", "path"=>"recipes/http_stub_status_module.rb", "checksum"=>"57fdc87b4c632fc2b6b51393e7896c35", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_stub_status_module.rb"}, {"name"=>"http_v2_module.rb", "path"=>"recipes/http_v2_module.rb", "checksum"=>"1b02f8f6a172f2945d155a90799c352f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_v2_module.rb"}, {"name"=>"ipv6.rb", "path"=>"recipes/ipv6.rb", "checksum"=>"10a5bbc17d47cdd00f13b3b05a4ca0d9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ipv6.rb"}, {"name"=>"lua.rb", "path"=>"recipes/lua.rb", "checksum"=>"62f505e804189baaba5d7f085dfa8369", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/lua.rb"}, {"name"=>"naxsi_module.rb", "path"=>"recipes/naxsi_module.rb", "checksum"=>"1bed9aaa8cc51bc2eed861f867dd25cc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/naxsi_module.rb"}, {"name"=>"ngx_devel_module.rb", "path"=>"recipes/ngx_devel_module.rb", "checksum"=>"f3001ff6f852f672688ec505b69228bc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_devel_module.rb"}, {"name"=>"ngx_lua_module.rb", "path"=>"recipes/ngx_lua_module.rb", "checksum"=>"44855dc261136d13688e8c52fe25834b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_lua_module.rb"}, {"name"=>"ohai_plugin.rb", "path"=>"recipes/ohai_plugin.rb", "checksum"=>"1930b47c57d4eec7a535754dac28804c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ohai_plugin.rb"}, {"name"=>"openssl_source.rb", "path"=>"recipes/openssl_source.rb", "checksum"=>"482e459e4efb1497aef2de3828a5538d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/openssl_source.rb"}, {"name"=>"package.rb", "path"=>"recipes/package.rb", "checksum"=>"19c76e713e4244f83afdcb0298bcbd8d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/package.rb"}, {"name"=>"pagespeed_module.rb", "path"=>"recipes/pagespeed_module.rb", "checksum"=>"23a62f99ac7228800718fef61a26fc9a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/pagespeed_module.rb"}, {"name"=>"passenger.rb", "path"=>"recipes/passenger.rb", "checksum"=>"5e810c5e92c0443aafc438b37392cd79", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/passenger.rb"}, {"name"=>"repo.rb", "path"=>"recipes/repo.rb", "checksum"=>"2f1c9e4ab32966be7f238dc24a45351f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo.rb"}, {"name"=>"repo_passenger.rb", "path"=>"recipes/repo_passenger.rb", "checksum"=>"50900d9b8617f27edd90a0c4a7b77459", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo_passenger.rb"}, {"name"=>"set_misc.rb", "path"=>"recipes/set_misc.rb", "checksum"=>"4dba887dc98ccf98dbacd9c765f03ae2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/set_misc.rb"}, {"name"=>"socketproxy.rb", "path"=>"recipes/socketproxy.rb", "checksum"=>"793e4b99d2f61e5d23551981fa292552", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/socketproxy.rb"}, {"name"=>"source.rb", "path"=>"recipes/source.rb", "checksum"=>"39239e78612a61c0bb7237fc53a51564", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/source.rb"}, {"name"=>"syslog_module.rb", "path"=>"recipes/syslog_module.rb", "checksum"=>"43686e0eca555badcf702c86f12d3cb0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/syslog_module.rb"}, {"name"=>"upload_progress_module.rb", "path"=>"recipes/upload_progress_module.rb", "checksum"=>"6fb7bd2f186b22551306af4ecc1d80cd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/upload_progress_module.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"helpers.rb", "path"=>"libraries/helpers.rb", "checksum"=>"31f5ffa35a8499dd722237370e83e026", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/helpers.rb"}, {"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"f93030cf096a8f50d3188469b9f47aeb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/matchers.rb"}], "attributes"=>[{"name"=>"auth_request.rb", "path"=>"attributes/auth_request.rb", "checksum"=>"7093b82f914bad92eb6a7445d99b0be6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/auth_request.rb"}, {"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"72de3401fce57cad7a26d6c76c3faa75", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/default.rb"}, {"name"=>"devel.rb", "path"=>"attributes/devel.rb", "checksum"=>"8472d318a5c67816bd569c314b3998cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/devel.rb"}, {"name"=>"echo.rb", "path"=>"attributes/echo.rb", "checksum"=>"4db4320997696d961a0226aac1d3c8f7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/echo.rb"}, {"name"=>"geoip.rb", "path"=>"attributes/geoip.rb", "checksum"=>"984a6032f7cac4046fe603ada0d373f2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/geoip.rb"}, {"name"=>"headers_more.rb", "path"=>"attributes/headers_more.rb", "checksum"=>"3660850e7b5867315d4c37283a5e5dc7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/headers_more.rb"}, {"name"=>"lua.rb", "path"=>"attributes/lua.rb", "checksum"=>"ba654117acfafb64c55dfabc58fe6723", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/lua.rb"}, {"name"=>"naxsi.rb", "path"=>"attributes/naxsi.rb", "checksum"=>"ac355d12c382b0b2c0297af86fb104eb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/naxsi.rb"}, {"name"=>"openssl_source.rb", "path"=>"attributes/openssl_source.rb", "checksum"=>"13ac0bc29663aa8093db009acc41fc81", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/openssl_source.rb"}, {"name"=>"pagespeed.rb", "path"=>"attributes/pagespeed.rb", "checksum"=>"5d320b232022a0c954e1a8155124e092", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/pagespeed.rb"}, {"name"=>"passenger.rb", "path"=>"attributes/passenger.rb", "checksum"=>"102f0a3973c67941ac6b2fafbf23b567", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/passenger.rb"}, {"name"=>"rate_limiting.rb", "path"=>"attributes/rate_limiting.rb", "checksum"=>"2096e19448c3ac453f606b7b4a4a86ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/rate_limiting.rb"}, {"name"=>"repo.rb", "path"=>"attributes/repo.rb", "checksum"=>"018a2ed46290d14f1e8d0ef089601f61", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/repo.rb"}, {"name"=>"set_misc.rb", "path"=>"attributes/set_misc.rb", "checksum"=>"24981232aebfb08579d3cdda5fcfe49c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/set_misc.rb"}, {"name"=>"socketproxy.rb", "path"=>"attributes/socketproxy.rb", "checksum"=>"3b55406bdd2c20c06f8e008537ba821d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/socketproxy.rb"}, {"name"=>"source.rb", "path"=>"attributes/source.rb", "checksum"=>"68a6c3c2e0cf27e8a1b0aececcbf4021", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/source.rb"}, {"name"=>"status.rb", "path"=>"attributes/status.rb", "checksum"=>"d5fa986c47a9460140099821d136a3dd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/status.rb"}, {"name"=>"syslog.rb", "path"=>"attributes/syslog.rb", "checksum"=>"7d8d98a8fab0d7843f23c59d2ec7715c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/syslog.rb"}, {"name"=>"upload_progress.rb", "path"=>"attributes/upload_progress.rb", "checksum"=>"f376645ab9f28057be450647fdc0edfc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/upload_progress.rb"}], "files"=>[{"name"=>"mime.types", "path"=>"files/default/mime.types", "checksum"=>"ff022487923824d5c3f5eec283ee3047", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/mime.types"}, {"name"=>"naxsi_core.rules", "path"=>"files/default/naxsi_core.rules", "checksum"=>"e51d0753f33db2dc0647069dd6729500", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/naxsi_core.rules"}], "templates"=>[{"name"=>"nginx.init.erb", "path"=>"templates/debian/nginx.init.erb", "checksum"=>"72bdc31e3503acdbadc97b7664edfed4", "specificity"=>"debian", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/debian/nginx.init.erb"}, {"name"=>"default-site.erb", "path"=>"templates/default/default-site.erb", "checksum"=>"282e5ef755b521b75e4daae9b72fee12", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/default-site.erb"}, {"name"=>"authorized_ip.erb", "path"=>"templates/default/modules/authorized_ip.erb", "checksum"=>"00de1147914315cd8f7d4e592b1a91e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb"}, {"name"=>"http_geoip.conf.erb", "path"=>"templates/default/modules/http_geoip.conf.erb", "checksum"=>"b99cb264ff12c46175a7100c974cbb34", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb"}, {"name"=>"http_gzip_static.conf.erb", "path"=>"templates/default/modules/http_gzip_static.conf.erb", "checksum"=>"af39c4f3abe53ed442c62b3077e109ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb"}, {"name"=>"http_realip.conf.erb", "path"=>"templates/default/modules/http_realip.conf.erb", "checksum"=>"9247a86f075102220ca91e9c18eee8a9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb"}, {"name"=>"nginx_status.erb", "path"=>"templates/default/modules/nginx_status.erb", "checksum"=>"6dbe2be673c6cf911fea96fada03fc5b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/nginx_status.erb"}, {"name"=>"passenger.conf.erb", "path"=>"templates/default/modules/passenger.conf.erb", "checksum"=>"09e3ffcb3fdb095d0d2097d4d322626c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb"}, {"name"=>"socketproxy.conf.erb", "path"=>"templates/default/modules/socketproxy.conf.erb", "checksum"=>"9ca555a3a3080e2bcd48e47e08cd4835", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb"}, {"name"=>"upload_progress.erb", "path"=>"templates/default/modules/upload_progress.erb", "checksum"=>"6bebd6809ab6ca51d1ba5f4493bbb3c9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/upload_progress.erb"}, {"name"=>"nginx-upstart.conf.erb", "path"=>"templates/default/nginx-upstart.conf.erb", "checksum"=>"aac2abab34392f57c0a302c851c028ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb"}, {"name"=>"nginx.conf.erb", "path"=>"templates/default/nginx.conf.erb", "checksum"=>"997939f4cfb70e8895a24bc411a9a5b2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.conf.erb"}, {"name"=>"nginx.init.erb", "path"=>"templates/default/nginx.init.erb", "checksum"=>"735741e2e231b2b89e012d6b55c6d6cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.init.erb"}, {"name"=>"nginx.service.erb", "path"=>"templates/default/nginx.service.erb", "checksum"=>"f215be4d8f646cb788770d771d4e210b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.service.erb"}, {"name"=>"nginx.sysconfig.erb", "path"=>"templates/default/nginx.sysconfig.erb", "checksum"=>"26a3872e8bdbdd614fa17ef13ff9e310", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb"}, {"name"=>"nxdissite.erb", "path"=>"templates/default/nxdissite.erb", "checksum"=>"e54bbff0120a2342ef2ffd8f7c0b962b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxdissite.erb"}, {"name"=>"nxensite.erb", "path"=>"templates/default/nxensite.erb", "checksum"=>"d0a082a3abd9fa78bc178f560d89c5d3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxensite.erb"}, {"name"=>"ohai-nginx.rb.erb", "path"=>"templates/default/plugins/ohai-nginx.rb.erb", "checksum"=>"0d7028b99bea2508b52ae30f3f72ab4b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb"}, {"name"=>"sv-nginx-log-run.erb", "path"=>"templates/default/sv-nginx-log-run.erb", "checksum"=>"09f2bf988663175cd1b7973198dfb5eb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb"}, {"name"=>"sv-nginx-run.erb", "path"=>"templates/default/sv-nginx-run.erb", "checksum"=>"0891c2f6a528af6c722eb5833684af65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-run.erb"}, {"name"=>"nginx.init.erb", "path"=>"templates/ubuntu/nginx.init.erb", "checksum"=>"72bdc31e3503acdbadc97b7664edfed4", "specificity"=>"ubuntu", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb"}], "resources"=>[{"name"=>"site.rb", "path"=>"resources/site.rb", "checksum"=>"ff2be9d5c97b04cdfdb0813ed32c497a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/resources/site.rb"}], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.toml", "path"=>"MAINTAINERS.toml", "checksum"=>"9bd599f7de7a787f8621cc21c234ad13", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.toml"}, {"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"7adae8823ab24044147fb4498e5f1d65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/chefignore"}, {"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"8f7bb094c7232b058c7e9f2e431f389c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/LICENSE"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"4c059ebdeb86c1ee07599450d438c97e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.foodcritic"}, {"name"=>".gitignore", "path"=>".gitignore", "checksum"=>"b0c1dde28bbf04f6557e3b8af5885924", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.gitignore"}, {"name"=>"Thorfile", "path"=>"Thorfile", "checksum"=>"330a3ce1d5fb746427a1b62dc9b13705", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Thorfile"}, {"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"136788a4ae057d98cbd46e0608c3e219", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile"}, {"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"69a8aa07bf17770824557dc257e528b3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile.lock"}, {"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"3e3cfab5c5076e89c88fc2f1df178d3b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.rubocop.yml"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"9b6ff646a4e9b434a8da23aabcc1050a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/README.md"}, {"name"=>".kitchen.dokken.yml", "path"=>".kitchen.dokken.yml", "checksum"=>"1ab06a17e0714fe4e4ae91d780492df2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.dokken.yml"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.md"}, {"name"=>"TESTING.md", "path"=>"TESTING.md", "checksum"=>"1bb53d176751639d2e090d8ca030890a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/TESTING.md"}, {"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"61cb978a58d9bf5fc557a12fa0a7db27", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.yml"}, {"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"2d08a3f2d136d49850c8fb46c1e6c841", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Gemfile"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2ddfa40a24bbe8c46a3ea49a9886b1da", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/metadata.json"}, {"name"=>".travis.yml", "path"=>".travis.yml", "checksum"=>"f89bf26a2098459d21bdbd2e71091d26", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.travis.yml"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"67dcd608d3e23063a5aa2c694ef877bb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CHANGELOG.md"}, {"name"=>"Vagrantfile", "path"=>"Vagrantfile", "checksum"=>"0133b1a08d4fca5866f3db76cc81e2f2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Vagrantfile"}], "metadata"=>{"name"=>"chef_nginx", "description"=>"Installs and configures nginx", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache-2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "suse"=>">= 0.0.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0"}, "dependencies"=>{"build-essential"=>">= 0.0.0", "ohai"=>">= 4.1.0", "yum-epel"=>">= 0.0.0", "compat_resource"=>">= 12.16.3", "zypper"=>">= 0.0.0"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"chef_nginx::authorized_ips"=>">= 0.0.0", "chef_nginx::commons"=>">= 0.0.0", "chef_nginx::commons_conf"=>">= 0.0.0", "chef_nginx::commons_dir"=>">= 0.0.0", "chef_nginx::commons_script"=>">= 0.0.0", "chef_nginx"=>">= 0.0.0", "chef_nginx::headers_more_module"=>">= 0.0.0", "chef_nginx::http_auth_request_module"=>">= 0.0.0", "chef_nginx::http_echo_module"=>">= 0.0.0", "chef_nginx::http_geoip_module"=>">= 0.0.0", "chef_nginx::http_gzip_static_module"=>">= 0.0.0", "chef_nginx::http_mp4_module"=>">= 0.0.0", "chef_nginx::http_perl_module"=>">= 0.0.0", "chef_nginx::http_realip_module"=>">= 0.0.0", "chef_nginx::http_spdy_module"=>">= 0.0.0", "chef_nginx::http_ssl_module"=>">= 0.0.0", "chef_nginx::http_stub_status_module"=>">= 0.0.0", "chef_nginx::http_v2_module"=>">= 0.0.0", "chef_nginx::ipv6"=>">= 0.0.0", "chef_nginx::lua"=>">= 0.0.0", "chef_nginx::naxsi_module"=>">= 0.0.0", "chef_nginx::ngx_devel_module"=>">= 0.0.0", "chef_nginx::ngx_lua_module"=>">= 0.0.0", "chef_nginx::ohai_plugin"=>">= 0.0.0", "chef_nginx::openssl_source"=>">= 0.0.0", "chef_nginx::package"=>">= 0.0.0", "chef_nginx::pagespeed_module"=>">= 0.0.0", "chef_nginx::passenger"=>">= 0.0.0", "chef_nginx::repo"=>">= 0.0.0", "chef_nginx::repo_passenger"=>">= 0.0.0", "chef_nginx::set_misc"=>">= 0.0.0", "chef_nginx::socketproxy"=>">= 0.0.0", "chef_nginx::source"=>">= 0.0.0", "chef_nginx::syslog_module"=>">= 0.0.0", "chef_nginx::upload_progress_module"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"chef_nginx"=>"Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available", "chef_nginx::source"=>"Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available", "chef_nginx::authorized_ips"=>"", "chef_nginx::commons"=>"", "chef_nginx::commons_conf"=>"", "chef_nginx::commons_dir"=>"", "chef_nginx::commons_script"=>"", "chef_nginx::headers_more_module"=>"", "chef_nginx::http_auth_request_module"=>"", "chef_nginx::http_echo_module"=>"", "chef_nginx::http_geoip_module"=>"", "chef_nginx::http_gzip_static_module"=>"", "chef_nginx::http_mp4_module"=>"", "chef_nginx::http_perl_module"=>"", "chef_nginx::http_realip_module"=>"", "chef_nginx::http_spdy_module"=>"", "chef_nginx::http_ssl_module"=>"", "chef_nginx::http_stub_status_module"=>"", "chef_nginx::http_v2_module"=>"", "chef_nginx::ipv6"=>"", "chef_nginx::lua"=>"", "chef_nginx::naxsi_module"=>"", "chef_nginx::ngx_devel_module"=>"", "chef_nginx::ngx_lua_module"=>"", "chef_nginx::ohai_plugin"=>"", "chef_nginx::openssl_source"=>"", "chef_nginx::package"=>"", "chef_nginx::pagespeed_module"=>"", "chef_nginx::passenger"=>"", "chef_nginx::repo"=>"", "chef_nginx::repo_passenger"=>"", "chef_nginx::set_misc"=>"", "chef_nginx::socketproxy"=>"", "chef_nginx::syslog_module"=>"", "chef_nginx::upload_progress_module"=>""}, "version"=>"6.0.1", "source_url"=>"https://github.com/chef-cookbooks/chef_nginx", "issues_url"=>"https://github.com/chef-cookbooks/chef_nginx/issues", "privacy"=>false, "chef_versions"=>[[">= 12.1"]], "ohai_versions"=>[], "gems"=>[]}, "version"=>"6.0.1", "name"=>"chef_nginx-6.0.1", "cookbook_name"=>"chef_nginx", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"ff2be9d5c97b04cdfdb0813ed32c497a"=>nil, "eb5810fef787498ab1b00d33fc0677e2"=>nil, "dd273a6c500d1b8ee144be48797255d6"=>nil, "fc171e346987eede69daeb0d9e8c3225"=>nil, "e02314320e392f33f20626b826925b08"=>nil, "22f5436c3ee869e76e0c39a7c77dac15"=>nil, "3c15927c62551d8d8d402dc532ff6816"=>nil, "6d83ce48253eb38e7ad3423ca39850b1"=>nil, "053d3107c3ac0c4315b864aa99135496"=>nil, "becb8d8fa9206f347193c6437e918c52"=>nil, "1325afdcfcd400a418c4eae16cd8c699"=>nil, "428588357a964123adcdbbcc78e243bf"=>nil, "e5f3850a8534adefc75a4b3f84a69299"=>nil, "17076af0fe5ce35c5d03c9e0f49179bb"=>nil, "a902b5902841068582805e9d03daa30c"=>nil, "8ea7ac2a723d6102a6d466128af6452d"=>nil, "56831d993127edcfc0e7bd938a7987b9"=>nil, "57fdc87b4c632fc2b6b51393e7896c35"=>nil, "1b02f8f6a172f2945d155a90799c352f"=>nil, "10a5bbc17d47cdd00f13b3b05a4ca0d9"=>nil, "62f505e804189baaba5d7f085dfa8369"=>nil, "1bed9aaa8cc51bc2eed861f867dd25cc"=>nil, "f3001ff6f852f672688ec505b69228bc"=>nil, "44855dc261136d13688e8c52fe25834b"=>nil, "1930b47c57d4eec7a535754dac28804c"=>nil, "482e459e4efb1497aef2de3828a5538d"=>nil, "19c76e713e4244f83afdcb0298bcbd8d"=>nil, "23a62f99ac7228800718fef61a26fc9a"=>nil, "5e810c5e92c0443aafc438b37392cd79"=>nil, "2f1c9e4ab32966be7f238dc24a45351f"=>nil, "50900d9b8617f27edd90a0c4a7b77459"=>nil, "4dba887dc98ccf98dbacd9c765f03ae2"=>nil, "793e4b99d2f61e5d23551981fa292552"=>nil, "39239e78612a61c0bb7237fc53a51564"=>nil, "43686e0eca555badcf702c86f12d3cb0"=>nil, "6fb7bd2f186b22551306af4ecc1d80cd"=>nil, "31f5ffa35a8499dd722237370e83e026"=>nil, "f93030cf096a8f50d3188469b9f47aeb"=>nil, "7093b82f914bad92eb6a7445d99b0be6"=>nil, "72de3401fce57cad7a26d6c76c3faa75"=>nil, "8472d318a5c67816bd569c314b3998cf"=>nil, "4db4320997696d961a0226aac1d3c8f7"=>nil, "984a6032f7cac4046fe603ada0d373f2"=>nil, "3660850e7b5867315d4c37283a5e5dc7"=>nil, "ba654117acfafb64c55dfabc58fe6723"=>nil, "ac355d12c382b0b2c0297af86fb104eb"=>nil, "13ac0bc29663aa8093db009acc41fc81"=>nil, "5d320b232022a0c954e1a8155124e092"=>nil, "102f0a3973c67941ac6b2fafbf23b567"=>nil, "2096e19448c3ac453f606b7b4a4a86ad"=>nil, "018a2ed46290d14f1e8d0ef089601f61"=>nil, "24981232aebfb08579d3cdda5fcfe49c"=>nil, "3b55406bdd2c20c06f8e008537ba821d"=>nil, "68a6c3c2e0cf27e8a1b0aececcbf4021"=>nil, "d5fa986c47a9460140099821d136a3dd"=>nil, "7d8d98a8fab0d7843f23c59d2ec7715c"=>nil, "f376645ab9f28057be450647fdc0edfc"=>nil, "ff022487923824d5c3f5eec283ee3047"=>nil, "e51d0753f33db2dc0647069dd6729500"=>nil, "72bdc31e3503acdbadc97b7664edfed4"=>nil, "282e5ef755b521b75e4daae9b72fee12"=>nil, "00de1147914315cd8f7d4e592b1a91e2"=>nil, "b99cb264ff12c46175a7100c974cbb34"=>nil, "af39c4f3abe53ed442c62b3077e109ad"=>nil, "9247a86f075102220ca91e9c18eee8a9"=>nil, "6dbe2be673c6cf911fea96fada03fc5b"=>nil, "09e3ffcb3fdb095d0d2097d4d322626c"=>nil, "9ca555a3a3080e2bcd48e47e08cd4835"=>nil, "6bebd6809ab6ca51d1ba5f4493bbb3c9"=>nil, "aac2abab34392f57c0a302c851c028ad"=>nil, "997939f4cfb70e8895a24bc411a9a5b2"=>nil, "735741e2e231b2b89e012d6b55c6d6cf"=>nil, "f215be4d8f646cb788770d771d4e210b"=>nil, "26a3872e8bdbdd614fa17ef13ff9e310"=>nil, "e54bbff0120a2342ef2ffd8f7c0b962b"=>nil, "d0a082a3abd9fa78bc178f560d89c5d3"=>nil, "0d7028b99bea2508b52ae30f3f72ab4b"=>nil, "09f2bf988663175cd1b7973198dfb5eb"=>nil, "0891c2f6a528af6c722eb5833684af65"=>nil, "9bd599f7de7a787f8621cc21c234ad13"=>nil, "7adae8823ab24044147fb4498e5f1d65"=>nil, "8f7bb094c7232b058c7e9f2e431f389c"=>nil, "4c059ebdeb86c1ee07599450d438c97e"=>nil, "b0c1dde28bbf04f6557e3b8af5885924"=>nil, "330a3ce1d5fb746427a1b62dc9b13705"=>nil, "136788a4ae057d98cbd46e0608c3e219"=>nil, "69a8aa07bf17770824557dc257e528b3"=>nil, "3e3cfab5c5076e89c88fc2f1df178d3b"=>nil, "9b6ff646a4e9b434a8da23aabcc1050a"=>nil, "1ab06a17e0714fe4e4ae91d780492df2"=>nil, "8d495d4a2165a3d8f5246449b3275f37"=>nil, "1bb53d176751639d2e090d8ca030890a"=>nil, "61cb978a58d9bf5fc557a12fa0a7db27"=>nil, "2d08a3f2d136d49850c8fb46c1e6c841"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "2ddfa40a24bbe8c46a3ea49a9886b1da"=>nil, "f89bf26a2098459d21bdbd2e71091d26"=>nil, "67dcd608d3e23063a5aa2c694ef877bb"=>nil, "0133b1a08d4fca5866f3db76cc81e2f2"=>nil}, @manifest_records_by_path={"resources/site.rb"=>{"name"=>"site.rb", "path"=>"resources/site.rb", "checksum"=>"ff2be9d5c97b04cdfdb0813ed32c497a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/resources/site.rb"}, "recipes/authorized_ips.rb"=>{"name"=>"authorized_ips.rb", "path"=>"recipes/authorized_ips.rb", "checksum"=>"eb5810fef787498ab1b00d33fc0677e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/authorized_ips.rb"}, "recipes/commons.rb"=>{"name"=>"commons.rb", "path"=>"recipes/commons.rb", "checksum"=>"dd273a6c500d1b8ee144be48797255d6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons.rb"}, "recipes/commons_conf.rb"=>{"name"=>"commons_conf.rb", "path"=>"recipes/commons_conf.rb", "checksum"=>"fc171e346987eede69daeb0d9e8c3225", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_conf.rb"}, "recipes/commons_dir.rb"=>{"name"=>"commons_dir.rb", "path"=>"recipes/commons_dir.rb", "checksum"=>"e02314320e392f33f20626b826925b08", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_dir.rb"}, "recipes/commons_script.rb"=>{"name"=>"commons_script.rb", "path"=>"recipes/commons_script.rb", "checksum"=>"22f5436c3ee869e76e0c39a7c77dac15", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_script.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"3c15927c62551d8d8d402dc532ff6816", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/default.rb"}, "recipes/headers_more_module.rb"=>{"name"=>"headers_more_module.rb", "path"=>"recipes/headers_more_module.rb", "checksum"=>"6d83ce48253eb38e7ad3423ca39850b1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/headers_more_module.rb"}, "recipes/http_auth_request_module.rb"=>{"name"=>"http_auth_request_module.rb", "path"=>"recipes/http_auth_request_module.rb", "checksum"=>"053d3107c3ac0c4315b864aa99135496", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_auth_request_module.rb"}, "recipes/http_echo_module.rb"=>{"name"=>"http_echo_module.rb", "path"=>"recipes/http_echo_module.rb", "checksum"=>"becb8d8fa9206f347193c6437e918c52", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_echo_module.rb"}, "recipes/http_geoip_module.rb"=>{"name"=>"http_geoip_module.rb", "path"=>"recipes/http_geoip_module.rb", "checksum"=>"1325afdcfcd400a418c4eae16cd8c699", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_geoip_module.rb"}, "recipes/http_gzip_static_module.rb"=>{"name"=>"http_gzip_static_module.rb", "path"=>"recipes/http_gzip_static_module.rb", "checksum"=>"428588357a964123adcdbbcc78e243bf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_gzip_static_module.rb"}, "recipes/http_mp4_module.rb"=>{"name"=>"http_mp4_module.rb", "path"=>"recipes/http_mp4_module.rb", "checksum"=>"e5f3850a8534adefc75a4b3f84a69299", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_mp4_module.rb"}, "recipes/http_perl_module.rb"=>{"name"=>"http_perl_module.rb", "path"=>"recipes/http_perl_module.rb", "checksum"=>"17076af0fe5ce35c5d03c9e0f49179bb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_perl_module.rb"}, "recipes/http_realip_module.rb"=>{"name"=>"http_realip_module.rb", "path"=>"recipes/http_realip_module.rb", "checksum"=>"a902b5902841068582805e9d03daa30c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_realip_module.rb"}, "recipes/http_spdy_module.rb"=>{"name"=>"http_spdy_module.rb", "path"=>"recipes/http_spdy_module.rb", "checksum"=>"8ea7ac2a723d6102a6d466128af6452d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_spdy_module.rb"}, "recipes/http_ssl_module.rb"=>{"name"=>"http_ssl_module.rb", "path"=>"recipes/http_ssl_module.rb", "checksum"=>"56831d993127edcfc0e7bd938a7987b9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_ssl_module.rb"}, "recipes/http_stub_status_module.rb"=>{"name"=>"http_stub_status_module.rb", "path"=>"recipes/http_stub_status_module.rb", "checksum"=>"57fdc87b4c632fc2b6b51393e7896c35", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_stub_status_module.rb"}, "recipes/http_v2_module.rb"=>{"name"=>"http_v2_module.rb", "path"=>"recipes/http_v2_module.rb", "checksum"=>"1b02f8f6a172f2945d155a90799c352f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_v2_module.rb"}, "recipes/ipv6.rb"=>{"name"=>"ipv6.rb", "path"=>"recipes/ipv6.rb", "checksum"=>"10a5bbc17d47cdd00f13b3b05a4ca0d9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ipv6.rb"}, "recipes/lua.rb"=>{"name"=>"lua.rb", "path"=>"recipes/lua.rb", "checksum"=>"62f505e804189baaba5d7f085dfa8369", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/lua.rb"}, "recipes/naxsi_module.rb"=>{"name"=>"naxsi_module.rb", "path"=>"recipes/naxsi_module.rb", "checksum"=>"1bed9aaa8cc51bc2eed861f867dd25cc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/naxsi_module.rb"}, "recipes/ngx_devel_module.rb"=>{"name"=>"ngx_devel_module.rb", "path"=>"recipes/ngx_devel_module.rb", "checksum"=>"f3001ff6f852f672688ec505b69228bc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_devel_module.rb"}, "recipes/ngx_lua_module.rb"=>{"name"=>"ngx_lua_module.rb", "path"=>"recipes/ngx_lua_module.rb", "checksum"=>"44855dc261136d13688e8c52fe25834b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_lua_module.rb"}, "recipes/ohai_plugin.rb"=>{"name"=>"ohai_plugin.rb", "path"=>"recipes/ohai_plugin.rb", "checksum"=>"1930b47c57d4eec7a535754dac28804c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ohai_plugin.rb"}, "recipes/openssl_source.rb"=>{"name"=>"openssl_source.rb", "path"=>"recipes/openssl_source.rb", "checksum"=>"482e459e4efb1497aef2de3828a5538d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/openssl_source.rb"}, "recipes/package.rb"=>{"name"=>"package.rb", "path"=>"recipes/package.rb", "checksum"=>"19c76e713e4244f83afdcb0298bcbd8d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/package.rb"}, "recipes/pagespeed_module.rb"=>{"name"=>"pagespeed_module.rb", "path"=>"recipes/pagespeed_module.rb", "checksum"=>"23a62f99ac7228800718fef61a26fc9a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/pagespeed_module.rb"}, "recipes/passenger.rb"=>{"name"=>"passenger.rb", "path"=>"recipes/passenger.rb", "checksum"=>"5e810c5e92c0443aafc438b37392cd79", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/passenger.rb"}, "recipes/repo.rb"=>{"name"=>"repo.rb", "path"=>"recipes/repo.rb", "checksum"=>"2f1c9e4ab32966be7f238dc24a45351f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo.rb"}, "recipes/repo_passenger.rb"=>{"name"=>"repo_passenger.rb", "path"=>"recipes/repo_passenger.rb", "checksum"=>"50900d9b8617f27edd90a0c4a7b77459", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo_passenger.rb"}, "recipes/set_misc.rb"=>{"name"=>"set_misc.rb", "path"=>"recipes/set_misc.rb", "checksum"=>"4dba887dc98ccf98dbacd9c765f03ae2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/set_misc.rb"}, "recipes/socketproxy.rb"=>{"name"=>"socketproxy.rb", "path"=>"recipes/socketproxy.rb", "checksum"=>"793e4b99d2f61e5d23551981fa292552", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/socketproxy.rb"}, "recipes/source.rb"=>{"name"=>"source.rb", "path"=>"recipes/source.rb", "checksum"=>"39239e78612a61c0bb7237fc53a51564", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/source.rb"}, "recipes/syslog_module.rb"=>{"name"=>"syslog_module.rb", "path"=>"recipes/syslog_module.rb", "checksum"=>"43686e0eca555badcf702c86f12d3cb0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/syslog_module.rb"}, "recipes/upload_progress_module.rb"=>{"name"=>"upload_progress_module.rb", "path"=>"recipes/upload_progress_module.rb", "checksum"=>"6fb7bd2f186b22551306af4ecc1d80cd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/upload_progress_module.rb"}, "libraries/helpers.rb"=>{"name"=>"helpers.rb", "path"=>"libraries/helpers.rb", "checksum"=>"31f5ffa35a8499dd722237370e83e026", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/helpers.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"f93030cf096a8f50d3188469b9f47aeb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/matchers.rb"}, "attributes/auth_request.rb"=>{"name"=>"auth_request.rb", "path"=>"attributes/auth_request.rb", "checksum"=>"7093b82f914bad92eb6a7445d99b0be6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/auth_request.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"72de3401fce57cad7a26d6c76c3faa75", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/default.rb"}, "attributes/devel.rb"=>{"name"=>"devel.rb", "path"=>"attributes/devel.rb", "checksum"=>"8472d318a5c67816bd569c314b3998cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/devel.rb"}, "attributes/echo.rb"=>{"name"=>"echo.rb", "path"=>"attributes/echo.rb", "checksum"=>"4db4320997696d961a0226aac1d3c8f7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/echo.rb"}, "attributes/geoip.rb"=>{"name"=>"geoip.rb", "path"=>"attributes/geoip.rb", "checksum"=>"984a6032f7cac4046fe603ada0d373f2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/geoip.rb"}, "attributes/headers_more.rb"=>{"name"=>"headers_more.rb", "path"=>"attributes/headers_more.rb", "checksum"=>"3660850e7b5867315d4c37283a5e5dc7", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/headers_more.rb"}, "attributes/lua.rb"=>{"name"=>"lua.rb", "path"=>"attributes/lua.rb", "checksum"=>"ba654117acfafb64c55dfabc58fe6723", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/lua.rb"}, "attributes/naxsi.rb"=>{"name"=>"naxsi.rb", "path"=>"attributes/naxsi.rb", "checksum"=>"ac355d12c382b0b2c0297af86fb104eb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/naxsi.rb"}, "attributes/openssl_source.rb"=>{"name"=>"openssl_source.rb", "path"=>"attributes/openssl_source.rb", "checksum"=>"13ac0bc29663aa8093db009acc41fc81", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/openssl_source.rb"}, "attributes/pagespeed.rb"=>{"name"=>"pagespeed.rb", "path"=>"attributes/pagespeed.rb", "checksum"=>"5d320b232022a0c954e1a8155124e092", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/pagespeed.rb"}, "attributes/passenger.rb"=>{"name"=>"passenger.rb", "path"=>"attributes/passenger.rb", "checksum"=>"102f0a3973c67941ac6b2fafbf23b567", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/passenger.rb"}, "attributes/rate_limiting.rb"=>{"name"=>"rate_limiting.rb", "path"=>"attributes/rate_limiting.rb", "checksum"=>"2096e19448c3ac453f606b7b4a4a86ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/rate_limiting.rb"}, "attributes/repo.rb"=>{"name"=>"repo.rb", "path"=>"attributes/repo.rb", "checksum"=>"018a2ed46290d14f1e8d0ef089601f61", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/repo.rb"}, "attributes/set_misc.rb"=>{"name"=>"set_misc.rb", "path"=>"attributes/set_misc.rb", "checksum"=>"24981232aebfb08579d3cdda5fcfe49c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/set_misc.rb"}, "attributes/socketproxy.rb"=>{"name"=>"socketproxy.rb", "path"=>"attributes/socketproxy.rb", "checksum"=>"3b55406bdd2c20c06f8e008537ba821d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/socketproxy.rb"}, "attributes/source.rb"=>{"name"=>"source.rb", "path"=>"attributes/source.rb", "checksum"=>"68a6c3c2e0cf27e8a1b0aececcbf4021", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/source.rb"}, "attributes/status.rb"=>{"name"=>"status.rb", "path"=>"attributes/status.rb", "checksum"=>"d5fa986c47a9460140099821d136a3dd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/status.rb"}, "attributes/syslog.rb"=>{"name"=>"syslog.rb", "path"=>"attributes/syslog.rb", "checksum"=>"7d8d98a8fab0d7843f23c59d2ec7715c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/syslog.rb"}, "attributes/upload_progress.rb"=>{"name"=>"upload_progress.rb", "path"=>"attributes/upload_progress.rb", "checksum"=>"f376645ab9f28057be450647fdc0edfc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/upload_progress.rb"}, "files/default/mime.types"=>{"name"=>"mime.types", "path"=>"files/default/mime.types", "checksum"=>"ff022487923824d5c3f5eec283ee3047", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/mime.types"}, "files/default/naxsi_core.rules"=>{"name"=>"naxsi_core.rules", "path"=>"files/default/naxsi_core.rules", "checksum"=>"e51d0753f33db2dc0647069dd6729500", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/naxsi_core.rules"}, "templates/debian/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/debian/nginx.init.erb", "checksum"=>"72bdc31e3503acdbadc97b7664edfed4", "specificity"=>"debian", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/debian/nginx.init.erb"}, "templates/default/default-site.erb"=>{"name"=>"default-site.erb", "path"=>"templates/default/default-site.erb", "checksum"=>"282e5ef755b521b75e4daae9b72fee12", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/default-site.erb"}, "templates/default/modules/authorized_ip.erb"=>{"name"=>"authorized_ip.erb", "path"=>"templates/default/modules/authorized_ip.erb", "checksum"=>"00de1147914315cd8f7d4e592b1a91e2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb"}, "templates/default/modules/http_geoip.conf.erb"=>{"name"=>"http_geoip.conf.erb", "path"=>"templates/default/modules/http_geoip.conf.erb", "checksum"=>"b99cb264ff12c46175a7100c974cbb34", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb"}, "templates/default/modules/http_gzip_static.conf.erb"=>{"name"=>"http_gzip_static.conf.erb", "path"=>"templates/default/modules/http_gzip_static.conf.erb", "checksum"=>"af39c4f3abe53ed442c62b3077e109ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb"}, "templates/default/modules/http_realip.conf.erb"=>{"name"=>"http_realip.conf.erb", "path"=>"templates/default/modules/http_realip.conf.erb", "checksum"=>"9247a86f075102220ca91e9c18eee8a9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb"}, "templates/default/modules/nginx_status.erb"=>{"name"=>"nginx_status.erb", "path"=>"templates/default/modules/nginx_status.erb", "checksum"=>"6dbe2be673c6cf911fea96fada03fc5b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/nginx_status.erb"}, "templates/default/modules/passenger.conf.erb"=>{"name"=>"passenger.conf.erb", "path"=>"templates/default/modules/passenger.conf.erb", "checksum"=>"09e3ffcb3fdb095d0d2097d4d322626c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb"}, "templates/default/modules/socketproxy.conf.erb"=>{"name"=>"socketproxy.conf.erb", "path"=>"templates/default/modules/socketproxy.conf.erb", "checksum"=>"9ca555a3a3080e2bcd48e47e08cd4835", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb"}, "templates/default/modules/upload_progress.erb"=>{"name"=>"upload_progress.erb", "path"=>"templates/default/modules/upload_progress.erb", "checksum"=>"6bebd6809ab6ca51d1ba5f4493bbb3c9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/upload_progress.erb"}, "templates/default/nginx-upstart.conf.erb"=>{"name"=>"nginx-upstart.conf.erb", "path"=>"templates/default/nginx-upstart.conf.erb", "checksum"=>"aac2abab34392f57c0a302c851c028ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb"}, "templates/default/nginx.conf.erb"=>{"name"=>"nginx.conf.erb", "path"=>"templates/default/nginx.conf.erb", "checksum"=>"997939f4cfb70e8895a24bc411a9a5b2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.conf.erb"}, "templates/default/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/default/nginx.init.erb", "checksum"=>"735741e2e231b2b89e012d6b55c6d6cf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.init.erb"}, "templates/default/nginx.service.erb"=>{"name"=>"nginx.service.erb", "path"=>"templates/default/nginx.service.erb", "checksum"=>"f215be4d8f646cb788770d771d4e210b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.service.erb"}, "templates/default/nginx.sysconfig.erb"=>{"name"=>"nginx.sysconfig.erb", "path"=>"templates/default/nginx.sysconfig.erb", "checksum"=>"26a3872e8bdbdd614fa17ef13ff9e310", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb"}, "templates/default/nxdissite.erb"=>{"name"=>"nxdissite.erb", "path"=>"templates/default/nxdissite.erb", "checksum"=>"e54bbff0120a2342ef2ffd8f7c0b962b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxdissite.erb"}, "templates/default/nxensite.erb"=>{"name"=>"nxensite.erb", "path"=>"templates/default/nxensite.erb", "checksum"=>"d0a082a3abd9fa78bc178f560d89c5d3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxensite.erb"}, "templates/default/plugins/ohai-nginx.rb.erb"=>{"name"=>"ohai-nginx.rb.erb", "path"=>"templates/default/plugins/ohai-nginx.rb.erb", "checksum"=>"0d7028b99bea2508b52ae30f3f72ab4b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb"}, "templates/default/sv-nginx-log-run.erb"=>{"name"=>"sv-nginx-log-run.erb", "path"=>"templates/default/sv-nginx-log-run.erb", "checksum"=>"09f2bf988663175cd1b7973198dfb5eb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb"}, "templates/default/sv-nginx-run.erb"=>{"name"=>"sv-nginx-run.erb", "path"=>"templates/default/sv-nginx-run.erb", "checksum"=>"0891c2f6a528af6c722eb5833684af65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-run.erb"}, "templates/ubuntu/nginx.init.erb"=>{"name"=>"nginx.init.erb", "path"=>"templates/ubuntu/nginx.init.erb", "checksum"=>"72bdc31e3503acdbadc97b7664edfed4", "specificity"=>"ubuntu", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb"}, "MAINTAINERS.toml"=>{"name"=>"MAINTAINERS.toml", "path"=>"MAINTAINERS.toml", "checksum"=>"9bd599f7de7a787f8621cc21c234ad13", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.toml"}, "chefignore"=>{"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"7adae8823ab24044147fb4498e5f1d65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/chefignore"}, "LICENSE"=>{"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"8f7bb094c7232b058c7e9f2e431f389c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/LICENSE"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"4c059ebdeb86c1ee07599450d438c97e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.foodcritic"}, ".gitignore"=>{"name"=>".gitignore", "path"=>".gitignore", "checksum"=>"b0c1dde28bbf04f6557e3b8af5885924", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.gitignore"}, "Thorfile"=>{"name"=>"Thorfile", "path"=>"Thorfile", "checksum"=>"330a3ce1d5fb746427a1b62dc9b13705", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Thorfile"}, "Berksfile"=>{"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"136788a4ae057d98cbd46e0608c3e219", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile"}, "Berksfile.lock"=>{"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"69a8aa07bf17770824557dc257e528b3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile.lock"}, ".rubocop.yml"=>{"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"3e3cfab5c5076e89c88fc2f1df178d3b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.rubocop.yml"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"9b6ff646a4e9b434a8da23aabcc1050a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/README.md"}, ".kitchen.dokken.yml"=>{"name"=>".kitchen.dokken.yml", "path"=>".kitchen.dokken.yml", "checksum"=>"1ab06a17e0714fe4e4ae91d780492df2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.dokken.yml"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.md"}, "TESTING.md"=>{"name"=>"TESTING.md", "path"=>"TESTING.md", "checksum"=>"1bb53d176751639d2e090d8ca030890a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/TESTING.md"}, ".kitchen.yml"=>{"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"61cb978a58d9bf5fc557a12fa0a7db27", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.yml"}, "Gemfile"=>{"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"2d08a3f2d136d49850c8fb46c1e6c841", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Gemfile"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2ddfa40a24bbe8c46a3ea49a9886b1da", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/metadata.json"}, ".travis.yml"=>{"name"=>".travis.yml", "path"=>".travis.yml", "checksum"=>"f89bf26a2098459d21bdbd2e71091d26", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.travis.yml"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"67dcd608d3e23063a5aa2c694ef877bb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CHANGELOG.md"}, "Vagrantfile"=>{"name"=>"Vagrantfile", "path"=>"Vagrantfile", "checksum"=>"0133b1a08d4fca5866f3db76cc81e2f2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Vagrantfile"}}>>, #<Chef::CookbookVersion:0x00000004beb4d8 @name="iptables", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=["iptables-config.erb", "iptables_load.erb", "rebuild-iptables.erb"], @file_filenames=[], @recipe_filenames=["_package.rb", "default.rb", "disabled.rb"], @recipe_filenames_by_name={"_package"=>"_package.rb", "default"=>"default.rb", "disabled"=>"disabled.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["rule.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["MAINTAINERS.toml", "chefignore", "LICENSE", ".foodcritic", ".gitignore", "Thorfile", "Berksfile", "Berksfile.lock", ".rubocop.yml", "README.md", "MAINTAINERS.md", "TESTING.md", ".kitchen.yml", "Gemfile", "CONTRIBUTING.md", "metadata.json", ".travis.yml", "CHANGELOG.md", "Vagrantfile"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004beac68 @name="iptables", @description="Installs the iptables daemon and provides a LWRP for managing rules", @long_description="", @license="Apache-2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"redhat"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "oracle"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"iptables::_package"=>">= 0.0.0", "iptables"=>">= 0.0.0", "iptables::disabled"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"default"=>"Installs iptables and sets up .d style config directory of iptables rules", "disabled"=>"Disables iptables", "iptables::_package"=>"", "iptables"=>"", "iptables::disabled"=>""}, @version="4.0.1", @source_url="https://github.com/chef-cookbooks/iptables", @issues_url="https://github.com/chef-cookbooks/iptables/issues", @privacy=false, @chef_versions=[<Gem::Dependency type=:runtime name="chef" requirements=">= 12.10">], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004be9f20 @cookbook_version=#<Chef::CookbookVersion:0x00000004beb4d8 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"_package.rb", "path"=>"recipes/_package.rb", "checksum"=>"5b4f94ef595fe23dfc7d4717e4243429", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"38ddcf2c86e8836715e6e064d5be3d2d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb"}, {"name"=>"disabled.rb", "path"=>"recipes/disabled.rb", "checksum"=>"1119f015fde5ce16f6452c7fb623e528", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"f12847b26e2c9b1ca35782d2444dd713", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"da541dac9cc55e4db0c83fdd8c2ccafd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb"}], "files"=>[], "templates"=>[{"name"=>"iptables-config.erb", "path"=>"templates/default/iptables-config.erb", "checksum"=>"375a02610e0c4703fe9ac43bcb19819b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb"}, {"name"=>"iptables_load.erb", "path"=>"templates/default/iptables_load.erb", "checksum"=>"2df62510beedaefde3f8e312aedb70a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb"}, {"name"=>"rebuild-iptables.erb", "path"=>"templates/default/rebuild-iptables.erb", "checksum"=>"445723b2c440fb53f3425e6fbce7dedd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb"}], "resources"=>[{"name"=>"rule.rb", "path"=>"resources/rule.rb", "checksum"=>"817fa03bf7387255892385865f658267", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb"}], "providers"=>[], "root_files"=>[{"name"=>"MAINTAINERS.toml", "path"=>"MAINTAINERS.toml", "checksum"=>"9bd599f7de7a787f8621cc21c234ad13", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.toml"}, {"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"7adae8823ab24044147fb4498e5f1d65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore"}, {"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"fa818a259cbed7ce8bc2a22d35a464fc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE"}, {"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"4c059ebdeb86c1ee07599450d438c97e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.foodcritic"}, {"name"=>".gitignore", "path"=>".gitignore", "checksum"=>"b0c1dde28bbf04f6557e3b8af5885924", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.gitignore"}, {"name"=>"Thorfile", "path"=>"Thorfile", "checksum"=>"330a3ce1d5fb746427a1b62dc9b13705", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Thorfile"}, {"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"136788a4ae057d98cbd46e0608c3e219", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile"}, {"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"5e21a41216160b1426c2be11e11a585c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile.lock"}, {"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"a7119d106e5ba93c13fdd1d1bb4bfe90", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.rubocop.yml"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"2c8c6487bf3ab0a21b16440da0404bc9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md"}, {"name"=>"TESTING.md", "path"=>"TESTING.md", "checksum"=>"1bb53d176751639d2e090d8ca030890a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/TESTING.md"}, {"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"d225ace351127ea559bdd8e689cc8fcc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.kitchen.yml"}, {"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"2d08a3f2d136d49850c8fb46c1e6c841", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2cb483bbeb68fd57c3cce7e9d6d8cc29", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json"}, {"name"=>".travis.yml", "path"=>".travis.yml", "checksum"=>"97c7702bfd42757554dc46fe2a3a852a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.travis.yml"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"331dbbd2f008a611036d01f5705ba49b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CHANGELOG.md"}, {"name"=>"Vagrantfile", "path"=>"Vagrantfile", "checksum"=>"f7ecfa4a62c562b8248101095d8444af", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Vagrantfile"}], "metadata"=>{"name"=>"iptables", "description"=>"Installs the iptables daemon and provides a LWRP for managing rules", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache-2.0", "platforms"=>{"redhat"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "oracle"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"iptables::_package"=>">= 0.0.0", "iptables"=>">= 0.0.0", "iptables::disabled"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"default"=>"Installs iptables and sets up .d style config directory of iptables rules", "disabled"=>"Disables iptables", "iptables::_package"=>"", "iptables"=>"", "iptables::disabled"=>""}, "version"=>"4.0.1", "source_url"=>"https://github.com/chef-cookbooks/iptables", "issues_url"=>"https://github.com/chef-cookbooks/iptables/issues", "privacy"=>false, "chef_versions"=>[[">= 12.10"]], "ohai_versions"=>[], "gems"=>[]}, "version"=>"4.0.1", "name"=>"iptables-4.0.1", "cookbook_name"=>"iptables", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"817fa03bf7387255892385865f658267"=>nil, "5b4f94ef595fe23dfc7d4717e4243429"=>nil, "38ddcf2c86e8836715e6e064d5be3d2d"=>nil, "1119f015fde5ce16f6452c7fb623e528"=>nil, "f12847b26e2c9b1ca35782d2444dd713"=>nil, "da541dac9cc55e4db0c83fdd8c2ccafd"=>nil, "375a02610e0c4703fe9ac43bcb19819b"=>nil, "2df62510beedaefde3f8e312aedb70a4"=>nil, "445723b2c440fb53f3425e6fbce7dedd"=>nil, "9bd599f7de7a787f8621cc21c234ad13"=>nil, "7adae8823ab24044147fb4498e5f1d65"=>nil, "fa818a259cbed7ce8bc2a22d35a464fc"=>nil, "4c059ebdeb86c1ee07599450d438c97e"=>nil, "b0c1dde28bbf04f6557e3b8af5885924"=>nil, "330a3ce1d5fb746427a1b62dc9b13705"=>nil, "136788a4ae057d98cbd46e0608c3e219"=>nil, "5e21a41216160b1426c2be11e11a585c"=>nil, "a7119d106e5ba93c13fdd1d1bb4bfe90"=>nil, "2c8c6487bf3ab0a21b16440da0404bc9"=>nil, "8d495d4a2165a3d8f5246449b3275f37"=>nil, "1bb53d176751639d2e090d8ca030890a"=>nil, "d225ace351127ea559bdd8e689cc8fcc"=>nil, "2d08a3f2d136d49850c8fb46c1e6c841"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "2cb483bbeb68fd57c3cce7e9d6d8cc29"=>nil, "97c7702bfd42757554dc46fe2a3a852a"=>nil, "331dbbd2f008a611036d01f5705ba49b"=>nil, "f7ecfa4a62c562b8248101095d8444af"=>nil}, @manifest_records_by_path={"resources/rule.rb"=>{"name"=>"rule.rb", "path"=>"resources/rule.rb", "checksum"=>"817fa03bf7387255892385865f658267", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb"}, "recipes/_package.rb"=>{"name"=>"_package.rb", "path"=>"recipes/_package.rb", "checksum"=>"5b4f94ef595fe23dfc7d4717e4243429", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"38ddcf2c86e8836715e6e064d5be3d2d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb"}, "recipes/disabled.rb"=>{"name"=>"disabled.rb", "path"=>"recipes/disabled.rb", "checksum"=>"1119f015fde5ce16f6452c7fb623e528", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"f12847b26e2c9b1ca35782d2444dd713", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"da541dac9cc55e4db0c83fdd8c2ccafd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb"}, "templates/default/iptables-config.erb"=>{"name"=>"iptables-config.erb", "path"=>"templates/default/iptables-config.erb", "checksum"=>"375a02610e0c4703fe9ac43bcb19819b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb"}, "templates/default/iptables_load.erb"=>{"name"=>"iptables_load.erb", "path"=>"templates/default/iptables_load.erb", "checksum"=>"2df62510beedaefde3f8e312aedb70a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb"}, "templates/default/rebuild-iptables.erb"=>{"name"=>"rebuild-iptables.erb", "path"=>"templates/default/rebuild-iptables.erb", "checksum"=>"445723b2c440fb53f3425e6fbce7dedd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb"}, "MAINTAINERS.toml"=>{"name"=>"MAINTAINERS.toml", "path"=>"MAINTAINERS.toml", "checksum"=>"9bd599f7de7a787f8621cc21c234ad13", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.toml"}, "chefignore"=>{"name"=>"chefignore", "path"=>"chefignore", "checksum"=>"7adae8823ab24044147fb4498e5f1d65", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore"}, "LICENSE"=>{"name"=>"LICENSE", "path"=>"LICENSE", "checksum"=>"fa818a259cbed7ce8bc2a22d35a464fc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"4c059ebdeb86c1ee07599450d438c97e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.foodcritic"}, ".gitignore"=>{"name"=>".gitignore", "path"=>".gitignore", "checksum"=>"b0c1dde28bbf04f6557e3b8af5885924", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.gitignore"}, "Thorfile"=>{"name"=>"Thorfile", "path"=>"Thorfile", "checksum"=>"330a3ce1d5fb746427a1b62dc9b13705", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Thorfile"}, "Berksfile"=>{"name"=>"Berksfile", "path"=>"Berksfile", "checksum"=>"136788a4ae057d98cbd46e0608c3e219", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile"}, "Berksfile.lock"=>{"name"=>"Berksfile.lock", "path"=>"Berksfile.lock", "checksum"=>"5e21a41216160b1426c2be11e11a585c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile.lock"}, ".rubocop.yml"=>{"name"=>".rubocop.yml", "path"=>".rubocop.yml", "checksum"=>"a7119d106e5ba93c13fdd1d1bb4bfe90", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.rubocop.yml"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"2c8c6487bf3ab0a21b16440da0404bc9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md"}, "TESTING.md"=>{"name"=>"TESTING.md", "path"=>"TESTING.md", "checksum"=>"1bb53d176751639d2e090d8ca030890a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/TESTING.md"}, ".kitchen.yml"=>{"name"=>".kitchen.yml", "path"=>".kitchen.yml", "checksum"=>"d225ace351127ea559bdd8e689cc8fcc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.kitchen.yml"}, "Gemfile"=>{"name"=>"Gemfile", "path"=>"Gemfile", "checksum"=>"2d08a3f2d136d49850c8fb46c1e6c841", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2cb483bbeb68fd57c3cce7e9d6d8cc29", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json"}, ".travis.yml"=>{"name"=>".travis.yml", "path"=>".travis.yml", "checksum"=>"97c7702bfd42757554dc46fe2a3a852a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.travis.yml"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"331dbbd2f008a611036d01f5705ba49b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CHANGELOG.md"}, "Vagrantfile"=>{"name"=>"Vagrantfile", "path"=>"Vagrantfile", "checksum"=>"f7ecfa4a62c562b8248101095d8444af", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Vagrantfile"}}>>, #<Chef::CookbookVersion:0x00000004bbd4e8 @name="build-essential", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["_windows.rb", "default.rb"], @recipe_filenames_by_name={"_windows"=>"_windows.rb", "default"=>"default.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["build_essential.rb", "xcode_command_line_tools.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=[".foodcritic", "README.md", "MAINTAINERS.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004bbcc50 @name="build-essential", @description="Installs C compiler / build tools", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "mac_os_x"=>">= 10.9.0", "mac_os_x_server"=>">= 10.9.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "smartos"=>">= 0.0.0", "solaris"=>">= 0.0.0", "suse"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "windows"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={"seven_zip"=>">= 0.0.0", "mingw"=>">= 1.1"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"build-essential::_windows"=>">= 0.0.0", "build-essential"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"build-essential"=>"Installs packages required for compiling C software from source.", "build-essential::_windows"=>""}, @version="8.0.0", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004bbc020 @cookbook_version=#<Chef::CookbookVersion:0x00000004bbd4e8 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"_windows.rb", "path"=>"recipes/_windows.rb", "checksum"=>"5876e95dab5983b180a140a2132dbd60", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb"}, {"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"b5b8c97dca0d163b90cfad44d0adcdc5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"7469625f32551144a31f7fad8ff9a4b3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"1f2d8cc8ab31d1a56bc8bb5d9f04b419", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb"}], "files"=>[], "templates"=>[], "resources"=>[{"name"=>"build_essential.rb", "path"=>"resources/build_essential.rb", "checksum"=>"5fe73a4f90d112363e90eb1304393079", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/build_essential.rb"}, {"name"=>"xcode_command_line_tools.rb", "path"=>"resources/xcode_command_line_tools.rb", "checksum"=>"9c85e6573885c806ea11c533ba08d683", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/xcode_command_line_tools.rb"}], "providers"=>[], "root_files"=>[{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"11dfb2135d515ba6c32d23de155c8cfe", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"cf0b9a2cb6e1364e4069a524dc342501", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"97646db69a0b4416fd879523344393c4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"504efb383765853b7d600e703c08b28a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md"}], "metadata"=>{"name"=>"build-essential", "description"=>"Installs C compiler / build tools", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "debian"=>">= 0.0.0", "fedora"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "mac_os_x"=>">= 10.9.0", "mac_os_x_server"=>">= 10.9.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "smartos"=>">= 0.0.0", "solaris"=>">= 0.0.0", "suse"=>">= 0.0.0", "ubuntu"=>">= 0.0.0", "windows"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{"seven_zip"=>">= 0.0.0", "mingw"=>">= 1.1"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"build-essential::_windows"=>">= 0.0.0", "build-essential"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"build-essential"=>"Installs packages required for compiling C software from source.", "build-essential::_windows"=>""}, "version"=>"8.0.0", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"8.0.0", "name"=>"build-essential-8.0.0", "cookbook_name"=>"build-essential", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"5fe73a4f90d112363e90eb1304393079"=>nil, "9c85e6573885c806ea11c533ba08d683"=>nil, "5876e95dab5983b180a140a2132dbd60"=>nil, "b5b8c97dca0d163b90cfad44d0adcdc5"=>nil, "7469625f32551144a31f7fad8ff9a4b3"=>nil, "1f2d8cc8ab31d1a56bc8bb5d9f04b419"=>nil, "11dfb2135d515ba6c32d23de155c8cfe"=>nil, "cf0b9a2cb6e1364e4069a524dc342501"=>nil, "8d495d4a2165a3d8f5246449b3275f37"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "97646db69a0b4416fd879523344393c4"=>nil, "504efb383765853b7d600e703c08b28a"=>nil}, @manifest_records_by_path={"resources/build_essential.rb"=>{"name"=>"build_essential.rb", "path"=>"resources/build_essential.rb", "checksum"=>"5fe73a4f90d112363e90eb1304393079", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/build_essential.rb"}, "resources/xcode_command_line_tools.rb"=>{"name"=>"xcode_command_line_tools.rb", "path"=>"resources/xcode_command_line_tools.rb", "checksum"=>"9c85e6573885c806ea11c533ba08d683", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/xcode_command_line_tools.rb"}, "recipes/_windows.rb"=>{"name"=>"_windows.rb", "path"=>"recipes/_windows.rb", "checksum"=>"5876e95dab5983b180a140a2132dbd60", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"b5b8c97dca0d163b90cfad44d0adcdc5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"7469625f32551144a31f7fad8ff9a4b3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"1f2d8cc8ab31d1a56bc8bb5d9f04b419", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"11dfb2135d515ba6c32d23de155c8cfe", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"cf0b9a2cb6e1364e4069a524dc342501", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"97646db69a0b4416fd879523344393c4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"504efb383765853b7d600e703c08b28a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b99f98 @name="ohai", @root_paths=[], @frozen=false, @attribute_filenames=[], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["hint.rb", "plugin.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=[".foodcritic", "README.md", "MAINTAINERS.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b99750 @name="ohai", @description="Provides custom resources for installing Ohai hints and plugins", @long_description="", @license="Apache-2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0", "centos"=>">= 0.0.0", "redhat"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "suse"=>">= 0.0.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "windows"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"ohai"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"ohai"=>""}, @version="5.0.2", @source_url="https://github.com/chef-cookbooks/ohai", @issues_url="https://github.com/chef-cookbooks/ohai/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b98c88 @cookbook_version=#<Chef::CookbookVersion:0x00000004b99f98 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"fce07df9c94e01f31de413d1e27defa9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"47a8b0fd84b889c51dc00253ec3efb42", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb"}], "attributes"=>[], "files"=>[], "templates"=>[], "resources"=>[{"name"=>"hint.rb", "path"=>"resources/hint.rb", "checksum"=>"f25223553246bf7e29a4a4b74b5dd4f1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb"}, {"name"=>"plugin.rb", "path"=>"resources/plugin.rb", "checksum"=>"f7bfc4e93fcd5078c73687e296729fe2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/plugin.rb"}], "providers"=>[], "root_files"=>[{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"066ddcf7d032ed7d4897f3324aab9faa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/.foodcritic"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"e88b41e9aab63b6307dbb21fbcdaeaf6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"58cb3b16d96bbfc4412aecf472078dfd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"28ec0352fc089d68560c05ac51b06d5d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md"}], "metadata"=>{"name"=>"ohai", "description"=>"Provides custom resources for installing Ohai hints and plugins", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache-2.0", "platforms"=>{"ubuntu"=>">= 0.0.0", "debian"=>">= 0.0.0", "centos"=>">= 0.0.0", "redhat"=>">= 0.0.0", "amazon"=>">= 0.0.0", "scientific"=>">= 0.0.0", "fedora"=>">= 0.0.0", "oracle"=>">= 0.0.0", "suse"=>">= 0.0.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0", "freebsd"=>">= 0.0.0", "windows"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"ohai"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"ohai"=>""}, "version"=>"5.0.2", "source_url"=>"https://github.com/chef-cookbooks/ohai", "issues_url"=>"https://github.com/chef-cookbooks/ohai/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"5.0.2", "name"=>"ohai-5.0.2", "cookbook_name"=>"ohai", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"f25223553246bf7e29a4a4b74b5dd4f1"=>nil, "f7bfc4e93fcd5078c73687e296729fe2"=>nil, "fce07df9c94e01f31de413d1e27defa9"=>nil, "47a8b0fd84b889c51dc00253ec3efb42"=>nil, "066ddcf7d032ed7d4897f3324aab9faa"=>nil, "e88b41e9aab63b6307dbb21fbcdaeaf6"=>nil, "8d495d4a2165a3d8f5246449b3275f37"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "58cb3b16d96bbfc4412aecf472078dfd"=>nil, "28ec0352fc089d68560c05ac51b06d5d"=>nil}, @manifest_records_by_path={"resources/hint.rb"=>{"name"=>"hint.rb", "path"=>"resources/hint.rb", "checksum"=>"f25223553246bf7e29a4a4b74b5dd4f1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb"}, "resources/plugin.rb"=>{"name"=>"plugin.rb", "path"=>"resources/plugin.rb", "checksum"=>"f7bfc4e93fcd5078c73687e296729fe2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/plugin.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"fce07df9c94e01f31de413d1e27defa9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"47a8b0fd84b889c51dc00253ec3efb42", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"066ddcf7d032ed7d4897f3324aab9faa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/.foodcritic"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"e88b41e9aab63b6307dbb21fbcdaeaf6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"8d495d4a2165a3d8f5246449b3275f37", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"58cb3b16d96bbfc4412aecf472078dfd", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"28ec0352fc089d68560c05ac51b06d5d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b8fe58 @name="yum-epel", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb", "epel-debuginfo.rb", "epel-source.rb", "epel-testing-debuginfo.rb", "epel-testing-source.rb", "epel-testing.rb", "epel.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=[], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["README.md", "MAINTAINERS.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b8f548 @name="yum-epel", @description="Installs and configures the EPEL Yum repository", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, @dependencies={"compat_resource"=>">= 12.16.3"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"yum-epel"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"yum-epel"=>""}, @version="2.1.1", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb", "epel-debuginfo"=>"epel-debuginfo.rb", "epel-source"=>"epel-source.rb", "epel-testing-debuginfo"=>"epel-testing-debuginfo.rb", "epel-testing-source"=>"epel-testing-source.rb", "epel-testing"=>"epel-testing.rb", "epel"=>"epel.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b8e850 @cookbook_version=#<Chef::CookbookVersion:0x00000004b8fe58 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"f2643170721adda2d6d4ec751a262f0d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb"}], "definitions"=>[], "libraries"=>[], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"f80126ed93186566144b8d109dd1329e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb"}, {"name"=>"epel-debuginfo.rb", "path"=>"attributes/epel-debuginfo.rb", "checksum"=>"0e9c3e4348b0943b3d56ee72f82888f8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb"}, {"name"=>"epel-source.rb", "path"=>"attributes/epel-source.rb", "checksum"=>"d60571afb86ffa3738aebc0f9d22f707", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb"}, {"name"=>"epel-testing-debuginfo.rb", "path"=>"attributes/epel-testing-debuginfo.rb", "checksum"=>"439a5549f85402178ef6a6ad7b8ac77e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb"}, {"name"=>"epel-testing-source.rb", "path"=>"attributes/epel-testing-source.rb", "checksum"=>"bca86324a3408935adc9e5d70f36ec6e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb"}, {"name"=>"epel-testing.rb", "path"=>"attributes/epel-testing.rb", "checksum"=>"2c2272eb7a231dff026f2337a3f6b9fb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb"}, {"name"=>"epel.rb", "path"=>"attributes/epel.rb", "checksum"=>"8c1c45fdba3e376781d504d52a3fb9e4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb"}], "files"=>[], "templates"=>[], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"README.md", "path"=>"README.md", "checksum"=>"4e3edf97534d8b72b460cb87345fdad5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"5649d1c4d6da35fef8180b592afda0d6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"80e8aa7e34f7d07d3fabcb814b184259", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"a0655a1e071f60af4cb0d570cf87d832", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md"}], "metadata"=>{"name"=>"yum-epel", "description"=>"Installs and configures the EPEL Yum repository", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"amazon"=>">= 0.0.0", "centos"=>">= 0.0.0", "oracle"=>">= 0.0.0", "redhat"=>">= 0.0.0", "scientific"=>">= 0.0.0", "zlinux"=>">= 0.0.0"}, "dependencies"=>{"compat_resource"=>">= 12.16.3"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"yum-epel"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"yum-epel"=>""}, "version"=>"2.1.1", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.1.1", "name"=>"yum-epel-2.1.1", "cookbook_name"=>"yum-epel", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"f2643170721adda2d6d4ec751a262f0d"=>nil, "f80126ed93186566144b8d109dd1329e"=>nil, "0e9c3e4348b0943b3d56ee72f82888f8"=>nil, "d60571afb86ffa3738aebc0f9d22f707"=>nil, "439a5549f85402178ef6a6ad7b8ac77e"=>nil, "bca86324a3408935adc9e5d70f36ec6e"=>nil, "2c2272eb7a231dff026f2337a3f6b9fb"=>nil, "8c1c45fdba3e376781d504d52a3fb9e4"=>nil, "4e3edf97534d8b72b460cb87345fdad5"=>nil, "5649d1c4d6da35fef8180b592afda0d6"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "80e8aa7e34f7d07d3fabcb814b184259"=>nil, "a0655a1e071f60af4cb0d570cf87d832"=>nil}, @manifest_records_by_path={"recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"f2643170721adda2d6d4ec751a262f0d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"f80126ed93186566144b8d109dd1329e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb"}, "attributes/epel-debuginfo.rb"=>{"name"=>"epel-debuginfo.rb", "path"=>"attributes/epel-debuginfo.rb", "checksum"=>"0e9c3e4348b0943b3d56ee72f82888f8", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb"}, "attributes/epel-source.rb"=>{"name"=>"epel-source.rb", "path"=>"attributes/epel-source.rb", "checksum"=>"d60571afb86ffa3738aebc0f9d22f707", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb"}, "attributes/epel-testing-debuginfo.rb"=>{"name"=>"epel-testing-debuginfo.rb", "path"=>"attributes/epel-testing-debuginfo.rb", "checksum"=>"439a5549f85402178ef6a6ad7b8ac77e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb"}, "attributes/epel-testing-source.rb"=>{"name"=>"epel-testing-source.rb", "path"=>"attributes/epel-testing-source.rb", "checksum"=>"bca86324a3408935adc9e5d70f36ec6e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb"}, "attributes/epel-testing.rb"=>{"name"=>"epel-testing.rb", "path"=>"attributes/epel-testing.rb", "checksum"=>"2c2272eb7a231dff026f2337a3f6b9fb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb"}, "attributes/epel.rb"=>{"name"=>"epel.rb", "path"=>"attributes/epel.rb", "checksum"=>"8c1c45fdba3e376781d504d52a3fb9e4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"4e3edf97534d8b72b460cb87345fdad5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"5649d1c4d6da35fef8180b592afda0d6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"80e8aa7e34f7d07d3fabcb814b184259", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"a0655a1e071f60af4cb0d570cf87d832", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b81a38 @name="compat_resource", @root_paths=[], @frozen=false, @attribute_filenames=[], @definition_filenames=[], @template_filenames=[], @file_filenames=["constants.rb", "delayed_evaluator.rb", "core.rb", "declare_resource.rb", "platform_introspection.rb", "recipe.rb", "universal.rb", "lazy_module_include.rb", "notifying_block.rb", "params_validate.rb", "powershell_out.rb", "properties.rb", "property.rb", "apt_repository.rb", "apt_update.rb", "noop.rb", "yum_repo.erb", "systemd_unit.rb", "yum_repository.rb", "provider.rb", "action_class.rb", "apt_repository.rb", "apt_update.rb", "systemd_unit.rb", "yum_repository.rb", "resource.rb", "resource_builder.rb", "copied_from_chef.rb", "properties.rb", "exceptions.rb", "log.rb", "params_validate.rb", "node.rb", "property.rb", "provider.rb", "recipe.rb", "recipe_hook.rb", "lwrp_base.rb", "resource.rb", "resource_builder.rb", "resource_list.rb", "resource_set.rb", "resource_collection.rb", "run_context.rb", "runner.rb", "chef.rb", "monkeypatches.rb", "property.rb", "recipe.rb", "lwrp_base.rb", "resource.rb", "chef_upstream_version.rb", "compat_resource.rb"], @recipe_filenames=[], @recipe_filenames_by_name={}, @library_filenames=["autoload.rb"], @resource_filenames=[], @provider_filenames=[], @metadata_filenames=[], @root_filenames=["README.md", "MAINTAINERS.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b811c8 @name="compat_resource", @description="Backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards", @long_description="", @license="Apache 2.0", @maintainer="Lamont Granquist", @maintainer_email="lamont@chef.io", @platforms={}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={}, @replacing={}, @attributes={}, @groupings={}, @recipes={}, @version="12.16.3", @source_url="https://github.com/chef-cookbooks/compat_resource", @issues_url="https://github.com/chef-cookbooks/compat_resource/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b80430 @cookbook_version=#<Chef::CookbookVersion:0x00000004b81a38 ...>, @policy_mode=false, @manifest={"recipes"=>[], "definitions"=>[], "libraries"=>[{"name"=>"autoload.rb", "path"=>"libraries/autoload.rb", "checksum"=>"6c8d358479384218b72a221d3813eb67", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb"}], "attributes"=>[], "files"=>[{"name"=>"constants.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/constants.rb", "checksum"=>"efd4289af6a720c2710a23b88ea0aafb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb"}, {"name"=>"delayed_evaluator.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb", "checksum"=>"7038f6ec92541b206b0f1bd7a851f5b6", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"}, {"name"=>"core.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb", "checksum"=>"1223b735e667b29a55645771c07a807e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"}, {"name"=>"declare_resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb", "checksum"=>"a059f48fedeb6db0b9c1c6b40111b409", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"}, {"name"=>"platform_introspection.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb", "checksum"=>"2690ff8e2c5dc987bc4123947cf0e3f3", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"}, {"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb", "checksum"=>"ca4e2ed78545fd62843f237ebbe03c30", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"}, {"name"=>"universal.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb", "checksum"=>"23eaa572a0716678499c2f46aeeec820", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"}, {"name"=>"lazy_module_include.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb", "checksum"=>"b906fc248e4a6b162941475d8e2bfd9d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"}, {"name"=>"notifying_block.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb", "checksum"=>"583adee37f6d51a8adbf74159cdc423a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"}, {"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb", "checksum"=>"8696257c66e53b46af59d751d851039e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"}, {"name"=>"powershell_out.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb", "checksum"=>"b9f9b62c3acb285ddb97d73ead121adf", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"}, {"name"=>"properties.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb", "checksum"=>"f546297a0749500f39ba062e373393db", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"}, {"name"=>"property.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/property.rb", "checksum"=>"9e10276c12ba8907a23d2987af801fa0", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb"}, {"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb", "checksum"=>"c8bbb0dfa023ddcbee61ab1c7c219e91", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"}, {"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb", "checksum"=>"f7694882de201f6e2cb1f10cfd2a68ea", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"}, {"name"=>"noop.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb", "checksum"=>"c64a1d50ecad452ef89ea703c7a7e7dd", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"}, {"name"=>"yum_repo.erb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb", "checksum"=>"99b50ead88c791eb0e1920a3c57c7ac4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb"}, {"name"=>"systemd_unit.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb", "checksum"=>"de48a8fec80152d131033558c1ec4dad", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb"}, {"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb", "checksum"=>"c330ae1ffbd94b1cfe2d01774cce12d8", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"}, {"name"=>"provider.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider.rb", "checksum"=>"ecca0fc6e3ce187b02ed8fcbf5d7ebb4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb"}, {"name"=>"action_class.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb", "checksum"=>"4f8cda115f4560988e84cf41ad813be4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"}, {"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb", "checksum"=>"5705f579343ec7dff89cc1c34e9ef10c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"}, {"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb", "checksum"=>"5fa9c14ec63384c51fe1071dbdd52cab", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"}, {"name"=>"systemd_unit.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb", "checksum"=>"7a76020d1e5498db33261a94c4d4d23a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb"}, {"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb", "checksum"=>"a7ef1b53740ee638e88a9c1c82d480c2", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"}, {"name"=>"resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource.rb", "checksum"=>"d19f359202755a398965aade0ef43f53", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb"}, {"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb", "checksum"=>"0a3eeed3ac838e236f32182287c28a4e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"}, {"name"=>"copied_from_chef.rb", "path"=>"files/lib/chef_compat/copied_from_chef.rb", "checksum"=>"99864174cd4ffa5d3a9f5d028ec08acb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb"}, {"name"=>"properties.rb", "path"=>"files/lib/chef_compat/mixin/properties.rb", "checksum"=>"3ff71fa0b65269aab0ab5f2c75d80e6e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb"}, {"name"=>"exceptions.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/exceptions.rb", "checksum"=>"3b200c3cbc9200da7dd99a93c03bb68c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb"}, {"name"=>"log.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/log.rb", "checksum"=>"bcf79fcc571c428f06ce449e96d49b46", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb"}, {"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb", "checksum"=>"f9b44255d786e7203bf548a4c82abb12", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"}, {"name"=>"node.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/node.rb", "checksum"=>"9f36cd47c9de8ae8b836ac63a915148b", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb"}, {"name"=>"property.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/property.rb", "checksum"=>"ecf6b84f34b5b1b3b50755cc6df2d061", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb"}, {"name"=>"provider.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/provider.rb", "checksum"=>"9873a10ab5808cbc46729dbd1b3b6bf3", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb"}, {"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe.rb", "checksum"=>"be7a0b25333f68e355eff48ffe5aac73", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb"}, {"name"=>"recipe_hook.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb", "checksum"=>"8b91d52fdc51fa090357946998e73587", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"}, {"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb", "checksum"=>"96227071b1f592e172998e1af8a48058", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"}, {"name"=>"resource.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource.rb", "checksum"=>"61cd6ea9ba2268188a9e60d82f9986eb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb"}, {"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_builder.rb", "checksum"=>"b5c39505d9ad1c122f086180e9506f69", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"}, {"name"=>"resource_list.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb", "checksum"=>"18fe49afa215382cf565d5a8a6c99d8c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"}, {"name"=>"resource_set.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb", "checksum"=>"8854c764ed4f33c339e2b65f55eceba5", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"}, {"name"=>"resource_collection.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection.rb", "checksum"=>"214c3e75087c9311e33225a7106c1b45", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"}, {"name"=>"run_context.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/run_context.rb", "checksum"=>"11839066accfb74ca5c51f881b8e6c44", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb"}, {"name"=>"runner.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/runner.rb", "checksum"=>"a2c586b8fe7833770ce3ae5a1eca2e3a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb"}, {"name"=>"chef.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef.rb", "checksum"=>"1bce1d5d2c63e9ae1bed6bfd15927611", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb"}, {"name"=>"monkeypatches.rb", "path"=>"files/lib/chef_compat/monkeypatches.rb", "checksum"=>"b2404022c1051b495c90aaf110bfa218", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb"}, {"name"=>"property.rb", "path"=>"files/lib/chef_compat/property.rb", "checksum"=>"daf82ee6985f4e02e41fc73636925361", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb"}, {"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/recipe.rb", "checksum"=>"63ccbe80441aff3a4232a920c1780a76", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb"}, {"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/resource/lwrp_base.rb", "checksum"=>"22edef9e101aacbb839c1ab567735115", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb"}, {"name"=>"resource.rb", "path"=>"files/lib/chef_compat/resource.rb", "checksum"=>"5883119a6ad28ede763c0895dbbf35d1", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb"}, {"name"=>"chef_upstream_version.rb", "path"=>"files/lib/chef_upstream_version.rb", "checksum"=>"f9fedf2ccf027e8522ae433f65e5ef46", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb"}, {"name"=>"compat_resource.rb", "path"=>"files/lib/compat_resource.rb", "checksum"=>"3bb9286305bb960c501a9e4b0796ee09", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb"}], "templates"=>[], "resources"=>[], "providers"=>[], "root_files"=>[{"name"=>"README.md", "path"=>"README.md", "checksum"=>"1b265aad411c98128df5cfb2d2326cdb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"e776d5a2b4fd316772d225ffbc77b186", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"43ec1565eead6c906029e9f7408ac3a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"c02b49cafd0a41286e063c76bd6609aa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md"}], "metadata"=>{"name"=>"compat_resource", "description"=>"Backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards", "long_description"=>"", "maintainer"=>"Lamont Granquist", "maintainer_email"=>"lamont@chef.io", "license"=>"Apache 2.0", "platforms"=>{}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{}, "version"=>"12.16.3", "source_url"=>"https://github.com/chef-cookbooks/compat_resource", "issues_url"=>"https://github.com/chef-cookbooks/compat_resource/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"12.16.3", "name"=>"compat_resource-12.16.3", "cookbook_name"=>"compat_resource", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"6c8d358479384218b72a221d3813eb67"=>nil, "efd4289af6a720c2710a23b88ea0aafb"=>nil, "7038f6ec92541b206b0f1bd7a851f5b6"=>nil, "1223b735e667b29a55645771c07a807e"=>nil, "a059f48fedeb6db0b9c1c6b40111b409"=>nil, "2690ff8e2c5dc987bc4123947cf0e3f3"=>nil, "ca4e2ed78545fd62843f237ebbe03c30"=>nil, "23eaa572a0716678499c2f46aeeec820"=>nil, "b906fc248e4a6b162941475d8e2bfd9d"=>nil, "583adee37f6d51a8adbf74159cdc423a"=>nil, "8696257c66e53b46af59d751d851039e"=>nil, "b9f9b62c3acb285ddb97d73ead121adf"=>nil, "f546297a0749500f39ba062e373393db"=>nil, "9e10276c12ba8907a23d2987af801fa0"=>nil, "c8bbb0dfa023ddcbee61ab1c7c219e91"=>nil, "f7694882de201f6e2cb1f10cfd2a68ea"=>nil, "c64a1d50ecad452ef89ea703c7a7e7dd"=>nil, "99b50ead88c791eb0e1920a3c57c7ac4"=>nil, "de48a8fec80152d131033558c1ec4dad"=>nil, "c330ae1ffbd94b1cfe2d01774cce12d8"=>nil, "ecca0fc6e3ce187b02ed8fcbf5d7ebb4"=>nil, "4f8cda115f4560988e84cf41ad813be4"=>nil, "5705f579343ec7dff89cc1c34e9ef10c"=>nil, "5fa9c14ec63384c51fe1071dbdd52cab"=>nil, "7a76020d1e5498db33261a94c4d4d23a"=>nil, "a7ef1b53740ee638e88a9c1c82d480c2"=>nil, "d19f359202755a398965aade0ef43f53"=>nil, "0a3eeed3ac838e236f32182287c28a4e"=>nil, "99864174cd4ffa5d3a9f5d028ec08acb"=>nil, "3ff71fa0b65269aab0ab5f2c75d80e6e"=>nil, "3b200c3cbc9200da7dd99a93c03bb68c"=>nil, "bcf79fcc571c428f06ce449e96d49b46"=>nil, "f9b44255d786e7203bf548a4c82abb12"=>nil, "9f36cd47c9de8ae8b836ac63a915148b"=>nil, "ecf6b84f34b5b1b3b50755cc6df2d061"=>nil, "9873a10ab5808cbc46729dbd1b3b6bf3"=>nil, "be7a0b25333f68e355eff48ffe5aac73"=>nil, "8b91d52fdc51fa090357946998e73587"=>nil, "96227071b1f592e172998e1af8a48058"=>nil, "61cd6ea9ba2268188a9e60d82f9986eb"=>nil, "b5c39505d9ad1c122f086180e9506f69"=>nil, "18fe49afa215382cf565d5a8a6c99d8c"=>nil, "8854c764ed4f33c339e2b65f55eceba5"=>nil, "214c3e75087c9311e33225a7106c1b45"=>nil, "11839066accfb74ca5c51f881b8e6c44"=>nil, "a2c586b8fe7833770ce3ae5a1eca2e3a"=>nil, "1bce1d5d2c63e9ae1bed6bfd15927611"=>nil, "b2404022c1051b495c90aaf110bfa218"=>nil, "daf82ee6985f4e02e41fc73636925361"=>nil, "63ccbe80441aff3a4232a920c1780a76"=>nil, "22edef9e101aacbb839c1ab567735115"=>nil, "5883119a6ad28ede763c0895dbbf35d1"=>nil, "f9fedf2ccf027e8522ae433f65e5ef46"=>nil, "3bb9286305bb960c501a9e4b0796ee09"=>nil, "1b265aad411c98128df5cfb2d2326cdb"=>nil, "e776d5a2b4fd316772d225ffbc77b186"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "43ec1565eead6c906029e9f7408ac3a4"=>nil, "c02b49cafd0a41286e063c76bd6609aa"=>nil}, @manifest_records_by_path={"libraries/autoload.rb"=>{"name"=>"autoload.rb", "path"=>"libraries/autoload.rb", "checksum"=>"6c8d358479384218b72a221d3813eb67", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb"}, "files/lib/chef_compat/copied_from_chef/chef/constants.rb"=>{"name"=>"constants.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/constants.rb", "checksum"=>"efd4289af6a720c2710a23b88ea0aafb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb"}, "files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"=>{"name"=>"delayed_evaluator.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb", "checksum"=>"7038f6ec92541b206b0f1bd7a851f5b6", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"=>{"name"=>"core.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb", "checksum"=>"1223b735e667b29a55645771c07a807e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"=>{"name"=>"declare_resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb", "checksum"=>"a059f48fedeb6db0b9c1c6b40111b409", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"=>{"name"=>"platform_introspection.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb", "checksum"=>"2690ff8e2c5dc987bc4123947cf0e3f3", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"=>{"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb", "checksum"=>"ca4e2ed78545fd62843f237ebbe03c30", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb"}, "files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"=>{"name"=>"universal.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb", "checksum"=>"23eaa572a0716678499c2f46aeeec820", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"=>{"name"=>"lazy_module_include.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb", "checksum"=>"b906fc248e4a6b162941475d8e2bfd9d", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"=>{"name"=>"notifying_block.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb", "checksum"=>"583adee37f6d51a8adbf74159cdc423a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"=>{"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb", "checksum"=>"8696257c66e53b46af59d751d851039e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"=>{"name"=>"powershell_out.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb", "checksum"=>"b9f9b62c3acb285ddb97d73ead121adf", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb"}, "files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"=>{"name"=>"properties.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb", "checksum"=>"f546297a0749500f39ba062e373393db", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb"}, "files/lib/chef_compat/copied_from_chef/chef/property.rb"=>{"name"=>"property.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/property.rb", "checksum"=>"9e10276c12ba8907a23d2987af801fa0", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"=>{"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb", "checksum"=>"c8bbb0dfa023ddcbee61ab1c7c219e91", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"=>{"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb", "checksum"=>"f7694882de201f6e2cb1f10cfd2a68ea", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"=>{"name"=>"noop.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb", "checksum"=>"c64a1d50ecad452ef89ea703c7a7e7dd", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb"=>{"name"=>"yum_repo.erb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb", "checksum"=>"99b50ead88c791eb0e1920a3c57c7ac4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb"=>{"name"=>"systemd_unit.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb", "checksum"=>"de48a8fec80152d131033558c1ec4dad", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"=>{"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb", "checksum"=>"c330ae1ffbd94b1cfe2d01774cce12d8", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/provider.rb"=>{"name"=>"provider.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/provider.rb", "checksum"=>"ecca0fc6e3ce187b02ed8fcbf5d7ebb4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"=>{"name"=>"action_class.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb", "checksum"=>"4f8cda115f4560988e84cf41ad813be4", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"=>{"name"=>"apt_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb", "checksum"=>"5705f579343ec7dff89cc1c34e9ef10c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"=>{"name"=>"apt_update.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb", "checksum"=>"5fa9c14ec63384c51fe1071dbdd52cab", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb"=>{"name"=>"systemd_unit.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb", "checksum"=>"7a76020d1e5498db33261a94c4d4d23a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"=>{"name"=>"yum_repository.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb", "checksum"=>"a7ef1b53740ee638e88a9c1c82d480c2", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource.rb"=>{"name"=>"resource.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource.rb", "checksum"=>"d19f359202755a398965aade0ef43f53", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb"}, "files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"=>{"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb", "checksum"=>"0a3eeed3ac838e236f32182287c28a4e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb"}, "files/lib/chef_compat/copied_from_chef.rb"=>{"name"=>"copied_from_chef.rb", "path"=>"files/lib/chef_compat/copied_from_chef.rb", "checksum"=>"99864174cd4ffa5d3a9f5d028ec08acb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb"}, "files/lib/chef_compat/mixin/properties.rb"=>{"name"=>"properties.rb", "path"=>"files/lib/chef_compat/mixin/properties.rb", "checksum"=>"3ff71fa0b65269aab0ab5f2c75d80e6e", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb"}, "files/lib/chef_compat/monkeypatches/chef/exceptions.rb"=>{"name"=>"exceptions.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/exceptions.rb", "checksum"=>"3b200c3cbc9200da7dd99a93c03bb68c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb"}, "files/lib/chef_compat/monkeypatches/chef/log.rb"=>{"name"=>"log.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/log.rb", "checksum"=>"bcf79fcc571c428f06ce449e96d49b46", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb"}, "files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"=>{"name"=>"params_validate.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb", "checksum"=>"f9b44255d786e7203bf548a4c82abb12", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb"}, "files/lib/chef_compat/monkeypatches/chef/node.rb"=>{"name"=>"node.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/node.rb", "checksum"=>"9f36cd47c9de8ae8b836ac63a915148b", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb"}, "files/lib/chef_compat/monkeypatches/chef/property.rb"=>{"name"=>"property.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/property.rb", "checksum"=>"ecf6b84f34b5b1b3b50755cc6df2d061", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb"}, "files/lib/chef_compat/monkeypatches/chef/provider.rb"=>{"name"=>"provider.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/provider.rb", "checksum"=>"9873a10ab5808cbc46729dbd1b3b6bf3", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb"}, "files/lib/chef_compat/monkeypatches/chef/recipe.rb"=>{"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe.rb", "checksum"=>"be7a0b25333f68e355eff48ffe5aac73", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb"}, "files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"=>{"name"=>"recipe_hook.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb", "checksum"=>"8b91d52fdc51fa090357946998e73587", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"=>{"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb", "checksum"=>"96227071b1f592e172998e1af8a48058", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource.rb"=>{"name"=>"resource.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource.rb", "checksum"=>"61cd6ea9ba2268188a9e60d82f9986eb", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"=>{"name"=>"resource_builder.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_builder.rb", "checksum"=>"b5c39505d9ad1c122f086180e9506f69", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"=>{"name"=>"resource_list.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb", "checksum"=>"18fe49afa215382cf565d5a8a6c99d8c", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"=>{"name"=>"resource_set.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb", "checksum"=>"8854c764ed4f33c339e2b65f55eceba5", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb"}, "files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"=>{"name"=>"resource_collection.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/resource_collection.rb", "checksum"=>"214c3e75087c9311e33225a7106c1b45", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb"}, "files/lib/chef_compat/monkeypatches/chef/run_context.rb"=>{"name"=>"run_context.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/run_context.rb", "checksum"=>"11839066accfb74ca5c51f881b8e6c44", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb"}, "files/lib/chef_compat/monkeypatches/chef/runner.rb"=>{"name"=>"runner.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef/runner.rb", "checksum"=>"a2c586b8fe7833770ce3ae5a1eca2e3a", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb"}, "files/lib/chef_compat/monkeypatches/chef.rb"=>{"name"=>"chef.rb", "path"=>"files/lib/chef_compat/monkeypatches/chef.rb", "checksum"=>"1bce1d5d2c63e9ae1bed6bfd15927611", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb"}, "files/lib/chef_compat/monkeypatches.rb"=>{"name"=>"monkeypatches.rb", "path"=>"files/lib/chef_compat/monkeypatches.rb", "checksum"=>"b2404022c1051b495c90aaf110bfa218", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb"}, "files/lib/chef_compat/property.rb"=>{"name"=>"property.rb", "path"=>"files/lib/chef_compat/property.rb", "checksum"=>"daf82ee6985f4e02e41fc73636925361", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb"}, "files/lib/chef_compat/recipe.rb"=>{"name"=>"recipe.rb", "path"=>"files/lib/chef_compat/recipe.rb", "checksum"=>"63ccbe80441aff3a4232a920c1780a76", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb"}, "files/lib/chef_compat/resource/lwrp_base.rb"=>{"name"=>"lwrp_base.rb", "path"=>"files/lib/chef_compat/resource/lwrp_base.rb", "checksum"=>"22edef9e101aacbb839c1ab567735115", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb"}, "files/lib/chef_compat/resource.rb"=>{"name"=>"resource.rb", "path"=>"files/lib/chef_compat/resource.rb", "checksum"=>"5883119a6ad28ede763c0895dbbf35d1", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb"}, "files/lib/chef_upstream_version.rb"=>{"name"=>"chef_upstream_version.rb", "path"=>"files/lib/chef_upstream_version.rb", "checksum"=>"f9fedf2ccf027e8522ae433f65e5ef46", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb"}, "files/lib/compat_resource.rb"=>{"name"=>"compat_resource.rb", "path"=>"files/lib/compat_resource.rb", "checksum"=>"3bb9286305bb960c501a9e4b0796ee09", "specificity"=>"lib", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"1b265aad411c98128df5cfb2d2326cdb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"e776d5a2b4fd316772d225ffbc77b186", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"43ec1565eead6c906029e9f7408ac3a4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"c02b49cafd0a41286e063c76bd6609aa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b575d0 @name="zypper", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb", "smt_client.rb"], @recipe_filenames_by_name={"default"=>"default.rb", "smt_client"=>"smt_client.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["repo.rb"], @provider_filenames=["repo.rb"], @metadata_filenames=[], @root_filenames=["README.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b56bd0 @name="zypper", @description="Provides resources for managing zypper repositories", @long_description="", @license="MIT", @maintainer="Jim Rosser", @maintainer_email="jarosser06@gmail.com", @platforms={"suse"=>">= 0.0.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0"}, @dependencies={}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"zypper"=>">= 0.0.0", "zypper::smt_client"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"zypper"=>"", "zypper::smt_client"=>""}, @version="0.3.0", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b55f78 @cookbook_version=#<Chef::CookbookVersion:0x00000004b575d0 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"e1fe27c1fcb485e84e6d3001dd61891b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/default.rb"}, {"name"=>"smt_client.rb", "path"=>"recipes/smt_client.rb", "checksum"=>"acee7ae6c634ec0e32665b5ab38799d3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/smt_client.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"60b62c47d7d3608069e4101be3d092ba", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"9ed87c9bc43c9201c4e9309975f7c89a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/attributes/default.rb"}], "files"=>[], "templates"=>[], "resources"=>[{"name"=>"repo.rb", "path"=>"resources/repo.rb", "checksum"=>"ca0a6d844b7ee147ca05550e81c3116c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/resources/repo.rb"}], "providers"=>[{"name"=>"repo.rb", "path"=>"providers/repo.rb", "checksum"=>"117be753f77208600e53344dc5bc59a3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/providers/repo.rb"}], "root_files"=>[{"name"=>"README.md", "path"=>"README.md", "checksum"=>"99b03585ecb89c1cccc1a8be6063420e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/README.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a3790730d2c7973f6fd24a1e351dac48", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"3cc5325d74d258437aaaed0589390212", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/CHANGELOG.md"}], "metadata"=>{"name"=>"zypper", "description"=>"Provides resources for managing zypper repositories", "long_description"=>"", "maintainer"=>"Jim Rosser", "maintainer_email"=>"jarosser06@gmail.com", "license"=>"MIT", "platforms"=>{"suse"=>">= 0.0.0", "opensuse"=>">= 0.0.0", "opensuseleap"=>">= 0.0.0"}, "dependencies"=>{}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"zypper"=>">= 0.0.0", "zypper::smt_client"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"zypper"=>"", "zypper::smt_client"=>""}, "version"=>"0.3.0", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"0.3.0", "name"=>"zypper-0.3.0", "cookbook_name"=>"zypper", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"ca0a6d844b7ee147ca05550e81c3116c"=>nil, "117be753f77208600e53344dc5bc59a3"=>nil, "e1fe27c1fcb485e84e6d3001dd61891b"=>nil, "acee7ae6c634ec0e32665b5ab38799d3"=>nil, "60b62c47d7d3608069e4101be3d092ba"=>nil, "9ed87c9bc43c9201c4e9309975f7c89a"=>nil, "99b03585ecb89c1cccc1a8be6063420e"=>nil, "a3790730d2c7973f6fd24a1e351dac48"=>nil, "3cc5325d74d258437aaaed0589390212"=>nil}, @manifest_records_by_path={"resources/repo.rb"=>{"name"=>"repo.rb", "path"=>"resources/repo.rb", "checksum"=>"ca0a6d844b7ee147ca05550e81c3116c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/resources/repo.rb"}, "providers/repo.rb"=>{"name"=>"repo.rb", "path"=>"providers/repo.rb", "checksum"=>"117be753f77208600e53344dc5bc59a3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/providers/repo.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"e1fe27c1fcb485e84e6d3001dd61891b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/default.rb"}, "recipes/smt_client.rb"=>{"name"=>"smt_client.rb", "path"=>"recipes/smt_client.rb", "checksum"=>"acee7ae6c634ec0e32665b5ab38799d3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/smt_client.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"60b62c47d7d3608069e4101be3d092ba", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"9ed87c9bc43c9201c4e9309975f7c89a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/attributes/default.rb"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"99b03585ecb89c1cccc1a8be6063420e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/README.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a3790730d2c7973f6fd24a1e351dac48", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"3cc5325d74d258437aaaed0589390212", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/zypper/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b4e638 @name="seven_zip", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=[], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["matchers.rb"], @resource_filenames=["archive.rb"], @provider_filenames=["archive.rb"], @metadata_filenames=[], @root_filenames=["README.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b4dd78 @name="seven_zip", @description="Installs/Configures the 7-zip file archiver", @long_description="", @license="Apache 2.0", @maintainer="Shawn Neal", @maintainer_email="sneal@sneal.net", @platforms={"windows"=>">= 0.0.0"}, @dependencies={"windows"=>">= 1.2.2"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"seven_zip"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"seven_zip"=>""}, @version="2.0.2", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b4d1e8 @cookbook_version=#<Chef::CookbookVersion:0x00000004b4e638 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"0c76379ce8319c8e5403ff1f02e4986a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"5063c2c31a42b74ea4a03b6cf940d88e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/libraries/matchers.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"5777d35638fa84433bb53779e4a9bdfc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/attributes/default.rb"}], "files"=>[], "templates"=>[], "resources"=>[{"name"=>"archive.rb", "path"=>"resources/archive.rb", "checksum"=>"6ac8ca9ef422a32c7b5339c8036c27b2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/resources/archive.rb"}], "providers"=>[{"name"=>"archive.rb", "path"=>"providers/archive.rb", "checksum"=>"11ccf7577c0e0112ba6ca11ea3e698ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/providers/archive.rb"}], "root_files"=>[{"name"=>"README.md", "path"=>"README.md", "checksum"=>"b7905d22422684c33f3df9657adbb255", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/README.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a2a02656327c9c97503dc88868a3cbf4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"463df7ac82878f1c44ffc8d88f84271a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/CHANGELOG.md"}], "metadata"=>{"name"=>"seven_zip", "description"=>"Installs/Configures the 7-zip file archiver", "long_description"=>"", "maintainer"=>"Shawn Neal", "maintainer_email"=>"sneal@sneal.net", "license"=>"Apache 2.0", "platforms"=>{"windows"=>">= 0.0.0"}, "dependencies"=>{"windows"=>">= 1.2.2"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"seven_zip"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"seven_zip"=>""}, "version"=>"2.0.2", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.0.2", "name"=>"seven_zip-2.0.2", "cookbook_name"=>"seven_zip", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"6ac8ca9ef422a32c7b5339c8036c27b2"=>nil, "11ccf7577c0e0112ba6ca11ea3e698ad"=>nil, "0c76379ce8319c8e5403ff1f02e4986a"=>nil, "5063c2c31a42b74ea4a03b6cf940d88e"=>nil, "5777d35638fa84433bb53779e4a9bdfc"=>nil, "b7905d22422684c33f3df9657adbb255"=>nil, "a2a02656327c9c97503dc88868a3cbf4"=>nil, "463df7ac82878f1c44ffc8d88f84271a"=>nil}, @manifest_records_by_path={"resources/archive.rb"=>{"name"=>"archive.rb", "path"=>"resources/archive.rb", "checksum"=>"6ac8ca9ef422a32c7b5339c8036c27b2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/resources/archive.rb"}, "providers/archive.rb"=>{"name"=>"archive.rb", "path"=>"providers/archive.rb", "checksum"=>"11ccf7577c0e0112ba6ca11ea3e698ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/providers/archive.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"0c76379ce8319c8e5403ff1f02e4986a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/recipes/default.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"5063c2c31a42b74ea4a03b6cf940d88e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/libraries/matchers.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"5777d35638fa84433bb53779e4a9bdfc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/attributes/default.rb"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"b7905d22422684c33f3df9657adbb255", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/README.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"a2a02656327c9c97503dc88868a3cbf4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"463df7ac82878f1c44ffc8d88f84271a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b39210 @name="mingw", @root_paths=[], @frozen=false, @attribute_filenames=[], @definition_filenames=[], @template_filenames=[], @file_filenames=["bash.bat", "custom-upgrade.sh", "custom_prefix.sh", "pthread.h", "time.h"], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["_helper.rb"], @resource_filenames=["get.rb", "msys2_package.rb", "tdm_gcc.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=[".foodcritic", "README.md", "MAINTAINERS.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b38978 @name="mingw", @description="Installs a mingw/msys based toolchain on windows", @long_description="", @license="Apache 2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"windows"=>">= 0.0.0"}, @dependencies={"seven_zip"=>">= 0.0.0"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"mingw"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"mingw"=>""}, @version="2.0.0", @source_url="", @issues_url="", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b2bcc8 @cookbook_version=#<Chef::CookbookVersion:0x00000004b39210 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"b9f4fa4319a1b924f10a33584c41bd6f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"_helper.rb", "path"=>"libraries/_helper.rb", "checksum"=>"3ff7dfd9043c980669c81473c579e109", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/libraries/_helper.rb"}], "attributes"=>[], "files"=>[{"name"=>"bash.bat", "path"=>"files/default/bash.bat", "checksum"=>"bff7bf31993d8fff21b06afc1723b3d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/bash.bat"}, {"name"=>"custom-upgrade.sh", "path"=>"files/default/custom-upgrade.sh", "checksum"=>"1d5f9d600f8969f7e5588b01b1d252d2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom-upgrade.sh"}, {"name"=>"custom_prefix.sh", "path"=>"files/default/custom_prefix.sh", "checksum"=>"ec587997a7d5e69b331f15fc81010af1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom_prefix.sh"}, {"name"=>"pthread.h", "path"=>"files/default/pthread.h", "checksum"=>"21224fed216b86f07a80848507f8786f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/pthread.h"}, {"name"=>"time.h", "path"=>"files/default/time.h", "checksum"=>"dbe4d6272395519ce88e511634ae2f2c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/time.h"}], "templates"=>[], "resources"=>[{"name"=>"get.rb", "path"=>"resources/get.rb", "checksum"=>"e75a387d8267a60153de528318b68016", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/get.rb"}, {"name"=>"msys2_package.rb", "path"=>"resources/msys2_package.rb", "checksum"=>"ef463cd7973d025eb835db6e5eab9bb6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/msys2_package.rb"}, {"name"=>"tdm_gcc.rb", "path"=>"resources/tdm_gcc.rb", "checksum"=>"baef66781fab161191f04ce9b4456cc5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/tdm_gcc.rb"}], "providers"=>[], "root_files"=>[{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"4c059ebdeb86c1ee07599450d438c97e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/.foodcritic"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"19cf16ac8be12da9a8206052dd431ff9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"dd8099219106905afb425e292e9c24d9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/MAINTAINERS.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2c8504aec7d004003324157ed411ef28", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"70906c21a0863e8520e468ef8f1c6381", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CHANGELOG.md"}], "metadata"=>{"name"=>"mingw", "description"=>"Installs a mingw/msys based toolchain on windows", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache 2.0", "platforms"=>{"windows"=>">= 0.0.0"}, "dependencies"=>{"seven_zip"=>">= 0.0.0"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"mingw"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"mingw"=>""}, "version"=>"2.0.0", "source_url"=>"", "issues_url"=>"", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"2.0.0", "name"=>"mingw-2.0.0", "cookbook_name"=>"mingw", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"e75a387d8267a60153de528318b68016"=>nil, "ef463cd7973d025eb835db6e5eab9bb6"=>nil, "baef66781fab161191f04ce9b4456cc5"=>nil, "b9f4fa4319a1b924f10a33584c41bd6f"=>nil, "3ff7dfd9043c980669c81473c579e109"=>nil, "bff7bf31993d8fff21b06afc1723b3d5"=>nil, "1d5f9d600f8969f7e5588b01b1d252d2"=>nil, "ec587997a7d5e69b331f15fc81010af1"=>nil, "21224fed216b86f07a80848507f8786f"=>nil, "dbe4d6272395519ce88e511634ae2f2c"=>nil, "4c059ebdeb86c1ee07599450d438c97e"=>nil, "19cf16ac8be12da9a8206052dd431ff9"=>nil, "dd8099219106905afb425e292e9c24d9"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "2c8504aec7d004003324157ed411ef28"=>nil, "70906c21a0863e8520e468ef8f1c6381"=>nil}, @manifest_records_by_path={"resources/get.rb"=>{"name"=>"get.rb", "path"=>"resources/get.rb", "checksum"=>"e75a387d8267a60153de528318b68016", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/get.rb"}, "resources/msys2_package.rb"=>{"name"=>"msys2_package.rb", "path"=>"resources/msys2_package.rb", "checksum"=>"ef463cd7973d025eb835db6e5eab9bb6", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/msys2_package.rb"}, "resources/tdm_gcc.rb"=>{"name"=>"tdm_gcc.rb", "path"=>"resources/tdm_gcc.rb", "checksum"=>"baef66781fab161191f04ce9b4456cc5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/tdm_gcc.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"b9f4fa4319a1b924f10a33584c41bd6f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/recipes/default.rb"}, "libraries/_helper.rb"=>{"name"=>"_helper.rb", "path"=>"libraries/_helper.rb", "checksum"=>"3ff7dfd9043c980669c81473c579e109", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/libraries/_helper.rb"}, "files/default/bash.bat"=>{"name"=>"bash.bat", "path"=>"files/default/bash.bat", "checksum"=>"bff7bf31993d8fff21b06afc1723b3d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/bash.bat"}, "files/default/custom-upgrade.sh"=>{"name"=>"custom-upgrade.sh", "path"=>"files/default/custom-upgrade.sh", "checksum"=>"1d5f9d600f8969f7e5588b01b1d252d2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom-upgrade.sh"}, "files/default/custom_prefix.sh"=>{"name"=>"custom_prefix.sh", "path"=>"files/default/custom_prefix.sh", "checksum"=>"ec587997a7d5e69b331f15fc81010af1", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom_prefix.sh"}, "files/default/pthread.h"=>{"name"=>"pthread.h", "path"=>"files/default/pthread.h", "checksum"=>"21224fed216b86f07a80848507f8786f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/pthread.h"}, "files/default/time.h"=>{"name"=>"time.h", "path"=>"files/default/time.h", "checksum"=>"dbe4d6272395519ce88e511634ae2f2c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/time.h"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"4c059ebdeb86c1ee07599450d438c97e", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/.foodcritic"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"19cf16ac8be12da9a8206052dd431ff9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"dd8099219106905afb425e292e9c24d9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/MAINTAINERS.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"2c8504aec7d004003324157ed411ef28", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"70906c21a0863e8520e468ef8f1c6381", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CHANGELOG.md"}}>>, #<Chef::CookbookVersion:0x00000004b1e000 @name="windows", @root_paths=[], @frozen=false, @attribute_filenames=["default.rb"], @definition_filenames=[], @template_filenames=[], @file_filenames=["dism_features.rb"], @recipe_filenames=["default.rb"], @recipe_filenames_by_name={"default"=>"default.rb"}, @library_filenames=["matchers.rb", "powershell_helper.rb", "registry_helper.rb", "version.rb", "version_helper.rb", "windows_helper.rb", "windows_privileged.rb", "wmi_helper.rb"], @resource_filenames=["auto_run.rb", "certificate.rb", "certificate_binding.rb", "feature.rb", "feature_dism.rb", "feature_powershell.rb", "feature_servermanagercmd.rb", "font.rb", "http_acl.rb", "pagefile.rb", "path.rb", "printer.rb", "printer_port.rb", "share.rb", "shortcut.rb", "task.rb", "zipfile.rb"], @provider_filenames=[], @metadata_filenames=[], @root_filenames=[".foodcritic", "README.md", "MAINTAINERS.md", "CONTRIBUTING.md", "metadata.json", "CHANGELOG.md"], @all_files=[], @status=:ready, @file_vendor=nil, @metadata=#<Chef::Cookbook::Metadata:0x00000004b1d448 @name="windows", @description="Provides a set of useful Windows-specific primitives.", @long_description="", @license="Apache-2.0", @maintainer="Chef Software, Inc.", @maintainer_email="cookbooks@chef.io", @platforms={"windows"=>">= 0.0.0"}, @dependencies={"ohai"=>">= 4.0.0"}, @recommendations={}, @suggestions={}, @conflicting={}, @providing={"windows"=>">= 0.0.0"}, @replacing={}, @attributes={}, @groupings={}, @recipes={"windows"=>""}, @version="3.0.4", @source_url="https://github.com/chef-cookbooks/windows", @issues_url="https://github.com/chef-cookbooks/windows/issues", @privacy=false, @chef_versions=[], @ohai_versions=[], @gems=[], @errors=[]>, @chef_server_rest=nil, @attribute_filenames_by_short_filename={"default"=>"default.rb"}, @cookbook_manifest=#<Chef::CookbookManifest:0x00000004b1c868 @cookbook_version=#<Chef::CookbookVersion:0x00000004b1e000 ...>, @policy_mode=false, @manifest={"recipes"=>[{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"1c657b722a68ef9cea10dca2c49d01bf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb"}], "definitions"=>[], "libraries"=>[{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"b8ed88d644d14d5e3a38b82629a6d8fb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb"}, {"name"=>"powershell_helper.rb", "path"=>"libraries/powershell_helper.rb", "checksum"=>"6420f54143d8b6b2c06ef826b43e48d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb"}, {"name"=>"registry_helper.rb", "path"=>"libraries/registry_helper.rb", "checksum"=>"b69ac89e38a5fc437d8c0ee652031763", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb"}, {"name"=>"version.rb", "path"=>"libraries/version.rb", "checksum"=>"9156282869cb0c8ccc6d03a2146926e4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb"}, {"name"=>"version_helper.rb", "path"=>"libraries/version_helper.rb", "checksum"=>"06e0daf9ec90b7c67d801f24c149121f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version_helper.rb"}, {"name"=>"windows_helper.rb", "path"=>"libraries/windows_helper.rb", "checksum"=>"0d80b1cc35892d55f1895f584e0617cc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb"}, {"name"=>"windows_privileged.rb", "path"=>"libraries/windows_privileged.rb", "checksum"=>"093d53cda1fbb53d96e4de4cf23b3cfb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb"}, {"name"=>"wmi_helper.rb", "path"=>"libraries/wmi_helper.rb", "checksum"=>"13b996802dad31f91eea671ab3478ec9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb"}], "attributes"=>[{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"a56d2d3a598f15aff23c887adcb60d5c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb"}], "files"=>[{"name"=>"dism_features.rb", "path"=>"files/dism_features.rb", "checksum"=>"2f263356800ad7627ee29c10f444c6b9", "specificity"=>"root_default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/files/dism_features.rb"}], "templates"=>[], "resources"=>[{"name"=>"auto_run.rb", "path"=>"resources/auto_run.rb", "checksum"=>"45106d67b63c0caa57308570f1e2b06c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb"}, {"name"=>"certificate.rb", "path"=>"resources/certificate.rb", "checksum"=>"5fd1d9a8d285e93da654ea937fa9d904", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb"}, {"name"=>"certificate_binding.rb", "path"=>"resources/certificate_binding.rb", "checksum"=>"854ee4947a10fa00a095c19db5d1917f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb"}, {"name"=>"feature.rb", "path"=>"resources/feature.rb", "checksum"=>"9c96048b1e6f68f01e44dfa645dd33a0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb"}, {"name"=>"feature_dism.rb", "path"=>"resources/feature_dism.rb", "checksum"=>"bd802a4e59c1e15be420ef736e8dc2fa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_dism.rb"}, {"name"=>"feature_powershell.rb", "path"=>"resources/feature_powershell.rb", "checksum"=>"b97917daa100243e3616edd03bdf9728", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_powershell.rb"}, {"name"=>"feature_servermanagercmd.rb", "path"=>"resources/feature_servermanagercmd.rb", "checksum"=>"c6fa37157816a2e54b66007ade9b287b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_servermanagercmd.rb"}, {"name"=>"font.rb", "path"=>"resources/font.rb", "checksum"=>"cc549ad375266a2434ca9d944de27f74", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb"}, {"name"=>"http_acl.rb", "path"=>"resources/http_acl.rb", "checksum"=>"822b89d21e418e84f89eac0de071ae70", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb"}, {"name"=>"pagefile.rb", "path"=>"resources/pagefile.rb", "checksum"=>"ef7f90961eee6dec39f0fc1c46163942", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb"}, {"name"=>"path.rb", "path"=>"resources/path.rb", "checksum"=>"bccad3bfa513b8445fce981a36638adc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb"}, {"name"=>"printer.rb", "path"=>"resources/printer.rb", "checksum"=>"eb0effc8c69546e5044e0d5f31db57b5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb"}, {"name"=>"printer_port.rb", "path"=>"resources/printer_port.rb", "checksum"=>"2669df868a4a8275c5e5287b2c6d18ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb"}, {"name"=>"share.rb", "path"=>"resources/share.rb", "checksum"=>"62b80de4f4000aaf208dfa1e011ff040", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/share.rb"}, {"name"=>"shortcut.rb", "path"=>"resources/shortcut.rb", "checksum"=>"6256bade233499d9677515352c3489c3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb"}, {"name"=>"task.rb", "path"=>"resources/task.rb", "checksum"=>"59cf007fe285308553b1145843804f6d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb"}, {"name"=>"zipfile.rb", "path"=>"resources/zipfile.rb", "checksum"=>"8c7e8b84ec3e31cda3b41ff511b6f964", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb"}], "providers"=>[], "root_files"=>[{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"2c86323308e2ecf6eac55dbe7858ab1b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic"}, {"name"=>"README.md", "path"=>"README.md", "checksum"=>"7d9909ab3614b2460ee1c7cad1dd81a5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md"}, {"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"4604b38cc9ea81e35a41d1eac5d4a66a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md"}, {"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md"}, {"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"7f19a650018188e2e68be82024fce3c2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json"}, {"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"6e22078cedb503ad3bf91e15034696e4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md"}], "metadata"=>{"name"=>"windows", "description"=>"Provides a set of useful Windows-specific primitives.", "long_description"=>"", "maintainer"=>"Chef Software, Inc.", "maintainer_email"=>"cookbooks@chef.io", "license"=>"Apache-2.0", "platforms"=>{"windows"=>">= 0.0.0"}, "dependencies"=>{"ohai"=>">= 4.0.0"}, "recommendations"=>{}, "suggestions"=>{}, "conflicting"=>{}, "providing"=>{"windows"=>">= 0.0.0"}, "replacing"=>{}, "attributes"=>{}, "groupings"=>{}, "recipes"=>{"windows"=>""}, "version"=>"3.0.4", "source_url"=>"https://github.com/chef-cookbooks/windows", "issues_url"=>"https://github.com/chef-cookbooks/windows/issues", "privacy"=>false, "chef_versions"=>[], "ohai_versions"=>[], "gems"=>[]}, "version"=>"3.0.4", "name"=>"windows-3.0.4", "cookbook_name"=>"windows", "frozen?"=>false, "chef_type"=>"cookbook_version", "json_class"=>"Chef::CookbookVersion"}, @checksums={"45106d67b63c0caa57308570f1e2b06c"=>nil, "5fd1d9a8d285e93da654ea937fa9d904"=>nil, "854ee4947a10fa00a095c19db5d1917f"=>nil, "9c96048b1e6f68f01e44dfa645dd33a0"=>nil, "bd802a4e59c1e15be420ef736e8dc2fa"=>nil, "b97917daa100243e3616edd03bdf9728"=>nil, "c6fa37157816a2e54b66007ade9b287b"=>nil, "cc549ad375266a2434ca9d944de27f74"=>nil, "822b89d21e418e84f89eac0de071ae70"=>nil, "ef7f90961eee6dec39f0fc1c46163942"=>nil, "bccad3bfa513b8445fce981a36638adc"=>nil, "eb0effc8c69546e5044e0d5f31db57b5"=>nil, "2669df868a4a8275c5e5287b2c6d18ad"=>nil, "62b80de4f4000aaf208dfa1e011ff040"=>nil, "6256bade233499d9677515352c3489c3"=>nil, "59cf007fe285308553b1145843804f6d"=>nil, "8c7e8b84ec3e31cda3b41ff511b6f964"=>nil, "1c657b722a68ef9cea10dca2c49d01bf"=>nil, "b8ed88d644d14d5e3a38b82629a6d8fb"=>nil, "6420f54143d8b6b2c06ef826b43e48d5"=>nil, "b69ac89e38a5fc437d8c0ee652031763"=>nil, "9156282869cb0c8ccc6d03a2146926e4"=>nil, "06e0daf9ec90b7c67d801f24c149121f"=>nil, "0d80b1cc35892d55f1895f584e0617cc"=>nil, "093d53cda1fbb53d96e4de4cf23b3cfb"=>nil, "13b996802dad31f91eea671ab3478ec9"=>nil, "a56d2d3a598f15aff23c887adcb60d5c"=>nil, "2f263356800ad7627ee29c10f444c6b9"=>nil, "2c86323308e2ecf6eac55dbe7858ab1b"=>nil, "7d9909ab3614b2460ee1c7cad1dd81a5"=>nil, "4604b38cc9ea81e35a41d1eac5d4a66a"=>nil, "851a37baf4e39196fc664e393cdf2e11"=>nil, "7f19a650018188e2e68be82024fce3c2"=>nil, "6e22078cedb503ad3bf91e15034696e4"=>nil}, @manifest_records_by_path={"resources/auto_run.rb"=>{"name"=>"auto_run.rb", "path"=>"resources/auto_run.rb", "checksum"=>"45106d67b63c0caa57308570f1e2b06c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb"}, "resources/certificate.rb"=>{"name"=>"certificate.rb", "path"=>"resources/certificate.rb", "checksum"=>"5fd1d9a8d285e93da654ea937fa9d904", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb"}, "resources/certificate_binding.rb"=>{"name"=>"certificate_binding.rb", "path"=>"resources/certificate_binding.rb", "checksum"=>"854ee4947a10fa00a095c19db5d1917f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb"}, "resources/feature.rb"=>{"name"=>"feature.rb", "path"=>"resources/feature.rb", "checksum"=>"9c96048b1e6f68f01e44dfa645dd33a0", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb"}, "resources/feature_dism.rb"=>{"name"=>"feature_dism.rb", "path"=>"resources/feature_dism.rb", "checksum"=>"bd802a4e59c1e15be420ef736e8dc2fa", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_dism.rb"}, "resources/feature_powershell.rb"=>{"name"=>"feature_powershell.rb", "path"=>"resources/feature_powershell.rb", "checksum"=>"b97917daa100243e3616edd03bdf9728", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_powershell.rb"}, "resources/feature_servermanagercmd.rb"=>{"name"=>"feature_servermanagercmd.rb", "path"=>"resources/feature_servermanagercmd.rb", "checksum"=>"c6fa37157816a2e54b66007ade9b287b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_servermanagercmd.rb"}, "resources/font.rb"=>{"name"=>"font.rb", "path"=>"resources/font.rb", "checksum"=>"cc549ad375266a2434ca9d944de27f74", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb"}, "resources/http_acl.rb"=>{"name"=>"http_acl.rb", "path"=>"resources/http_acl.rb", "checksum"=>"822b89d21e418e84f89eac0de071ae70", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb"}, "resources/pagefile.rb"=>{"name"=>"pagefile.rb", "path"=>"resources/pagefile.rb", "checksum"=>"ef7f90961eee6dec39f0fc1c46163942", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb"}, "resources/path.rb"=>{"name"=>"path.rb", "path"=>"resources/path.rb", "checksum"=>"bccad3bfa513b8445fce981a36638adc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb"}, "resources/printer.rb"=>{"name"=>"printer.rb", "path"=>"resources/printer.rb", "checksum"=>"eb0effc8c69546e5044e0d5f31db57b5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb"}, "resources/printer_port.rb"=>{"name"=>"printer_port.rb", "path"=>"resources/printer_port.rb", "checksum"=>"2669df868a4a8275c5e5287b2c6d18ad", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb"}, "resources/share.rb"=>{"name"=>"share.rb", "path"=>"resources/share.rb", "checksum"=>"62b80de4f4000aaf208dfa1e011ff040", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/share.rb"}, "resources/shortcut.rb"=>{"name"=>"shortcut.rb", "path"=>"resources/shortcut.rb", "checksum"=>"6256bade233499d9677515352c3489c3", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb"}, "resources/task.rb"=>{"name"=>"task.rb", "path"=>"resources/task.rb", "checksum"=>"59cf007fe285308553b1145843804f6d", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb"}, "resources/zipfile.rb"=>{"name"=>"zipfile.rb", "path"=>"resources/zipfile.rb", "checksum"=>"8c7e8b84ec3e31cda3b41ff511b6f964", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb"}, "recipes/default.rb"=>{"name"=>"default.rb", "path"=>"recipes/default.rb", "checksum"=>"1c657b722a68ef9cea10dca2c49d01bf", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb"}, "libraries/matchers.rb"=>{"name"=>"matchers.rb", "path"=>"libraries/matchers.rb", "checksum"=>"b8ed88d644d14d5e3a38b82629a6d8fb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb"}, "libraries/powershell_helper.rb"=>{"name"=>"powershell_helper.rb", "path"=>"libraries/powershell_helper.rb", "checksum"=>"6420f54143d8b6b2c06ef826b43e48d5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb"}, "libraries/registry_helper.rb"=>{"name"=>"registry_helper.rb", "path"=>"libraries/registry_helper.rb", "checksum"=>"b69ac89e38a5fc437d8c0ee652031763", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb"}, "libraries/version.rb"=>{"name"=>"version.rb", "path"=>"libraries/version.rb", "checksum"=>"9156282869cb0c8ccc6d03a2146926e4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb"}, "libraries/version_helper.rb"=>{"name"=>"version_helper.rb", "path"=>"libraries/version_helper.rb", "checksum"=>"06e0daf9ec90b7c67d801f24c149121f", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version_helper.rb"}, "libraries/windows_helper.rb"=>{"name"=>"windows_helper.rb", "path"=>"libraries/windows_helper.rb", "checksum"=>"0d80b1cc35892d55f1895f584e0617cc", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb"}, "libraries/windows_privileged.rb"=>{"name"=>"windows_privileged.rb", "path"=>"libraries/windows_privileged.rb", "checksum"=>"093d53cda1fbb53d96e4de4cf23b3cfb", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb"}, "libraries/wmi_helper.rb"=>{"name"=>"wmi_helper.rb", "path"=>"libraries/wmi_helper.rb", "checksum"=>"13b996802dad31f91eea671ab3478ec9", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb"}, "attributes/default.rb"=>{"name"=>"default.rb", "path"=>"attributes/default.rb", "checksum"=>"a56d2d3a598f15aff23c887adcb60d5c", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb"}, "files/dism_features.rb"=>{"name"=>"dism_features.rb", "path"=>"files/dism_features.rb", "checksum"=>"2f263356800ad7627ee29c10f444c6b9", "specificity"=>"root_default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/files/dism_features.rb"}, ".foodcritic"=>{"name"=>".foodcritic", "path"=>".foodcritic", "checksum"=>"2c86323308e2ecf6eac55dbe7858ab1b", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic"}, "README.md"=>{"name"=>"README.md", "path"=>"README.md", "checksum"=>"7d9909ab3614b2460ee1c7cad1dd81a5", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md"}, "MAINTAINERS.md"=>{"name"=>"MAINTAINERS.md", "path"=>"MAINTAINERS.md", "checksum"=>"4604b38cc9ea81e35a41d1eac5d4a66a", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md"}, "CONTRIBUTING.md"=>{"name"=>"CONTRIBUTING.md", "path"=>"CONTRIBUTING.md", "checksum"=>"851a37baf4e39196fc664e393cdf2e11", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md"}, "metadata.json"=>{"name"=>"metadata.json", "path"=>"metadata.json", "checksum"=>"7f19a650018188e2e68be82024fce3c2", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json"}, "CHANGELOG.md"=>{"name"=>"CHANGELOG.md", "path"=>"CHANGELOG.md", "checksum"=>"6e22078cedb503ad3bf91e15034696e4", "specificity"=>"default", "url"=>"chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md"}}>>]
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/resources/site.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049b2158
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/resources/site.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049b21a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "resources",
   "site.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Resource:: site
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
# Author:: Tim Smith <tsmith@chef.io>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

provides :nginx_site

property :name, String, name_property: true
property :variables, Hash, default: {}
property :cookbook, String
property :template, [String, Array]
property :enable, [String, true, false]

action :enable do
  # this is pretty evil, but gives us backwards compat with the old
  # definition where there was an enable property vs a true action
  if new_resource.enable
    Chef::Log.warn('The "enable" property in nginx_site is deprecated. Use "action :enable" instead.')
  elsif new_resource.enable == false || new_resource.enable == 'false'
    Chef::Log.warn('The "enable" property in nginx_site is deprecated. Use "action :disable" instead.')
    action_disable
    return # don't perform the actual enable action afterwards
  end

  if new_resource.template
    # use declare_resource so we can have a property also named template
    declare_resource(:template, "#{node['nginx']['dir']}/sites-available/#{new_resource.name}") do
      source new_resource.template
      cookbook new_resource.cookbook
      variables(new_resource.variables)
      notifies :reload, 'service[nginx]'
    end
  end

  execute "nxensite #{new_resource.name}" do
    command "#{node['nginx']['script_dir']}/nxensite #{new_resource.name}"
    notifies :reload, 'service[nginx]'
    not_if do
      ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/#{new_resource.name}") ||
        ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/000-#{new_resource.name}")
    end
  end
end

action :disable do
  execute "nxdissite #{new_resource.name}" do
    command "#{node['nginx']['script_dir']}/nxdissite #{new_resource.name}"
    notifies :reload, 'service[nginx]'
    only_if do
      ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/#{new_resource.name}") ||
        ::File.symlink?("#{node['nginx']['dir']}/sites-enabled/000-#{new_resource.name}")
    end
  end

  # The nginx.org packages store the default site at /etc/nginx/conf.d/default.conf and our
  # normal script doesn't disable these.
  if new_resource.name == 'default' && ::File.exist?('/etc/nginx/conf.d/default.conf') # ~FC023
    execute 'Move nginx.org package default site config to sites-available' do
      command "mv /etc/nginx/conf.d/default.conf #{node['nginx']['dir']}/sites-available/default"
      user 'root'
      notifies :reload, 'service[nginx]'
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/resources/site.rb to tempfile /tmp/chef-rest20170405-7856-g4lg3b
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/authorized_ips.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004994900
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/authorized_ips.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004994950>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "authorized_ips.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/commons.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049670e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/commons.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004967130>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "commons.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/commons_conf.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004935310
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/commons_conf.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004935388>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "commons_conf.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: common/conf
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

template 'nginx.conf' do
  path   "#{node['nginx']['dir']}/nginx.conf"
  source node['nginx']['conf_template']
  cookbook node['nginx']['conf_cookbook']
  notifies :reload, 'service[nginx]', :delayed
  variables(lazy { { pid_file: pidfile_location } })
end

template "#{node['nginx']['dir']}/sites-available/default" do
  source 'default-site.erb'
  notifies :reload, 'service[nginx]', :delayed
end

nginx_site 'Disable default site' do
  name 'default'
  action node['nginx']['default_site_enabled'] ? :enable : :disable
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_conf.rb to tempfile /tmp/chef-rest20170405-7856-56qowa
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: commons
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'chef_nginx::commons_dir'
include_recipe 'chef_nginx::commons_script'
include_recipe 'chef_nginx::commons_conf'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons.rb to tempfile /tmp/chef-rest20170405-7856-1syap73
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/commons_script.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048f5468
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/commons_script.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048f54b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "commons_script.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/commons.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048ce250
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048ce2a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: default
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe "chef_nginx::#{node['nginx']['install_method']}"

node['nginx']['default']['modules'].each do |ngx_module|
  include_recipe "chef_nginx::#{ngx_module}"
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/headers_more_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004897930
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/headers_more_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004897980>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "headers_more_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: headers_more_module
#
# Author:: Lucas Jandrew (<ljandrew@riotgames.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

tar_location = "#{Chef::Config['file_cache_path']}/headers_more.tar.gz"
module_location = "#{Chef::Config['file_cache_path']}/headers_more/#{node['nginx']['headers_more']['source_checksum']}"

remote_file tar_location do
  source   node['nginx']['headers_more']['source_url']
  checksum node['nginx']['headers_more']['source_checksum']
end

directory module_location do
  mode      '0755'
  recursive true
  action    :create
end

bash 'extract_headers_more' do
  cwd  ::File.dirname(tar_location)
  user 'root'
  code <<-EOH
    tar -zxf #{tar_location} -C #{module_location}
  EOH
  not_if { ::File.exist?("#{module_location}/headers-more-nginx-module-#{node['nginx']['headers_more']['version']}/config") }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{module_location}/headers-more-nginx-module-#{node['nginx']['headers_more']['version']}/"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/headers_more_module.rb to tempfile /tmp/chef-rest20170405-7856-6i2hsw
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-mjsa39
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: common/script
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

%w(nxensite nxdissite).each do |nxscript|
  template "#{node['nginx']['script_dir']}/#{nxscript}" do
    source "#{nxscript}.erb"
    mode   '0755'
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_script.rb to tempfile /tmp/chef-rest20170405-7856-67m7sg
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: authorized_ips
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.default['nginx']['remote_ip_var']  = 'remote_addr'
node.default['nginx']['authorized_ips'] = ['127.0.0.1/32']

template 'authorized_ip' do
  path   "#{node['nginx']['dir']}/authorized_ip"
  source 'modules/authorized_ip.erb'
  notifies :reload, 'service[nginx]', :delayed
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/headers_more_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_auth_request_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004855508
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_auth_request_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004855558>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_auth_request_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_auth_request_module
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright:: 2013-2017, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Documentation:
#   http://nginx.org/en/docs/http/ngx_http_auth_request_module.html
if node['nginx']['source']['version'] >= '1.5.4'
  node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ['--with-http_auth_request_module']
else
  arm_src_filename = ::File.basename(node['nginx']['auth_request']['url'])
  arm_src_filepath = "#{Chef::Config['file_cache_path']}/#{arm_src_filename}"
  arm_extract_path = "#{Chef::Config['file_cache_path']}/nginx_auth_request/#{node['nginx']['auth_request']['checksum']}"

  remote_file arm_src_filepath do
    source   node['nginx']['auth_request']['url']
    checksum node['nginx']['auth_request']['checksum']
  end

  bash 'extract_auth_request_module' do
    cwd ::File.dirname(arm_src_filepath)
    code <<-EOH
      mkdir -p #{arm_extract_path}
      tar xzf #{arm_src_filename} -C #{arm_extract_path}
      mv #{arm_extract_path}/*/* #{arm_extract_path}/
    EOH
    not_if { ::File.exist?(arm_extract_path) }
  end

  node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ["--add-module=#{arm_extract_path}"]
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/resources/site.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_geoip_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004826190
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_geoip_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048261e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_geoip_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_geoip_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

country_dat          = "#{node['nginx']['geoip']['path']}/GeoIP.dat"
country_src_filename = ::File.basename(node['nginx']['geoip']['country_dat_url'])
country_src_filepath = "#{Chef::Config['file_cache_path']}/#{country_src_filename}"
city_dat             = nil
city_src_filename    = ::File.basename(node['nginx']['geoip']['city_dat_url'])
city_src_filepath    = "#{Chef::Config['file_cache_path']}/#{city_src_filename}"
geolib_filename      = ::File.basename(node['nginx']['geoip']['lib_url'])
geolib_filepath      = "#{Chef::Config['file_cache_path']}/#{geolib_filename}"

remote_file geolib_filepath do
  source   node['nginx']['geoip']['lib_url']
  checksum node['nginx']['geoip']['lib_checksum']
end

bash 'extract_geolib' do
  cwd  ::File.dirname(geolib_filepath)
  code <<-EOH
    tar xzvf #{geolib_filepath} -C #{::File.dirname(geolib_filepath)}
    cd GeoIP-#{node['nginx']['geoip']['lib_version']}
    ./configure
    make && make install
  EOH
  environment('echo' => 'echo') if node['platform_family'] == 'rhel' && node['platform_version'].to_f < 6
  creates    "/usr/local/lib/libGeoIP.so.#{node['nginx']['geoip']['lib_version']}"
  subscribes :run, "remote_file[#{geolib_filepath}]"
end

directory node['nginx']['geoip']['path'] do
  mode      '0755'
  recursive true
end

remote_file country_src_filepath do
  not_if do
    File.exist?(country_src_filepath) &&
      File.mtime(country_src_filepath) > Time.now - 86_400
  end
  source   node['nginx']['geoip']['country_dat_url']
  checksum node['nginx']['geoip']['country_dat_checksum']
end

bash 'gunzip_geo_lite_country_dat' do
  code <<-EOH
    gunzip -c "#{country_src_filepath}" > #{country_dat}
  EOH
  creates country_dat
end

if node['nginx']['geoip']['enable_city']
  city_dat = "#{node['nginx']['geoip']['path']}/GeoLiteCity.dat"

  remote_file city_src_filepath do
    not_if do
      File.exist?(city_src_filepath) &&
        File.mtime(city_src_filepath) > Time.now - 86_400
    end
    source   node['nginx']['geoip']['city_dat_url']
    checksum node['nginx']['geoip']['city_dat_checksum']
  end

  bash 'gunzip_geo_lite_city_dat' do
    code <<-EOH
      gunzip -c "#{city_src_filepath}" > #{city_dat}
    EOH
    creates city_dat
  end
end

template "#{node['nginx']['dir']}/conf.d/http_geoip.conf" do
  source 'modules/http_geoip.conf.erb'
  variables(
    country_dat: country_dat,
    city_dat: city_dat
  )
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_geoip_module', "--with-ld-opt='-Wl,-R,/usr/local/lib -L /usr/local/lib'"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_auth_request_module.rb to tempfile /tmp/chef-rest20170405-7856-c0lq7t
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/authorized_ips.rb to tempfile /tmp/chef-rest20170405-7856-1e6d26f
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_geoip_module.rb to tempfile /tmp/chef-rest20170405-7856-4vb0nm
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_mp4_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047d74a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_mp4_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047d74f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_mp4_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_geoip_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/commons_conf.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_auth_request_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/authorized_ips.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_mp4_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_mp4_module.rb to tempfile /tmp/chef-rest20170405-7856-1h7xf84
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_mp4_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_perl_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047b5cd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_perl_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047b5d28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_perl_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/commons_script.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_realip_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000479b838
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_realip_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000479b888>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_realip_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_echo_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_stub_status_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000475edc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_stub_status_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000475ee10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_stub_status_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_perl_module
#
# Author:: Akzhan Abdulin (<akzhan.abdulin@gmail.com>)
#
# Copyright:: 2012-2017, REG.RU
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_perl_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_ssl_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_perl_module.rb to tempfile /tmp/chef-rest20170405-7856-156y3fd
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000478ab78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_ssl_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000478abc8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_ssl_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_ssl_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_ssl_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_spdy_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_ssl_module.rb to tempfile /tmp/chef-rest20170405-7856-l8wnvs
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_perl_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_ssl_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_gzip_static_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046ad2a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_gzip_static_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046ad2f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_gzip_static_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_gzip_static_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

template "#{node['nginx']['dir']}/conf.d/http_gzip_static.conf" do
  source 'modules/http_gzip_static.conf.erb'
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_gzip_static_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_gzip_static_module.rb to tempfile /tmp/chef-rest20170405-7856-9wxwoj
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_realip_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Documentation: http://wiki.nginx.org/HttpRealIpModule

# Currently only accepts X-Forwarded-For or X-Real-IP
node.default['nginx']['realip']['header']            = 'X-Forwarded-For'
node.default['nginx']['realip']['addresses']         = ['127.0.0.1']
node.default['nginx']['realip']['real_ip_recursive'] = 'off'

template "#{node['nginx']['dir']}/conf.d/http_realip.conf" do
  source 'modules/http_realip.conf.erb'
  notifies :reload, 'service[nginx]', :delayed
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_realip_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_realip_module.rb to tempfile /tmp/chef-rest20170405-7856-rkzybv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_gzip_static_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_realip_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_stub_status_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'chef_nginx::authorized_ips'

template 'nginx_status' do
  path "#{node['nginx']['dir']}/sites-available/nginx_status"
  source 'modules/nginx_status.erb'
  notifies :reload, 'service[nginx]', :delayed
end

nginx_site 'nginx_status'

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_stub_status_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047c6858
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_echo_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047c68a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_echo_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_stub_status_module.rb to tempfile /tmp/chef-rest20170405-7856-15k6p9n
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_stub_status_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/http_v2_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047a8b00
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_spdy_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047a8b50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_spdy_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_spdy_module
#
# Author:: Christoph Buente (<christoph@meinekleinefarm.org>)
#
# Copyright:: 2013-2017, MeinekleineFarm.org
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_spdy_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/naxsi_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_spdy_module.rb to tempfile /tmp/chef-rest20170405-7856-135vh8w
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_spdy_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004637758
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/naxsi_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046377a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "naxsi_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: naxsi_module
#
# Author:: Artiom Lunev (<artiom.lunev@gmail.com>)
#
# Copyright:: 2012-2017, Artiom Lunev
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

cookbook_file "#{node['nginx']['dir']}/naxsi_core.rules" do
  source 'naxsi_core.rules'
  notifies :reload, 'service[nginx]', :delayed
end

naxsi_src_filename = ::File.basename(node['nginx']['naxsi']['url'])
naxsi_src_filepath = "#{Chef::Config['file_cache_path']}/#{naxsi_src_filename}"
naxsi_extract_path = "#{Chef::Config['file_cache_path']}/nginx-naxsi-#{node['nginx']['naxsi']['version']}"

remote_file naxsi_src_filepath do
  source   node['nginx']['naxsi']['url']
  checksum node['nginx']['naxsi']['checksum']
end

bash 'extract_naxsi_module' do
  cwd  ::File.dirname(naxsi_src_filepath)
  code <<-EOH
    mkdir -p #{naxsi_extract_path}
    tar xzf #{naxsi_src_filename} -C #{naxsi_extract_path}
  EOH
  not_if { ::File.exist?(naxsi_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{naxsi_extract_path}/naxsi-#{node['nginx']['naxsi']['version']}/naxsi_src"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/naxsi_module.rb to tempfile /tmp/chef-rest20170405-7856-t1m318
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/naxsi_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/package.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/ngx_lua_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046ce068
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/http_v2_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046ce0b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "http_v2_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_v2_module
#
#
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-http_v2_module']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_v2_module.rb to tempfile /tmp/chef-rest20170405-7856-41btfs
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_v2_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/lua.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000463ec38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/lua.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000463ec88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "lua.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: lua
#
# Copyright:: 2013-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

luajit_src_filename = ::File.basename(node['nginx']['luajit']['url'])
luajit_src_filepath = "#{Chef::Config['file_cache_path']}/#{luajit_src_filename}"
luajit_extract_path = "#{Chef::Config['file_cache_path']}/luajit-#{node['nginx']['luajit']['version']}"

remote_file luajit_src_filepath do
  source   node['nginx']['luajit']['url']
  checksum node['nginx']['luajit']['checksum']
end

bash 'extract_luajit' do
  cwd  ::File.dirname(luajit_src_filepath)
  code <<-EOH
    mkdir -p #{luajit_extract_path}
    tar xzf #{luajit_src_filename} -C #{luajit_extract_path}
    cd luajit-#{node['nginx']['luajit']['version']}/LuaJIT-#{node['nginx']['luajit']['version']}
    make && make install
  EOH
  not_if { ::File.exist?(luajit_extract_path) }
end

node.run_state['nginx_source_env'].merge!(
  'LUAJIT_INC' => '/usr/local/include/luajit-2.0',
  'LUAJIT_LIB' => '/usr/local/lib'
)

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-ld-opt=-Wl,-rpath,/usr/local/lib']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/lua.rb to tempfile /tmp/chef-rest20170405-7856-17onp1p
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/lua.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000451da48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/package.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000451da98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "package.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/commons_dir.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004687668
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/commons_dir.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046876b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "commons_dir.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: common/dir
#
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

directory node['nginx']['dir'] do
  mode      '0755'
  recursive true
end

directory node['nginx']['log_dir'] do
  mode      node['nginx']['log_dir_perm']
  owner     node['nginx']['user']
  action    :create
  recursive true
end

directory 'pid file directory' do
  path       lazy { File.dirname(pidfile_location) }
  mode      '0755'
  recursive true
end

%w(sites-available sites-enabled conf.d).each do |leaf|
  directory File.join(node['nginx']['dir'], leaf) do
    mode  '0755'
  end
end

if !node['nginx']['default_site_enabled'] && platform_family?('rhel', 'fedora')
  %w(default.conf example_ssl.conf).each do |config|
    file "/etc/nginx/conf.d/#{config}" do
      action :delete
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/commons_dir.rb to tempfile /tmp/chef-rest20170405-7856-1x5szx9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045ddd48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/ngx_lua_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045ddde8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "ngx_lua_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/pagespeed_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: http_echo_module
#
# Author:: Danial Pearce (<danial@cushycms.com>)
#
# Copyright:: 2012-2017, CushyCMS
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

echo_src_filename = "echo-nginx-module-v#{node['nginx']['echo']['version']}.tar.gz"
echo_src_filepath = "#{Chef::Config['file_cache_path']}/#{echo_src_filename}"
echo_extract_path = "#{Chef::Config['file_cache_path']}/nginx_echo_module/#{node['nginx']['echo']['checksum']}"

remote_file echo_src_filepath do
  source   node['nginx']['echo']['url']
  checksum node['nginx']['echo']['checksum']
end

bash 'extract_http_echo_module' do
  cwd ::File.dirname(echo_src_filepath)
  code <<-EOH
    mkdir -p #{echo_extract_path}
    tar xzf #{echo_src_filename} -C #{echo_extract_path}
    mv #{echo_extract_path}/*/* #{echo_extract_path}/
  EOH

  not_if { ::File.exist?(echo_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{echo_extract_path}"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/http_echo_module.rb to tempfile /tmp/chef-rest20170405-7856-vpmjd7
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/passenger.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/http_echo_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/commons_dir.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/ohai_plugin.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000454f020
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/ohai_plugin.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000454f070>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "ohai_plugin.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/ipv6.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004688360
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/ipv6.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046883b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "ipv6.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: ipv6
#
# Author:: Alan Harper (alan@sct.com.au)
#
# Copyright:: 2013-2017, Alan Harper
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-ipv6']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipes:: nginx_lua_module
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright:: 2013-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

lua_src_filename = ::File.basename(node['nginx']['lua']['url'])
lua_src_filepath = "#{Chef::Config['file_cache_path']}/#{lua_src_filename}"
lua_extract_path = "#{Chef::Config['file_cache_path']}/nginx-lua-#{node['nginx']['lua']['version']}"

remote_file lua_src_filepath do
  source   node['nginx']['lua']['url']
  checksum node['nginx']['lua']['checksum']
end

bash 'extract_lua_module' do
  cwd  ::File.dirname(lua_src_filepath)
  code <<-EOH
    mkdir -p #{lua_extract_path}
    tar xzf #{lua_src_filename} -C #{lua_extract_path}
  EOH
  not_if { ::File.exist?(lua_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{lua_extract_path}/lua-nginx-module-#{node['nginx']['lua']['version']}"]

include_recipe 'chef_nginx::lua'
include_recipe 'chef_nginx::ngx_devel_module'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000034d23a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/pagespeed_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000034d24e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "pagespeed_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ipv6.rb to tempfile /tmp/chef-rest20170405-7856-x2qac4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/ipv6.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_lua_module.rb to tempfile /tmp/chef-rest20170405-7856-11f98gn
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/ngx_lua_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000034462b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/passenger.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003446300>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "passenger.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000033368c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003336a00>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "repo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: ohai_plugin
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
# Copyright:: 2016-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# for notification post install / change
ohai 'reload_nginx' do
  plugin 'nginx'
  action :nothing
end

ohai_plugin 'nginx' do
  source_file 'plugins/ohai-nginx.rb.erb'
  variables binary: node['nginx']['binary']
  resource :template
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ohai_plugin.rb to tempfile /tmp/chef-rest20170405-7856-vt74qc
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/ohai_plugin.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/source.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/ngx_devel_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045eb448
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/ngx_devel_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045eb498>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "ngx_devel_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipes:: devel
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright:: 2013-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

devel_src_filename = ::File.basename(node['nginx']['devel']['url'])
devel_src_filepath = "#{Chef::Config['file_cache_path']}/#{devel_src_filename}"
devel_extract_path = "#{Chef::Config['file_cache_path']}/nginx-devel-#{node['nginx']['devel']['version']}"

remote_file devel_src_filepath do
  source   node['nginx']['devel']['url']
  checksum node['nginx']['devel']['checksum']
end

bash 'extract_devel_module' do
  cwd  ::File.dirname(devel_src_filepath)
  code <<-EOH
    mkdir -p #{devel_extract_path}
    tar xzf #{devel_src_filename} -C #{devel_extract_path}
  EOH
  not_if { ::File.exist?(devel_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{devel_extract_path}/ngx_devel_kit-#{node['nginx']['devel']['version']}"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/ngx_devel_module.rb to tempfile /tmp/chef-rest20170405-7856-12fovgv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/ngx_devel_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/syslog_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/socketproxy.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031e59f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/socketproxy.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031e5a70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "socketproxy.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/repo_passenger.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003312240
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/repo_passenger.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000033122b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "repo_passenger.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000310e840
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000310e8b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "source.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/openssl_source.rb
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: pagespeed_module
#

src_filename = ::File.basename(node['nginx']['pagespeed']['url'])
src_filepath = "#{Chef::Config['file_cache_path']}/#{src_filename}"
extract_path = "#{Chef::Config['file_cache_path']}/nginx_pagespeed-#{node['nginx']['pagespeed']['version']}"

remote_file src_filepath do
  source   node['nginx']['pagespeed']['url']
  not_if { ::File.exist?(src_filepath) }
end

psol_src_filename = "psol-#{::File.basename(node['nginx']['psol']['url'])}"
psol_src_filepath = "#{Chef::Config['file_cache_path']}/#{psol_src_filename}"
psol_extract_path = "#{Chef::Config['file_cache_path']}/nginx_pagespeed-#{node['nginx']['pagespeed']['version']}/psol"

remote_file psol_src_filepath do
  source   node['nginx']['psol']['url']
  not_if { ::File.exist?(psol_src_filepath) }
end

package_array = value_for_platform_family(
  %w(rhel)   => node['nginx']['pagespeed']['packages']['rhel'],
  %w(debian) => node['nginx']['pagespeed']['packages']['debian']
)

package package_array unless package_array.empty?

bash 'extract_pagespeed' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    mkdir -p #{extract_path}
    tar xzf #{src_filename} -C #{extract_path}
    mv #{extract_path}/*/* #{extract_path}/
  EOH
  not_if { ::File.exist?(extract_path) }
end

bash 'extract_psol' do
  cwd  ::File.dirname(psol_src_filepath)
  code <<-EOH
    mkdir -p #{psol_extract_path}
    tar xzf #{psol_src_filename} -C #{psol_extract_path}
    mv #{psol_extract_path}/*/* #{psol_extract_path}/
  EOH
  not_if { ::File.exist?(psol_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{extract_path}"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/pagespeed_module.rb to tempfile /tmp/chef-rest20170405-7856-1r1uzyi
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/pagespeed_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/upload_progress_module.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002e5dce0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/upload_progress_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002e5dd58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "upload_progress_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: upload_progress_module
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

upm_src_filename = ::File.basename(node['nginx']['upload_progress']['url'])
upm_src_filepath = "#{Chef::Config['file_cache_path']}/#{upm_src_filename}"
upm_extract_path = "#{Chef::Config['file_cache_path']}/nginx_upload_progress/#{node['nginx']['upload_progress']['checksum']}"

remote_file upm_src_filepath do
  source   node['nginx']['upload_progress']['url']
  checksum node['nginx']['upload_progress']['checksum']
end

template "#{node['nginx']['dir']}/conf.d/upload_progress.conf" do
  source 'modules/upload_progress.erb'
  notifies :reload, 'service[nginx]', :delayed
end

bash 'extract_upload_progress_module' do
  cwd  ::File.dirname(upm_src_filepath)
  code <<-EOH
    mkdir -p #{upm_extract_path}
    tar xzf #{upm_src_filename} -C #{upm_extract_path}
    mv #{upm_extract_path}/*/* #{upm_extract_path}/
  EOH
  not_if { ::File.exist?(upm_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{upm_extract_path}"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: Passenger
#
# Copyright:: 2013-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

packages = value_for_platform_family(
  %w(rhel) => node['nginx']['passenger']['packages']['rhel'],
  %w(fedora) => node['nginx']['passenger']['packages']['fedora'],
  %w(debian) => node['nginx']['passenger']['packages']['debian']
)

unless packages.empty?
  packages.each do |name|
    package name
  end
end

gem_package 'rake' if node['nginx']['passenger']['install_rake']

if node['nginx']['passenger']['install_method'] == 'package'
  package node['nginx']['package_name']
  package 'passenger'
elsif node['nginx']['passenger']['install_method'] == 'source'

  gem_package 'passenger' do
    action     :install
    version    node['nginx']['passenger']['version']
    gem_binary node['nginx']['passenger']['gem_binary'] if node['nginx']['passenger']['gem_binary']
  end

  passenger_module = node['nginx']['passenger']['root']

  passenger_module += if Chef::VersionConstraint.new('>= 5.0.19').include?(node['nginx']['passenger']['version'])
                        '/src/nginx_module'
                      else
                        '/ext/nginx'
                      end

  node.run_state['nginx_configure_flags'] =
    node.run_state['nginx_configure_flags'] | ["--add-module=#{passenger_module}"]

end

template "#{node['nginx']['dir']}/conf.d/passenger.conf" do
  source 'modules/passenger.conf.erb'
  notifies :reload, 'service[nginx]', :delayed
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/upload_progress_module.rb to tempfile /tmp/chef-rest20170405-7856-1yia71u
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/upload_progress_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/passenger.rb to tempfile /tmp/chef-rest20170405-7856-1qxuk2a
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Cookbook:: nginx
# Recipe:: repo_passenger
# Author:: Jose Alberto Suarez Lopez <ja@josealberto.org>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if platform_family?('debian')
  package 'ca-certificates'

  apt_repository 'phusionpassenger' do
    uri 'https://oss-binaries.phusionpassenger.com/apt/passenger'
    distribution node['lsb']['codename']
    components %w(main)
    deb_src true
    keyserver 'keyserver.ubuntu.com'
    key '561F9B9CAC40B2F7'
  end

  include_recipe 'chef_nginx::passenger'
else
  log "There is not official phusion passenger repo platform #{node['platform']}. Skipping repo setup!" do
    level :warn
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: repo
# Author:: Nick Rycar <nrycar@bluebox.net>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_family']
when 'rhel'

  yum_repository 'nginx' do
    description  'Nginx.org Repository'
    baseurl      node['nginx']['upstream_repository']
    gpgkey       'http://nginx.org/keys/nginx_signing.key'
    action       :create
  end

when 'suse'

  zypper_repo 'nginx' do
    repo_name 'Nginx.org Repository'
    uri 'http://nginx.org/packages/sles/12'
    key 'http://nginx.org/keys/nginx_signing.key'
  end

when 'debian'

  apt_repository 'nginx' do
    uri          node['nginx']['upstream_repository']
    distribution node['lsb']['codename']
    components   %w(nginx)
    deb_src      true
    key          'http://nginx.org/keys/nginx_signing.key'
  end

else
  log "nginx.org does not maintain packages for platform #{node['platform']}. Cannot setup the upstream repo!" do
    level :warn
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
include_recipe 'chef_nginx::commons_dir'

directory node['nginx']['socketproxy']['root'] do
  owner node['nginx']['socketproxy']['app_owner']
  group node['nginx']['socketproxy']['app_owner']
  mode '0755'
  action :create
end

context_names = node['nginx']['socketproxy']['apps'].map do |_app, app_conf|
  app_conf['context_name']
end

raise 'More than one app has the same context_name configured.' if context_names.uniq.length != context_names.length

template node['nginx']['dir'] + '/sites-available/socketproxy.conf' do
  source 'modules/socketproxy.conf.erb'
  notifies :reload, 'service[nginx]', :delayed
end

link node['nginx']['dir'] + '/sites-enabled/socketproxy.conf' do
  to node['nginx']['dir'] + '/sites-available/socketproxy.conf'
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo.rb to tempfile /tmp/chef-rest20170405-7856-1jzmkfy
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/repo_passenger.rb to tempfile /tmp/chef-rest20170405-7856-1givmk4
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/socketproxy.rb to tempfile /tmp/chef-rest20170405-7856-1e1ric9
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000454fa48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/openssl_source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000454fa98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "openssl_source.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: source
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Joshua Timberman (<joshua@chef.io>)
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2009-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

raise "#{node['platform']} is not a supported platform in the nginx::source recipe" unless platform_family?('rhel', 'fedora', 'debian', 'suse')

node.normal['nginx']['binary'] = node['nginx']['source']['sbin_path']
node.normal['nginx']['daemon_disable'] = true

user node['nginx']['user'] do
  system true
  shell  '/bin/false'
  home   '/var/www'
  not_if { node['nginx']['source']['use_existing_user'] }
end

include_recipe 'chef_nginx::ohai_plugin'
include_recipe 'chef_nginx::commons_dir'
include_recipe 'chef_nginx::commons_script'
include_recipe 'build-essential::default'

src_filepath = "#{Chef::Config['file_cache_path']}/nginx-#{node['nginx']['source']['version']}.tar.gz"

# install prereqs
package value_for_platform_family(
  %w(rhel fedora) => %w(pcre-devel openssl-devel tar),
  %w(suse) => %w(pcre-devel libopenssl-devel tar),
  %w(debian) => %w(libpcre3 libpcre3-dev libssl-dev tar)
)

remote_file 'nginx source' do
  source   node['nginx']['source']['url']
  checksum node['nginx']['source']['checksum']
  path     src_filepath
  backup   false
  retries  4
end

node.run_state['nginx_force_recompile'] = false
node.run_state['nginx_configure_flags'] =
  node['nginx']['source']['default_configure_flags'] | node['nginx']['configure_flags']
node.run_state['nginx_source_env'] = {}

include_recipe 'chef_nginx::commons_conf'

cookbook_file "#{node['nginx']['dir']}/mime.types" do
  source 'mime.types'
  notifies :reload, 'service[nginx]', :delayed
end

# Unpack downloaded source so we could apply nginx patches
# in custom modules - example http://yaoweibin.github.io/nginx_tcp_proxy_module/
# patch -p1 < /path/to/nginx_tcp_proxy_module/tcp.patch
bash 'unarchive_source' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    tar zxf #{::File.basename(src_filepath)} -C #{::File.dirname(src_filepath)} --no-same-owner
  EOH
  not_if { ::File.directory?("#{Chef::Config['file_cache_path'] || '/tmp'}/nginx-#{node['nginx']['source']['version']}") }
end

node['nginx']['source']['modules'].each do |ngx_module|
  include_recipe ngx_module
end

configure_flags       = node.run_state['nginx_configure_flags']
nginx_force_recompile = node.run_state['nginx_force_recompile']

bash 'compile_nginx_source' do
  cwd  ::File.dirname(src_filepath)
  environment node.run_state['nginx_source_env']
  code <<-EOH
    cd nginx-#{node['nginx']['source']['version']} &&
    ./configure #{node.run_state['nginx_configure_flags'].join(' ')} &&
    make && make install
  EOH

  not_if do
    nginx_force_recompile == false &&
      node.automatic_attrs['nginx'] &&
      node.automatic_attrs['nginx']['version'] == node['nginx']['source']['version'] &&
      node.automatic_attrs['nginx']['configure_arguments'].sort == configure_flags.sort
  end

  notifies :restart, 'service[nginx]'
  notifies :reload,  'ohai[reload_nginx]', :immediately
end

case node['nginx']['init_style']
when 'upstart'
  # we rely on this to set up nginx.conf with daemon disable instead of doing
  # it in the upstart init script.
  node.normal['nginx']['daemon_disable'] = node['nginx']['upstart']['foreground']

  template '/etc/init/nginx.conf' do
    source 'nginx-upstart.conf.erb'
    variables(lazy { { pid_file: pidfile_location } })
  end

  service 'nginx' do
    provider Chef::Provider::Service::Upstart
    supports status: true, restart: true, reload: true
    action   [:start, :enable]
  end
when 'systemd'

  systemd_prefix = platform_family?('suse') ? '/usr/lib' : '/lib'

  template "#{systemd_prefix}/systemd/system/nginx.service" do
    source 'nginx.service.erb'
  end

  service 'nginx' do
    provider Chef::Provider::Service::Systemd
    supports status: true, restart: true, reload: true
    action   [:start, :enable]
  end
else
  node.normal['nginx']['daemon_disable'] = false

  generate_init = true

  case node['platform']
  when 'debian', 'ubuntu'
    generate_template = true
    defaults_path     = '/etc/default/nginx'
  when 'freebsd'
    generate_init     = false
  else
    generate_template = true
    defaults_path     = '/etc/sysconfig/nginx'
  end

  template '/etc/init.d/nginx' do
    source 'nginx.init.erb'
    mode   '0755'
    variables(lazy { { pid_file: pidfile_location } })
  end if generate_init

  if generate_template # ~FC023
    template defaults_path do
      source 'nginx.sysconfig.erb'
    end
  end

  service 'nginx' do
    supports status: true, restart: true, reload: true
    action   [:start, :enable]
  end
end

node.run_state.delete('nginx_configure_flags')
node.run_state.delete('nginx_force_recompile')
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/source.rb to tempfile /tmp/chef-rest20170405-7856-1gkr6bz
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/repo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/recipes/set_misc.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031f79f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/recipes/set_misc.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031f7a90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "set_misc.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/repo_passenger.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: package
# Author:: AJ Christensen <aj@junglist.gen.nz>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'chef_nginx::ohai_plugin'

case node['nginx']['repo_source']
when 'epel'
  if platform_family?('rhel')
    include_recipe 'yum-epel'
  else
    Chef::Log.warn("node['nginx']['repo_source'] set to EPEL, but not running on a RHEL platform so skipping EPEL setup")
  end
when 'nginx'
  include_recipe 'chef_nginx::repo'
  package_install_opts = '--disablerepo=* --enablerepo=nginx' if platform_family?('rhel')
when 'passenger'
  if platform_family?('debian')
    include_recipe 'chef_nginx::repo_passenger'
  else
    Chef::Log.warn("node['nginx']['repo_source'] set to passenger, but not running on a Debian based platform so skipping repo setup")
  end
else
  Chef::Log.warn('Unrecognized distro value set, or no value set. Using distro provided packages instead.')
end

package node['nginx']['package_name'] do
  options package_install_opts
  notifies :reload, 'ohai[reload_nginx]', :immediately
end

service 'nginx' do
  supports status: true, restart: true, reload: true
  action   [:start, :enable]
end

include_recipe 'chef_nginx::commons'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/package.rb to tempfile /tmp/chef-rest20170405-7856-1efnqn3
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/package.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000028007a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002800e88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/source.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/socketproxy.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/passenger.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000289b9b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000289bb40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Library:: matchers
#
# Author:: Tim Smith (<tsmith@chef.io>)
#
# Copyright:: 2016-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if defined?(ChefSpec)
  #############
  # nginx_site
  #############
  ChefSpec.define_matcher :nginx_site

  def enable_nginx_site(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:nginx_site, :enable, resource_name)
  end

  def disable_nginx_site(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:nginx_site, :disable, resource_name)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: openssl_source
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright:: 2013-2017, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

src_filename = ::File.basename(node['nginx']['openssl_source']['url'])
src_filepath = "#{Chef::Config['file_cache_path']}/#{src_filename}"
extract_path = "#{Chef::Config['file_cache_path']}/openssl-#{node['nginx']['openssl_source']['version']}"

remote_file src_filepath do
  source node['nginx']['openssl_source']['url']
  not_if { ::File.exist?(src_filepath) }
end

bash 'extract_openssl' do
  cwd  ::File.dirname(src_filepath)
  code <<-EOH
    mkdir -p #{extract_path}
    tar xzf #{src_filename} -C #{extract_path}
    mv #{extract_path}/*/* #{extract_path}/
  EOH
  not_if { ::File.exist?(extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--with-openssl=#{extract_path}"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/openssl_source.rb to tempfile /tmp/chef-rest20170405-7856-1l3zq02
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/openssl_source.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/headers_more.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000256a8b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/headers_more.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000256a930>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "headers_more.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: headers_more
#
# Author:: Lucas Jandrew (<ljandrew@riotgames.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['headers_more']['version']         = '0.30'
default['nginx']['headers_more']['source_url']      = "https://github.com/openresty/headers-more-nginx-module/archive/v#{node['nginx']['headers_more']['version']}.tar.gz"
default['nginx']['headers_more']['source_checksum'] = '2aad309a9313c21c7c06ee4e71a39c99d4d829e31c8b3e7d76f8c964ea8047f5'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/headers_more.rb to tempfile /tmp/chef-rest20170405-7856-1ev12pl
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/headers_more.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/attributes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/lua.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002272138
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/lua.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002272188>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "lua.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-3rbwk8
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/auth_request.rb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002848418
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/auth_request.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000028492a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "auth_request.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: auth_request
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright:: 2013-2017, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['auth_request']['url']      = 'http://mdounin.ru/hg/ngx_http_auth_request_module/archive/662785733552.tar.gz'
default['nginx']['auth_request']['checksum'] = '2057bdefd2137a5000d9dbdbfca049d1ba7832ad2b9f8855a88ea5dfa70bd8c1'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipes:: set_misc
#

set_misc_src_filename = ::File.basename(node['nginx']['set_misc']['url'])
set_misc_src_filepath = "#{Chef::Config['file_cache_path']}/#{set_misc_src_filename}"
set_misc_extract_path = "#{Chef::Config['file_cache_path']}/nginx-set_misc-#{node['nginx']['set_misc']['version']}"

remote_file set_misc_src_filepath do
  source   node['nginx']['set_misc']['url']
  checksum node['nginx']['set_misc']['checksum']
end

bash 'extract_set_misc_module' do
  cwd  ::File.dirname(set_misc_src_filepath)
  code <<-EOH
    mkdir -p #{set_misc_extract_path}
    tar xzf #{set_misc_src_filename} -C #{set_misc_extract_path}
  EOH
  not_if { ::File.exist?(set_misc_extract_path) }
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{set_misc_extract_path}/set-misc-nginx-module-#{node['nginx']['set_misc']['version']}"]

include_recipe 'chef_nginx::ngx_devel_module'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/auth_request.rb to tempfile /tmp/chef-rest20170405-7856-x5fwdu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/set_misc.rb to tempfile /tmp/chef-rest20170405-7856-icoy49
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/set_misc.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/openssl_source.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001da2a40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/openssl_source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001da2ae0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "openssl_source.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: openssl_source
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright:: 2013-2017, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['openssl_source']['version']  = '1.0.2k'
default['nginx']['openssl_source']['url']      = "http://www.openssl.org/source/openssl-#{node['nginx']['openssl_source']['version']}.tar.gz"
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/openssl_source.rb to tempfile /tmp/chef-rest20170405-7856-1ayqv55
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000302df70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/recipes/syslog_module.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000302e010>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "recipes",
   "syslog_module.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: nginx
# Recipe:: syslog_module
#
# Author:: Bob Ziuchkovski (<bob@bz-technology.com>)
#
# Copyright:: 2014-2017, UserTesting
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

nginx_src = "#{Chef::Config['file_cache_path']}/nginx-#{node['nginx']['source']['version']}"
nginx_syslog_src = "#{Chef::Config['file_cache_path']}/nginx_syslog_module"

major, minor, patch = node['nginx']['source']['version'].split('.').map { |s| Integer(s) }
raise 'Unsupported nginx version' if major != 1
case minor
when 2
  syslog_patch = case patch
                 when 0..6
                   'syslog_1.2.0.patch'
                 else
                   'syslog_1.2.7.patch'
                 end
when 3
  syslog_patch = case patch
                 when 0..9
                   'syslog_1.2.0.patch'
                 when 10..13
                   'syslog_1.3.11.patch'
                 else
                   'syslog_1.3.14.patch'
                 end
when 4
  syslog_patch = 'syslog_1.4.0.patch'
when 5..6
  syslog_patch = 'syslog_1.5.6.patch'
when 7
  syslog_patch = 'syslog_1.7.0.patch'
else
  raise 'Unsupported nginx version'
end

git nginx_syslog_src do
  repository node['nginx']['syslog']['git_repo']
  revision node['nginx']['syslog']['git_revision']
  action :sync
end

execute 'apply_nginx_syslog_patch' do
  cwd  nginx_src
  command "patch -p1 < #{nginx_syslog_src}/#{syslog_patch}"
  not_if "patch -p1 --dry-run --reverse --silent < #{nginx_syslog_src}/#{syslog_patch}", cwd: nginx_src
end

node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ["--add-module=#{nginx_syslog_src}"]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/recipes/syslog_module.rb to tempfile /tmp/chef-rest20170405-7856-ltxl6o
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/recipes/syslog_module.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/naxsi.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/openssl_source.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: default
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Joshua Timberman (<joshua@chef.io>)
#
# Copyright:: 2009-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# In order to update the version, the checksum attribute must be changed too.
# This attribute is defined in the source.rb attribute file
default['nginx']['version']      = '1.10.3'
default['nginx']['package_name'] = 'nginx'
default['nginx']['port']         = '80'
default['nginx']['dir']          = '/etc/nginx'
default['nginx']['script_dir']   = '/usr/sbin'
default['nginx']['log_dir']      = '/var/log/nginx'
default['nginx']['log_dir_perm'] = '0750'
default['nginx']['binary']       = '/usr/sbin/nginx'
default['nginx']['default_root'] = '/var/www/nginx-default'
default['nginx']['ulimit']       = '1024'

# use the upstream nginx repo vs. distro packages
# this enables the use of modern nginx releases
# set this to nil to use the distro packages
# this is ignored if install_method is set to source
default['nginx']['repo_source']    = 'nginx'
default['nginx']['install_method'] = 'package'

case node['platform_family']
when 'debian'
  default['nginx']['user'] = 'www-data'
when 'rhel'
  default['nginx']['user']        = 'nginx'
when 'fedora'
  default['nginx']['user']        = 'nginx'
when 'freebsd'
  default['nginx']['package_name'] = 'www/nginx'
  default['nginx']['user']         = 'www'
  default['nginx']['dir']          = '/usr/local/etc/nginx'
  default['nginx']['script_dir']   = '/usr/local/sbin'
  default['nginx']['binary']       = '/usr/local/sbin/nginx'
  default['nginx']['default_root'] = '/usr/local/www/nginx-dist'
when 'suse'
  default['nginx']['user']       = 'wwwrun'
  default['nginx']['group']      = 'www'
else
  default['nginx']['user']       = 'www-data'
end

default['nginx']['upstart']['runlevels']     = '2345'
default['nginx']['upstart']['respawn_limit'] = nil
default['nginx']['upstart']['foreground']    = true

default['nginx']['group'] = node['nginx']['group'] || node['nginx']['user']

default['nginx']['gzip']              = 'on'
default['nginx']['gzip_static']       = 'off'
default['nginx']['gzip_http_version'] = '1.0'
default['nginx']['gzip_comp_level']   = '2'
default['nginx']['gzip_proxied']      = 'any'
default['nginx']['gzip_vary']         = 'off'
default['nginx']['gzip_buffers']      = nil
default['nginx']['gzip_types'] = %w(
  text/plain
  text/css
  application/x-javascript
  text/xml
  application/xml
  application/rss+xml
  application/atom+xml
  image/svg+xml
  text/javascript
  application/javascript
  application/json
  text/mathml
)
default['nginx']['gzip_min_length']   = 1_000
default['nginx']['gzip_disable']      = 'MSIE [1-6]\.'

default['nginx']['keepalive']            = 'on'
default['nginx']['keepalive_requests']   = 100
default['nginx']['keepalive_timeout']    = 65
default['nginx']['worker_processes']     = node['cpu'] && node['cpu']['total'] ? node['cpu']['total'] : 1
default['nginx']['worker_connections']   = 1_024
default['nginx']['worker_rlimit_nofile'] = nil
default['nginx']['multi_accept']         = false
default['nginx']['event']                = nil
default['nginx']['accept_mutex_delay']   = nil
default['nginx']['server_tokens']        = nil
default['nginx']['server_names_hash_bucket_size'] = 64
default['nginx']['variables_hash_max_size']       = 1024
default['nginx']['variables_hash_bucket_size']    = 64
default['nginx']['sendfile'] = 'on'
default['nginx']['underscores_in_headers'] = nil
default['nginx']['tcp_nodelay'] = 'on'
default['nginx']['tcp_nopush'] = 'on'

default['nginx']['access_log_options']     = nil
default['nginx']['error_log_options']      = nil
default['nginx']['disable_access_log']     = false
default['nginx']['log_formats']            = {}
default['nginx']['default_site_enabled']   = true
default['nginx']['types_hash_max_size']    = 2_048
default['nginx']['types_hash_bucket_size'] = 64

default['nginx']['proxy_read_timeout']          = nil
default['nginx']['client_body_buffer_size']     = nil
default['nginx']['client_max_body_size']        = nil
default['nginx']['large_client_header_buffers'] = nil
default['nginx']['default']['modules']          = []

default['nginx']['extra_configs'] = {}

default['nginx']['load_modules'] = []
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-ntk0cy
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/libraries/helpers.rb
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/auth_request.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/devel.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002780b70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/devel.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002780f80>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "devel.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: devel
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright:: 2013-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['devel']['version']  = '0.3.0'
default['nginx']['devel']['url']      = "https://github.com/simpl/ngx_devel_kit/archive/v#{node['nginx']['devel']['version']}.tar.gz"
default['nginx']['devel']['checksum'] = '88e05a99a8a7419066f5ae75966fb1efc409bad4522d14986da074554ae61619'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/devel.rb to tempfile /tmp/chef-rest20170405-7856-1244fud
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/devel.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/set_misc.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/echo.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002732768
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/echo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002732808>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "echo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: echo
#
# Author:: Danial Pearce (<github@tigris.id.au>)
#
# Copyright:: 2013-2017, Danial Pearce
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['echo']['version']        = '0.59'
default['nginx']['echo']['url']            = "https://github.com/openresty/echo-nginx-module/archive/v#{node['nginx']['echo']['version']}.tar.gz"
default['nginx']['echo']['checksum']       = '9b319ad7836202883128d2b9c24ed818082541df57ef7f2065b7557085c603cd'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/echo.rb to tempfile /tmp/chef-rest20170405-7856-1fdp1pj
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/rate_limiting.rb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005221de8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/rate_limiting.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005221e38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "rate_limiting.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attribute:: rate_limiting
#
# Copyright:: 2013-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['enable_rate_limiting']    = false
default['nginx']['rate_limiting_zone_name'] = 'default'
default['nginx']['rate_limiting_backoff']   = '10m'
default['nginx']['rate_limit']              = '1r/s'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/geoip.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000260af70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/geoip.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000260afc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "geoip.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: geoip
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# NOTE: The GeoIP database checksums are nil by default as these files change
# continuously and are not versioned.
# If you self host these files you should create a checksum and set these attributes

default['nginx']['geoip']['path']                 = '/srv/geoip'
default['nginx']['geoip']['enable_city']          = true
default['nginx']['geoip']['country_dat_url']      = 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz'
default['nginx']['geoip']['country_dat_checksum'] = nil
default['nginx']['geoip']['city_dat_url']         = 'http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz'
default['nginx']['geoip']['city_dat_checksum']    = nil
default['nginx']['geoip']['lib_version']          = '1.6.9'
lib_version = node['nginx']['geoip']['lib_version'] # convenience variable for line length
default['nginx']['geoip']['lib_url']              = "https://github.com/maxmind/geoip-api-c/releases/download/v#{lib_version}/GeoIP-#{lib_version}.tar.gz"
default['nginx']['geoip']['lib_checksum']         = '4b446491843de67c1af9b887da17a3e5939e0aeed4826923a5f4bf09d845096f'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/rate_limiting.rb to tempfile /tmp/chef-rest20170405-7856-dn0erz
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/geoip.rb to tempfile /tmp/chef-rest20170405-7856-19dewql
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/rate_limiting.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002081c20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/naxsi.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000020ac0b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "naxsi.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/echo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/geoip.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: naxsi
#
# Author:: Artiom Lunev (<artiom.lunev@gmail.com>)
#
# Copyright:: 2012-2017, Artiom Lunev
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['naxsi']['version'] = '0.54'
default['nginx']['naxsi']['url'] = "https://github.com/nbs-system/naxsi/archive/#{node['nginx']['naxsi']['version']}.tar.gz"
default['nginx']['naxsi']['checksum'] = '9cc2c09405bc71f78ef26a8b6d70afcea3fccbe8125df70cb0cfc480133daba5'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/naxsi.rb to tempfile /tmp/chef-rest20170405-7856-acdesc
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/naxsi.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/syslog.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000028449d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/libraries/helpers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002844a70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "libraries",
   "helpers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Library:: helpers
#
# Author:: Tim Smith (<tsmith@chef.io>)
#
# Copyright:: 2016-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# simple helper module for the nginx cookbook
module NginxRecipeHelpers
  # pidfile is hard to determine on Debian systems.
  # Upstream packages and older distro releases use '/var/run/nginx.pid'
  # systemd based distros and Ubuntu 14.04 use '/run/nginx.pid' for their
  # packages
  def pidfile_location
    if (node['nginx']['repo_source'].nil? || node['nginx']['repo_source'] == 'distro') &&
       (node['init_package'] == 'systemd' || node['platform_version'].to_f == 14.04)
      '/run/nginx.pid'
    else
      '/var/run/nginx.pid'
    end
  end
end

Chef::Resource.send(:include, NginxRecipeHelpers)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/libraries/helpers.rb to tempfile /tmp/chef-rest20170405-7856-1ysqjx5
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: lua
#
# Author:: Arthur Freyman (<afreyman@riotgames.com>)
#
# Copyright:: 2013-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['lua']['version']  = '0.10.7'
default['nginx']['lua']['url']      = "https://github.com/chaoslawful/lua-nginx-module/archive/v#{node['nginx']['lua']['version']}.tar.gz"
default['nginx']['lua']['checksum'] = 'c21c8937dcdd6fc2b6a955f929e3f4d1388610f47180e60126e6dcab06786f77'

default['nginx']['luajit']['version']  = '2.0.4'
default['nginx']['luajit']['url']	     = "http://luajit.org/download/LuaJIT-#{node['nginx']['luajit']['version']}.tar.gz"
default['nginx']['luajit']['checksum'] = '620fa4eb12375021bef6e4f237cbd2dd5d49e56beb414bee052c746beef1807d'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/lua.rb to tempfile /tmp/chef-rest20170405-7856-c6dea
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/lua.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/libraries/helpers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/pagespeed.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/socketproxy.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/source.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000503a5c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000503a610>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "source.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/passenger.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000525cf10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/passenger.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000525cf60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "passenger.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attribute:: passenger
#
# Author:: Alex Dergachev (<alex@evolvingweb.ca>)
#
# Copyright:: 2013-2017, Chef Software, Inc.
# Copyright:: 2012-2017, Susan Potter
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.default['nginx']['passenger']['version'] = '4.0.57'

if node['nginx']['repo_source'] == 'passenger'
  node.default['nginx']['passenger']['root'] = '/usr/lib/ruby/vendor_ruby/phusion_passenger/locations.ini'
  node.default['nginx']['passenger']['ruby'] = '/usr/bin/ruby'
elsif node['languages'].attribute?('ruby')
  node.default['nginx']['passenger']['root'] = "#{node['languages']['ruby']['gems_dir']}/gems/passenger-#{node['nginx']['passenger']['version']}"
  node.default['nginx']['passenger']['ruby'] = node['languages']['ruby']['ruby_bin']
else
  Chef::Log.warn("node['languages']['ruby'] attribute not detected in #{cookbook_name}::#{recipe_name}")
  Chef::Log.warn("Install a Ruby for automatic detection of node['nginx']['passenger'] attributes (root, ruby)")
  Chef::Log.warn('Using default values that may or may not work for this system.')
  node.default['nginx']['passenger']['root'] = "/usr/lib/ruby/gems/1.8/gems/passenger-#{node['nginx']['passenger']['version']}"
  node.default['nginx']['passenger']['ruby'] = '/usr/bin/ruby'
end

node.default['nginx']['passenger']['packages']['rhel'] = if platform_family?('rhel') && node['platform_version'].to_i >= 6
                                                           %w(ruby-devel libcurl-devel)
                                                         else
                                                           %w(ruby-devel curl-devel)
                                                         end
node.default['nginx']['passenger']['packages']['fedora'] = %w(ruby-devel libcurl-devel)
node.default['nginx']['passenger']['packages']['debian'] = %w(ruby-dev libcurl4-gnutls-dev)

node.default['nginx']['passenger']['install_rake'] = true
node.default['nginx']['passenger']['spawn_method'] = 'smart-lv2'
node.default['nginx']['passenger']['buffer_response'] = 'on'
node.default['nginx']['passenger']['max_pool_size'] = 6
node.default['nginx']['passenger']['min_instances'] = 1
node.default['nginx']['passenger']['max_instances_per_app'] = 0
node.default['nginx']['passenger']['pool_idle_time'] = 300
node.default['nginx']['passenger']['max_requests'] = 0
node.default['nginx']['passenger']['gem_binary'] = nil
node.default['nginx']['passenger']['show_version_in_header'] = 'on'
# By default, the Passenger log file is the global Nginx error log file. Set this attribute to write passenger log to another location.
node.default['nginx']['passenger']['passenger_log_file'] = nil

# NodeJs disable by default
node.default['nginx']['passenger']['nodejs'] = nil
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/passenger.rb to tempfile /tmp/chef-rest20170405-7856-zes251
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/passenger.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/files/default/naxsi_core.rules
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/files/default/mime.types
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/upload_progress.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f2f130
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/upload_progress.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f2f1a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "upload_progress.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000505c3f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/socketproxy.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000505c440>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "socketproxy.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: source
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_attribute 'chef_nginx::default'

default['nginx']['init_style'] = if node['platform'] == 'ubuntu' && node['platform_version'].to_f <= 14.04
                                   # init_package identifies 12.04/14.04 as init, but we should be using upstart here
                                   'upstart'
                                 else
                                   node['init_package']
                                 end

default['nginx']['source']['version']                 = node['nginx']['version']
default['nginx']['source']['prefix']                  = "/opt/nginx-#{node['nginx']['source']['version']}"
default['nginx']['source']['conf_path']               = "#{node['nginx']['dir']}/nginx.conf"
default['nginx']['source']['sbin_path']               = "#{node['nginx']['source']['prefix']}/sbin/nginx"
default['nginx']['source']['default_configure_flags'] = %W(
  --prefix=#{node['nginx']['source']['prefix']}
  --conf-path=#{node['nginx']['dir']}/nginx.conf
  --sbin-path=#{node['nginx']['source']['sbin_path']}
)

default['nginx']['configure_flags']    = []
default['nginx']['source']['version']  = node['nginx']['version']
default['nginx']['source']['url']      = "http://nginx.org/download/nginx-#{node['nginx']['source']['version']}.tar.gz"
default['nginx']['source']['checksum'] = '75020f1364cac459cb733c4e1caed2d00376e40ea05588fb8793076a4c69dd90'
default['nginx']['source']['modules']  = %w(
  chef_nginx::http_ssl_module
  chef_nginx::http_gzip_static_module
)
default['nginx']['source']['use_existing_user'] = false
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/source.rb to tempfile /tmp/chef-rest20170405-7856-1sxuybs
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/source.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/debian/nginx.init.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000051a9dc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/set_misc.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000051a9e10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "set_misc.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: set_misc
#

default['nginx']['set_misc']['version']  = '0.30'
default['nginx']['set_misc']['url']      = "https://github.com/agentzh/set-misc-nginx-module/archive/v#{node['nginx']['set_misc']['version']}.tar.gz"
default['nginx']['set_misc']['checksum'] = '59920dd3f92c2be32627121605751b52eae32b5884be09f2e4c53fb2fae8aabc'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/set_misc.rb to tempfile /tmp/chef-rest20170405-7856-15gxwkj
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/set_misc.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/default-site.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004c9fe38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/default-site.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004c9ff78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "default-site.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
server {
  listen   <%= node['nginx']['port'] -%>;
  server_name  <%= node['hostname'] %>;

  access_log  <%= node['nginx']['log_dir'] %>/localhost.access.log;

  location / {
    root   <%= node['nginx']['default_root'] %>;
    index  index.html index.htm;
  }
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: upload_progress
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright:: 2012-2017, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['upload_progress']['url']               = 'https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0'
default['nginx']['upload_progress']['checksum']          = '3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2'
default['nginx']['upload_progress']['javascript_output'] = true
default['nginx']['upload_progress']['zone_name']         = 'proxied'
default['nginx']['upload_progress']['zone_size']         = '1m'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/default-site.erb to tempfile /tmp/chef-rest20170405-7856-ovz3ae
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/upload_progress.rb to tempfile /tmp/chef-rest20170405-7856-13hf3v5
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/upload_progress.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004679590
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/attributes/pagespeed.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046795e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "pagespeed.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: socketproxy.rb
#

default['nginx']['socketproxy']['root'] = '/usr/share/nginx/apps'
default['nginx']['socketproxy']['app_owner'] = 'root'
default['nginx']['socketproxy']['logname'] = 'socketproxy'
default['nginx']['socketproxy']['log_level'] = 'error'
# default['nginx']['socketproxy']['default_app'] = 'default'
# default['nginx']['socketproxy']['apps'] = {
#   'default' => {
#     'prepend_slash' => false,
#     'context_name' => '',
#     'subdir' => 'current',
#     'socket_path' => 'shared/sockets/unicorn.sock'
#   }
# }
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/default-site.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/templates
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/templates/default
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/socketproxy.rb to tempfile /tmp/chef-rest20170405-7856-1ecl3vq
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d33d90
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/debian/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d33de0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "debian",
   "nginx.init.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/socketproxy.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/status.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050217f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/status.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005021840>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "status.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: status
#
# Author:: David Radcliffe (<radcliffe.david@gmail.com>)
#
# Copyright:: 2013-2017, David Radcliffe
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['status']['port'] = '8090'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f38640
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/files/default/mime.types",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f38690>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "files",
   "default",
   "mime.types"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
types {

    # Data interchange

    application/atom+xml                  atom;
    application/json                      json map topojson;
    application/ld+json                   jsonld;
    application/rss+xml                   rss;
    application/vnd.geo+json              geojson;
    application/xml                       rdf xml;


    # JavaScript

    # Normalize to standard type.
    # https://tools.ietf.org/html/rfc4329#section-7.2
    application/javascript                js;


    # Manifest files

    application/manifest+json             webmanifest;
    application/x-web-app-manifest+json   webapp;
    text/cache-manifest                   appcache;
    text/cache.manifest                   manifest;


    # Media files

    audio/midi                            mid midi kar;
    audio/mp4                             aac f4a f4b m4a;
    audio/mpeg                            mp3;
    audio/ogg                             oga ogg opus;
    audio/x-realaudio                     ra;
    audio/x-wav                           wav;
    image/bmp                             bmp;
    image/gif                             gif;
    image/jpeg                            jpeg jpg;
    image/png                             png;
    image/svg+xml                         svg svgz;
    image/tiff                            tif tiff;
    image/vnd.wap.wbmp                    wbmp;
    image/webp                            webp;
    image/x-jng                           jng;
    video/3gpp                            3gp 3gpp;
    video/mp4                             f4p f4v m4v mp4;
    video/mpeg                            mpeg mpg;
    video/ogg                             ogv;
    video/quicktime                       mov;
    video/webm                            webm;
    video/x-flv                           flv;
    video/x-mng                           mng;
    video/x-ms-asf                        asf asx;
    video/x-ms-wmv                        wmv;
    video/x-msvideo                       avi;

    # Serving `.ico` image files with a different media type
    # prevents Internet Explorer from displaying then as images:
    # https://github.com/h5bp/html5-boilerplate/commit/37b5fec090d00f38de64b591bcddcb205aadf8ee

    image/x-icon                          cur ico;


    # Microsoft Office

    application/msword                                                         doc;
    application/vnd.ms-excel                                                   xls;
    application/vnd.ms-powerpoint                                              ppt;
    application/vnd.openxmlformats-officedocument.wordprocessingml.document    docx;
    application/vnd.openxmlformats-officedocument.spreadsheetml.sheet          xlsx;
    application/vnd.openxmlformats-officedocument.presentationml.presentation  pptx;


    # Web fonts

    application/font-woff                 woff;
    application/font-woff2                woff2;
    application/vnd.ms-fontobject         eot;

    # Browsers usually ignore the font media types and simply sniff
    # the bytes to figure out the font type.
    # https://mimesniff.spec.whatwg.org/#matching-a-font-type-pattern
    #
    # However, Blink and WebKit based browsers will show a warning
    # in the console if the following font types are served with any
    # other media types.

    application/x-font-ttf                ttc ttf;
    font/opentype                         otf;

    # Other

    application/java-archive              ear jar war;
    application/mac-binhex40              hqx;
    application/octet-stream              bin deb dll dmg exe img iso msi msm msp safariextz;
    application/pdf                       pdf;
    application/postscript                ai eps ps;
    application/rtf                       rtf;
    application/vnd.google-earth.kml+xml  kml;
    application/vnd.google-earth.kmz      kmz;
    application/vnd.wap.wmlc              wmlc;
    application/x-7z-compressed           7z;
    application/x-bb-appworld             bbaw;
    application/x-bittorrent              torrent;
    application/x-chrome-extension        crx;
    application/x-cocoa                   cco;
    application/x-java-archive-diff       jardiff;
    application/x-java-jnlp-file          jnlp;
    application/x-makeself                run;
    application/x-opera-extension         oex;
    application/x-perl                    pl pm;
    application/x-pilot                   pdb prc;
    application/x-rar-compressed          rar;
    application/x-redhat-package-manager  rpm;
    application/x-sea                     sea;
    application/x-shockwave-flash         swf;
    application/x-stuffit                 sit;
    application/x-tcl                     tcl tk;
    application/x-x509-ca-cert            crt der pem;
    application/x-xpinstall               xpi;
    application/xhtml+xml                 xhtml;
    application/xslt+xml                  xsl;
    application/zip                       zip;
    text/css                              css;
    text/html                             htm html shtml;
    text/mathml                           mml;
    text/plain                            txt;
    text/vcard                            vcard vcf;
    text/vnd.rim.location.xloc            xloc;
    text/vnd.sun.j2me.app-descriptor      jad;
    text/vnd.wap.wml                      wml;
    text/vtt                              vtt;
    text/x-component                      htc;
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/mime.types to tempfile /tmp/chef-rest20170405-7856-10z6yih
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/files/default/mime.types in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/files
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/files/default
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/attributes/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000051fb3c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000051fb418>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "repo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Recipe:: repo
#
# Author:: Nick Rycar <nrycar@bluebox.net>
#
# Copyright:: 2008-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

case node['platform_family']
when 'rhel', 'fedora'
  default['nginx']['upstream_repository'] = case node['platform']
                                            when 'centos'
                                              # See http://wiki.nginx.org/Install
                                              "http://nginx.org/packages/centos/#{node['platform_version'].to_i}/$basearch/"
                                            when 'amazon'
                                              'http://nginx.org/packages/rhel/6/$basearch/'
                                            else
                                              "http://nginx.org/packages/rhel/#{node['platform_version'].to_i}/$basearch/"
                                            end
when 'debian'
  default['nginx']['upstream_repository'] = "http://nginx.org/packages/#{node['platform']}"
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/repo.rb to tempfile /tmp/chef-rest20170405-7856-1ungarb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/repo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/status.rb to tempfile /tmp/chef-rest20170405-7856-1d2bc5j
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/status.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004fccea8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/attributes/syslog.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004fce1e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "attributes",
   "syslog.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Attributes:: syslog
#
# Author:: Bob Ziuchkovski (<bob@bz-technology.com>)
#
# Copyright:: 2014-2017, UserTesting
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['nginx']['syslog']['git_repo']     = 'https://github.com/yaoweibin/nginx_syslog_patch.git'
default['nginx']['syslog']['git_revision'] = 'master'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/syslog.rb to tempfile /tmp/chef-rest20170405-7856-ori26z
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/syslog.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049aa570
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049aa5c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "socketproxy.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
 server {

    set $app_home <%= node['nginx']['socketproxy']['root'] %>;

    <% if node['nginx']['sts_max_age'] -%>
    add_header Strict-Transport-Security "max-age=<%= node['nginx']['sts_max_age'] %>";
    <% end -%>

    listen <%= node['nginx']['port'] %> default;

    access_log <%= node['nginx']['log_dir'] %>/<%= node['nginx']['socketproxy']['logname'] %>.access.log<% if node['nginx']['access_log_options'] %> <%= node['nginx']['access_log_options'] %><% end %>;
    error_log <%= node['nginx']['log_dir'] %>/<%= node['nginx']['socketproxy']['logname'] %>.error.log <%= node['nginx']['socketproxy']['log_level'] %>;

    <% if node['nginx']['server_name'] -%>
    server_name ~^<%= node['nginx']['server_name'] %>\..*$;
    <% end -%>

    client_max_body_size 4G;
    keepalive_timeout 5;

    root $app_home/<%= node['nginx']['socketproxy']['default_app'] %>/<%= node['nginx']['socketproxy']['apps'][node['nginx']['socketproxy']['default_app']]['subdir'] %>/public;

    proxy_set_header Host $http_host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $remote_addr;
    proxy_set_header X-Forwarded-Proto $http_x_forwarded_proto;

    if ($request_method !~ ^(GET|HEAD|PUT|POST|DELETE|OPTIONS|PATCH)$ ) {
      return 405;
    }

    <% node['nginx']['socketproxy']['apps'].each do |app, app_conf|
      if app_conf['context_name']
        base_loc = "/#{app_conf['context_name'].gsub(/^\/+/,'').gsub(/\/+$/,'')}"
      else
        base_loc = ""
      end
    -%>

    location ~ "^<%= base_loc %>/assets/(.*/)*.*-[0-9a-f]{32}.*" {
      gzip_static on;
      expires     max;
      add_header  Cache-Control public;
    }

    location ^~ /<%= app_conf['context_name'] %> {

      alias $app_home/<%= app %>/<%= app_conf['subdir'] %>/public/;

      try_files $uri/index.html $uri.html $uri @app_<%= app %>;
      error_page 404              /404.html;
      error_page 422              /422.html;
      error_page 500 502 503 504  /500.html;
      error_page 403              /403.html;

    }

    location @app_<%= app %> {

      proxy_read_timeout 600;
      <%
        if app_conf['socket']['type']
          case app_conf['socket']['type']
          when 'unix'
      -%>
      proxy_pass http://unix:$app_home/<%= app %>/<%= app_conf['socket']['path'] %><% if app_conf['prepend_slash'] %>:/<% end %>;
      <%
          when 'tcp'
      -%>
      proxy_pass http://localhost:<%= app_conf['socket']['port'] -%>;
      <%
          end
        else
      -%>
      proxy_pass http://unix:$app_home/<%= app %>/<%= app_conf['socket_path'] %><% if app_conf['prepend_slash'] %>:/<% end %>;
      <%
        end
      -%>

    }

    <% end # node['nginx']['socketproxy']['apps'].each -%>

    error_page 500 502 504 /50x.html;
    location = /50x.html {
      root html;
    }

}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb to tempfile /tmp/chef-rest20170405-7856-14s0ef1
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/socketproxy.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/templates/default/modules
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/upload_progress.erb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: chef_nginx
# Recipe:: pagespeed_module
#
default['nginx']['pagespeed']['version'] = '1.11.33.2'
default['nginx']['pagespeed']['url']     = "https://github.com/pagespeed/ngx_pagespeed/archive/release-#{node['nginx']['pagespeed']['version']}-beta.tar.gz"
default['nginx']['psol']['url']          = "https://dl.google.com/dl/page-speed/psol/#{node['nginx']['pagespeed']['version']}.tar.gz"
default['nginx']['pagespeed']['packages']['rhel'] = %w(pcre-devel zlib-devel)
default['nginx']['pagespeed']['packages']['debian'] = %w(zlib1g-dev libpcre3 libpcre3-dev)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/attributes/pagespeed.rb to tempfile /tmp/chef-rest20170405-7856-11nyk5t
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/attributes/pagespeed.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a176e8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a17738>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "http_gzip_static.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004e34f78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/files/default/naxsi_core.rules",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004e34fc8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "files",
   "default",
   "naxsi_core.rules"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
##################################
## INTERNAL RULES IDS:1-10      ##
##################################
#weird_request : 1
#big_body : 2
#no_content_type : 3

#@MainRule "msg:weird/incorrect request" id:1;
#@MainRule "msg:big request, unparsed" id:2;
#@MainRule "msg:uncommon hex encoding (%00 etc.)" id:10;
#@MainRule "msg:uncommon/empty content-type in POST" id:11;
#@MainRule "msg:uncommon/malformed URL" id:12;

#MainRule "str:123FREETEXT" "msg:exemple learning test pattern"  "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:BLOCK" id:0;

##################################
## SQL Injections IDs:1000-1099 ##
##################################
MainRule "rx:select|union|update|delete|insert|table|from|ascii|hex|unhex|drop" "msg:sql keywords" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1000;
MainRule "str:\"" "msg:double quote" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8,$XSS:8" id:1001;
MainRule "str:0x" "msg:0x, possible hex encoding" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:2" id:1002;
## Hardcore rules
MainRule "str:/*" "msg:mysql comment (/*)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1003;
MainRule "str:*/" "msg:mysql comment (*/)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1004;
MainRule "str:|" "msg:mysql keyword (|)"  "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1005;
MainRule "str:&&" "msg:mysql keyword (&&)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:8" id:1006;
## end of hardcore rules
MainRule "str:--" "msg:mysql comment (--)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1007;
MainRule "str:;" "msg:; in stuff" "mz:BODY|URL|ARGS" "s:$SQL:4,$XSS:8" id:1008;
MainRule "str:=" "msg:equal in var, probable sql/xss" "mz:ARGS|BODY" "s:$SQL:2" id:1009;
MainRule "str:(" "msg:parenthesis, probable sql/xss" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$SQL:4,$XSS:8" id:1010;
MainRule "str:)" "msg:parenthesis, probable sql/xss" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$SQL:4,$XSS:8" id:1011;
MainRule "str:'" "msg:simple quote" "mz:ARGS|BODY|URL|$HEADERS_VAR:Cookie" "s:$SQL:4,$XSS:8" id:1013;
MainRule "str:," "msg:, in stuff" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1015;
MainRule "str:#" "msg:mysql comment (#)" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$SQL:4" id:1016;

###############################
## OBVIOUS RFI IDs:1100-1199 ##
###############################
MainRule "str:http://" "msg:http:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1100;
MainRule "str:https://" "msg:https:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1101;
MainRule "str:ftp://" "msg:ftp:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1102;
MainRule "str:php://" "msg:php:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1103;
MainRule "str:sftp://" "msg:sftp:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1104;
MainRule "str:zlib://" "msg:zlib:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1105;
MainRule "str:data://" "msg:data:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1106;
MainRule "str:glob://" "msg:glob:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1107;
MainRule "str:phar://" "msg:phar:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1108;
MainRule "str:file://" "msg:file:// scheme" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$RFI:8" id:1109;

#######################################
## Directory traversal IDs:1200-1299 ##
#######################################
MainRule "str:.." "msg:double dot" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1200;
MainRule "str:/etc/passwd" "msg:obvious probe" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1202;
MainRule "str:c:\\" "msg:obvious windows path" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1203;
MainRule "str:cmd.exe" "msg:obvious probe" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1204;
MainRule "str:\\" "msg:backslash" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:4" id:1205;
#MainRule "str:/" "msg:slash in args" "mz:ARGS|BODY|$HEADERS_VAR:Cookie" "s:$TRAVERSAL:2" id:1206;

########################################
## Cross Site Scripting IDs:1300-1399 ##
########################################
MainRule "str:<" "msg:html open tag" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1302;
MainRule "str:>" "msg:html close tag" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1303;
MainRule "str:[" "msg:[, possible js" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$XSS:4" id:1310;
MainRule "str:]" "msg:], possible js" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$XSS:4" id:1311;
MainRule "str:~" "msg:~ character" "mz:BODY|URL|ARGS|$HEADERS_VAR:Cookie" "s:$XSS:4" id:1312;
MainRule "str:`"  "msg:grave accent !" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1314;
MainRule "rx:%[2|3]."  "msg:double encoding !" "mz:ARGS|URL|BODY|$HEADERS_VAR:Cookie" "s:$XSS:8" id:1315;

####################################
## Evading tricks IDs: 1400-1500 ##
####################################
MainRule "str:&#" "msg: utf7/8 encoding" "mz:ARGS|BODY|URL|$HEADERS_VAR:Cookie" "s:$EVADE:4" id:1400;
MainRule "str:%U" "msg: M$ encoding" "mz:ARGS|BODY|URL|$HEADERS_VAR:Cookie" "s:$EVADE:4" id:1401;
MainRule negative "rx:multipart/form-data|application/x-www-form-urlencoded" "msg:Content is neither mulipart/x-www-form.." "mz:$HEADERS_VAR:Content-type" "s:$EVADE:4" id:1402;

#############################
## File uploads: 1500-1600 ##
#############################
MainRule "rx:.ph|.asp|.ht" "msg:asp/php file upload!" "mz:FILE_EXT" "s:$UPLOAD:8" id:1500;
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/files/default/naxsi_core.rules to tempfile /tmp/chef-rest20170405-7856-1f3d64a
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/files/default/naxsi_core.rules in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048193f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004819440>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nginx.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
user <%= node['nginx']['user'] %><% if node['nginx']['user'] != node['nginx']['group'] %> <%= node['nginx']['group'] %><% end %>;
worker_processes <%= node['nginx']['worker_processes'] %>;
<% if node['nginx']['daemon_disable'] -%>
daemon off;
<% end -%>
<% if node['nginx']['worker_rlimit_nofile'] -%>
worker_rlimit_nofile <%= node['nginx']['worker_rlimit_nofile'] %>;
<% end -%>
<% if node['nginx']['worker_shutdown_timeout'] -%>
worker_shutdown_timeout <%= node['nginx']['worker_shutdown_timeout'] %>;
<% end -%>
<% node['nginx']['load_modules'].each do |module_to_load| %>
load_module <%= module_to_load %>;
<% end -%>

error_log  <%= node['nginx']['log_dir'] %>/error.log<% if node['nginx']['error_log_options'] %> <%= node['nginx']['error_log_options'] %><% end %>;
pid        <%= @pid_file %>;
events {
  worker_connections  <%= node['nginx']['worker_connections'] %>;
<% if node['nginx']['multi_accept'] -%>
  multi_accept on;
<% end -%>
<% if node['nginx']['event'] -%>
  use <%= node['nginx']['event'] %>;
<% end -%>
<% if node['nginx']['accept_mutex_delay'] -%>
  accept_mutex_delay <%= node['nginx']['accept_mutex_delay'] %>ms;
<% end -%>
}

http {
  <% if node.recipe?('chef_nginx::naxsi_module') %>
  include       <%= node['nginx']['dir'] %>/naxsi_core.rules;
  <% end %>

  include       <%= node['nginx']['dir'] %>/mime.types;
  default_type  application/octet-stream;
  charset_types text/css text/plain text/vnd.wap.wml application/javascript application/json application/rss+xml application/xml;

  <% node['nginx']['log_formats'].each do |name, format| %>
  log_format <%= name %> <%= format %>;
  <% end -%>

  <% if node['nginx']['disable_access_log'] -%>
  access_log    off;
  <% else -%>
  access_log    <%= node['nginx']['log_dir'] %>/access.log<% if node['nginx']['access_log_options'] %> <%= node['nginx']['access_log_options'] %><% end %>;
  <% end %>
  <% if node['nginx']['server_tokens'] -%>
  server_tokens <%= node['nginx']['server_tokens'] %>;
  <% end -%>

  sendfile <%= node['nginx']['sendfile'] %>;
  tcp_nopush <%= node['nginx']['tcp_nopush'] %>;
  tcp_nodelay <%= node['nginx']['tcp_nodelay'] %>;

  <% if node['nginx']['keepalive'] == 'on' %>
  keepalive_requests <%= node['nginx']['keepalive_requests'] %>;
  keepalive_timeout  <%= node['nginx']['keepalive_timeout'] %>;
  <% end %>

  <% unless node['nginx']['underscores_in_headers'].nil? %>
  underscores_in_headers <%= node['nginx']['underscores_in_headers'] %>;
  <% end %>

  gzip  <%= node['nginx']['gzip'] %>;
  <% if node['nginx']['gzip'] == 'on' %>
  gzip_http_version <%= node['nginx']['gzip_http_version'] %>;
  gzip_comp_level <%= node['nginx']['gzip_comp_level'] %>;
  gzip_proxied <%= node['nginx']['gzip_proxied'] %>;
  gzip_vary <%= node['nginx']['gzip_vary'] %>;
  <% if node['nginx']['gzip_buffers'] -%>
  gzip_buffers <%= node['nginx']['gzip_buffers'] %>;
  <% end -%>
  gzip_types <%= node['nginx']['gzip_types'].join(' ') %>;
  gzip_min_length  <%= node['nginx']['gzip_min_length'] %>;
  gzip_disable     "<%= node['nginx']['gzip_disable'] %>";
  <% end %>


  variables_hash_max_size <%= node['nginx']['variables_hash_max_size'] %>;
  variables_hash_bucket_size <%= node['nginx']['variables_hash_bucket_size'] %>;
  server_names_hash_bucket_size <%= node['nginx']['server_names_hash_bucket_size'] %>;
  types_hash_max_size <%= node['nginx']['types_hash_max_size'] %>;
  types_hash_bucket_size <%= node['nginx']['types_hash_bucket_size'] %>;
  <% if node['nginx']['proxy_read_timeout'] -%>
  proxy_read_timeout <%= node['nginx']['proxy_read_timeout'] %>;
  <% end -%>
  <% if node['nginx']['client_body_buffer_size'] -%>
  client_body_buffer_size <%= node['nginx']['client_body_buffer_size'] %>;
  <% end -%>
  <% if node['nginx']['client_max_body_size'] -%>
  client_max_body_size <%= node['nginx']['client_max_body_size'] %>;
  <% end -%>
  <% if node['nginx']['large_client_header_buffers'] -%>
  large_client_header_buffers <%= node['nginx']['large_client_header_buffers'] %>;
  <% end -%>

  <% if node['nginx']['enable_rate_limiting'] -%>
  limit_req_zone $binary_remote_addr zone=<%= node['nginx']['rate_limiting_zone_name'] %>:<%= node['nginx']['rate_limiting_backoff'] %> rate=<%= node['nginx']['rate_limit'] %>;
  <% end -%>

  <% node['nginx']['extra_configs'].each do |key, value| -%>
  <%= key %> <%= value %>;
  <% end -%>

  include <%= node['nginx']['dir'] %>/conf.d/*.conf;
  include <%= node['nginx']['dir'] %>/sites-enabled/*;
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.conf.erb to tempfile /tmp/chef-rest20170405-7856-bsneza
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a1c6e8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a1c738>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "passenger.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048e2908
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048e2958>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nginx-upstart.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nginx.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
gzip_static <%= node['nginx']['gzip_static'] %>;
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb to tempfile /tmp/chef-rest20170405-7856-7w5sbn
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/http_gzip_static.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b58048
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b580c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "http_geoip.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b91dc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b91e10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "authorized_ip.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
geo $<%= node['nginx']['remote_ip_var'] %> $authorized_ip {
  default no;
  <% node['nginx']['authorized_ips'].each do |ip| %>
  <%= "#{ip} yes;" %>
  <% end %>
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb to tempfile /tmp/chef-rest20170405-7856-15jbyus
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/authorized_ip.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/nginx_status.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a3a7b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/nginx_status.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a3a878>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "nginx_status.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# nginx

description "nginx http daemon"

start on (local-filesystems and net-device-up IFACE=lo and runlevel [<%= node['nginx']['upstart']['runlevels'] %>])
stop on runlevel [!<%= node['nginx']['upstart']['runlevels'] %>]

env DAEMON=<%= node['nginx']['binary'] %>
env PID=<%= @pid_file %>
env CONFIG=<%= node['nginx']['source']['conf_path'] %>

respawn
<% if node['nginx']['upstart']['respawn_limit'] -%>
respawn limit <%= node['nginx']['upstart']['respawn_limit'] %>
<% end -%>

pre-start script
  ${DAEMON} -t
  if [ $? -ne 0 ]; then
    exit $?
  fi
end script

<% unless node['nginx']['upstart']['foreground'] -%>
expect fork
<% else -%>
console output
<% end -%>

exec ${DAEMON} -c "${CONFIG}"

<% if node.recipe?('chef_nginx::passenger') && !node['nginx']['upstart']['foreground'] -%>
# classic example of why pidfiles should have gone away
# with the advent of fork().  we missed that bus a long
# time ago so hack around it.
post-stop script
  start-stop-daemon --stop --pidfile ${PID} --name nginx --exec ${DAEMON} --signal QUIT
end script
<% end -%>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb to tempfile /tmp/chef-rest20170405-7856-16v33l9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nginx-upstart.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nxdissite.erb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.service.erb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a9f228
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a9f278>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "http_realip.conf.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
passenger_root <%= node['nginx']['passenger']['root'] %>;
passenger_ruby <%= node['nginx']['passenger']['ruby'] %>;
passenger_max_pool_size <%= node['nginx']['passenger']['max_pool_size'] %>;
passenger_spawn_method <%= node['nginx']['passenger']['spawn_method'] %>;
passenger_buffer_response <%= node['nginx']['passenger']['buffer_response'] %>;
passenger_min_instances <%= node['nginx']['passenger']['min_instances'] %>;
passenger_max_instances_per_app <%= node['nginx']['passenger']['max_instances_per_app'] %>;
passenger_pool_idle_time <%= node['nginx']['passenger']['pool_idle_time'] %>;
passenger_max_requests <%= node['nginx']['passenger']['max_requests'] %>;
passenger_show_version_in_header <%= node['nginx']['passenger']['show_version_in_header'] %>;
<%- if node['nginx']['passenger']['passenger_log_file'] %>
  passenger_log_file <%= node['nginx']['passenger']['passenger_log_file'] %>;
<% end %>

<%- if node['nginx']['passenger']['nodejs'] %>
  passenger_nodejs <%= node['nginx']['passenger']['nodejs'] %>;
<% end %>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb to tempfile /tmp/chef-rest20170405-7856-2xfh8a
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/passenger.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nxensite.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000343e4e8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nxensite.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000343e5b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nxensite.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
include authorized_ip;

server {
  listen <%= node['nginx']['status']['port'] %>;
  server_name _;

  location /nginx_status {
    if ($authorized_ip = no) {
      return 404;
    }
    stub_status on;
    access_log off;
  }

  location / {
    return 404;
  }
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/nginx_status.erb to tempfile /tmp/chef-rest20170405-7856-phlvhe
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004547460
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nxdissite.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045474b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nxdissite.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh -e

SYSCONFDIR='<%= node['nginx']['dir'] %>'

if [ -z $1 ]; then
        echo "Which site would you like to disable?"
        echo -n "Your choices are: "
        ls $SYSCONFDIR/sites-enabled/* | \
        sed -e "s,$SYSCONFDIR/sites-enabled/,,g" | xargs echo
        echo -n "Site name? "
        read SITENAME
else
        SITENAME=$1
fi

if [ $SITENAME = "default" ]; then
        PRIORITY="000"
fi

if ! [ -e $SYSCONFDIR/sites-enabled/$SITENAME -o \
       -e $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME" ]; then
        echo "This site is already disabled, or does not exist!"
        exit 1
fi

if ! rm $SYSCONFDIR/sites-enabled/$SITENAME 2>/dev/null; then
        rm -f $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME"
fi
echo "Site $SITENAME disabled; reload nginx to disable."
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/nginx_status.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
geoip_country <%= @country_dat %>;
<% if @city_dat -%>
geoip_city <%= @city_dat %>;
<% end -%>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=<%= node['nginx']['binary'] %>
NAME=nginx
DESC=nginx
PID=<%= @pid_file %>

# Include nginx defaults if available
if [ -f /etc/default/nginx ]; then
	. /etc/default/nginx
fi

test -x $DAEMON || exit 0

set -e

. /lib/lsb/init-functions

test_nginx_config() {
	if $DAEMON -t $DAEMON_OPTS >/dev/null 2>&1; then
		return 0
	else
		$DAEMON -t $DAEMON_OPTS
		return $?
	fi
}

case "$1" in
	start)
		echo -n "Starting $DESC: "
		test_nginx_config
		# Check if the ULIMIT is set in /etc/default/nginx
		if [ -n "$ULIMIT" ]; then
			# Set the ulimits
			ulimit $ULIMIT
		fi
		start-stop-daemon --start --quiet --pidfile $PID \
		    --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	stop)
		echo -n "Stopping $DESC: "
		start-stop-daemon --stop --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	restart|force-reload)
		echo -n "Restarting $DESC: "
		start-stop-daemon --stop --quiet --pidfile \
		    $PID --exec $DAEMON || true
		sleep 1
		test_nginx_config
		start-stop-daemon --start --quiet --pidfile \
		    $PID --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	reload)
		echo -n "Reloading $DESC configuration: "
		test_nginx_config
		start-stop-daemon --stop --signal HUP --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	configtest|testconfig)
		echo -n "Testing $DESC configuration: "
		if test_nginx_config; then
			echo "$NAME."
		else
			exit $?
		fi
		;;

	status)
		status_of_proc -p $PID "$DAEMON" nginx && exit 0 || exit $?
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|reload|force-reload|status|configtest}" >&2
		exit 1
		;;
esac

exit 0
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/debian/nginx.init.erb to tempfile /tmp/chef-rest20170405-7856-1i28a2
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/debian/nginx.init.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/templates/debian
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb to tempfile /tmp/chef-rest20170405-7856-zgdvfy
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<% node['nginx']['realip']['addresses'].each do |address| -%>
set_real_ip_from <%= address %>;
<% end -%>
real_ip_header <%= node['nginx']['realip']['header'] %>;
<% if node['nginx']['version'].to_f >= 1.2 -%>
real_ip_recursive <%= node['nginx']['realip']['real_ip_recursive'] %>;
<% end -%>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxdissite.erb to tempfile /tmp/chef-rest20170405-7856-1xp57en
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nxdissite.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb to tempfile /tmp/chef-rest20170405-7856-g3o7yw
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh -e

SYSCONFDIR='<%= node['nginx']['dir'] %>'

if [ -z $1 ]; then
        echo "Which site would you like to enable?"
        echo -n "Your choices are: "
        ls $SYSCONFDIR/sites-available/* | \
        sed -e "s,$SYSCONFDIR/sites-available/,,g" | xargs echo
        echo -n "Site name? "
        read SITENAME
else
        SITENAME=$1
fi

if [ $SITENAME = "default" ]; then
        PRIORITY="000"
fi

if [ -e $SYSCONFDIR/sites-enabled/$SITENAME -o \
     -e $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME" ]; then
        echo "This site is already enabled!"
        exit 0
fi

if ! [ -e $SYSCONFDIR/sites-available/$SITENAME ]; then
        echo "This site does not exist!"
        exit 1
fi

if [ $SITENAME = "default" ]; then
        ln -sf $SYSCONFDIR/sites-available/$SITENAME \
               $SYSCONFDIR/sites-enabled/"$PRIORITY"-"$SITENAME"
else
        ln -sf $SYSCONFDIR/sites-available/$SITENAME $SYSCONFDIR/sites-enabled/$SITENAME
fi

echo "Site $SITENAME installed; reload nginx to enable."
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nxensite.erb to tempfile /tmp/chef-rest20170405-7856-1g1rxbm
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004635750
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046357a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nginx.sysconfig.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
NGINX_GLOBAL=<%= node['nginx']['global'] %>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb to tempfile /tmp/chef-rest20170405-7856-mnqann
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nginx.sysconfig.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004931cd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/modules/upload_progress.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004931d28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "modules",
   "upload_progress.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/http_realip.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/http_geoip.conf.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000328d3b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000328d400>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "sv-nginx-log-run.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
exec svlogd -tt ./main
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb to tempfile /tmp/chef-rest20170405-7856-29ittb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/sv-nginx-log-run.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046c6e80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.service.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046c6ed0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nginx.service.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
[Unit]
Description=The nginx HTTP and reverse proxy server
After=network.target remote-fs.target nss-lookup.target

[Service]
ExecStartPre=<%= node['nginx']['binary'] %> -t
ExecStart=<%= node['nginx']['binary'] %>
ExecReload=/bin/kill -s HUP $MAINPID
ExecStop=/bin/kill -s QUIT $MAINPID
PrivateTmp=true

[Install]
WantedBy=multi-user.target
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.service.erb to tempfile /tmp/chef-rest20170405-7856-2mn0hh
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nginx.service.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/.foodcritic
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
upload_progress <%= node['nginx']['upload_progress']['zone_name'] -%> <%= node['nginx']['upload_progress']['zone_size'] -%>;
<% if node['nginx']['upload_progress']['javascript_output'] -%>
upload_progress_java_output;
<% end -%>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/modules/upload_progress.erb to tempfile /tmp/chef-rest20170405-7856-1rjq3y3
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000032df3b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000032df408>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "plugins",
   "ohai-nginx.rb.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.toml
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/modules/upload_progress.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-run.erb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nxensite.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/chefignore
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/LICENSE
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002e38198
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/LICENSE",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002e381e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "LICENSE"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
                              Apache License
                        Version 2.0, January 2004
                     http://www.apache.org/licenses/

TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

1. Definitions.

   "License" shall mean the terms and conditions for use, reproduction,
   and distribution as defined by Sections 1 through 9 of this document.

   "Licensor" shall mean the copyright owner or entity authorized by
   the copyright owner that is granting the License.

   "Legal Entity" shall mean the union of the acting entity and all
   other entities that control, are controlled by, or are under common
   control with that entity. For the purposes of this definition,
   "control" means (i) the power, direct or indirect, to cause the
   direction or management of such entity, whether by contract or
   otherwise, or (ii) ownership of fifty percent (50%) or more of the
   outstanding shares, or (iii) beneficial ownership of such entity.

   "You" (or "Your") shall mean an individual or Legal Entity
   exercising permissions granted by this License.

   "Source" form shall mean the preferred form for making modifications,
   including but not limited to software source code, documentation
   source, and configuration files.

   "Object" form shall mean any form resulting from mechanical
   transformation or translation of a Source form, including but
   not limited to compiled object code, generated documentation,
   and conversions to other media types.

   "Work" shall mean the work of authorship, whether in Source or
   Object form, made available under the License, as indicated by a
   copyright notice that is included in or attached to the work
   (an example is provided in the Appendix below).

   "Derivative Works" shall mean any work, whether in Source or Object
   form, that is based on (or derived from) the Work and for which the
   editorial revisions, annotations, elaborations, or other modifications
   represent, as a whole, an original work of authorship. For the purposes
   of this License, Derivative Works shall not include works that remain
   separable from, or merely link (or bind by name) to the interfaces of,
   the Work and Derivative Works thereof.

   "Contribution" shall mean any work of authorship, including
   the original version of the Work and any modifications or additions
   to that Work or Derivative Works thereof, that is intentionally
   submitted to Licensor for inclusion in the Work by the copyright owner
   or by an individual or Legal Entity authorized to submit on behalf of
   the copyright owner. For the purposes of this definition, "submitted"
   means any form of electronic, verbal, or written communication sent
   to the Licensor or its representatives, including but not limited to
   communication on electronic mailing lists, source code control systems,
   and issue tracking systems that are managed by, or on behalf of, the
   Licensor for the purpose of discussing and improving the Work, but
   excluding communication that is conspicuously marked or otherwise
   designated in writing by the copyright owner as "Not a Contribution."

   "Contributor" shall mean Licensor and any individual or Legal Entity
   on behalf of whom a Contribution has been received by Licensor and
   subsequently incorporated within the Work.

2. Grant of Copyright License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   copyright license to reproduce, prepare Derivative Works of,
   publicly display, publicly perform, sublicense, and distribute the
   Work and such Derivative Works in Source or Object form.

3. Grant of Patent License. Subject to the terms and conditions of
   this License, each Contributor hereby grants to You a perpetual,
   worldwide, non-exclusive, no-charge, royalty-free, irrevocable
   (except as stated in this section) patent license to make, have made,
   use, offer to sell, sell, import, and otherwise transfer the Work,
   where such license applies only to those patent claims licensable
   by such Contributor that are necessarily infringed by their
   Contribution(s) alone or by combination of their Contribution(s)
   with the Work to which such Contribution(s) was submitted. If You
   institute patent litigation against any entity (including a
   cross-claim or counterclaim in a lawsuit) alleging that the Work
   or a Contribution incorporated within the Work constitutes direct
   or contributory patent infringement, then any patent licenses
   granted to You under this License for that Work shall terminate
   as of the date such litigation is filed.

4. Redistribution. You may reproduce and distribute copies of the
   Work or Derivative Works thereof in any medium, with or without
   modifications, and in Source or Object form, provided that You
   meet the following conditions:

   (a) You must give any other recipients of the Work or
       Derivative Works a copy of this License; and

   (b) You must cause any modified files to carry prominent notices
       stating that You changed the files; and

   (c) You must retain, in the Source form of any Derivative Works
       that You distribute, all copyright, patent, trademark, and
       attribution notices from the Source form of the Work,
       excluding those notices that do not pertain to any part of
       the Derivative Works; and

   (d) If the Work includes a "NOTICE" text file as part of its
       distribution, then any Derivative Works that You distribute must
       include a readable copy of the attribution notices contained
       within such NOTICE file, excluding those notices that do not
       pertain to any part of the Derivative Works, in at least one
       of the following places: within a NOTICE text file distributed
       as part of the Derivative Works; within the Source form or
       documentation, if provided along with the Derivative Works; or,
       within a display generated by the Derivative Works, if and
       wherever such third-party notices normally appear. The contents
       of the NOTICE file are for informational purposes only and
       do not modify the License. You may add Your own attribution
       notices within Derivative Works that You distribute, alongside
       or as an addendum to the NOTICE text from the Work, provided
       that such additional attribution notices cannot be construed
       as modifying the License.

   You may add Your own copyright statement to Your modifications and
   may provide additional or different license terms and conditions
   for use, reproduction, or distribution of Your modifications, or
   for any such Derivative Works as a whole, provided Your use,
   reproduction, and distribution of the Work otherwise complies with
   the conditions stated in this License.

5. Submission of Contributions. Unless You explicitly state otherwise,
   any Contribution intentionally submitted for inclusion in the Work
   by You to the Licensor shall be under the terms and conditions of
   this License, without any additional terms or conditions.
   Notwithstanding the above, nothing herein shall supersede or modify
   the terms of any separate license agreement you may have executed
   with Licensor regarding such Contributions.

6. Trademarks. This License does not grant permission to use the trade
   names, trademarks, service marks, or product names of the Licensor,
   except as required for reasonable and customary use in describing the
   origin of the Work and reproducing the content of the NOTICE file.

7. Disclaimer of Warranty. Unless required by applicable law or
   agreed to in writing, Licensor provides the Work (and each
   Contributor provides its Contributions) on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
   implied, including, without limitation, any warranties or conditions
   of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
   PARTICULAR PURPOSE. You are solely responsible for determining the
   appropriateness of using or redistributing the Work and assume any
   risks associated with Your exercise of permissions under this License.

8. Limitation of Liability. In no event and under no legal theory,
   whether in tort (including negligence), contract, or otherwise,
   unless required by applicable law (such as deliberate and grossly
   negligent acts) or agreed to in writing, shall any Contributor be
   liable to You for damages, including any direct, indirect, special,
   incidental, or consequential damages of any character arising as a
   result of this License or out of the use or inability to use the
   Work (including but not limited to damages for loss of goodwill,
   work stoppage, computer failure or malfunction, or any and all
   other commercial damages or losses), even if such Contributor
   has been advised of the possibility of such damages.

9. Accepting Warranty or Additional Liability. While redistributing
   the Work or Derivative Works thereof, You may choose to offer,
   and charge a fee for, acceptance of support, warranty, indemnity,
   or other liability obligations and/or rights consistent with this
   License. However, in accepting such obligations, You may act only
   on Your own behalf and on Your sole responsibility, not on behalf
   of any other Contributor, and only if You agree to indemnify,
   defend, and hold each Contributor harmless for any liability
   incurred by, or claims asserted against, such Contributor by reason
   of your accepting any such warranty or additional liability.

END OF TERMS AND CONDITIONS

APPENDIX: How to apply the Apache License to your work.

   To apply the Apache License to your work, attach the following
   boilerplate notice, with the fields enclosed by brackets "[]"
   replaced with your own identifying information. (Don't include
   the brackets!)  The text should be enclosed in the appropriate
   comment syntax for the file format. We also recommend that a
   file or class name and description of purpose be included on the
   same "printed page" as the copyright notice for easier
   identification within third-party archives.

Copyright [yyyy] [name of copyright owner]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/LICENSE to tempfile /tmp/chef-rest20170405-7856-147ypzv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/LICENSE in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/Berksfile
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002f62c08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.toml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002f62cd0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "MAINTAINERS.toml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# This file is structured to be consumed by both humans and computers.
# It is a TOML document containing Markdown
#
[Preamble]
  title = "Maintainers"
  text = """

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.
"""

[Org]
  [Org.Components]
    [Org.Components.Core]
      title = "Project Maintainer"

      lieutenant = 'tas50'

      maintainers = [
        'sigje',
        'tas50',
        'thommay'
      ]

[people]
  [people.sigje]
    name = "Jennifer Davis"
    github = "sigje"

  [people.tas50]
    name = "Tim Smith"
    github = "tas50"

  [people.thommay]
    name = "Thom May"
    github = "thommay"
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031dc3d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-run.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031dc498>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "sv-nginx-run.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
ulimit -n <%= node['nginx']['ulimit'] %>
exec 2>&1
exec <%= node['nginx']['src_binary'] %> -c <%= node['nginx']['dir'] %>/nginx.conf
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/sv-nginx-run.erb to tempfile /tmp/chef-rest20170405-7856-3vso48
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/sv-nginx-run.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.toml to tempfile /tmp/chef-rest20170405-7856-1wfwxz4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/MAINTAINERS.toml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002eb6f20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/chefignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002eb6f70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "chefignore"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.init.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046ef3a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046ef3f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "default",
   "nginx.init.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000030bfe70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000030bff10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "templates",
   "ubuntu",
   "nginx.init.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/.gitignore
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001b92a20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/.gitignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001b92a70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   ".gitignore"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
*~
*#
.#*
\#*#
.*.sw[a-z]
*.un~
pkg/

# Berkshelf
.vagrant
/cookbooks
Berksfile.lock

# Bundler
Gemfile.lock
bin/*
.bundle/*

.kitchen/
.kitchen.local.yml
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.gitignore to tempfile /tmp/chef-rest20170405-7856-1gv98sn
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/Berksfile.lock
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/.gitignore in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/.rubocop.yml
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
#
# nginx
#
# chkconfig:   - 57 47
# description: nginx
# processname:  nginx
# config:       /etc/sysconfig/nginx
#

# Source function library.
. /etc/rc.d/init.d/functions

# Source networking configuration.
. /etc/sysconfig/network

# Check that networking is up.
[ "$NETWORKING" = "no" ] && exit
exec=<%= node['nginx']['binary'] %>
prog=$(basename $exec)

# default options, overruled by items in sysconfig
NGINX_GLOBAL=""

[ -e /etc/sysconfig/nginx ] && . /etc/sysconfig/nginx

lockfile=/var/lock/subsys/nginx

start() {
    [ -x $exec ] || exit 5
    echo -n $"Starting $prog: "
    # if not running, start it up here, usually something like "daemon $exec"
    options=""
    if [ "${NGINX_GLOBAL}" != ""  ]; then
        options="-g ${NGINX_GLOBAL}"
    fi
    $exec $options
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
	return $retval
}

stop() {
	echo -n $"Stopping $prog: "
	$exec -s stop
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

restart() {
    stop
    start
}

reload() {
	echo -n $"Reloading $prog: "
	$exec -s reload
	retval=$?
	echo
	[ $retval -eq 0 ] && rm -f $lockfile
	return $retval
}

configtest() {
    if [ "$#" -ne 0 ] ; then
        case "$1" in
            -q)
                FLAG=$1
                ;;
            *)
                ;;
        esac
        shift
    fi
    ${exec} -t $FLAG
    RETVAL=$?
    return $RETVAL
}

# See how we were called.
case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  status)
        status nginx
        ;;
  restart)
        restart
        ;;
  reload|force-reload)
		reload
		;;
  condrestart)
        [ -f $lockfile ] && restart || :
        ;;
  configtest)
        configtest
        ;;
  *)
        echo $"Usage: $0 {start|stop|status|restart|reload|force-reload|condrestart|configtest}"
        exit 1
esac

exit $?
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/nginx.init.erb to tempfile /tmp/chef-rest20170405-7856-iuqtz5
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/nginx.init.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/.kitchen.dokken.yml
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002dbbaf8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/.kitchen.dokken.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002dbbb70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   ".kitchen.dokken.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh

### BEGIN INIT INFO
# Provides:          nginx
# Required-Start:    $local_fs $remote_fs $network $syslog
# Required-Stop:     $local_fs $remote_fs $network $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: starts the nginx web server
# Description:       starts nginx using start-stop-daemon
### END INIT INFO

PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin
DAEMON=<%= node['nginx']['binary'] %>
NAME=nginx
DESC=nginx
PID=<%= @pid_file %>

# Include nginx defaults if available
if [ -f /etc/default/nginx ]; then
	. /etc/default/nginx
fi

test -x $DAEMON || exit 0

set -e

. /lib/lsb/init-functions

test_nginx_config() {
	if $DAEMON -t $DAEMON_OPTS >/dev/null 2>&1; then
		return 0
	else
		$DAEMON -t $DAEMON_OPTS
		return $?
	fi
}

case "$1" in
	start)
		echo -n "Starting $DESC: "
		test_nginx_config
		# Check if the ULIMIT is set in /etc/default/nginx
		if [ -n "$ULIMIT" ]; then
			# Set the ulimits
			ulimit $ULIMIT
		fi
		start-stop-daemon --start --quiet --pidfile $PID \
		    --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	stop)
		echo -n "Stopping $DESC: "
		start-stop-daemon --stop --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	restart|force-reload)
		echo -n "Restarting $DESC: "
		start-stop-daemon --stop --quiet --pidfile \
		    $PID --exec $DAEMON || true
		sleep 1
		test_nginx_config
		start-stop-daemon --start --quiet --pidfile \
		    $PID --exec $DAEMON -- $DAEMON_OPTS || true
		echo "$NAME."
		;;

	reload)
		echo -n "Reloading $DESC configuration: "
		test_nginx_config
		start-stop-daemon --stop --signal HUP --quiet --pidfile $PID \
		    --exec $DAEMON || true
		echo "$NAME."
		;;

	configtest|testconfig)
		echo -n "Testing $DESC configuration: "
		if test_nginx_config; then
			echo "$NAME."
		else
			exit $?
		fi
		;;

	status)
		status_of_proc -p $PID "$DAEMON" nginx && exit 0 || exit $?
		;;
	*)
		echo "Usage: $NAME {start|stop|restart|reload|force-reload|status|configtest}" >&2
		exit 1
		;;
esac

exit 0
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb to tempfile /tmp/chef-rest20170405-7856-3b4ad4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/ubuntu/nginx.init.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/templates/ubuntu
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Jamie Winsor (<jamie@vialstudios.com>)
#
# Copyright 2012, Riot Games
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

Ohai.plugin(:Nginx) do
  provides "nginx"
  provides "nginx/version"
  provides "nginx/configure_arguments"
  provides "nginx/prefix"
  provides "nginx/conf_path"

  def parse_flags(flags)
    prefix = nil
    conf_path = nil

    flags.each do |flag|
      case flag
      when /^--prefix=(.+)$/
        prefix = Regexp.last_match(1)
      when /^--conf-path=(.+)$/
        conf_path = Regexp.last_match(1)
      end
    end

    [prefix, conf_path]
  end

  collect_data do
    nginx Mash.new unless nginx
    # if we fail we should still have these values to avoid nil class errors
    # if people try to use them
    nginx[:version]             = nil unless nginx[:version]
    nginx[:configure_arguments] = [] unless nginx[:configure_arguments]
    nginx[:prefix]              = nil unless nginx[:prefix]
    nginx[:conf_path]           = nil unless nginx[:conf_path]

    begin
      so = shell_out("<%= @binary %> -V")
      # Sample output:
      # nginx version: nginx/1.10.1
      # built by clang 7.3.0 (clang-703.0.31)
      # built with OpenSSL 1.0.2h  3 May 2016
      # TLS SNI support enabled
      # configure arguments: --prefix=/usr/local/Cellar/nginx/1.10.1 --with-http_ssl_module --with-pcre --with-ipv6 --sbin-path=/usr/local/Cellar/nginx/1.10.1/bin/nginx --with-cc-opt='-I/usr/local/Cellar/pcre/8.38/include -I/usr/local/Cellar/openssl/1.0.2h_1/include' --with-ld-opt='-L/usr/local/Cellar/pcre/8.38/lib -L/usr/local/Cellar/openssl/1.0.2h_1/lib' --conf-path=/usr/local/etc/nginx/nginx.conf --pid-path=/usr/local/var/run/nginx.pid --lock-path=/usr/local/var/run/nginx.lock --http-client-body-temp-path=/usr/local/var/run/nginx/client_body_temp --http-proxy-temp-path=/usr/local/var/run/nginx/proxy_temp --http-fastcgi-temp-path=/usr/local/var/run/nginx/fastcgi_temp --http-uwsgi-temp-path=/usr/local/var/run/nginx/uwsgi_temp --http-scgi-temp-path=/usr/local/var/run/nginx/scgi_temp --http-log-path=/usr/local/var/log/nginx/access.log --error-log-path=/usr/local/var/log/nginx/error.log --with-http_gzip_static_module

      if so.exitstatus == 0
        so.stderr.split("\n").each do |line|
          case line
          when /^configure arguments:(.+)/
            # This could be better: I'm splitting on configure arguments which removes them and also
            # adds a blank string at index 0 of the array. This is why we drop index 0 and map to
            # add the '--' prefix back to the configure argument.
            nginx[:configure_arguments] = Regexp.last_match(1).split(/\s--(?!param)/).drop(1).map { |ca| "--#{ca}" }

            prefix, conf_path = parse_flags(nginx[:configure_arguments])

            nginx[:prefix] = prefix
            nginx[:conf_path] = conf_path
          when /^nginx version: nginx\/(\d+\.\d+\.\d+)/
            nginx[:version] = Regexp.last_match(1)
          end
        end
      end
    rescue
      Ohai::Log.debug('Nginx plugin: Could not shell_out "<%= @binary %> -V"')
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb to tempfile /tmp/chef-rest20170405-7856-x0gtd7
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/chef_nginx/templates/default/plugins
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/TESTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001d39130
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/Berksfile.lock",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001d3a080>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "Berksfile.lock"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000254c278
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000254c318>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   ".foodcritic"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC016
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.foodcritic to tempfile /tmp/chef-rest20170405-7856-vd3loz
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/.foodcritic in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001dc09f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/.rubocop.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001dc0ab8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   ".rubocop.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Style/ExtraSpacing:
  Enabled: false
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.rubocop.yml to tempfile /tmp/chef-rest20170405-7856-12bz4o5
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002f3d570
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002f3d5e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001db5d48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/Berksfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001db5d98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "Berksfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
source "https://supermarket.chef.io"

metadata
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile to tempfile /tmp/chef-rest20170405-7856-6dz2v
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002fb1a10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/TESTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002fb1b50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "TESTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/.rubocop.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/Berksfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
DEPENDENCIES
  chef_nginx
    path: .
    metadata: true

GRAPH
  build-essential (8.0.0)
    mingw (>= 1.1)
    seven_zip (>= 0.0.0)
  chef_nginx (6.0.1)
    build-essential (>= 0.0.0)
    compat_resource (>= 12.16.3)
    ohai (>= 4.1.0)
    yum-epel (>= 0.0.0)
    zypper (>= 0.0.0)
  compat_resource (12.16.3)
  mingw (2.0.0)
    seven_zip (>= 0.0.0)
  ohai (5.0.2)
  seven_zip (2.0.2)
    windows (>= 1.2.2)
  windows (3.0.4)
    ohai (>= 4.0.0)
  yum-epel (2.1.1)
    compat_resource (>= 12.16.3)
  zypper (0.3.0)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000285b5e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000285bc20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/.kitchen.yml
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031e5048
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/.kitchen.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031e5430>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   ".kitchen.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
---
driver:
  name: vagrant

provisioner:
  name: chef_solo

platforms:
  - name: ubuntu-14.04
  - name: centos-7.2

suites:
  - name: default
    run_list:
      - recipe[chef_nginx::default]
    attributes:
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/Thorfile
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.yml to tempfile /tmp/chef-rest20170405-7856-oy2aas
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/Gemfile
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000333fa88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000333fbc8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Berksfile.lock to tempfile /tmp/chef-rest20170405-7856-e241y6
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/TESTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/.kitchen.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/TESTING.md to tempfile /tmp/chef-rest20170405-7856-128g0s3
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
driver:
  name: dokken
  privileged: true # because Docker and SystemD/Upstart
  chef_version: current

transport:
  name: dokken

provisioner:
  name: dokken
  deprecations_as_errors: true

verifier:
  name: inspec

platforms:
- name: debian-7
  driver:
    image: debian:7
    pid_one_command: /sbin/init
    intermediate_instructions:
      - RUN /usr/bin/apt-get update
      - RUN /usr/bin/apt-get install openssl apt-transport-https lsb-release procps net-tools -y

- name: debian-8
  driver:
    image: debian:8
    pid_one_command: /bin/systemd
    intermediate_instructions:
      - RUN /usr/bin/apt-get update
      - RUN /usr/bin/apt-get install openssl apt-transport-https lsb-release procps net-tools -y

- name: centos-6
  driver:
    image: centos:6
    platform: rhel
    pid_one_command: /sbin/init
    intermediate_instructions:
      - RUN yum -y install openssl which initscripts net-tools wget

- name: centos-7
  driver:
    image: centos:7
    platform: rhel
    pid_one_command: /usr/lib/systemd/systemd
    intermediate_instructions:
      - RUN yum -y install openssl lsof which systemd-sysv initscripts wget net-tools

- name: fedora-latest
  driver:
    image: fedora:latest
    pid_one_command: /usr/lib/systemd/systemd
    intermediate_instructions:
      - RUN dnf -y install which openssl which systemd-sysv initscripts wget net-tools

- name: ubuntu-14.04
  driver:
    image: ubuntu-upstart:14.04
    pid_one_command: /sbin/init
    intermediate_instructions:
      - RUN /usr/bin/apt-get update
      - RUN /usr/bin/apt-get install openssl apt-transport-https lsb-release procps net-tools -y

- name: ubuntu-16.04
  driver:
    image: ubuntu:16.04
    pid_one_command: /bin/systemd
    intermediate_instructions:
      - RUN /usr/bin/apt-get update
      - RUN /usr/bin/apt-get install openssl apt-transport-https lsb-release procps net-tools -y

- name: opensuse-leap
  driver:
    image: opensuse:leap
    pid_one_command: /bin/systemd
    intermediate_instructions:
      - RUN zypper --non-interactive install openssl aaa_base perl-Getopt-Long-Descriptive which hostname

suites:
  - name: distro_packages
    run_list:
      - recipe[test::distro_packages]
    excludes: # these all lack distro packages
      - centos-6
      - centos-7
  - name: source
    run_list:
      - recipe[test::source]
  - name: epel
    run_list:
      - recipe[test::epel]
    includes:
      - centos-6
      - centos-7
  - name: source
    run_list:
      - recipe[test::source]
  - name: upstream_repo
    run_list:
      - recipe[test::upstream_repo]
    excludes:
      - fedora-latest
  - name: modules
    run_list:
      - recipe[test::modules]
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.kitchen.dokken.yml to tempfile /tmp/chef-rest20170405-7856-o02y12
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/TESTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
.kitchen
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/Berksfile.lock in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/chefignore to tempfile /tmp/chef-rest20170405-7856-1bslwcx
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/chefignore in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002526168
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/Thorfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002526398>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "Thorfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# nginx Cookbook

[![Cookbook](http://img.shields.io/cookbook/v/chef_nginx.svg)](https://supermarket.chef.io/cookbooks/chef_nginx) [![Build Status](https://travis-ci.org/chef-cookbooks/chef_nginx.svg?branch=master)](https://travis-ci.org/chef-cookbooks/chef_nginx)

Installs nginx from package OR source code and sets up configuration handling similar to Debian's Apache2 scripts.

## nginx vs. chef_nginx

This cookbook is a fork from the 2.7.x branch of the [community nginx cookbook](https://github.com/miketheman/nginx).

This fork will be actively supported by Chef Software and we will continue to migrate the cookbook to a more resource driven model, with incremental changes following the SemVer model.

## Requirements

### Cookbooks

The following cookbooks are direct dependencies because they're used for common "default" functionality.

- `build-essential` for source installations
- `ohai` for setting up the ohai plugin
- `compat_resource` for setting up the nginx.org repository on Chef 12.1 - 12.13
- `yum-epel` for setting up the EPEL repository on RHEL platforms
- `zypper` for setting up the nginx.org repository on Suse platforms

### Platforms

The following platforms are supported and tested with Test Kitchen:

- Ubuntu 12.04+
- CentOS 5+
- Debian 7+
- openSUSE 13.2+
- FreeBSD 9+

Other Debian and RHEL family distributions are assumed to work.

### Chef

- Chef 12.1+

## Attributes

Node attributes for this cookbook are logically separated into different files. Some attributes are set only via a specific recipe.

### chef_nginx::auth_request

These attributes are used in the `chef_nginx::auth_request` recipe.

- `node['nginx']['auth_request']['url']` - The url to the auth_request module tar.gz file
- `node['nginx']['auth_request']['checksum']` - The checksum of the auth_request module tar.gz file

### chef_nginx::default

Generally used attributes. Some have platform specific values. See `attributes/default.rb`. "The Config" refers to "nginx.conf" the main config file.

- `node['nginx']['dir']` - Location for nginx configuration.
- `node['nginx']['conf_template']` - The `source` template to use when creating the `nginx.conf`.
- `node['nginx']['conf_cookbook']` - The cookbook where `node['nginx']['conf_template']` resides.
- `node['nginx']['log_dir']` - Location for nginx logs.
- `node['nginx']['log_dir_perm']` - Permissions for nginx logs folder.
- `node['nginx']['user']` - User that nginx will run as.
- `node['nginx']['group']` - Group for nginx.
- `node['nginx']['port']` - Port for nginx to listen on.
- `node['nginx']['binary']` - Path to the nginx binary.
- `node['nginx']['init_style']` - How to run nginx as a service when using `chef_nginx::source`. Values can be "upstart", "systemd", or "init". This attribute is not used in the `package` recipe because the package manager's init script style for the platform is assumed.
- `node['nginx']['upstart']['foreground']` - Set this to true if you want upstart to run nginx in the foreground, set to false if you want upstart to detach and track the process via pid.
- `node['nginx']['upstart']['runlevels']` - String of runlevels in the format '2345' which determines which runlevels nginx will start at when entering and stop at when leaving.
- `node['nginx']['upstart']['respawn_limit']` - Respawn limit in upstart stanza format, count followed by space followed by interval in seconds.
- `node['nginx']['keepalive']` - Whether to use `keepalive_timeout`, any value besides "on" will leave that option out of the config.
- `node['nginx']['keepalive_requests']` - used for config value of `keepalive_requests`.
- `node['nginx']['keepalive_timeout']` - used for config value of `keepalive_timeout`.
- `node['nginx']['worker_processes']` - used for config value of `worker_processes`.
- `node['nginx']['worker_connections']` - used for config value of `events { worker_connections }`
- `node['nginx']['worker_rlimit_nofile']` - used for config value of `worker_rlimit_nofile`. Can replace any "ulimit -n" command. The value depend on your usage (cache or not) but must always be superior than worker_connections.
- `node['nginx']['worker_shutdown_timeout']` - used for config value of `worker_shutdown_timeout`.
- `node['nginx']['worker_connections']` - used for config value of `events { worker_connections }`
- `node['nginx']['multi_accept']` - used for config value of `events { multi_accept }`. Try to accept() as many connections as possible. Disable by default.
- `node['nginx']['event']` - used for config value of `events { use }`. Set the event-model. By default nginx looks for the most suitable method for your OS.
- `node['nginx']['accept_mutex_delay']` - used for config value of `accept_mutex_delay`
- `node['nginx']['server_tokens']` - used for config value of `server_tokens`.
- `node['nginx']['server_names_hash_bucket_size']` - used for config value of `server_names_hash_bucket_size`.
- `node['nginx']['disable_access_log']` - set to true to disable the general access log, may be useful on high traffic sites.
- `node['nginx']['access_log_options']` - Set to a string of additional options to be appended to the access log directive
- `node['nginx']['error_log_options']` - Set to a string of additional options to be appended to the error log directive
- `node['nginx']['default_site_enabled']` - enable the default site
- `node['nginx']['sendfile']` - Whether to use `sendfile`. Defaults to "on".
- `node['nginx']['tcp_nopush']` - Whether to use `tcp_nopush`. Defaults to "on".
- `node['nginx']['tcp_nodelay']` - Whether to use `tcp_nodelay`. Defaults to "on".
- `node['nginx']['install_method']` - Whether nginx is installed from packages or from source.
- `node['nginx']['types_hash_max_size']` - Used for the `types_hash_max_size` configuration directive.
- `node['nginx']['types_hash_bucket_size']` - Used for the `types_hash_bucket_size` configuration directive.
- `node['nginx']['proxy_read_timeout']` - defines a timeout (between two successive read operations) for reading a response from the proxied server.
- `node['nginx']['client_body_buffer_size']` - used for config value of `client_body_buffer_size`.
- `node['nginx']['client_max_body_size']` - specifies the maximum accepted body size of a client request, as indicated by the request header Content-Length.
- `node['nginx']['repo_source']` - when installed from a package this attribute affects which yum repositories, if any, will be added before installing the nginx package. The default value of 'epel' will use the `yum-epel` cookbook, 'nginx' will use the `chef_nginx::repo` recipe, 'passenger' will use the 'chef_nginx::repo_passenger' recipe, and setting no value will not add any additional repositories.
- `node['nginx']['sts_max_age']` - Enable Strict Transport Security for all apps (See: <http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security>). This attribute adds the following header: Strict-Transport-Security max-age=SECONDS to all incoming requests and takes an integer (in seconds) as its argument.
- `node['nginx']['default']['modules']` - Array specifying which modules to enable via the conf-enabled config include function. Currently the only valid value is "socketproxy".
- `node['nginx']['load_modules']` - Array of paths to modules to dynamically load on nginx startup using the `load_module` directive. Default is `[]`.

#### authorized_ips module

- `node['nginx']['remote_ip_var']` - The remote ip variable name to use.
- `node['nginx']['authorized_ips']` - IPs authorized by the module

#### gzip module

- `node['nginx']['gzip']` - Whether to use gzip, can be "on" or "off"
- `node['nginx']['gzip_http_version']` - used for config value of `gzip_http_version`.
- `node['nginx']['gzip_comp_level']` - used for config value of `gzip_comp_level`.
- `node['nginx']['gzip_proxied']` - used for config value of `gzip_proxied`.
- `node['nginx']['gzip_vary']` - used for config value of `gzip_vary`.
- `node['nginx']['gzip_buffers']` - used for config value of `gzip_buffers`.
- `node['nginx']['gzip_types']` - used for config value of `gzip_types` - must be an Array.
- `node['nginx']['gzip_min_length']` - used for config value of `gzip_min_length`.
- `node['nginx']['gzip_disable']` - used for config value of `gzip_disable`.
- `node['nginx']['gzip_static']` - used for config value of `gzip_static` (`http_gzip_static_module` must be enabled)

#### Other configurations

- `node['nginx']['extra_configs']` - a Hash of key/values to nginx configuration.

### chef_nginx::echo

These attributes are used in the `chef_nginx::http_echo_module` recipe.

- `node['nginx']['echo']['version']` - The version of `http_echo` you want (default: 0.59)
- `node['nginx']['echo']['url']` - URL for the tarball.
- `node['nginx']['echo']['checksum']` - Checksum of the tarball.

### chef_nginx::devel

These attributes are used in the `chef_nginx::ngx_devel_module` recipe.

- `node['nginx']['devel']['version']` - The version of the nginx devel module
- `node['nginx']['devel']['url']` - The URL of the nginx devel module tar.gz file
- `node['nginx']['devel']['checksum']` - The checksum of the nginx devel module tar.gz file

### chef_nginx::geoip

These attributes are used in the `chef_nginx::http_geoip_module` recipe. Please note that the `country_dat_checksum` and `city_dat_checksum` are based on downloads from a datacenter in Fremont, CA, USA. You really should override these with checksums for the geo tarballs from your node location.

**Note** The upstream, maxmind.com, may block access for repeated downloads of the data files. It is recommended that you download and host the data files, and change the URLs in the attributes.

- `node['nginx']['geoip']['path']` - Location where to install the geoip libraries.
- `node['nginx']['geoip']['enable_city']` - Whether to enable City data
- `node['nginx']['geoip']['country_dat_url']` - Country data tarball URL
- `node['nginx']['geoip']['country_dat_checksum']` - Country data tarball checksum
- `node['nginx']['geoip']['city_dat_url']` - City data tarball URL
- `node['nginx']['geoip']['city_dat_checksum']` - City data tarball checksum
- `node['nginx']['geoip']['lib_version']` - Version of the GeoIP library to install
- `node['nginx']['geoip']['lib_url']` - (Versioned) Tarball URL of the GeoIP library
- `node['nginx']['geoip']['lib_checksum']` - Checksum of the GeoIP library tarball

### chef_nginx::http_realip_module

From: <http://nginx.org/en/docs/http/ngx_http_realip_module.html>

- `node['nginx']['realip']['header']` - Header to use for the RealIp Module; only accepts "X-Forwarded-For" or "X-Real-IP"
- `node['nginx']['realip']['addresses']` - Addresses to use for the `http_realip` configuration.
- `node['nginx']['realip']['real_ip_recursive']` - If recursive search is enabled, the original client address that matches one of the trusted addresses is replaced by the last non-trusted address sent in the request header field. Can be on "on" or "off" (default).

### chef_nginx::passenger

These attributes are used in the `chef_nginx::passenger` recipe.

- `node['nginx']['passenger']['version']` - passenger gem version
- `node['nginx']['passenger']['root']` - passenger gem root path
- `node['nginx']['passenger']['install_rake']` - set to false if rake already present on system
- `node['nginx']['passenger']['max_pool_size']` - maximum passenger pool size (default=10)
- `node['nginx']['passenger']['ruby']` - Ruby path for Passenger to use (default=`$(which ruby)`)
- `node['nginx']['passenger']['spawn_method']` - passenger spawn method to use (default=`smart-lv2`)
- `node['nginx']['passenger']['buffer_response']` - turns on or off response buffering (default=`on`)
- `node['nginx']['passenger']['max_pool_size']` - passenger maximum pool size (default=`6`)
- `node['nginx']['passenger']['min_instances']` - minimum instances (default=`1`)
- `node['nginx']['passenger']['max_instances_per_app']` - maximum instances per app (default=`0`)
- `node['nginx']['passenger']['pool_idle_time']` - passenger pool idle time (default=`300`)
- `node['nginx']['passenger']['max_requests']` - maximum requests (default=`0`)
- `node['nginx']['passenger']['nodejs']` - Nodejs path for Passenger to use (default=nil)
- `node['nginx']['passenger']['show_version_in_header']` - Show passenger version in HTTP headers (default=`on`)

Basic configuration to use the official Phusion Passenger repositories:

- `node['nginx']['repo_source']` - 'passenger'
- `node['nginx']['package_name']` - 'nginx-extras'
- `node['nginx']['passenger']['install_method']` - 'package'

### chef_nginx::openssl_source

These attributes are used in the `chef_nginx::openssl_source` recipe.

- `node['nginx']['openssl_source']['version']` - The version of OpenSSL you want to download and use (default: 1.0.1t)
- `node['nginx']['openssl_source']['url']` - The url for the OpenSSL source

### chef_nginx::rate_limiting

- `node['nginx']['enable_rate_limiting']` - set to true to enable rate limiting (`limit_req_zone` in nginx.conf)
- `node['nginx']['rate_limiting_zone_name']` - sets the zone in `limit_req_zone`.
- `node['nginx']['rate_limiting_backoff']` - sets the backoff time for `limit_req_zone`.
- `node['nginx']['rate_limit']` - set the rate limit amount for `limit_req_zone`.

### chef_nginx::socketproxy

These attributes are used in the `chef_nginx::socketproxy` recipe.

- `node['nginx']['socketproxy']['root']` - The directory (on your server) where socketproxy apps are deployed.
- `node['nginx']['socketproxy']['default_app']` - Static assets directory for requests to "/" that don't meet any proxy_pass filter requirements.
- `node['nginx']['socketproxy']['apps']['app_name']['prepend_slash']` - Prepend a slash to requests to app "app_name" before sending them to the socketproxy socket.
- `node['nginx']['socketproxy']['apps']['app_name']['context_name']` - URI (e.g. "app_name" in order to achieve "<http://mydomain.com/app_name>") at which to host the application "app_name"
- `node['nginx']['socketproxy']['apps']['app_name']['subdir']` - Directory (under `node['nginx']['socketproxy']['root']`) in which to find the application.

### chef_nginx::source

These attributes are used in the `chef_nginx::source` recipe. Some of them are dynamically modified during the run. See `attributes/source.rb` for default values.

- `node['nginx']['source']['url']` - (versioned) URL for the nginx source code. By default this will use the version specified as `node['nginx']['version']`.
- `node['nginx']['source']['prefix']` - (versioned) prefix for installing nginx from source
- `node['nginx']['source']['conf_path']` - location of the main config file, in `node['nginx']['dir']` by default.
- `node['nginx']['source']['modules']` - Array of modules that should be compiled into nginx by including their recipes in `chef_nginx::source`.
- `node['nginx']['source']['default_configure_flags']` - The default flags passed to the configure script when building nginx.
- `node['nginx']['configure_flags']` - Preserved for compatibility and dynamically generated from the `node['nginx']['source']['default_configure_flags']` in the `chef_nginx::source` recipe.
- `node['nginx']['source']['use_existing_user']` - set to `true` if you do not want `chef_nginx::source` recipe to create system user with name `node['nginx']['user']`.

### chef_nginx::status

These attributes are used in the `chef_nginx::http_stub_status_module` recipe.

- `node['nginx']['status']['port']` - The port on which nginx will serve the status info (default: 8090)

### chef_nginx::syslog

These attributes are used in the `chef_nginx::syslog_module` recipe.

- `node['nginx']['syslog']['git_repo']` - The git repository url to use for the syslog patches.
- `node['nginx']['syslog']['git_revision']` - The revision on the git repository to checkout.

### chef_nginx::upload_progress

These attributes are used in the `chef_nginx::upload_progress_module` recipe.

- `node['nginx']['upload_progress']['url']` - URL for the tarball.
- `node['nginx']['upload_progress']['checksum']` - Checksum of the tarball.
- `node['nginx']['upload_progress']['javascript_output']` - Output in javascript. Default is `true` for backwards compatibility.
- `node['nginx']['upload_progress']['zone_name']` - Zone name which will be used to store the per-connection tracking information. Default is `proxied`.
- `node['nginx']['upload_progress']['zone_size']` - Zone size in bytes. Default is `1m` (1 megabyte).

## Resources

### nginx_site

Enable or disable a Server Block in `#{node['nginx']['dir']}/sites-available` by calling nxensite or nxdissite (introduced by this cookbook) to manage the symbolic link in `#{node['nginx']['dir']}/sites-enabled`.

### Actions

- `enable` - Enable the nginx site (default)
- `disable` - Disable the nginx site

### Properties:

- `name` - (optional) Name of the site to enable. By default it's assumed that the name of the nginx_site resource is the site name, but this allows overriding that.
- `template` - (optional) Path to the source for the `template` resource.
- `variables` - (optional) Variables to be used with the `template` resource

## Ohai Plugin

The `ohai_plugin` recipe includes an Ohai plugin. It will be automatically installed and activated, providing the following attributes via ohai, no matter how nginx is installed (source or package):

- `node['nginx']['version']` - version of nginx
- `node['nginx']['configure_arguments']` - options passed to `./configure` when nginx was built
- `node['nginx']['prefix']` - installation prefix
- `node['nginx']['conf_path']` - configuration file path

In the source recipe, it is used to determine whether control attributes for building nginx have changed.

## Usage

This cookbook provides three distinct installation methods, all of which are controlled via attributes and executed using the chef_nginx::default recipe.

### Package installation using the nginx.org repositories

Nginx provides repositories for RHEL, Debian/Ubuntu, and Suse platforms with up to date packages available on older distributions. Due to the age of many nginx packages shipping with distros we believe this is the ideal installation method. With no attributes set the nginx.org repositories will be added to your system and nginx will be installed via package. This provides a solid out of the box install for most users.

### Package installation using distro repositories

If you prefer to use the packages included in your distro or to roll your own packages you'll want to set `node['nginx']['repo_source']` to `nil` or `distro` to skip the repository setup. The default recipe will still install nginx from packages, but you'll retain control over the package location.

### Source installation to compile non-dynamic modules

If you need control over how nginx is built, or you need non-dynamic modules to be included you'll need to compile nginx from source. We highly recommend against using this method as it requires the installation of a full compilation toolchain and development dependencies on your nodes. Creating your own packages with nginx compiled as necessary is a preferred option. If that's not possible you can set `node['nginx']['install_method']` to `source` and provide a version in `node['nginx']['version']`.

#### Specifying Modules to compile

The following recipes are used to build module support into nginx. To compile a module, add its recipe name to the array attribute `node['nginx']['source']['modules']`.

- `ipv6.rb` - enables IPv6 support
- `headers_more_module` -
- `http_auth_request_module``
- `http_echo_module.rb` - downloads the `http_echo_module` module and enables it as a module when compiling nginx.
- `http_geoip_module.rb` - installs the GeoIP libraries and data files and enables the module for compilation.
- `http_gzip_static_module.rb` - enables the module for compilation. Be sure to set `node['nginx']['gzip_static'] = 'yes'`.
- `http_mp4_module` -
- `http_perl_module.rb` - enables embedded Perl for compilation.
- `http_realip_module.rb` - enables the module for compilation and creates the configuration.
- `http_spdy_module` -
- `http_ssl_module.rb` - enables SSL for compilation.
- `http_stub_status_module.rb` - provides `nginx_status` configuration and enables the module for compilation.
- `http_v2_module`
- `ipv6` -
- `naxsi_module` - enables the naxsi module for the web application firewall for nginx.
- `ngx_devel_module` -
- `ngx_lua_module` -
- `openssl_source.rb` - downloads and uses custom OpenSSL source when compiling nginx
- `pagespeed_module`-
- `passenger` - builds the passenger gem and configuration for "`mod_passenger`".
- `set_misc` -
- `syslog_module` - enables syslog support for nginx. This only works with source builds. See <https://github.com/yaoweibin/nginx_syslog_patch> -
- `upload_progress_module.rb` - builds the `upload_progress` module and enables it as a module when compiling nginx.

## Resources

### nginx_site

Enable or disable a Server Block in `#{node['nginx']['dir']}/sites-available` by calling nxensite or nxdissite (introduced by this cookbook) to manage the symbolic link in `#{node['nginx']['dir']}/sites-enabled`.

### Actions

- `enable` - Enable the nginx site (default)
- `disable` - Disable the nginx site

### Properties:

- `name` - (optional) Name of the site to enable. By default it's assumed that the name of the nginx_site resource is the site name, but this allows overriding that.
- `template` - (optional) Path to the source for the `template` resource.
- `cookbook` - (optional) The cookbook that contains the template source.
- `variables` - (optional) Variables to be used with the `template` resource

## Adding New Modules

Previously we'd add each possible module to this cookbook itself. That's not necessary using wrapper cookbooks and we'd prefer to not add any addition module recipes at this time. Instead in your nginx wrapper cookbook setup any necessary packages and then include the follow code to add the module to the list of modules to compile:

```ruby
node.run_state['nginx_configure_flags'] =
  node.run_state['nginx_configure_flags'] | ['--with-SOMETHING', "--with-SOME_OPT='things'"]
```

## License & Authors

- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))
- Author:: Adam Jacob ([adam@chef.io](mailto:adam@chef.io))
- Author:: AJ Christensen ([aj@chef.io](mailto:aj@chef.io))
- Author:: Jamie Winsor ([jamie@vialstudios.com](mailto:jamie@vialstudios.com))
- Author:: Mike Fiedler ([miketheman@gmail.com](mailto:miketheman@gmail.com))

```text
Copyright 2008-2016, Chef Software, Inc

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/README.md to tempfile /tmp/chef-rest20170405-7856-13o9n9t
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/resources/rule.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000460c468
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/resources/rule.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000460c4e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "resources",
   "rule.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/.kitchen.dokken.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-p2wjsp
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/.travis.yml
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004567670
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/.travis.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004567760>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   ".travis.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/Vagrantfile
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004602468
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/Vagrantfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004602530>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "Vagrantfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-1r4azqf
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/recipes/disabled.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/recipes/_package.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tim Smith <tsmith84@gmail.com>
# Cookbook:: iptables
# Resource:: rule
#
# Copyright:: 2015-2016, Tim Smith
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

property :name, kind_of: String, name_attribute: true
property :source, kind_of: String, default: nil
property :cookbook, kind_of: String, default: nil
property :variables, kind_of: Hash, default: {}
property :lines, kind_of: String, default: nil

action :enable do
  # ensure we have execute[rebuild-iptables] in the outer run_context
  with_run_context :root do
    find_resource(:execute, 'rebuild-iptables') do
      command '/usr/sbin/rebuild-iptables'
      action :nothing
    end
  end

  if lines.nil?
    template "/etc/iptables.d/#{new_resource.name}" do
      source new_resource.source ? new_resource.source : "#{new_resource.name}.erb"
      mode '0644'
      cookbook new_resource.cookbook if new_resource.cookbook
      variables new_resource.variables
      backup false
      notifies :run, 'execute[rebuild-iptables]', :delayed
    end
  else
    file "/etc/iptables.d/#{new_resource.name}" do
      content new_resource.lines
      mode '0644'
      backup false
      notifies :run, 'execute[rebuild-iptables]', :delayed
    end
  end
end

action :disable do
  # ensure we have execute[rebuild-iptables] in the outer run_context
  with_run_context :root do
    find_resource(:execute, 'rebuild-iptables') do
      command '/usr/sbin/rebuild-iptables'
      action :nothing
    end
  end

  file "/etc/iptables.d/#{new_resource.name}" do
    action :delete
    backup false
    notifies :run, 'execute[rebuild-iptables]', :delayed
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/resources/rule.rb to tempfile /tmp/chef-rest20170405-7856-1hm72wu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/resources/rule.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046cec70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046cecc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: iptables
# Recipe:: default
#
# Copyright:: 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

system_ruby = node['iptables']['system_ruby']

include_recipe 'iptables::_package'

execute 'rebuild-iptables' do
  command '/usr/sbin/rebuild-iptables'
  action :nothing
end

directory '/etc/iptables.d' do
  action :create
end

template '/usr/sbin/rebuild-iptables' do
  source 'rebuild-iptables.erb'
  mode '0755'
  variables(
    hashbang: ::File.exist?(system_ruby) ? system_ruby : '/opt/chef/embedded/bin/ruby'
  )
end

# debian based systems load iptables during the interface activation
template '/etc/network/if-pre-up.d/iptables_load' do
  source 'iptables_load.erb'
  mode '0755'
  variables iptables_save_file: '/etc/iptables/general'
  only_if { platform_family?('debian') }
end

# iptables service exists only on RHEL based systems
if platform_family?('rhel') || platform_family?('fedora')
  file '/etc/sysconfig/iptables' do
    content '# Chef managed placeholder to allow iptables service to start'
    action :create_if_missing
  end

  template '/etc/sysconfig/iptables-config' do
    source 'iptables-config.erb'
    mode '600'
    variables config: node['iptables']['iptables_sysconfig']
  end

  template '/etc/sysconfig/ip6tables-config' do
    source 'iptables-config.erb'
    mode '600'
    variables config: node['iptables']['ip6tables_sysconfig']
  end

  service 'iptables' do
    action [:enable, :start]
    supports status: true, start: true, stop: true, restart: true
    not_if { platform_family?('fedora') }
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-13p7cpd
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045c42a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045c42f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = '2'

Vagrant.require_version '>= 1.5.0'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  config.vm.hostname = 'chef-nginx-berkshelf'

  # Set the version of chef to install using the vagrant-omnibus plugin
  # NOTE: You will need to install the vagrant-omnibus plugin:
  #
  #   $ vagrant plugin install vagrant-omnibus
  #
  if Vagrant.has_plugin?("vagrant-omnibus")
    config.omnibus.chef_version = 'latest'
  end

  # Every Vagrant virtual environment requires a box to build off of.
  # If this value is a shorthand to a box in Vagrant Cloud then
  # config.vm.box_url doesn't need to be specified.
  config.vm.box = 'bento/ubuntu-14.04'


  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :private_network, type: 'dhcp'

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider :virtualbox do |vb|
  #   # Don't boot with headless mode
  #   vb.gui = true
  #
  #   # Use VBoxManage to customize the VM. For example to change memory:
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]
  # end
  #
  # View the documentation for the provider you're using for more
  # information on available options.

  # The path to the Berksfile to use with Vagrant Berkshelf
  # config.berkshelf.berksfile_path = "./Berksfile"

  # Enabling the Berkshelf plugin. To enable this globally, add this configuration
  # option to your ~/.vagrant.d/Vagrantfile file
  config.berkshelf.enabled = true

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to exclusively install and copy to Vagrant's shelf.
  # config.berkshelf.only = []

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to skip installing and copying to Vagrant's shelf.
  # config.berkshelf.except = []

  config.vm.provision :chef_solo do |chef|
    chef.json = {
      mysql: {
        server_root_password: 'rootpass',
        server_debian_password: 'debpass',
        server_repl_password: 'replpass'
      }
    }

    chef.run_list = [
      'recipe[chef_nginx::default]'
    ]
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# encoding: utf-8

require 'bundler'
require 'bundler/setup'
require 'berkshelf/thor'

begin
  require 'kitchen/thor_tasks'
  Kitchen::ThorTasks.new
rescue LoadError
  puts '>>>>> Kitchen gem not loaded, omitting tasks' unless ENV['CI']
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Thorfile to tempfile /tmp/chef-rest20170405-7856-ljm6f7
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/Thorfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Vagrantfile to tempfile /tmp/chef-rest20170405-7856-ed8o33
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047b7f10
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/recipes/disabled.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047b7f60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "recipes",
   "disabled.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000467c790
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/recipes/_package.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000467c7e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "recipes",
   "_package.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/Vagrantfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/chef_nginx/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# nginx Cookbook CHANGELOG

This file is used to list changes made in each version of the nginx cookbook.

## 6.0.1 (2017-04-04)

- double quotes are unnecessary in lua configure flags

## 6.0.0 (2017-03-25)

### Breaking change

- Support for Runit as an init system has been removed. If you require runit you will need to pin to the 5.X cookbook release. We highly recommend using either systemd or upstart instead of Runit.

### Other changes

- Install nginx 1.10.3 for source based installs
- Remove freebsd cookbook from testing as it’s not necessary anymore
- Bump OpenSSL to 1.0.2k

## 5.1.3 (2017-03-24)

- Update apache2 license string
- Add image/svg+xml to gzip_files defaults
- support `worker_shutdown_timeout` released in 1.11.11

## 5.1.2 (2017-03-14)

- Setup LD options to include /usr/local/lib for libluajit in search path and bump the lua version

## 5.1.1 (2017-03-02)

- Add WantedBy to systemd service file so it starts at boot
- Avoid a warning in nginx_site by moving the template check outside the resource
- Allow nginx_site to specify template as an array of templates

## 5.1.0 (2017-03-01)

- Support the load_module directive
- Test with Local Delivery and not Rake
- Remove EOL platforms from the kitchen configs

## 5.0.7 (2017-02-12)

- Fix Opsworks compatibility
- Resolve a Chef 13 deprecation warning

## 5.0.6 (2017-01-16)

- Rebuild shared library cache after installing luajit

## 5.0.5 (2017-01-09)

- Fix typo in the pagespeed recipe

## 5.0.4 (2017-01-04)

- Avoid deprecation warnings by only defining nginx service once

## 5.0.3 (2017-01-03)

- Add ability to write passenger log to another location
- Properly disable the default site with nginx.org packages

## 5.0.2 (2016-12-22)
- Requite the latest compat_resource

## 5.0.1 (2016-12-13)

- Use multipackage in pagespeed module recipe to speed up installs
- Simplify the distro repo setup logic to ensure we're using the correct repos under all conditions. Previously the upstream repo was being missed on Suse systems
- Determine pidfile location correctly via a helper so we correctly set pidfiles when using Upstream packages on Ubuntu 14.04 / 16.04. This involved removing the attribute for the pidfile location, which may cause issues if you relied on that attribute.
- Testing improvements to make sure all suites run and the suites are testing the correct conditions

## 5.0.0 (2016-12-07)

### Breaking changes

- Default to the upstream nginx.org repo for package installs. The official nginx repo gives an improved experience over outdated distro releases. This can be disabled via attribute if you'd like to remain on the distro packages.

### Other changes

- Add a deprecation warning when using runit
- Rewrite the readme usage section
- Better document how to compile modules

## 4.0.2 (2016-12-01)
- Default to openssl 1.0.2j with source installs
- Add cookbook property to the nginx_site resource to allow using templates defined in other cookbooks
- Prevent default docroot index.html on bad url in status
- Readme improvements

## 4.0.1 (2016-10-31)
- Fix a version check in the realip recipe
- Align the config with the default config a bit
- Fix the ChefSpec matchers now that nginx_site is a custom resource

## 4.0.0 (2016-10-31)

### Breaking changes

The nginx_site definition is now a custom_resource. This improves the overall experience and allows for notifications and reporting on resource updates. It does change the behavior in some circumstances however. Previously to disable a site you would set 'enable false' on your definition. This will still function, but will result in a deprecation warning. Instead you should use 'action :disable' since this is a real resource now.

### Other changes

- Avoid splitting on compile params in the ohai plugin, which resulted in some source installs attempting to install on every Chef run.
- Expanded testing and improved kitchen suite setup
- Improved documentation of attributes and cookbook usage

## 3.2.0 (2016-10-28)

- Reload nginx on site change

## 3.1.2 (2016-10-24)

- [GH-26] Remove guard on package[nginx] resource
- Fix pcre packages on RHEL that prevented pagespeed module compilation

## 3.1.1 (2016-09-21)

- Raise on error vs. Chef::Appliation.fatal
- Require compat_resource with notification fixes

## 3.1.0 (2016-09-14)

- Resolve FC023 warnings
- FreeBSD fixes
- Fail hard on unsupported platforms in the source recipe
- Install 'ca-certificates' packages with passenger
- Add `passenger_show_version_in_header` config
- Remove chef 11 compatibility
- Replace apt/yum deps with compat_resource
- Fix specs for freebsd source installs
- Remove apt recipe from the repo_passenger recipe
- Switch to += operator as << also incorrectly replaces text in root.

## 3.0.0 (2016-08-18)

### Breaking changes

Ideally we'd offer perfect backwards compatibility forever, but in order to maintain the cookbook going forward we've evaluated the current scope of the cookbook and removed lesser used functionality that added code complexity.

- The minimum chef-client version is now 12.1 or later, which will enables support for Ohai 7+ plugins, the ohai_plugin custom resource, and automatic init system discovery.
- Support for Gentoo has been removed. Gentoo lacks an official Chef package and there is no Bento image to use for Test Kitchen integration tests.
- Support for the bluepill init system has been removed. Usage of this init system has declined, and supporting it added a cookbook dependency as well as code complexity.
- Ubuntu source installs will no longer default to runit, and will instead use either Upstart or Systemd depending on the release of Ubuntu. You can still force the use of runit by setting default['nginx']['init_style'] to 'runit'. Runit was used historically before reliable init systems were shipped with Ubuntu. Both Upstart and Systemd have the concept of restarting on failure, which was the main reason for choosing Runit over sys-v init.

### Other changes

- Don't setup the YUM EPEL repo on Fedora as it's not needed
- Systemd based platforms will now use systemd by default for source installs
- Retry downloads of the nginx source file as the mirror sometimes fails to load
- Download the nginx source from the secure nginx.org site
- Updated the Ohai plugin to avoid deprecation notices and function better on non us-en locale systems
- Install source install pre-reqs using multi-package which speeds up Chef runs
- Add testing in Travis with Kitchen Dokken for full integration testing of each PR
- Add integration test on Chef 12.1 as well as the latest Chef to ensure compatibility with the oldest release we support
- Remove installation of apt-transport-https and instead increase the apt dependency to >= 2.9.1 which includes the installation of apt-transport-https
- Don't try to setup the nginx.org repo on Fedora as this will fail
- Better log when trying to setup repositories on unsupported platforms
- Fixed source_url and issue_url in the metadata to point to the correct URLs
- Removed Chef 10 compatibility code
- Chefspec platform updates and minor fixes
- Replace all usage of node.set with node.normal to avoid deprecation notices
- Remove the suse init script that isn't used anymore
- Speed up the specs with caching
- Move test attributes and runlists out the kitchen.yml files and into a test cookbook

## 2.9.0 (2016-08-12)

- Add support for Suse Nginx.org packages

## v2.8.0 (2016-08-12)

This is the first release of the nginx codebase under the chef_nginx namespace. We've chosen to bring this cookbook under the direction of the Community Cookbook Team, in order to ship a working 2.X release. The cookbook name has been changed, but all attributes are the same and compatibility has been maintained. After this 2.8.0 release we will release 3.0 as a Chef 12+ version of the cookbook and then work to add additional custom resources for managing nginx with wrapper cookbooks. Expect regular releases as we march towards a resource driven model.

- Removed the restrictive version constraints for cookbook dependencies that prevented users from utilizing new functionality. Ohai has been pinned to < 4.0 to allow for Chef 11 compatibility, but other cookbooks have no upper limit
- Updated all modules in the source install to their latest releases
- Removed the GeoIP database checksums as these files are constantly updates and this causes Chef run failures
- Updated OpenSSL for source installs to 1.0.1t
- Updated the source install of Nginx to version 1.10.1
- Updated the ohai recipe to install a Ohai 7+ compatible plugin on systems running Ohai 7+
- Fixed installation of Passenger version 5.X+
- Added a http_v2_module recipe
- Replaced node.set usage with node.normal to avoid deprecation warnings
- Removed the apt version pin in the Berkfile that wasn't necessary and constrained the apt version
- Removed the lua-devel package install from the lua recipe that failed chef runs and wasn't necessary
- Removed duplicate packages from the source module installs
- Added a dependency on the yum cookbook which was missing from the metadata
- Updated the mime.types file and added the charset_types configuration option to the nginx config
- Added source_url, issue_url, and chef_version metadata
- Fixed the pid file attribute logic for Ubuntu 16.04
- Removed the Contributing doc that was for contributing to Opscode cookbooks
- Updated all test dependencies in the Gemfile
- Removed default user/group/mode declarations from resources for simplicity
- Updated documentation for dependencies in the README
- Added a chefignore file to limit the cookbook files that are uploaded to the chef server and speed up cookbook syncs to nodes
- Added additional platforms to the Test Kitchen config and removed the .kitchen.cloud.yml file
- Switched integration tests to Inspec and fixed several non-functional tests
- Switched from Rubocop to Cookstyle and resolved all warnings
- Added the standard Chef Rakefile for simplified testing
- Updated Chefspecs to avoid constant deprecation warnings and converge using chef-zero on a newer Debian 8 system
- Switch Travis CI testing to use ChefDK instead of RVM/Gem installs
- Removed testing dependencies from the Gemfile as testing should be performed via ChefDK. Release gems are still in the Gemfile as they are not shipped with ChefDK
- Added a maintainers.md doc and updated the contributing/testing docs to point to the Chef docs
- Removed Guard as guard-foodcritic doesn't support the latest release which makes guard incompatible with ChefDK

## v2.7.6 (2015-03-17)

- Bugfix sites do not need a .conf suffix anymore, [#338][@runningman84]

## v2.7.5 (2015-03-17)

**NOTE** As of this release, this cookbook in its current format is deprecated, and only critical bugs and fixes will be added. A complete rewrite is in progress, so we appreciate your patience while we sort things out. The amount of change included here

- Fix nginx 1.4.4 archive checksum to prevent redownload, [#305][@irontoby]
- Allow setting an empty string to prevent additional repos, [#243][@miketheman]
- Use correct `mime.types` for javascript, [#259][@dwradcliffe]
- Fix `headers_more` module for source installs, [#279], [@josh-padnick] & [@miketheman]
- Remove `libtool` from `geoip` and update download paths & checksums, [@miketheman]
- Fix unquoted URL with params failing geoip module build (and tests!), [#294][@karsten-bruckmann] & [@miketheman]
- Fix typo in `source.rb`, [#205][@gregkare]
- Test updates: ChefSpec, test-kitchen. Lots of help by [@jujugrrr]
- Toolchain updates for testing
- Adds support for `tcp_nopush`, `tcp_nodelay` [@shtouff]

After merging a ton of pull requests, here's a brief changelog. Click each to read more.

- Merge pull request [#335] from [@stevenolen]
- Merge pull request [#332] from [@monsterstrike]
- Merge pull request [#331] from [@jalberto]
- Merge pull request [#327] from [@nkadel-skyhook]
- Merge pull request [#326] from [@bchrobot]
- Merge pull request [#325] from [@CanOfSpam3bug324]
- Merge pull request [#321] from [@jalberto]
- Merge pull request [#318] from [@evertrue]
- Merge pull request [#314] from [@bkw]
- Merge pull request [#312] from [@thomasmeeus]
- Merge pull request [#310] from [@morr]
- Merge pull request [#305] from [@irontoby]
- Merge pull request [#302] from [@auth0]
- Merge pull request [#298] from [@Mytho]
- Merge pull request [#269] from [@yveslaroche]
- Merge pull request [#259] from [@dwradcliffe]
- Merge pull request [#254] from [@evertrue]
- Merge pull request [#252] from [@gkra]
- Merge pull request [#249] from [@whatcould]
- Merge pull request [#240] from [@jcoleman]
- Merge pull request [#236] from [@adepue]
- Merge pull request [#230] from [@n1koo]
- Merge pull request [#225] from [@thommay]
- Merge pull request [#223] from [@firmhouse]
- Merge pull request [#220] from [@evertrue]
- Merge pull request [#219] from [@evertrue]
- Merge pull request [#204] from [@usertesting]
- Merge pull request [#200] from [@ffuenf]
- Merge pull request [#188] from [@larkin]
- Merge pull request [#184] from [@tvdinner]
- Merge pull request [#183] from [@jenssegers]
- Merge pull request [#174] from [@9minutesnooze]

<https://github.com/miketheman/nginx/compare/v2.7.4...v2.7.5>

## v2.7.4 (2014-06-06)

- [COOK-4703] Default openssl version to 1.0.1h to address CVE-2014-0224

## v2.7.2 (2014-05-27)

- [COOK-4658] - Nginx::socketproxy if the context is blank or nonexistent, the location in the config file has a double slash at the beginning
- [COOK-4644] - add support to nginx::repo for Amazon Linux
- Allow .kitchen.cloud.yml to use an environment variable for the EC2 Availability Zone

## v2.7.0 (2014-05-15)

- [COOK-4643] - Update metadata lock on ohai
- [COOK-4588] - Give more love to FreeBSD
- [COOK-4601] - Add proxy type: Socket

## v2.6.2 (2014-04-09)

[COOK-4527] - set default openssl source version to 1.0.1g to address CVE-2014-0160 aka Heartbleed

## v2.6.0 (2014-04-08)

- Reverting COOK-4323

## v2.5.0 (2014-03-27)

- [COOK-4323] - Need a resource to easily configure available sites (vhosts)

## v2.4.4 (2014-03-13)

- Updating for build-essential 2.0

## v2.4.2 (2014-02-28)

Fixing bad commit from COOK-4330

## v2.4.1 (2014-02-27)

- [COOK-4345] - nginx default recipe include install type recipe directly

## v2.4.0 (2014-02-27)

- [COOK-4380] - kitchen.yml platform listings for ubuntu-10.04 and ubuntu-12.04 are missing the dot
- [COOK-4330] - Bump nginx version for security issues (CVE-2013-0337, CVE-2013-4547)

## v2.3.0 (2014-02-25)

- **[COOK-4293](https://tickets.chef.io/browse/COOK-4293)** - Update testing Gems in nginx and fix a rubocop warnings
- **[COOK-4237] - Nginx version incorrectly parsed on Ubuntu 13
- **[COOK-3866] - Nginx default site folder

## v2.2.2 (2014-01-23)

[COOK-3672] - Add gzip_static option

## v2.2.0

No changes. Version bump for toolchain

## v2.1.0

[COOK-3923] - Enable the list of packages installed by nginx::passenger to be configurable [COOK-3672] - Nginx should support the gzip_static option Updating for yum ~> 3.0 Fixing up style for rubocop Updating test-kitchen harness

## v2.0.8

fixing metadata version error. locking to 3.0

## v2.0.6

Locking yum dependency to '< 3'

## v2.0.4

### Bug

- **[COOK-3808](https://tickets.chef.io/browse/COOK-3808)** - nginx::passenger run fails because of broken installation of package dependencies
- **[COOK-3779](https://tickets.chef.io/browse/COOK-3779)** - Build in master fails due to rubocop error

## v2.0.2

### Bug

- **[COOK-3808](https://tickets.chef.io/browse/COOK-3808)** - nginx::passenger run fails because of broken installation of package dependencies
- **[COOK-3779](https://tickets.chef.io/browse/COOK-3779)** - Build in master fails due to rubocop error

## v2.0.0

### Improvement

- **[COOK-3733](https://tickets.chef.io/browse/COOK-3733)** - Add RPM key names and GPG checking
- **[COOK-3687](https://tickets.chef.io/browse/COOK-3687)** - Add support for `http_perl`
- **[COOK-3603](https://tickets.chef.io/browse/COOK-3603)** - Add a recipe for using custom openssl
- **[COOK-3602](https://tickets.chef.io/browse/COOK-3602)** - Use an attribute for the status module port
- **[COOK-3549](https://tickets.chef.io/browse/COOK-3549)** - Refactor custom modules support
- **[COOK-3521](https://tickets.chef.io/browse/COOK-3521)** - Add support for `http_auth_request`
- **[COOK-3520](https://tickets.chef.io/browse/COOK-3520)** - Add support for `spdy`
- **[COOK-3185](https://tickets.chef.io/browse/COOK-3185)** - Add `gzip_*` attributes
- **[COOK-2712](https://tickets.chef.io/browse/COOK-2712)** - Update `upload_progress` version to 0.9.0

### Bug

- **[COOK-3686](https://tickets.chef.io/browse/COOK-3686)** - Remove deprecated 'passenger_use_global_queue' directive
- **[COOK-3626](https://tickets.chef.io/browse/COOK-3626)** - Parameterize hardcoded path to helper scripts
- **[COOK-3571](https://tickets.chef.io/browse/COOK-3571)** - Reloda ohai plugin after installation
- **[COOK-3428](https://tickets.chef.io/browse/COOK-3428)** - Fix an issue where access logs are not disabled when the `disable_access_log` attribute is set to `true`
- **[COOK-3322](https://tickets.chef.io/browse/COOK-3322)** - Fix an issue where `nginx::ohai_plugin` fails when using source recipe
- **[COOK-3241](https://tickets.chef.io/browse/COOK-3241)** - Fix an issue where`nginx::ohai_plugin` fails unless using source recipe

### New Feature

- **[COOK-3605](https://tickets.chef.io/browse/COOK-3605)** - Add Lua module

## v1.8.0

### Bug

- **[COOK-3397](https://tickets.chef.io/browse/COOK-3397)** - Fix user from nginx package on Gentoo
- **[COOK-2968](https://tickets.chef.io/browse/COOK-2968)** - Fix foodcritic failure
- **[COOK-2723](https://tickets.chef.io/browse/COOK-2723)** - Remove duplicate passenger `max_pool_size`

### Improvement

- **[COOK-3186](https://tickets.chef.io/browse/COOK-3186)** - Add `client_body_buffer_size` and `server_tokens attributes`
- **[COOK-3080](https://tickets.chef.io/browse/COOK-3080)** - Add rate-limiting support
- **[COOK-2927](https://tickets.chef.io/browse/COOK-2927)** - Add support for `real_ip_recursive` directive
- **[COOK-2925](https://tickets.chef.io/browse/COOK-2925)** - Fix ChefSpec converge
- **[COOK-2724](https://tickets.chef.io/browse/COOK-2724)** - Automatically create directory for PID file
- **[COOK-2472](https://tickets.chef.io/browse/COOK-2472)** - Bump nginx version to 1.2.9
- **[COOK-2312](https://tickets.chef.io/browse/COOK-2312)** - Add additional `mine_types` to the `gzip_types` value

### New Feature

- **[COOK-3183](https://tickets.chef.io/browse/COOK-3183)** - Allow inclusion in extra-cookbook modules

## v1.7.0

### Improvement

- [COOK-3030]: The repo_source attribute should allow you to not add any additional repositories to your node

### Sub-task

- [COOK-2738]: move nginx::passenger attributes to `nginx/attributes/passenger.rb`

## v1.6.0

### Task

- [COOK-2409]: update nginx::source recipe for new `runit_service` resource
- [COOK-2877]: update nginx cookbook test-kitchen support to 1.0 (alpha)

### Improvement

- [COOK-1976]: nginx source should be able to configure binary path
- [COOK-2622]: nginx: add upstart support
- [COOK-2725]: add "configtest" subcommand in initscript

### Bug

- [COOK-2398]: nginx_site definition cannot be used to manage the default site
- [COOK-2493]: Resources in nginx::source recipe always use 1.2.6 version, even overriding version attribute
- [COOK-2531]: Remove usage of non-existant attribute "description" for `apt_repository`
- [COOK-2665]: nginx::source install with custom sbin_path breaks ohai data

## v1.4.0

- [COOK-2183] - Install nginx package from nginxyum repo
- [COOK-2311] - headers-more should be updated to the latest version
- [COOK-2455] - Support sendfile option (nginx.conf)

## v1.3.0

- [COOK-1979] - Passenger module requires curl-dev(el)
- [COOK-2219] - Support `proxy_read_timeout` (in nginx.conf)
- [COOK-2220] - Support `client_max_body_size` (in nginx.conf)
- [COOK-2280] - Allow custom timing of nginx_site's reload notification
- [COOK-2304] - nginx cookbook should install 1.2.6 not 1.2.3 for source installs
- [COOK-2309] - checksums for geoip files need to be updated in nginx
- [COOK-2310] - Checksum in the `nginx::upload_progress` recipe is not correct
- [COOK-2314] - nginx::passenger: Install the latest version of passenger
- [COOK-2327] - nginx: passenger recipe should find ruby via Ohai
- [COOK-2328] - nginx: Update mime.types file to the latest
- [COOK-2329] - nginx: Update naxsi rules to the current

## v1.2.0

- [COOK-1752] - Add headers more module to the nginx cookbook
- [COOK-2209] - nginx source recipe should create web user before creating directories
- [COOK-2221] - make nginx::source compatible with gentoo
- [COOK-2267] - add version for runit recommends

## v1.1.4

- [COOK-2168] - specify package name as an attribute

## v1.1.2

- [COOK-1766] - Nginx Source Recipe Rebuilding Source at Every Run
- [COOK-1910] - Add IPv6 module
- [COOK-1966] - nginx cookbook should let you set `gzip_vary` and `gzip_buffers` in nginx.conf
- [COOK-1969]- - nginx::passenger module not included due to use of symbolized `:nginx_configure_flags`
- [COOK-1971] - Template passenger.conf.erb configures key `passenger_max_pool_size` 2 times
- [COOK-1972] - nginx::source compile_nginx_source reports success in spite of failed compilation
- [COOK-1975] - nginx::passenger requires rake gem
- [COOK-1979] - Passenger module requires curl-dev(el)
- [COOK-2080] - Restart nginx on source compilation

## v1.1.0

- [COOK-1263] - Nginx log (and possibly other) directory creations should be recursive
- [COOK-1515] - move creation of `node['nginx']['dir']` out of commons.rb
- [COOK-1523] - nginx `http_geoip_module` requires libtoolize
- [COOK-1524] - nginx checksums are md5
- [COOK-1641] - add "use", "`multi_accept`" and "`worker_rlimit_nofile`" to nginx cookbook
- [COOK-1683] - Nginx fails Windows nodes just by being required in metadata
- [COOK-1735] - Support Amazon Linux in nginx::source recipe
- [COOK-1753] - Add ability for nginx::passenger recipe to configure more Passenger global settings
- [COOK-1754] - Allow group to be set in nginx.conf file
- [COOK-1770] - nginx cookbook fails on servers that don't have a "cpu" attribute
- [COOK-1781] - Use 'sv' to reload nginx when using runit
- [COOK-1789] - stop depending on bluepill, runit and yum. they are not required by nginx cookbook
- [COOK-1791] - add name attribute to metadata
- [COOK-1837] - nginx::passenger doesn't work on debian family
- [COOK-1956] - update naxsi version due to incompatibility with newer nginx

## v1.0.2

- [COOK-1636] - relax the version constraint on ohai

## v1.0.0

- [COOK-913] - defaults for gzip cause warning on service restart
- [COOK-1020] - duplicate MIME type
- [COOK-1269] - add passenger module support through new recipe
- [COOK-1306] - increment nginx version to 1.2 (now 1.2.3)
- [COOK-1316] - default site should not always be enabled
- [COOK-1417] - resolve errors preventing build from source
- [COOK-1483] - source prefix attribute has no effect
- [COOK-1484] - source relies on /etc/sysconfig
- [COOK-1511] - add support for naxsi module
- [COOK-1525] - nginx source is downloaded every time
- [COOK-1526] - nginx_site does not remove sites
- [COOK-1527] - add `http_echo_module` recipe

## v0.101.6

Erroneous cookbook upload due to timeout.

Version #'s are cheap.

## v0.101.4

- [COOK-1280] - Improve RHEL family support and fix ohai_plugins recipe bug
- [COOK-1194] - allow installation method via attribute
- [COOK-458] - fix duplicate nginx processes

## v0.101.2

- [COOK-1211] - include the default attributes explicitly so version is available.

## v0.101.0

**Attribute Change**: `node['nginx']['url']` -> `node['nginx']['source']['url']`; see the README.md.

- [COOK-1115] - daemonize when using init script
- [COOK-477] - module compilation support in nginx::source

## v0.100.4

- [COOK-1126] - source version bump to 1.0.14

## v0.100.2

- [COOK-1053] - Add :url attribute to nginx cookbook

## v0.100.0

- [COOK-818] - add "application/json" per RFC.
- [COOK-870] - bluepill init style support
- [COOK-957] - Compress application/javascript.
- [COOK-981] - Add reload support to NGINX service

## v0.99.2

- [COOK-809] - attribute to disable access logging
- [COOK-772] - update nginx download source location

<!-- - The following link definition list is generated by PimpMyChangelog - -->

[#174]: https://github.com/miketheman/nginx/issues/174
[#183]: https://github.com/miketheman/nginx/issues/183
[#184]: https://github.com/miketheman/nginx/issues/184
[#188]: https://github.com/miketheman/nginx/issues/188
[#200]: https://github.com/miketheman/nginx/issues/200
[#204]: https://github.com/miketheman/nginx/issues/204
[#205]: https://github.com/miketheman/nginx/issues/205
[#219]: https://github.com/miketheman/nginx/issues/219
[#220]: https://github.com/miketheman/nginx/issues/220
[#223]: https://github.com/miketheman/nginx/issues/223
[#225]: https://github.com/miketheman/nginx/issues/225
[#230]: https://github.com/miketheman/nginx/issues/230
[#236]: https://github.com/miketheman/nginx/issues/236
[#240]: https://github.com/miketheman/nginx/issues/240
[#243]: https://github.com/miketheman/nginx/issues/243
[#249]: https://github.com/miketheman/nginx/issues/249
[#252]: https://github.com/miketheman/nginx/issues/252
[#254]: https://github.com/miketheman/nginx/issues/254
[#259]: https://github.com/miketheman/nginx/issues/259
[#269]: https://github.com/miketheman/nginx/issues/269
[#279]: https://github.com/miketheman/nginx/issues/279
[#294]: https://github.com/miketheman/nginx/issues/294
[#298]: https://github.com/miketheman/nginx/issues/298
[#302]: https://github.com/miketheman/nginx/issues/302
[#305]: https://github.com/miketheman/nginx/issues/305
[#310]: https://github.com/miketheman/nginx/issues/310
[#312]: https://github.com/miketheman/nginx/issues/312
[#314]: https://github.com/miketheman/nginx/issues/314
[#318]: https://github.com/miketheman/nginx/issues/318
[#321]: https://github.com/miketheman/nginx/issues/321
[#325]: https://github.com/miketheman/nginx/issues/325
[#326]: https://github.com/miketheman/nginx/issues/326
[#327]: https://github.com/miketheman/nginx/issues/327
[#331]: https://github.com/miketheman/nginx/issues/331
[#332]: https://github.com/miketheman/nginx/issues/332
[#335]: https://github.com/miketheman/nginx/issues/335
[#338]: https://github.com/miketheman/nginx/issues/338
[@9minutesnooze]: https://github.com/9minutesnooze
[@adepue]: https://github.com/adepue
[@auth0]: https://github.com/auth0
[@bchrobot]: https://github.com/bchrobot
[@bkw]: https://github.com/bkw
[@canofspam3bug324]: https://github.com/CanOfSpam3bug324
[@dwradcliffe]: https://github.com/dwradcliffe
[@evertrue]: https://github.com/evertrue
[@ffuenf]: https://github.com/ffuenf
[@firmhouse]: https://github.com/firmhouse
[@gkra]: https://github.com/gkra
[@gregkare]: https://github.com/gregkare
[@irontoby]: https://github.com/irontoby
[@jalberto]: https://github.com/jalberto
[@jcoleman]: https://github.com/jcoleman
[@jenssegers]: https://github.com/jenssegers
[@josh-padnick]: https://github.com/josh-padnick
[@jujugrrr]: https://github.com/jujugrrr
[@karsten-bruckmann]: https://github.com/karsten-bruckmann
[@larkin]: https://github.com/larkin
[@miketheman]: https://github.com/miketheman
[@monsterstrike]: https://github.com/monsterstrike
[@morr]: https://github.com/morr
[@mytho]: https://github.com/Mytho
[@n1koo]: https://github.com/n1koo
[@nkadel-skyhook]: https://github.com/nkadel-skyhook
[@runningman84]: https://github.com/runningman84
[@shtouff]: https://github.com/shtouff
[@stevenolen]: https://github.com/stevenolen
[@thomasmeeus]: https://github.com/thomasmeeus
[@thommay]: https://github.com/thommay
[@tvdinner]: https://github.com/tvdinner
[@usertesting]: https://github.com/usertesting
[@whatcould]: https://github.com/whatcould
[@yveslaroche]: https://github.com/yveslaroche
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-9cr8fg
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048d2be8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048d2c60>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "templates",
   "default",
   "iptables-config.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# This file managed by Chef. Do not hand edit
<% @config.each do |k,v| -%>
<%= k %>="<%= v %>"
<% end -%>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables-config.erb to tempfile /tmp/chef-rest20170405-7856-1rn6n7j
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/templates/default/iptables-config.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/templates
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/templates/default
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000032aae88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/Gemfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000032aaed8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "Gemfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
source 'https://rubygems.org'

gem "test-kitchen"
gem "kitchen-vagrant"
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/Gemfile to tempfile /tmp/chef-rest20170405-7856-1vp80fh
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/Gemfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/chefignore
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049ae238
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049ae288>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "templates",
   "default",
   "iptables_load.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a12738
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a12788>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "templates",
   "default",
   "rebuild-iptables.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
sudo: required
dist: trusty

addons:
  apt:
    sources:
      - chef-stable-trusty
    packages:
      - chefdk

# Don't `bundle install` which takes about 1.5 mins
install: echo "skip bundle install"

branches:
  only:
    - master

services: docker

env:
  matrix:
  - INSTANCE=upstream-repo-centos-6
  - INSTANCE=upstream-repo-centos-7
  - INSTANCE=upstream-repo-debian-7
    #  - INSTANCE=upstream-repo-debian-8 InSpec fails to recognize that the service is actually enabled
  - INSTANCE=upstream-repo-opensuse-leap
  - INSTANCE=upstream-repo-ubuntu-1404
  - INSTANCE=upstream-repo-ubuntu-1604
  - INSTANCE=epel-centos-6
  - INSTANCE=epel-centos-7
  - INSTANCE=distro-packages-debian-7
  - INSTANCE=distro-packages-debian-8
  - INSTANCE=distro-packages-fedora-latest
  - INSTANCE=distro-packages-opensuse-leap
  - INSTANCE=distro-packages-ubuntu-1404
  - INSTANCE=distro-packages-ubuntu-1604
  - INSTANCE=source-centos-6
  - INSTANCE=source-centos-7
  - INSTANCE=source-debian-7
  - INSTANCE=source-debian-8
  - INSTANCE=source-fedora-latest
  - INSTANCE=source-opensuse-leap
  - INSTANCE=source-ubuntu-1404
  - INSTANCE=source-ubuntu-1604
  - INSTANCE=modules-centos-7
  - INSTANCE=modules-debian-7
  - INSTANCE=modules-debian-8
  - INSTANCE=modules-fedora-latest
  - INSTANCE=modules-opensuse-leap
  - INSTANCE=modules-ubuntu-1404
  - INSTANCE=modules-ubuntu-1604

before_script:
  - sudo iptables -L DOCKER || ( echo "DOCKER iptables chain missing" ; sudo iptables -N DOCKER )
  - eval "$(/opt/chefdk/bin/chef shell-init bash)"
  - /opt/chefdk/embedded/bin/chef --version
  - /opt/chefdk/embedded/bin/cookstyle --version
  - /opt/chefdk/embedded/bin/foodcritic --version

script: KITCHEN_LOCAL_YAML=.kitchen.dokken.yml /opt/chefdk/embedded/bin/kitchen verify ${INSTANCE}

matrix:
  include:
    - script:
      - /opt/chefdk/bin/chef exec delivery local all
      env: UNIT_AND_LINT=1
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/.travis.yml to tempfile /tmp/chef-rest20170405-7856-1d8e69j
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/.travis.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/LICENSE
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/MAINTAINERS.toml
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a71b20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/MAINTAINERS.toml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a71be8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "MAINTAINERS.toml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004ad0080
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/chefignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004ad00d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "chefignore"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
.kitchen
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/chefignore to tempfile /tmp/chef-rest20170405-7856-itsxmp
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/chefignore in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/.foodcritic
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!/bin/sh
/sbin/iptables-restore < <%= @iptables_save_file %>
exit 0
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000457f540
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/chef_nginx/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000457f658>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "chef_nginx",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "chef_nginx",
  "description": "Installs and configures nginx",
  "long_description": "# nginx Cookbook\n\n[![Cookbook](http://img.shields.io/cookbook/v/chef_nginx.svg)](https://supermarket.chef.io/cookbooks/chef_nginx) [![Build Status](https://travis-ci.org/chef-cookbooks/chef_nginx.svg?branch=master)](https://travis-ci.org/chef-cookbooks/chef_nginx)\n\nInstalls nginx from package OR source code and sets up configuration handling similar to Debian's Apache2 scripts.\n\n## nginx vs. chef_nginx\n\nThis cookbook is a fork from the 2.7.x branch of the [community nginx cookbook](https://github.com/miketheman/nginx).\n\nThis fork will be actively supported by Chef Software and we will continue to migrate the cookbook to a more resource driven model, with incremental changes following the SemVer model.\n\n## Requirements\n\n### Cookbooks\n\nThe following cookbooks are direct dependencies because they're used for common \"default\" functionality.\n\n- `build-essential` for source installations\n- `ohai` for setting up the ohai plugin\n- `compat_resource` for setting up the nginx.org repository on Chef 12.1 - 12.13\n- `yum-epel` for setting up the EPEL repository on RHEL platforms\n- `zypper` for setting up the nginx.org repository on Suse platforms\n\n### Platforms\n\nThe following platforms are supported and tested with Test Kitchen:\n\n- Ubuntu 12.04+\n- CentOS 5+\n- Debian 7+\n- openSUSE 13.2+\n- FreeBSD 9+\n\nOther Debian and RHEL family distributions are assumed to work.\n\n### Chef\n\n- Chef 12.1+\n\n## Attributes\n\nNode attributes for this cookbook are logically separated into different files. Some attributes are set only via a specific recipe.\n\n### chef_nginx::auth_request\n\nThese attributes are used in the `chef_nginx::auth_request` recipe.\n\n- `node['nginx']['auth_request']['url']` - The url to the auth_request module tar.gz file\n- `node['nginx']['auth_request']['checksum']` - The checksum of the auth_request module tar.gz file\n\n### chef_nginx::default\n\nGenerally used attributes. Some have platform specific values. See `attributes/default.rb`. \"The Config\" refers to \"nginx.conf\" the main config file.\n\n- `node['nginx']['dir']` - Location for nginx configuration.\n- `node['nginx']['conf_template']` - The `source` template to use when creating the `nginx.conf`.\n- `node['nginx']['conf_cookbook']` - The cookbook where `node['nginx']['conf_template']` resides.\n- `node['nginx']['log_dir']` - Location for nginx logs.\n- `node['nginx']['log_dir_perm']` - Permissions for nginx logs folder.\n- `node['nginx']['user']` - User that nginx will run as.\n- `node['nginx']['group']` - Group for nginx.\n- `node['nginx']['port']` - Port for nginx to listen on.\n- `node['nginx']['binary']` - Path to the nginx binary.\n- `node['nginx']['init_style']` - How to run nginx as a service when using `chef_nginx::source`. Values can be \"upstart\", \"systemd\", or \"init\". This attribute is not used in the `package` recipe because the package manager's init script style for the platform is assumed.\n- `node['nginx']['upstart']['foreground']` - Set this to true if you want upstart to run nginx in the foreground, set to false if you want upstart to detach and track the process via pid.\n- `node['nginx']['upstart']['runlevels']` - String of runlevels in the format '2345' which determines which runlevels nginx will start at when entering and stop at when leaving.\n- `node['nginx']['upstart']['respawn_limit']` - Respawn limit in upstart stanza format, count followed by space followed by interval in seconds.\n- `node['nginx']['keepalive']` - Whether to use `keepalive_timeout`, any value besides \"on\" will leave that option out of the config.\n- `node['nginx']['keepalive_requests']` - used for config value of `keepalive_requests`.\n- `node['nginx']['keepalive_timeout']` - used for config value of `keepalive_timeout`.\n- `node['nginx']['worker_processes']` - used for config value of `worker_processes`.\n- `node['nginx']['worker_connections']` - used for config value of `events { worker_connections }`\n- `node['nginx']['worker_rlimit_nofile']` - used for config value of `worker_rlimit_nofile`. Can replace any \"ulimit -n\" command. The value depend on your usage (cache or not) but must always be superior than worker_connections.\n- `node['nginx']['worker_shutdown_timeout']` - used for config value of `worker_shutdown_timeout`.\n- `node['nginx']['worker_connections']` - used for config value of `events { worker_connections }`\n- `node['nginx']['multi_accept']` - used for config value of `events { multi_accept }`. Try to accept() as many connections as possible. Disable by default.\n- `node['nginx']['event']` - used for config value of `events { use }`. Set the event-model. By default nginx looks for the most suitable method for your OS.\n- `node['nginx']['accept_mutex_delay']` - used for config value of `accept_mutex_delay`\n- `node['nginx']['server_tokens']` - used for config value of `server_tokens`.\n- `node['nginx']['server_names_hash_bucket_size']` - used for config value of `server_names_hash_bucket_size`.\n- `node['nginx']['disable_access_log']` - set to true to disable the general access log, may be useful on high traffic sites.\n- `node['nginx']['access_log_options']` - Set to a string of additional options to be appended to the access log directive\n- `node['nginx']['error_log_options']` - Set to a string of additional options to be appended to the error log directive\n- `node['nginx']['default_site_enabled']` - enable the default site\n- `node['nginx']['sendfile']` - Whether to use `sendfile`. Defaults to \"on\".\n- `node['nginx']['tcp_nopush']` - Whether to use `tcp_nopush`. Defaults to \"on\".\n- `node['nginx']['tcp_nodelay']` - Whether to use `tcp_nodelay`. Defaults to \"on\".\n- `node['nginx']['install_method']` - Whether nginx is installed from packages or from source.\n- `node['nginx']['types_hash_max_size']` - Used for the `types_hash_max_size` configuration directive.\n- `node['nginx']['types_hash_bucket_size']` - Used for the `types_hash_bucket_size` configuration directive.\n- `node['nginx']['proxy_read_timeout']` - defines a timeout (between two successive read operations) for reading a response from the proxied server.\n- `node['nginx']['client_body_buffer_size']` - used for config value of `client_body_buffer_size`.\n- `node['nginx']['client_max_body_size']` - specifies the maximum accepted body size of a client request, as indicated by the request header Content-Length.\n- `node['nginx']['repo_source']` - when installed from a package this attribute affects which yum repositories, if any, will be added before installing the nginx package. The default value of 'epel' will use the `yum-epel` cookbook, 'nginx' will use the `chef_nginx::repo` recipe, 'passenger' will use the 'chef_nginx::repo_passenger' recipe, and setting no value will not add any additional repositories.\n- `node['nginx']['sts_max_age']` - Enable Strict Transport Security for all apps (See: <http://en.wikipedia.org/wiki/HTTP_Strict_Transport_Security>). This attribute adds the following header: Strict-Transport-Security max-age=SECONDS to all incoming requests and takes an integer (in seconds) as its argument.\n- `node['nginx']['default']['modules']` - Array specifying which modules to enable via the conf-enabled config include function. Currently the only valid value is \"socketproxy\".\n- `node['nginx']['load_modules']` - Array of paths to modules to dynamically load on nginx startup using the `load_module` directive. Default is `[]`.\n\n#### authorized_ips module\n\n- `node['nginx']['remote_ip_var']` - The remote ip variable name to use.\n- `node['nginx']['authorized_ips']` - IPs authorized by the module\n\n#### gzip module\n\n- `node['nginx']['gzip']` - Whether to use gzip, can be \"on\" or \"off\"\n- `node['nginx']['gzip_http_version']` - used for config value of `gzip_http_version`.\n- `node['nginx']['gzip_comp_level']` - used for config value of `gzip_comp_level`.\n- `node['nginx']['gzip_proxied']` - used for config value of `gzip_proxied`.\n- `node['nginx']['gzip_vary']` - used for config value of `gzip_vary`.\n- `node['nginx']['gzip_buffers']` - used for config value of `gzip_buffers`.\n- `node['nginx']['gzip_types']` - used for config value of `gzip_types` - must be an Array.\n- `node['nginx']['gzip_min_length']` - used for config value of `gzip_min_length`.\n- `node['nginx']['gzip_disable']` - used for config value of `gzip_disable`.\n- `node['nginx']['gzip_static']` - used for config value of `gzip_static` (`http_gzip_static_module` must be enabled)\n\n#### Other configurations\n\n- `node['nginx']['extra_configs']` - a Hash of key/values to nginx configuration.\n\n### chef_nginx::echo\n\nThese attributes are used in the `chef_nginx::http_echo_module` recipe.\n\n- `node['nginx']['echo']['version']` - The version of `http_echo` you want (default: 0.59)\n- `node['nginx']['echo']['url']` - URL for the tarball.\n- `node['nginx']['echo']['checksum']` - Checksum of the tarball.\n\n### chef_nginx::devel\n\nThese attributes are used in the `chef_nginx::ngx_devel_module` recipe.\n\n- `node['nginx']['devel']['version']` - The version of the nginx devel module\n- `node['nginx']['devel']['url']` - The URL of the nginx devel module tar.gz file\n- `node['nginx']['devel']['checksum']` - The checksum of the nginx devel module tar.gz file\n\n### chef_nginx::geoip\n\nThese attributes are used in the `chef_nginx::http_geoip_module` recipe. Please note that the `country_dat_checksum` and `city_dat_checksum` are based on downloads from a datacenter in Fremont, CA, USA. You really should override these with checksums for the geo tarballs from your node location.\n\n**Note** The upstream, maxmind.com, may block access for repeated downloads of the data files. It is recommended that you download and host the data files, and change the URLs in the attributes.\n\n- `node['nginx']['geoip']['path']` - Location where to install the geoip libraries.\n- `node['nginx']['geoip']['enable_city']` - Whether to enable City data\n- `node['nginx']['geoip']['country_dat_url']` - Country data tarball URL\n- `node['nginx']['geoip']['country_dat_checksum']` - Country data tarball checksum\n- `node['nginx']['geoip']['city_dat_url']` - City data tarball URL\n- `node['nginx']['geoip']['city_dat_checksum']` - City data tarball checksum\n- `node['nginx']['geoip']['lib_version']` - Version of the GeoIP library to install\n- `node['nginx']['geoip']['lib_url']` - (Versioned) Tarball URL of the GeoIP library\n- `node['nginx']['geoip']['lib_checksum']` - Checksum of the GeoIP library tarball\n\n### chef_nginx::http_realip_module\n\nFrom: <http://nginx.org/en/docs/http/ngx_http_realip_module.html>\n\n- `node['nginx']['realip']['header']` - Header to use for the RealIp Module; only accepts \"X-Forwarded-For\" or \"X-Real-IP\"\n- `node['nginx']['realip']['addresses']` - Addresses to use for the `http_realip` configuration.\n- `node['nginx']['realip']['real_ip_recursive']` - If recursive search is enabled, the original client address that matches one of the trusted addresses is replaced by the last non-trusted address sent in the request header field. Can be on \"on\" or \"off\" (default).\n\n### chef_nginx::passenger\n\nThese attributes are used in the `chef_nginx::passenger` recipe.\n\n- `node['nginx']['passenger']['version']` - passenger gem version\n- `node['nginx']['passenger']['root']` - passenger gem root path\n- `node['nginx']['passenger']['install_rake']` - set to false if rake already present on system\n- `node['nginx']['passenger']['max_pool_size']` - maximum passenger pool size (default=10)\n- `node['nginx']['passenger']['ruby']` - Ruby path for Passenger to use (default=`$(which ruby)`)\n- `node['nginx']['passenger']['spawn_method']` - passenger spawn method to use (default=`smart-lv2`)\n- `node['nginx']['passenger']['buffer_response']` - turns on or off response buffering (default=`on`)\n- `node['nginx']['passenger']['max_pool_size']` - passenger maximum pool size (default=`6`)\n- `node['nginx']['passenger']['min_instances']` - minimum instances (default=`1`)\n- `node['nginx']['passenger']['max_instances_per_app']` - maximum instances per app (default=`0`)\n- `node['nginx']['passenger']['pool_idle_time']` - passenger pool idle time (default=`300`)\n- `node['nginx']['passenger']['max_requests']` - maximum requests (default=`0`)\n- `node['nginx']['passenger']['nodejs']` - Nodejs path for Passenger to use (default=nil)\n- `node['nginx']['passenger']['show_version_in_header']` - Show passenger version in HTTP headers (default=`on`)\n\nBasic configuration to use the official Phusion Passenger repositories:\n\n- `node['nginx']['repo_source']` - 'passenger'\n- `node['nginx']['package_name']` - 'nginx-extras'\n- `node['nginx']['passenger']['install_method']` - 'package'\n\n### chef_nginx::openssl_source\n\nThese attributes are used in the `chef_nginx::openssl_source` recipe.\n\n- `node['nginx']['openssl_source']['version']` - The version of OpenSSL you want to download and use (default: 1.0.1t)\n- `node['nginx']['openssl_source']['url']` - The url for the OpenSSL source\n\n### chef_nginx::rate_limiting\n\n- `node['nginx']['enable_rate_limiting']` - set to true to enable rate limiting (`limit_req_zone` in nginx.conf)\n- `node['nginx']['rate_limiting_zone_name']` - sets the zone in `limit_req_zone`.\n- `node['nginx']['rate_limiting_backoff']` - sets the backoff time for `limit_req_zone`.\n- `node['nginx']['rate_limit']` - set the rate limit amount for `limit_req_zone`.\n\n### chef_nginx::socketproxy\n\nThese attributes are used in the `chef_nginx::socketproxy` recipe.\n\n- `node['nginx']['socketproxy']['root']` - The directory (on your server) where socketproxy apps are deployed.\n- `node['nginx']['socketproxy']['default_app']` - Static assets directory for requests to \"/\" that don't meet any proxy_pass filter requirements.\n- `node['nginx']['socketproxy']['apps']['app_name']['prepend_slash']` - Prepend a slash to requests to app \"app_name\" before sending them to the socketproxy socket.\n- `node['nginx']['socketproxy']['apps']['app_name']['context_name']` - URI (e.g. \"app_name\" in order to achieve \"<http://mydomain.com/app_name>\") at which to host the application \"app_name\"\n- `node['nginx']['socketproxy']['apps']['app_name']['subdir']` - Directory (under `node['nginx']['socketproxy']['root']`) in which to find the application.\n\n### chef_nginx::source\n\nThese attributes are used in the `chef_nginx::source` recipe. Some of them are dynamically modified during the run. See `attributes/source.rb` for default values.\n\n- `node['nginx']['source']['url']` - (versioned) URL for the nginx source code. By default this will use the version specified as `node['nginx']['version']`.\n- `node['nginx']['source']['prefix']` - (versioned) prefix for installing nginx from source\n- `node['nginx']['source']['conf_path']` - location of the main config file, in `node['nginx']['dir']` by default.\n- `node['nginx']['source']['modules']` - Array of modules that should be compiled into nginx by including their recipes in `chef_nginx::source`.\n- `node['nginx']['source']['default_configure_flags']` - The default flags passed to the configure script when building nginx.\n- `node['nginx']['configure_flags']` - Preserved for compatibility and dynamically generated from the `node['nginx']['source']['default_configure_flags']` in the `chef_nginx::source` recipe.\n- `node['nginx']['source']['use_existing_user']` - set to `true` if you do not want `chef_nginx::source` recipe to create system user with name `node['nginx']['user']`.\n\n### chef_nginx::status\n\nThese attributes are used in the `chef_nginx::http_stub_status_module` recipe.\n\n- `node['nginx']['status']['port']` - The port on which nginx will serve the status info (default: 8090)\n\n### chef_nginx::syslog\n\nThese attributes are used in the `chef_nginx::syslog_module` recipe.\n\n- `node['nginx']['syslog']['git_repo']` - The git repository url to use for the syslog patches.\n- `node['nginx']['syslog']['git_revision']` - The revision on the git repository to checkout.\n\n### chef_nginx::upload_progress\n\nThese attributes are used in the `chef_nginx::upload_progress_module` recipe.\n\n- `node['nginx']['upload_progress']['url']` - URL for the tarball.\n- `node['nginx']['upload_progress']['checksum']` - Checksum of the tarball.\n- `node['nginx']['upload_progress']['javascript_output']` - Output in javascript. Default is `true` for backwards compatibility.\n- `node['nginx']['upload_progress']['zone_name']` - Zone name which will be used to store the per-connection tracking information. Default is `proxied`.\n- `node['nginx']['upload_progress']['zone_size']` - Zone size in bytes. Default is `1m` (1 megabyte).\n\n## Resources\n\n### nginx_site\n\nEnable or disable a Server Block in `#{node['nginx']['dir']}/sites-available` by calling nxensite or nxdissite (introduced by this cookbook) to manage the symbolic link in `#{node['nginx']['dir']}/sites-enabled`.\n\n### Actions\n\n- `enable` - Enable the nginx site (default)\n- `disable` - Disable the nginx site\n\n### Properties:\n\n- `name` - (optional) Name of the site to enable. By default it's assumed that the name of the nginx_site resource is the site name, but this allows overriding that.\n- `template` - (optional) Path to the source for the `template` resource.\n- `variables` - (optional) Variables to be used with the `template` resource\n\n## Ohai Plugin\n\nThe `ohai_plugin` recipe includes an Ohai plugin. It will be automatically installed and activated, providing the following attributes via ohai, no matter how nginx is installed (source or package):\n\n- `node['nginx']['version']` - version of nginx\n- `node['nginx']['configure_arguments']` - options passed to `./configure` when nginx was built\n- `node['nginx']['prefix']` - installation prefix\n- `node['nginx']['conf_path']` - configuration file path\n\nIn the source recipe, it is used to determine whether control attributes for building nginx have changed.\n\n## Usage\n\nThis cookbook provides three distinct installation methods, all of which are controlled via attributes and executed using the chef_nginx::default recipe.\n\n### Package installation using the nginx.org repositories\n\nNginx provides repositories for RHEL, Debian/Ubuntu, and Suse platforms with up to date packages available on older distributions. Due to the age of many nginx packages shipping with distros we believe this is the ideal installation method. With no attributes set the nginx.org repositories will be added to your system and nginx will be installed via package. This provides a solid out of the box install for most users.\n\n### Package installation using distro repositories\n\nIf you prefer to use the packages included in your distro or to roll your own packages you'll want to set `node['nginx']['repo_source']` to `nil` or `distro` to skip the repository setup. The default recipe will still install nginx from packages, but you'll retain control over the package location.\n\n### Source installation to compile non-dynamic modules\n\nIf you need control over how nginx is built, or you need non-dynamic modules to be included you'll need to compile nginx from source. We highly recommend against using this method as it requires the installation of a full compilation toolchain and development dependencies on your nodes. Creating your own packages with nginx compiled as necessary is a preferred option. If that's not possible you can set `node['nginx']['install_method']` to `source` and provide a version in `node['nginx']['version']`.\n\n#### Specifying Modules to compile\n\nThe following recipes are used to build module support into nginx. To compile a module, add its recipe name to the array attribute `node['nginx']['source']['modules']`.\n\n- `ipv6.rb` - enables IPv6 support\n- `headers_more_module` -\n- `http_auth_request_module``\n- `http_echo_module.rb` - downloads the `http_echo_module` module and enables it as a module when compiling nginx.\n- `http_geoip_module.rb` - installs the GeoIP libraries and data files and enables the module for compilation.\n- `http_gzip_static_module.rb` - enables the module for compilation. Be sure to set `node['nginx']['gzip_static'] = 'yes'`.\n- `http_mp4_module` -\n- `http_perl_module.rb` - enables embedded Perl for compilation.\n- `http_realip_module.rb` - enables the module for compilation and creates the configuration.\n- `http_spdy_module` -\n- `http_ssl_module.rb` - enables SSL for compilation.\n- `http_stub_status_module.rb` - provides `nginx_status` configuration and enables the module for compilation.\n- `http_v2_module`\n- `ipv6` -\n- `naxsi_module` - enables the naxsi module for the web application firewall for nginx.\n- `ngx_devel_module` -\n- `ngx_lua_module` -\n- `openssl_source.rb` - downloads and uses custom OpenSSL source when compiling nginx\n- `pagespeed_module`-\n- `passenger` - builds the passenger gem and configuration for \"`mod_passenger`\".\n- `set_misc` -\n- `syslog_module` - enables syslog support for nginx. This only works with source builds. See <https://github.com/yaoweibin/nginx_syslog_patch> -\n- `upload_progress_module.rb` - builds the `upload_progress` module and enables it as a module when compiling nginx.\n\n## Resources\n\n### nginx_site\n\nEnable or disable a Server Block in `#{node['nginx']['dir']}/sites-available` by calling nxensite or nxdissite (introduced by this cookbook) to manage the symbolic link in `#{node['nginx']['dir']}/sites-enabled`.\n\n### Actions\n\n- `enable` - Enable the nginx site (default)\n- `disable` - Disable the nginx site\n\n### Properties:\n\n- `name` - (optional) Name of the site to enable. By default it's assumed that the name of the nginx_site resource is the site name, but this allows overriding that.\n- `template` - (optional) Path to the source for the `template` resource.\n- `cookbook` - (optional) The cookbook that contains the template source.\n- `variables` - (optional) Variables to be used with the `template` resource\n\n## Adding New Modules\n\nPreviously we'd add each possible module to this cookbook itself. That's not necessary using wrapper cookbooks and we'd prefer to not add any addition module recipes at this time. Instead in your nginx wrapper cookbook setup any necessary packages and then include the follow code to add the module to the list of modules to compile:\n\n```ruby\nnode.run_state['nginx_configure_flags'] =\n  node.run_state['nginx_configure_flags'] | ['--with-SOMETHING', \"--with-SOME_OPT='things'\"]\n```\n\n## License & Authors\n\n- Author:: Joshua Timberman ([joshua@chef.io](mailto:joshua@chef.io))\n- Author:: Adam Jacob ([adam@chef.io](mailto:adam@chef.io))\n- Author:: AJ Christensen ([aj@chef.io](mailto:aj@chef.io))\n- Author:: Jamie Winsor ([jamie@vialstudios.com](mailto:jamie@vialstudios.com))\n- Author:: Mike Fiedler ([miketheman@gmail.com](mailto:miketheman@gmail.com))\n\n```text\nCopyright 2008-2016, Chef Software, Inc\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Chef Software, Inc.",
  "maintainer_email": "cookbooks@chef.io",
  "license": "Apache-2.0",
  "platforms": {
    "amazon": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "fedora": ">= 0.0.0",
    "oracle": ">= 0.0.0",
    "redhat": ">= 0.0.0",
    "scientific": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "suse": ">= 0.0.0",
    "opensuse": ">= 0.0.0",
    "opensuseleap": ">= 0.0.0"
  },
  "dependencies": {
    "build-essential": ">= 0.0.0",
    "ohai": ">= 4.1.0",
    "yum-epel": ">= 0.0.0",
    "compat_resource": ">= 12.16.3",
    "zypper": ">= 0.0.0"
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "chef_nginx": "Installs nginx package and sets up configuration with Debian apache style with sites-enabled/sites-available",
    "chef_nginx::source": "Installs nginx from source and sets up configuration with Debian apache style with sites-enabled/sites-available"
  },
  "version": "6.0.1",
  "source_url": "https://github.com/chef-cookbooks/chef_nginx",
  "issues_url": "https://github.com/chef-cookbooks/chef_nginx/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12.1"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b833d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/LICENSE",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b83428>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "LICENSE"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# This file is structured to be consumed by both humans and computers.
# It is a TOML document containing Markdown
#
[Preamble]
  title = "Maintainers"
  text = """

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.
"""

[Org]
  [Org.Components]
    [Org.Components.Core]
      title = "Project Maintainer"

      lieutenant = 'tas50'

      maintainers = [
        'sigje',
        'tas50',
        'thommay'
      ]

[people]
  [people.sigje]
    name = "Jennifer Davis"
    github = "sigje"

  [people.tas50]
    name = "Tim Smith"
    github = "tas50"

  [people.thommay]
    name = "Thom May"
    github = "thommay"
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/chef_nginx/metadata.json to tempfile /tmp/chef-rest20170405-7856-1ctvs87
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048ad118
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048ad168>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.toml to tempfile /tmp/chef-rest20170405-7856-ueuqxs
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/MAINTAINERS.toml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/iptables_load.erb to tempfile /tmp/chef-rest20170405-7856-182vnlf
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/templates/default/iptables_load.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#!<%= @hashbang %> -w

#
# rebuild-iptables.rb -- Construct an iptables rules file from fragments.
#
# Written by Phil Cohen <github@phlippers.net>
# Copyright 2011, Phil Cohen
#
# Constructs an iptables rules file from the prefix, standard, and suffix
# files in the iptables configuration area, adding any additional modules
# specified in the command line, and prints the resulting iptables rules to
# standard output (suitable for saving into /var/lib/iptables or some other
# appropriate location on the system).

##############################################################################
# Modules and declarations
##############################################################################

# Path to the iptables template area.
TEMPLATE_PATH = "/etc/iptables.d"

##############################################################################
# Installation
##############################################################################

# Read in a file, processing includes as required.
def read_iptables(file, table = :filter)
  file = File.join(TEMPLATE_PATH, file) unless File.dirname(file) =~ /iptables\.d/
  rule = File.readlines(file).map{ |line| line.chomp }
  rule.each do |line|
    if line =~ /^\s*include\s+(\S+)$/
      read_iptables($1, table)
    elsif line =~ /^\s*\*([a-z]+)\s*$/
      table = $1.to_sym
    elsif line =~ /^\s*:([-a-zA-Z0-9_]+)(?:\s+([A-Z]+(?:\s*\[.*?\])))?$/
      @data[table][:chains][$1] = $2 || '-'
    elsif line !~ /^\s*COMMIT\s*$/
      #detect new chains
      if chain = line.match(/\-[ADRILFZN]\s+([-a-zA-Z0-9_]+)\s/)
        @data[table][:chains][chain[1]] ||= '-'
      end
      @data[table][:rules].push line
    end
  end
end

# Write a file carefully.
def write_iptables(file, data)
  File.open("#{file}.new", "w") { |f| f.write(data) }
  File.rename("#{file}.new", file)
end

# Install iptables on a Red Hat or Debian system. Takes the new iptables data.
def install_rules(data)
  Dir.mkdir('/etc/iptables') unless File.directory?('/etc/iptables')
  write_iptables('/etc/iptables/general', data)
  return false unless system('/sbin/iptables-restore < /etc/iptables/general')
  if File.exist?('/etc/sysconfig/iptables')
    return false unless system("cp /etc/iptables/general /etc/sysconfig/iptables")
  end
  true
end

##############################################################################
# Main routine
##############################################################################

@data = {
    :filter => {
        :chains => {
            'INPUT'   => 'ACCEPT [0,0]',
            'FORWARD' => 'ACCEPT [0,0]',
            'OUTPUT'  => 'ACCEPT [0,0]'
        },
        :rules => []
    },
    :mangle => {
        :chains => {
            'PREROUTING'  => 'ACCEPT [0,0]',
            'INPUT'       => 'ACCEPT [0,0]',
            'FORWARD'     => 'ACCEPT [0,0]',
            'OUTPUT'      => 'ACCEPT [0,0]',
            'POSTROUTING' => 'ACCEPT [0,0]'
        },
        :rules => []
    },
    :nat => {
        :chains => {
            'PREROUTING'  => 'ACCEPT [0,0]',
            'POSTROUTING' => 'ACCEPT [0,0]',
            'OUTPUT'      => 'ACCEPT [0,0]'
        },
        :rules => [],
    },
    :raw => {
        :chains => {
            'PREROUTING'  => 'ACCEPT [0,0]',
            'OUTPUT'      => 'ACCEPT [0,0]'
        },
        :rules => [],
    },
    :security => {
        :chains => {
            'INPUT'   => 'ACCEPT [0,0]',
            'FORWARD' => 'ACCEPT [0,0]',
            'OUTPUT'  => 'ACCEPT [0,0]'
        },
        :rules => []
    }
}

templates = Dir["#{TEMPLATE_PATH}/*"].sort.delete_if do |template|
  %w[prefix suffix postfix].include?(File.basename(template))
end

templates.unshift 'prefix' if File.exist? "#{TEMPLATE_PATH}/prefix"
templates.push 'suffix' if File.exist? "#{TEMPLATE_PATH}/suffix"
templates.push 'postfix' if File.exist? "#{TEMPLATE_PATH}/postfix"

templates.each { |template| read_iptables(template) }

iptables_rules = ""
@data.each do |table, table_data|
  if table_data[:rules].any?
    iptables_rules << "*#{table.to_s}\n"
    table_data[:chains].each do |chain, rule|
      iptables_rules << ":#{chain} #{rule}\n"
    end
    iptables_rules << table_data[:rules].join("\n")
    iptables_rules << "\nCOMMIT\n"
  end
end

system_files = %w(/etc/debian_version /etc/redhat-release /etc/system-release)
if system_files.any? { |file| File.exist?(file) }
  success = install_rules(iptables_rules)
  raise "#{$0}: failed to install iptables rules" unless success
else
  raise "#{$0}: cannot figure out whether this is Red Hat or Debian\n";
end

exit 0
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/chef_nginx/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004848308
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004848358>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: iptables
# Recipe:: default
#
# Copyright:: 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include_recipe 'iptables::_package'

service 'iptables' do
  action [:disable, :stop]
  supports status: true, start: true, stop: true, restart: true
  only_if { node['platform_family'] == 'rhel' }
end

# Necessary so that if iptables::disable is used and then later
# it is re-enabled without any rules changes, the templates will run the rebuilt script
directory '/etc/iptables.d' do
  action :delete
  recursive true
  notifies :run, 'execute[iptablesFlush]', :immediately
end

# Flush and delete iptables rules
execute 'iptablesFlush' do
  command 'iptables -F'
  action  :nothing
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/disabled.rb to tempfile /tmp/chef-rest20170405-7856-1ilpiju
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/recipes/disabled.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/templates/default/rebuild-iptables.erb to tempfile /tmp/chef-rest20170405-7856-i5nmm1
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/templates/default/rebuild-iptables.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004cc69e8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004cc6ad8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   ".foodcritic"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: iptables
# Recipe:: _package
#
# Copyright:: 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if platform_family?('rhel') && node['platform_version'].to_i == 7
  package 'iptables-services'
else
  package 'iptables'
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
                                 Apache License
                           Version 2.0, January 2004
                        http://www.apache.org/licenses/

   TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION

   1. Definitions.

      "License" shall mean the terms and conditions for use, reproduction,
      and distribution as defined by Sections 1 through 9 of this document.

      "Licensor" shall mean the copyright owner or entity authorized by
      the copyright owner that is granting the License.

      "Legal Entity" shall mean the union of the acting entity and all
      other entities that control, are controlled by, or are under common
      control with that entity. For the purposes of this definition,
      "control" means (i) the power, direct or indirect, to cause the
      direction or management of such entity, whether by contract or
      otherwise, or (ii) ownership of fifty percent (50%) or more of the
      outstanding shares, or (iii) beneficial ownership of such entity.

      "You" (or "Your") shall mean an individual or Legal Entity
      exercising permissions granted by this License.

      "Source" form shall mean the preferred form for making modifications,
      including but not limited to software source code, documentation
      source, and configuration files.

      "Object" form shall mean any form resulting from mechanical
      transformation or translation of a Source form, including but
      not limited to compiled object code, generated documentation,
      and conversions to other media types.

      "Work" shall mean the work of authorship, whether in Source or
      Object form, made available under the License, as indicated by a
      copyright notice that is included in or attached to the work
      (an example is provided in the Appendix below).

      "Derivative Works" shall mean any work, whether in Source or Object
      form, that is based on (or derived from) the Work and for which the
      editorial revisions, annotations, elaborations, or other modifications
      represent, as a whole, an original work of authorship. For the purposes
      of this License, Derivative Works shall not include works that remain
      separable from, or merely link (or bind by name) to the interfaces of,
      the Work and Derivative Works thereof.

      "Contribution" shall mean any work of authorship, including
      the original version of the Work and any modifications or additions
      to that Work or Derivative Works thereof, that is intentionally
      submitted to Licensor for inclusion in the Work by the copyright owner
      or by an individual or Legal Entity authorized to submit on behalf of
      the copyright owner. For the purposes of this definition, "submitted"
      means any form of electronic, verbal, or written communication sent
      to the Licensor or its representatives, including but not limited to
      communication on electronic mailing lists, source code control systems,
      and issue tracking systems that are managed by, or on behalf of, the
      Licensor for the purpose of discussing and improving the Work, but
      excluding communication that is conspicuously marked or otherwise
      designated in writing by the copyright owner as "Not a Contribution."

      "Contributor" shall mean Licensor and any individual or Legal Entity
      on behalf of whom a Contribution has been received by Licensor and
      subsequently incorporated within the Work.

   2. Grant of Copyright License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      copyright license to reproduce, prepare Derivative Works of,
      publicly display, publicly perform, sublicense, and distribute the
      Work and such Derivative Works in Source or Object form.

   3. Grant of Patent License. Subject to the terms and conditions of
      this License, each Contributor hereby grants to You a perpetual,
      worldwide, non-exclusive, no-charge, royalty-free, irrevocable
      (except as stated in this section) patent license to make, have made,
      use, offer to sell, sell, import, and otherwise transfer the Work,
      where such license applies only to those patent claims licensable
      by such Contributor that are necessarily infringed by their
      Contribution(s) alone or by combination of their Contribution(s)
      with the Work to which such Contribution(s) was submitted. If You
      institute patent litigation against any entity (including a
      cross-claim or counterclaim in a lawsuit) alleging that the Work
      or a Contribution incorporated within the Work constitutes direct
      or contributory patent infringement, then any patent licenses
      granted to You under this License for that Work shall terminate
      as of the date such litigation is filed.

   4. Redistribution. You may reproduce and distribute copies of the
      Work or Derivative Works thereof in any medium, with or without
      modifications, and in Source or Object form, provided that You
      meet the following conditions:

      (a) You must give any other recipients of the Work or
          Derivative Works a copy of this License; and

      (b) You must cause any modified files to carry prominent notices
          stating that You changed the files; and

      (c) You must retain, in the Source form of any Derivative Works
          that You distribute, all copyright, patent, trademark, and
          attribution notices from the Source form of the Work,
          excluding those notices that do not pertain to any part of
          the Derivative Works; and

      (d) If the Work includes a "NOTICE" text file as part of its
          distribution, then any Derivative Works that You distribute must
          include a readable copy of the attribution notices contained
          within such NOTICE file, excluding those notices that do not
          pertain to any part of the Derivative Works, in at least one
          of the following places: within a NOTICE text file distributed
          as part of the Derivative Works; within the Source form or
          documentation, if provided along with the Derivative Works; or,
          within a display generated by the Derivative Works, if and
          wherever such third-party notices normally appear. The contents
          of the NOTICE file are for informational purposes only and
          do not modify the License. You may add Your own attribution
          notices within Derivative Works that You distribute, alongside
          or as an addendum to the NOTICE text from the Work, provided
          that such additional attribution notices cannot be construed
          as modifying the License.

      You may add Your own copyright statement to Your modifications and
      may provide additional or different license terms and conditions
      for use, reproduction, or distribution of Your modifications, or
      for any such Derivative Works as a whole, provided Your use,
      reproduction, and distribution of the Work otherwise complies with
      the conditions stated in this License.

   5. Submission of Contributions. Unless You explicitly state otherwise,
      any Contribution intentionally submitted for inclusion in the Work
      by You to the Licensor shall be under the terms and conditions of
      this License, without any additional terms or conditions.
      Notwithstanding the above, nothing herein shall supersede or modify
      the terms of any separate license agreement you may have executed
      with Licensor regarding such Contributions.

   6. Trademarks. This License does not grant permission to use the trade
      names, trademarks, service marks, or product names of the Licensor,
      except as required for reasonable and customary use in describing the
      origin of the Work and reproducing the content of the NOTICE file.

   7. Disclaimer of Warranty. Unless required by applicable law or
      agreed to in writing, Licensor provides the Work (and each
      Contributor provides its Contributions) on an "AS IS" BASIS,
      WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
      implied, including, without limitation, any warranties or conditions
      of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A
      PARTICULAR PURPOSE. You are solely responsible for determining the
      appropriateness of using or redistributing the Work and assume any
      risks associated with Your exercise of permissions under this License.

   8. Limitation of Liability. In no event and under no legal theory,
      whether in tort (including negligence), contract, or otherwise,
      unless required by applicable law (such as deliberate and grossly
      negligent acts) or agreed to in writing, shall any Contributor be
      liable to You for damages, including any direct, indirect, special,
      incidental, or consequential damages of any character arising as a
      result of this License or out of the use or inability to use the
      Work (including but not limited to damages for loss of goodwill,
      work stoppage, computer failure or malfunction, or any and all
      other commercial damages or losses), even if such Contributor
      has been advised of the possibility of such damages.

   9. Accepting Warranty or Additional Liability. While redistributing
      the Work or Derivative Works thereof, You may choose to offer,
      and charge a fee for, acceptance of support, warranty, indemnity,
      or other liability obligations and/or rights consistent with this
      License. However, in accepting such obligations, You may act only
      on Your own behalf and on Your sole responsibility, not on behalf
      of any other Contributor, and only if You agree to indemnify,
      defend, and hold each Contributor harmless for any liability
      incurred by, or claims asserted against, such Contributor by reason
      of your accepting any such warranty or additional liability.

   END OF TERMS AND CONDITIONS

   APPENDIX: How to apply the Apache License to your work.

      To apply the Apache License to your work, attach the following
      boilerplate notice, with the fields enclosed by brackets "{}"
      replaced with your own identifying information. (Don't include
      the brackets!)  The text should be enclosed in the appropriate
      comment syntax for the file format. We also recommend that a
      file or class name and description of purpose be included on the
      same "printed page" as the copyright notice for easier
      identification within third-party archives.

   Copyright {yyyy} {name of copyright owner}

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/recipes/_package.rb to tempfile /tmp/chef-rest20170405-7856-1hh78au
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/LICENSE to tempfile /tmp/chef-rest20170405-7856-gj4acn
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/recipes/_package.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/.gitignore
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d6ee68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/.gitignore",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d6eeb8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   ".gitignore"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
*~
*#
.#*
\#*#
.*.sw[a-z]
*.un~
pkg/

# Berkshelf
.vagrant
/cookbooks
Berksfile.lock

# Bundler
Gemfile.lock
bin/*
.bundle/*

.kitchen/
.kitchen.local.yml
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.gitignore to tempfile /tmp/chef-rest20170405-7856-3o4ywj
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/.gitignore in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/LICENSE in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/Berksfile
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/Berksfile.lock
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004df7510
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/Berksfile.lock",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004df7560>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "Berksfile.lock"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
DEPENDENCIES
  iptables
    path: .
    metadata: true

GRAPH
  iptables (4.0.1)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile.lock to tempfile /tmp/chef-rest20170405-7856-pdthpr
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/Berksfile.lock in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC016
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/README.md
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: iptables
# Attribute:: default
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['iptables']['iptables_sysconfig'] = {
  'IPTABLES_MODULES' => '',
  'IPTABLES_MODULES_UNLOAD' => 'yes',
  'IPTABLES_SAVE_ON_STOP' => 'no',
  'IPTABLES_SAVE_ON_RESTART' => 'no',
  'IPTABLES_SAVE_COUNTER' => 'no',
  'IPTABLES_STATUS_NUMERIC' => 'yes',
  'IPTABLES_STATUS_VERBOSE' => 'no',
  'IPTABLES_STATUS_LINENUMBERS' => 'yes',
}
default['iptables']['ip6tables_sysconfig'] = {
  'IP6TABLES_MODULES' => '',
  'IP6TABLES_MODULES_UNLOAD' => 'yes',
  'IP6TABLES_SAVE_ON_STOP' => 'no',
  'IP6TABLES_SAVE_ON_RESTART' => 'no',
  'IP6TABLES_SAVE_COUNTER' => 'no',
  'IP6TABLES_STATUS_NUMERIC' => 'yes',
  'IP6TABLES_STATUS_VERBOSE' => 'no',
  'IP6TABLES_STATUS_LINENUMBERS' => 'yes',
}

default['iptables']['system_ruby'] = '/usr/bin/ruby'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-4ze4l8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.foodcritic to tempfile /tmp/chef-rest20170405-7856-l4cqk2
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/.foodcritic in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/attributes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/Thorfile
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/TESTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004ddfa28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/Berksfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004ddfa78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "Berksfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/.rubocop.yml
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/.kitchen.yml
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f70928
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/.kitchen.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f70978>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   ".kitchen.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
---
driver:
  name: vagrant

provisioner:
  name: chef_solo

platforms:
  - name: ubuntu-14.04
  - name: centos-7.2

suites:
  - name: default
    run_list:
      - recipe[iptables::default]
    attributes:
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.kitchen.yml to tempfile /tmp/chef-rest20170405-7856-11mq6jp
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/.kitchen.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/Gemfile
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005026d18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/Gemfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005026d68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "Gemfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004dad898
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/Thorfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004dad8e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "Thorfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f140d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/TESTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f14128>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "TESTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
source "https://supermarket.chef.io"

metadata
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004e3dc40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/.rubocop.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004e3dc90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   ".rubocop.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def enable_iptables_rule(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:iptables_rule, :enable, resource_name)
  end

  def disable_iptables_rule(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:iptables_rule, :disable, resource_name)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-69lym9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Berksfile to tempfile /tmp/chef-rest20170405-7856-1s3bef0
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/iptables/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004e84b90
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004e84be0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# iptables Cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables) [![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)

Installs iptables and provides a custom resource for adding and removing iptables rules

## Requirements

### Platforms

- Ubuntu/Debian
- RHEL/CentOS and derivatives

### Chef

- Chef 12.10+

### Cookbooks

- none

## Recipes

### default

The default recipe will install iptables and provides a ruby script (installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding firewall rules from files dropped off in `/etc/iptables.d`.

### disabled

The disabled recipe will install iptables, disable the `iptables` service (on RHEL platforms), and delete the rules directory `/etc/iptables.d`.

## Attributes

`default['iptables']['iptables_sysconfig']` and `default['iptables']['ip6tables_sysconfig']` are hashes that are used to template /etc/sysconfig/iptables-config and /etc/sysconfig/ip6tables-config. The keys must be upper case and any key / value pair included will be added to the config file.

`default['iptables']['system_ruby']` allows users to override the system ruby path if ruby is installed into a non standard location and Chef has been installed without an embedded ruby (eg. from the Gem).

## Custom Resource

### rule

The custom resource drops off a template in `/etc/iptables.d` after the `name` parameter. The rule will get added to the local system firewall through notifying the `rebuild-iptables` script. See **Examples** below.

NOTE: In the 1.0 release of this cookbook the iptables_rule definition was converted to a custom resource. This changes the behavior of disabling iptables rules. Previously a rule could be disabled by specifying `enable false`. You must now specify `action :disable`

## Usage

Add `recipe[iptables]` to your runlist to ensure iptables is installed / running and to ensure that the `rebuild-iptables` script is on the system. Then create use iptables_rule to add individual rules. See **Examples**.

Since certain chains can be used with multiple tables (e.g., _PREROUTING_), you might have to include the name of the table explicitly (i.e., _*nat_, _*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer how to assemble final ruleset file that is going to be loaded. Please note, that unless specified otherwise, rules will be added under the **filter** table by default.

### Examples

To enable port 80, e.g. in an `my_httpd` cookbook, create the following template:

```text
# Port 80 for http
-A FWR -p tcp -m tcp --dport 80 -j ACCEPT
```

This template would be located at: `my_httpd/templates/default/http.erb`. Then within your recipe call:

```ruby
iptables_rule 'http' do
  action :enable
end
```

To redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd` cookbook, create the following template:

```text
*nat
# Redirect anything on eth0 coming to port 80 to local port 8080
-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080
```

Please note, that we explicitly add name of the table (being _*nat_ in this example above) where the rules should be added.

This would most likely go in the cookbook, `my_httpd/templates/default/http_8080.erb`. Then to use it in `recipe[httpd]`:

```ruby
iptables_rule 'http_8080' do
  action :enable
end
```

To create a rule without using a template resource use the `lines` property:

```ruby
iptables_rule 'http_8080' do
  lines '-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080'
end
```

To get attribute-driven rules you can (for example) feed a hash of attributes into named iptables.d files like this:

```ruby
node.default['iptables']['http_80'] = '-A FWR -p tcp -m tcp --dport 80 -j ACCEPT'
node.default['iptables']['http_443'] = [
  '# an example with multiple lines',
  '-A FWR -p tcp -m tcp --dport 443 -j ACCEPT',
]

node['iptables'].map do |rule_name, rule_body|
  iptables_rule rule_name do
    lines [ rule_body ].flatten.join("\n")
  end
end
```

## Chefspec Matchers

- enable_iptables_rule(resource_name)
- disable_iptables_rule(resource_name)

## License & Authors

**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2008-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/README.md to tempfile /tmp/chef-rest20170405-7856-1cy0stm
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
source 'https://rubygems.org'

gem "test-kitchen"
gem "kitchen-vagrant"
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/Berksfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Gemfile to tempfile /tmp/chef-rest20170405-7856-1ygaios
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/Gemfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# encoding: utf-8

require 'bundler'
require 'bundler/setup'
require 'berkshelf/thor'

begin
  require 'kitchen/thor_tasks'
  Kitchen::ThorTasks.new
rescue LoadError
  puts '>>>>> Kitchen gem not loaded, omitting tasks' unless ENV['CI']
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/TESTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Thorfile to tempfile /tmp/chef-rest20170405-7856-1yvu7ag
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/Thorfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# cookstyle todo:
#
Lint/AmbiguousRegexpLiteral:
  Exclude:
    - 'test/integration/default/serverspec/default_spec.rb'
    - 'test/integration/default/serverspec/rules_spec.rb'
    - 'test/integration/no_template/serverspec/default_spec.rb'
    - 'test/integration/no_template/serverspec/rules_spec.rb'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.rubocop.yml to tempfile /tmp/chef-rest20170405-7856-1wjv26e
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/.rubocop.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/.travis.yml
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005213ab8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/.travis.yml",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005213b08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   ".travis.yml"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Use Travis's cointainer based infrastructure
sudo: false
addons:
  apt:
    sources:
      - chef-stable-precise
    packages:
      - chefdk

# Don't `bundle install`
install: echo "skip bundle install"

branches:
  only:
    - master

# Ensure we make ChefDK's Ruby the default
before_script:
  - eval "$(/opt/chefdk/bin/chef shell-init bash)"

script:
  - /opt/chefdk/embedded/bin/chef --version
  - /opt/chefdk/embedded/bin/cookstyle --version
  - /opt/chefdk/embedded/bin/foodcritic --version
  - /opt/chefdk/bin/chef exec delivery local all
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/.travis.yml to tempfile /tmp/chef-rest20170405-7856-1si2kbh
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/.travis.yml in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/TESTING.md to tempfile /tmp/chef-rest20170405-7856-8uz7b3
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/TESTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005228a80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005228ad0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005016c88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005016d78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/resources/xcode_command_line_tools.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/recipes/_windows.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005134cc8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005134d18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f17198
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f17210>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000052292c8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005229318>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-cxn738
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/resources/build_essential.rb
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005218040
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000052180b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005282940
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/resources/xcode_command_line_tools.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005282990>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "resources",
   "xcode_command_line_tools.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-1dtyems
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000526fa98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/recipes/_windows.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000526fae8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "recipes",
   "_windows.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: build-essential
# Recipe:: _windows
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

node.default['seven_zip']['syspath'] = true
include_recipe 'seven_zip::default'

tool_path = node['build-essential']['msys2']['path']

directory tool_path do
  action :create
  recursive true
end

[
  'base-devel', # Brings down msys based bash/make/awk/patch/stuff..
  'mingw-w64-x86_64-toolchain', # Puts 64-bit SEH mingw toolchain in msys2\mingw64
  'mingw-w64-i686-toolchain' # Puts 32-bit DW2 mingw toolchain in msys2\ming32
].each do |package|
  msys2_package package do
    root tool_path
  end
end

# Certain build steps assume that a tar command is available on the
# system path. The default tar present in msys2\usr\bin is an msys GNU tar
# that expects forward slashes and consider ':' to be a remote tape separator
# or something weird like that. We therefore drop bat file in msys2\bin that
# redirect to the underlying executables without mucking around with
# msys2's /usr/bin itself.
{
  'bsdtar.exe' => 'tar.bat',
  'patch.exe' => 'patch.bat',
}.each do |reference, link|
  file "#{tool_path}\\bin\\#{link}" do
    content "@%~dp0..\\usr\\bin\\#{reference} %*"
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "iptables",
  "description": "Installs the iptables daemon and provides a LWRP for managing rules",
  "long_description": "# iptables Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/iptables.svg?branch=master)](https://travis-ci.org/chef-cookbooks/iptables) [![Cookbook Version](https://img.shields.io/cookbook/v/iptables.svg)](https://supermarket.chef.io/cookbooks/iptables)\n\nInstalls iptables and provides a custom resource for adding and removing iptables rules\n\n## Requirements\n\n### Platforms\n\n- Ubuntu/Debian\n- RHEL/CentOS and derivatives\n\n### Chef\n\n- Chef 12.10+\n\n### Cookbooks\n\n- none\n\n## Recipes\n\n### default\n\nThe default recipe will install iptables and provides a ruby script (installed in `/usr/sbin/rebuild-iptables`) to manage rebuilding firewall rules from files dropped off in `/etc/iptables.d`.\n\n### disabled\n\nThe disabled recipe will install iptables, disable the `iptables` service (on RHEL platforms), and delete the rules directory `/etc/iptables.d`.\n\n## Attributes\n\n`default['iptables']['iptables_sysconfig']` and `default['iptables']['ip6tables_sysconfig']` are hashes that are used to template /etc/sysconfig/iptables-config and /etc/sysconfig/ip6tables-config. The keys must be upper case and any key / value pair included will be added to the config file.\n\n`default['iptables']['system_ruby']` allows users to override the system ruby path if ruby is installed into a non standard location and Chef has been installed without an embedded ruby (eg. from the Gem).\n\n## Custom Resource\n\n### rule\n\nThe custom resource drops off a template in `/etc/iptables.d` after the `name` parameter. The rule will get added to the local system firewall through notifying the `rebuild-iptables` script. See **Examples** below.\n\nNOTE: In the 1.0 release of this cookbook the iptables_rule definition was converted to a custom resource. This changes the behavior of disabling iptables rules. Previously a rule could be disabled by specifying `enable false`. You must now specify `action :disable`\n\n## Usage\n\nAdd `recipe[iptables]` to your runlist to ensure iptables is installed / running and to ensure that the `rebuild-iptables` script is on the system. Then create use iptables_rule to add individual rules. See **Examples**.\n\nSince certain chains can be used with multiple tables (e.g., _PREROUTING_), you might have to include the name of the table explicitly (i.e., _*nat_, _*mangle_, etc.), so that the `/usr/sbin/rebuild-iptables` script can infer how to assemble final ruleset file that is going to be loaded. Please note, that unless specified otherwise, rules will be added under the **filter** table by default.\n\n### Examples\n\nTo enable port 80, e.g. in an `my_httpd` cookbook, create the following template:\n\n```text\n# Port 80 for http\n-A FWR -p tcp -m tcp --dport 80 -j ACCEPT\n```\n\nThis template would be located at: `my_httpd/templates/default/http.erb`. Then within your recipe call:\n\n```ruby\niptables_rule 'http' do\n  action :enable\nend\n```\n\nTo redirect port 80 to local port 8080, e.g., in the aforementioned `my_httpd` cookbook, create the following template:\n\n```text\n*nat\n# Redirect anything on eth0 coming to port 80 to local port 8080\n-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080\n```\n\nPlease note, that we explicitly add name of the table (being _*nat_ in this example above) where the rules should be added.\n\nThis would most likely go in the cookbook, `my_httpd/templates/default/http_8080.erb`. Then to use it in `recipe[httpd]`:\n\n```ruby\niptables_rule 'http_8080' do\n  action :enable\nend\n```\n\nTo create a rule without using a template resource use the `lines` property:\n\n```ruby\niptables_rule 'http_8080' do\n  lines '-A PREROUTING -i eth0 -p tcp --dport 80 -j REDIRECT --to-port 8080'\nend\n```\n\nTo get attribute-driven rules you can (for example) feed a hash of attributes into named iptables.d files like this:\n\n```ruby\nnode.default['iptables']['http_80'] = '-A FWR -p tcp -m tcp --dport 80 -j ACCEPT'\nnode.default['iptables']['http_443'] = [\n  '# an example with multiple lines',\n  '-A FWR -p tcp -m tcp --dport 443 -j ACCEPT',\n]\n\nnode['iptables'].map do |rule_name, rule_body|\n  iptables_rule rule_name do\n    lines [ rule_body ].flatten.join(\"\\n\")\n  end\nend\n```\n\n## Chefspec Matchers\n\n- enable_iptables_rule(resource_name)\n- disable_iptables_rule(resource_name)\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2008-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n",
  "maintainer": "Chef Software, Inc.",
  "maintainer_email": "cookbooks@chef.io",
  "license": "Apache-2.0",
  "platforms": {
    "redhat": ">= 0.0.0",
    "centos": ">= 0.0.0",
    "debian": ">= 0.0.0",
    "ubuntu": ">= 0.0.0",
    "amazon": ">= 0.0.0",
    "scientific": ">= 0.0.0",
    "oracle": ">= 0.0.0",
    "zlinux": ">= 0.0.0"
  },
  "dependencies": {
  },
  "recommendations": {
  },
  "suggestions": {
  },
  "conflicting": {
  },
  "providing": {
  },
  "replacing": {
  },
  "attributes": {
  },
  "groupings": {
  },
  "recipes": {
    "default": "Installs iptables and sets up .d style config directory of iptables rules",
    "disabled": "Disables iptables"
  },
  "version": "4.0.1",
  "source_url": "https://github.com/chef-cookbooks/iptables",
  "issues_url": "https://github.com/chef-cookbooks/iptables/issues",
  "privacy": false,
  "chef_versions": [
    [
      ">= 12.10"
    ]
  ],
  "ohai_versions": [

  ],
  "gems": [

  ]
}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/_windows.rb to tempfile /tmp/chef-rest20170405-7856-yuj3d2
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/metadata.json to tempfile /tmp/chef-rest20170405-7856-96p243
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/_windows.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/iptables/Vagrantfile
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000052869f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/iptables/Vagrantfile",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005286a40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "iptables",
   "Vagrantfile"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# iptables Cookbook CHANGELOG
This file is used to list changes made in each version of the iptables cookbook.

## 4.0.1 (2017-03-29)
- Update metadata to require Chef 12.10+ due to use of with_run_context 

## 4.0.0 (2017-02-27)

- Remove EOL platforms from testing
- Require Chef 12.5 and remove compat_resource dependency

## 3.1.0 (2017-01-16)

- Update readme to include new attribute
- Check subcmd exit codes in rebuild-iptables script
- fixed iptables disabled recipe to flush iptables after disabling the service

## 3.0.1 (2016-10-10)
- Fix rules resource so rebuild-iptables only runs once
- Add tests for nested resources
- Add system ruby attribute so that it can be overridden

## 3.0.0 (2016-09-16)
- Remove kitchen cloud config
- Fix default specs to work properly on RHEL and other general spec cleanup
- Simplify testing and fix failing tests on RHEL
- allow using a file provider instead of a template
- rename 'content' to 'lines' and add documentation
- make the attributes example a bit more useful
- using iptables-restore logic for rhel - same as debian
- copy new config to default location in case of iptables restart
- refactored rebuild-iptables script
- Update supported os
- Use compat_resource to restore Chef 12.1 - 12.4 compatibility

## v2.2.0 (2016-02-17)
- Remove the dependency on compat_resource cookbook. This fixes RHEL systems, but increases the required Chef version to 12.5 or later

## v2.1.1 (2016-01-26)
- Fixed failures on RHEL in the disabled recipe

## v2.1.0 (2016-01-25)
- Improved compatbility with Fedora
- Added management of the iptables sysconfig files using 2 new attributes. See the readme for more information

## v2.0.2 (2016-01-15)
- Fixed rules not being rebuilt when using the disable action in the custom resource

## v2.0.1 (2015-11-16)
- Added Chefspec matchers

## v2.0.0 (2015-10-21)
- Migrated LWRP to Chef 12.5 custom resources format with backwards compatibility provided via compat_resource cookbook to 12.X family
- Added Start / enable of iptables service in the default recipe when on RHEL based systems and the management of /etc/sysconfig/iptables so the service can start
- Added removal of /etc/iptables.d/ to the disabled recipe to allow for reenabling later on
- Modified the iptables service disable in the disable recipe to only run when on RHEL based systems
- Expanded the serverspec tests and test kitchen suites to better test rules custom resource and disable recipe

## v1.1.0 (2015-10-05)
- Fixed metadata description of the default recipe
- Added Kitchen CI config
- Added Chefspec unit tests
- Updated to our standard Rubocop config and resolve all warnings
- Added Travis CI config for lint / unit testing on Ruby 2/2.1/2.2
- Updated Contributing and Testing docs
- Added a maintainers doc
- Added a Gemfile with development and testing dependencies
- Added cookbook version and Travis CI badges to the readme
- Clarified in the readme that the minimum supported Chef release is 11.0
- Added a Rakefile easier testing
- Added a chefignore file to limit files that are uploaded to the Chef server
- Update to modern notification format to resolve Foodcritic warnings
- Added source_url and issues_url to the metadata for Supermarket
- Removed pre-Ruby 1.9 hash rockets

## v1.0.0 (2015-04-29)
NOTE: This release includes breaking changes to the behavior of this cookbook. The iptables_rule definition was converted to a LWRP.  This changes the behavior of disabling iptables rules.  Previously a rule could be disabled by specifying `enable false`.  You must now specify `action :disable`.  Additionally the cookbook no longer installs the out of the box iptables rules.  These were rules made assumptions about the operating environment and should not have been installed out of the box. This makes this recipe a library cookbook that can be better wrapped to meet the needs or your particular environment.
- Definition converted to a LWRP to providing why-run support and
- The out of the box iptables rules are no longer installed.  If you need these rules you'll need to wrap the cookbook and use the LWRP to define these same rules.
- Removed all references to the roadmap and deprecation of the cookbook.  It's not going anywhere any time soon
- Use platform_family to better support Debian derivatives
- Converted file / directory modes to strings to preserve the leading 0
- Added additional RHEL derivitive distributions to the metadata
- Expanded excluded files in the gitignore and chefignore files
- Included the latest contributing documentation to match the current process

## v0.14.1 (2015-01-01)
- Fixing File.exists is deprecated for File.exist

## v0.14.0 (2014-08-31)
- [#14] Adds basic testing suite including Berksfile
- [#14] Adds basic integration/post-converge tests
- [#14] Adds default prefix and postfix rules to disalow traffic

## v0.13.2 (2014-04-09)
- [COOK-4496] Added Amazon Linux support

## v0.13.0 (2014-03-19)
- [COOK-3927] Substitute Perl version of rebuild-iptables with Ruby version

## v0.12.2 (2014-03-18)
- [COOK-4411] - Add newling to iptables.snat

## v0.12.0
- [COOK-2213] - iptables disabled recipe

## v0.11.0
- [COOK-1883] - add perl package so rebuild script works

## v0.10.0
- [COOK-641] - be able to save output on rhel-family
- [COOK-655] - use a template from other cookbooks

## v0.9.3
- Current public release.
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-1h75fe4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050deeb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000050def08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: build-essential
# Recipe:: default
#
# Copyright:: 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Call the build-essential custom resource
# This can also be called directly in your cookbooks anywhere you want
build_essential 'install_packages' do
  compile_time node['build-essential']['compile_time']
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-pydo75
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005123400
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005123450>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# build-essential Cookbook

[![Cookbook Version](http://img.shields.io/cookbook/v/build-essential.svg)][cookbook] [![Build Status](https://travis-ci.org/chef-cookbooks/build-essential.svg?branch=master)](https://travis-ci.org/chef-cookbooks/build-essential)

Installs packages required for compiling C software from source. Use this cookbook if you wish to compile C programs, or install RubyGems with native extensions. Contains a resource, 'build_essential', as as well as a default recipe that simply calls that same resource.

## Requirements

### Platforms

- Debian/Ubuntu
- RHEL/CentOS/Scientific/Amazon/Oracle
- openSUSE / SUSE Enterprise Linux
- SmartOS
- Fedora
- Mac OS X 10.9+
- FreeBSD

### Chef

- Chef 12.5+

### Cookbooks

- seven_zip
- mingw

**Note for Debian platform family:** On Debian platform-family systems, it is recommended that `apt-get update` be run, to ensure that the package cache is updated. It's not in the scope of this cookbook to do that, as it can [create a duplicate resource](https://tickets.chef.io/browse/CHEF-3694). We recommend using the [apt](https://supermarket.chef.io/cookbooks/apt) cookbook to do this.

## Attributes

Attribute                                  |            Default            | Description
------------------------------------------ | :---------------------------: | -----------------------------------------------------
`node['build-essential']['compile_time']`  |            `false`            | Execute resources at compile time
`node['build-essential']['msys2']['path']` | `#{ENV['SYSTEMDRIVE']\\msys2` | Destination for msys2 build tool chain (Windows only)

## Usage

### Recipe Usage

The recipe simply calls the build_essential resource, but it ideal for adding to roles or node run lists.

Include the build-essential recipe in your run list:

```sh
knife node run_list add NODE "recipe[build-essential::default]"
```

or add the build-essential recipe as a dependency and include it from inside another cookbook:

```ruby
include_recipe 'build-essential::default'
```

### Gems with C extensions

For RubyGems that include native C extensions you wish to use with Chef, you should do the following.

- Set the `compile_time` attribute to true in your wrapper cookbook or role:

  ```ruby
   # Wrapper attribute
   default['build-essential']['compile_time'] = true
  ```

  ```ruby
   # Role
   default_attributes(
     'build-essential' => {
       'compile_time' => true
     }
   )
  ```

- Ensure that the C libraries, which include files and other assorted "dev"

  type packages, are installed in the compile phase after the build-essential

  recipe is executed. For example:

  ```ruby
   include_recipe 'build-essential::default'

   package('mypackage-devel') { action :nothing }.run_action(:install)
  ```

- Use the `chef_gem` resource in your recipe to install the gem with the native

  extension:

  ```ruby
   chef_gem 'gem-with-native-extension'
  ```

### Resource Usage

The cookbook includes a resource 'build_essential' that can be included in your cookbook to install the necessary build-essential packages

Simple package installation during the client run:

```ruby
build_essential 'some name you choose'
```

Package installation during the compile phase:

```ruby
build_essential 'some name you choose' do
  compile_time false
end
```

## License & Authors

**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2009-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

[cookbook]: https://supermarket.chef.io/cookbooks/build-essential
[travis]: http://travis-ci.org/chef-cookbooks/build-essential
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/README.md to tempfile /tmp/chef-rest20170405-7856-17qbbwt
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-18szfxi
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/resources/hint.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005038478
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/resources/hint.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005038518>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "resources",
   "hint.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005162e70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005162ec0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050a0dc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000050a0e10>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"build-essential","version":"8.0.0","description":"Installs C compiler / build tools","long_description":"# build-essential Cookbook\n\n[![Cookbook Version](http://img.shields.io/cookbook/v/build-essential.svg)][cookbook] [![Build Status](https://travis-ci.org/chef-cookbooks/build-essential.svg?branch=master)](https://travis-ci.org/chef-cookbooks/build-essential)\n\nInstalls packages required for compiling C software from source. Use this cookbook if you wish to compile C programs, or install RubyGems with native extensions. Contains a resource, 'build_essential', as as well as a default recipe that simply calls that same resource.\n\n## Requirements\n\n### Platforms\n\n- Debian/Ubuntu\n- RHEL/CentOS/Scientific/Amazon/Oracle\n- openSUSE / SUSE Enterprise Linux\n- SmartOS\n- Fedora\n- Mac OS X 10.9+\n- FreeBSD\n\n### Chef\n\n- Chef 12.5+\n\n### Cookbooks\n\n- seven_zip\n- mingw\n\n**Note for Debian platform family:** On Debian platform-family systems, it is recommended that `apt-get update` be run, to ensure that the package cache is updated. It's not in the scope of this cookbook to do that, as it can [create a duplicate resource](https://tickets.chef.io/browse/CHEF-3694). We recommend using the [apt](https://supermarket.chef.io/cookbooks/apt) cookbook to do this.\n\n## Attributes\n\nAttribute                                  |            Default            | Description\n------------------------------------------ | :---------------------------: | -----------------------------------------------------\n`node['build-essential']['compile_time']`  |            `false`            | Execute resources at compile time\n`node['build-essential']['msys2']['path']` | `#{ENV['SYSTEMDRIVE']\\\\msys2` | Destination for msys2 build tool chain (Windows only)\n\n## Usage\n\n### Recipe Usage\n\nThe recipe simply calls the build_essential resource, but it ideal for adding to roles or node run lists.\n\nInclude the build-essential recipe in your run list:\n\n```sh\nknife node run_list add NODE \"recipe[build-essential::default]\"\n```\n\nor add the build-essential recipe as a dependency and include it from inside another cookbook:\n\n```ruby\ninclude_recipe 'build-essential::default'\n```\n\n### Gems with C extensions\n\nFor RubyGems that include native C extensions you wish to use with Chef, you should do the following.\n\n- Set the `compile_time` attribute to true in your wrapper cookbook or role:\n\n  ```ruby\n   # Wrapper attribute\n   default['build-essential']['compile_time'] = true\n  ```\n\n  ```ruby\n   # Role\n   default_attributes(\n     'build-essential' => {\n       'compile_time' => true\n     }\n   )\n  ```\n\n- Ensure that the C libraries, which include files and other assorted \"dev\"\n\n  type packages, are installed in the compile phase after the build-essential\n\n  recipe is executed. For example:\n\n  ```ruby\n   include_recipe 'build-essential::default'\n\n   package('mypackage-devel') { action :nothing }.run_action(:install)\n  ```\n\n- Use the `chef_gem` resource in your recipe to install the gem with the native\n\n  extension:\n\n  ```ruby\n   chef_gem 'gem-with-native-extension'\n  ```\n\n### Resource Usage\n\nThe cookbook includes a resource 'build_essential' that can be included in your cookbook to install the necessary build-essential packages\n\nSimple package installation during the client run:\n\n```ruby\nbuild_essential 'some name you choose'\n```\n\nPackage installation during the compile phase:\n\n```ruby\nbuild_essential 'some name you choose' do\n  compile_time false\nend\n```\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2009-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[cookbook]: https://supermarket.chef.io/cookbooks/build-essential\n[travis]: http://travis-ci.org/chef-cookbooks/build-essential\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","debian":">= 0.0.0","fedora":">= 0.0.0","freebsd":">= 0.0.0","mac_os_x":">= 10.9.0","mac_os_x_server":">= 10.9.0","opensuse":">= 0.0.0","opensuseleap":">= 0.0.0","oracle":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","smartos":">= 0.0.0","solaris":">= 0.0.0","suse":">= 0.0.0","ubuntu":">= 0.0.0","windows":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{"seven_zip":">= 0.0.0","mingw":">= 1.1"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{"build-essential":"Installs packages required for compiling C software from source."}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/metadata.json to tempfile /tmp/chef-rest20170405-7856-dvz3ew
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000511e680
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000511e6f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-3gdngg
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000521ccd0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/build-essential/resources/build_essential.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000521cd20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "resources",
   "build_essential.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)
  def install_xcode_command_line_tools(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:xcode_command_line_tools, :install, resource_name)
  end

  def install_build_essential(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:build_essential, :install, resource_name)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-1ov2449
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: build-essential
# Resource:: xcode_command_line_tools
#
# Copyright:: 2014-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

resource_name :xcode_command_line_tools

action :install do
  if installed?
    Chef::Log.debug("#{new_resource} already installed - skipping")
  else
    converge_by("Install #{new_resource}") do
      # This script was graciously borrowed and modified from Tim Sutton's
      # osx-vm-templates at https://github.com/timsutton/osx-vm-templates/blob/b001475df54a9808d3d56d06e71b8fa3001fff42/scripts/xcode-cli-tools.sh
      execute 'install XCode Command Line tools' do
        command <<-EOH.gsub(/^ {14}/, '')
          # create the placeholder file that's checked by CLI updates' .dist code
          # in Apple's SUS catalog
          touch /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
          # find the CLI Tools update
          PROD=$(softwareupdate -l | grep "\*.*Command Line" | head -n 1 | awk -F"*" '{print $2}' | sed -e 's/^ *//' | tr -d '\n')
          # install it
          softwareupdate -i "$PROD" --verbose
          # Remove the placeholder to prevent perpetual appearance in the update utility
          rm -f /tmp/.com.apple.dt.CommandLineTools.installondemand.in-progress
        EOH
        # rubocop:enable Metrics/LineLength
      end
    end
  end
end

action_class do
  #
  # Determine if the XCode Command Line Tools are installed
  #
  # @return [true, false]
  #
  def installed?
    cmd = Mixlib::ShellOut.new('pkgutil --pkgs=com.apple.pkg.CLTools_Executables')
    cmd.run_command
    cmd.error!
    true
  rescue Mixlib::ShellOut::ShellCommandFailed
    false
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/xcode_command_line_tools.rb to tempfile /tmp/chef-rest20170405-7856-hiwcot
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/resources/xcode_command_line_tools.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/.foodcritic
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: build-essential
# Attributes:: default
#
# Copyright:: 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['build-essential']['compile_time'] = false
default['build-essential']['msys2']['path'] = "#{ENV['SYSTEMDRIVE']}\\msys2"
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/build-essential/.foodcritic
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-4cvm51
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/build-essential/attributes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# -*- mode: ruby -*-
# vi: set ft=ruby :

# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!
VAGRANTFILE_API_VERSION = '2'

Vagrant.require_version '>= 1.5.0'

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  # All Vagrant configuration is done here. The most common configuration
  # options are documented and commented below. For a complete reference,
  # please see the online documentation at vagrantup.com.

  config.vm.hostname = 'iptables-berkshelf'

  # Set the version of chef to install using the vagrant-omnibus plugin
  # NOTE: You will need to install the vagrant-omnibus plugin:
  #
  #   $ vagrant plugin install vagrant-omnibus
  #
  if Vagrant.has_plugin?("vagrant-omnibus")
    config.omnibus.chef_version = 'latest'
  end

  # Every Vagrant virtual environment requires a box to build off of.
  # If this value is a shorthand to a box in Vagrant Cloud then
  # config.vm.box_url doesn't need to be specified.
  config.vm.box = 'bento/ubuntu-14.04'


  # Assign this VM to a host-only network IP, allowing you to access it
  # via the IP. Host-only networks can talk to the host machine as well as
  # any other machines on the same network, but cannot be accessed (through this
  # network interface) by any external networks.
  config.vm.network :private_network, type: 'dhcp'

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  # config.vm.synced_folder "../data", "/vagrant_data"

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider :virtualbox do |vb|
  #   # Don't boot with headless mode
  #   vb.gui = true
  #
  #   # Use VBoxManage to customize the VM. For example to change memory:
  #   vb.customize ["modifyvm", :id, "--memory", "1024"]
  # end
  #
  # View the documentation for the provider you're using for more
  # information on available options.

  # The path to the Berksfile to use with Vagrant Berkshelf
  # config.berkshelf.berksfile_path = "./Berksfile"

  # Enabling the Berkshelf plugin. To enable this globally, add this configuration
  # option to your ~/.vagrant.d/Vagrantfile file
  config.berkshelf.enabled = true

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to exclusively install and copy to Vagrant's shelf.
  # config.berkshelf.only = []

  # An array of symbols representing groups of cookbook described in the Vagrantfile
  # to skip installing and copying to Vagrant's shelf.
  # config.berkshelf.except = []

  config.vm.provision :chef_solo do |chef|
    chef.json = {
      mysql: {
        server_root_password: 'rootpass',
        server_debian_password: 'debpass',
        server_repl_password: 'replpass'
      }
    }

    chef.run_list = [
      'recipe[iptables::default]'
    ]
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/iptables/Vagrantfile to tempfile /tmp/chef-rest20170405-7856-14br9os
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/iptables/Vagrantfile in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/resources/plugin.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f9caf0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f9cb40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f73b28
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f73b78>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: ohai
# Library:: matchers
#
# Author:: Tim Smith (<tsmith@chef.io>)
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if defined?(ChefSpec)
  ChefSpec.define_matcher :ohai_hint
  ChefSpec.define_matcher :ohai_plugin

  def create_ohai_hint(resource)
    ChefSpec::Matchers::ResourceMatcher.new(:ohai_hint, :create, resource)
  end

  def delete_ohai_hint(resource)
    ChefSpec::Matchers::ResourceMatcher.new(:ohai_hint, :delete, resource)
  end

  def create_ohai_plugin(resource)
    ChefSpec::Matchers::ResourceMatcher.new(:ohai_plugin, :create, resource)
  end

  def delete_ohai_plugin(resource)
    ChefSpec::Matchers::ResourceMatcher.new(:ohai_plugin, :delete, resource)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-719fkq
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005056748
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005056798>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f22408
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f22458>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004fa6d70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/resources/plugin.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004fa6dc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "resources",
   "plugin.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: ohai
# Recipe:: default
#
# Copyright:: 2011-2016, Chef Software, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

Chef::Log.warn('The Ohai cookbook default recipe has no content as of the 4.0 release. See the readme for instructions on using the custom resources.')
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-e1jgu0
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005137d38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/build-essential/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005137d88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "build-essential",
   ".foodcritic"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC057
~FC016
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/.foodcritic to tempfile /tmp/chef-rest20170405-7856-dxlcuv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/.foodcritic in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/ohai/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004e8d740
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004e8d7b8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f27ef8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f27f48>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# build-essential Cookbook CHANGELOG

This file is used to list changes made in each version of the build-essential cookbook.

## 8.0.0 (2017-02-14)

- Require 12.5 or later and remove compat_resource cookbook dependency

## 7.0.3 (2016-12-22)

- Require the latest compat_resource
- Cookstyle fixes

## 7.0.2 (2016-11-07)

- Fix softwareupdate issue from -v to --verbose

## 7.0.1 (2016-10-06)

- Install gcc 4.8 on SUSE < 12

## 7.0.0 (2016-09-30)

- Remove support for OS X < 10.9 and add support for OS X 10.12
- Refactor the xcode installer resource as a custom resource that does not require updates for each new OS X update
- Use a test recipe with apt_update to avoid needing apt

## 6.0.6 (2016-09-19)

- Remove chef 11 compatibility in the metadata
- Solaris 11 needs both make and gnu make

## 6.0.5 (2016-09-07)

- Testing updates
- Require the latest compat_resource

## 6.0.4 (2016-08-19)

- Install CLTools from dmg with -allowUntrusted on old OSX
- Switch to cookstyle for ruby linting
- Add OS X hosts to the kitchen config
- Remove chefdk included gems from the Gemfile
- Better handle kitchen failures in the Rakefile
- Perform all unit/linting in a single travis job

## v6.0.3 (2016-07-26)

- Fix how gcc version specified for Solaris 11

## v6.0.2 (2016-07-22)

- Properly warn on Solaris 10
- Specify the verson of gcc to install on Solaris 11

## v6.0.1 (2016-07-19)

- Clarify that this cookbook actually required Chef 12.1 or later not 12.0 or later
- Add chef_version metadata

## v6.0.0 (2016-06-03)

This cookbook now uses the new msys2 based compiler toolchain on windows. Both 32-bit DW2 and 64-bit SEH based toolchains are available based on the gcc 5.3x series compiler. By default these are located in C:\msys2\mingw32 and C:\msys2\mingw64

## v5.0.0 (2016-06-03)

The cookbook now ships with a 12.5+ style custom resource 'build_essential' which performs the same work that the existing default.rb recipe. The default.rb recipe has been converted to consume that resource to provide backwards compatibility for users that use build-essential::default in their run lists or cookbooks. In converting to this custom resource support for EOL omnios has been removed and warning messages for Solaris 10 users have been removed. See the readme for usage information on the new resource.

## v4.0.0 (2016-05-12)

### Breaking change

This cookbook now requires Chef 12 or later as it includes the new mingw cookbook for installing Windows compilers. Mingw includes 12.5 style custom resources, which will fail to compile on Chef 11\. If you are not running Chef 12 you'll need to pin to 3.x in your environment.

## v3.2.0 (2016-03-25)

This version backs out a change in the 3.0 release which attempted to install the version of kernel-devel for the current running kernel on RHEL systems. This change had several unintended consequences and we believe the best solution is to back to change out until a better solution for the original problem is developed. Several of the issues could be resolved by code updates to build-essential, but not all, which complicates rolling forward vs. a roll back. The change caused issues which Chefspec runs on cookbooks where build-essential is a dependency as Fauxhai, used by Chefspec, does not mock out node['virtualization']. Fauxhai is being updated to mock out node['virtualization'], but we'd like to make sure a ChefDK release ships with this new Fauxhai before depending on that change.

## v3.1.0 (2016-03-23)

- Install GCC 4.8 if running on OmniOS >= 151008

## v3.0.0 (2016-03-23)

- Install GCC 4.9 on FreeBSD < 10
- Install the version of kernel-devel that matches the running Kernel on RHEL
- Remove suggests 'pkgutil' from the metadata as suggests does nothing
- Properly warn the user that build-essential does not support Solaris 10 instead of just silently continuing on
- Updated specs to run against more recent OS releases
- Removed the warning for OmniOS users from the Readme as the upstream issue has been resolved
- Switch from 7-zip to seven_zip cookbook as 7-zip has been deprecated
- Add 7-zip to the system path on Windows hosts so the recipe will work out of the box
- Switch from the deprecated 7-zip cookbook to seven_zip

## v2.4.0 (2016-03-21)

- Add gettext package to RHEL / FreeBSD to match other platforms
- Fix OS X version detection logic to properly detect OS X 10.10 and 10.11

## v2.3.1 (2016-02-18)

- Restore Chef 11 compatibility and add Travis / Test Kitchen testing for Chef 11

## v2.3.0 (2016-02-17)

- Add mingw/msys based build tools for Windows

## v2.2.4 (2015-10-06)

- Add patch package on Fedora systems
- Add additional platforms to Kitchen CI
- Use Chef standard Rubocop file and resolve several issues
- Update contributing and testing docs
- Update Gemfile with the latest testing and development deps
- Add maintainers.md and maintainers.toml files
- Add chefignore file to limit the files uploaded to the Chef server
- Add source_url and issues_url metadata for Supermarket

## v2.2.3 (2015-04-15)

- Don't install omnibus-build-essential on Solaris 10 - We decided it's easier to use the old GCC that ships with Solaris 10.
- Use ChefDK for all Travis testing.

## v2.2.2 (2015-03-27)

- Update Solar 10's omnibus-build-essential to 0.0.5

## v2.2.1 (2015-03-23)

- Install GNU Patch on Solaris 11

## v2.2.0 (2015-03-18)

- [solaris] Differentiate between Solaris 10 and 11
- [solaris] Add ucb compat package
- [solaris] Solaris 10 build essential setup
- Fix metadata to use a string instead of a bool (see #56, #57)

## v2.1.3 (2014-11-18)

- Update metadata for supported versions of OS X (10.7+) as noted from
- v2.0.0 previously (#38)
- Clarify requirement to have apt package cache updated in README. (#41)
- Fix Xcode CLI installation on OS X (#50)

## v2.1.2 (2014-10-14)

- Mac OS X 10.10 Yosemite support

## v2.1.0 (2014-10-14)

- Use fully-qualified names when installing FreeBSD package

## v2.0.6 (2014-08-11)

- Use the resource form of `remote_file` to prevent context issues

## v2.0.4 (2014-06-06)

- [COOK-4661] added patch package to _rhel recipe

## v2.0.2 (2014-05-02)

- Updated documentation about older Chef versions
- Added new SVG badges to the README
- Fix a bug where `potentially_at_compile_time` fails on non-resources

## v2.0.0 (2014-03-13)

- Updated tested harnesses to use latest ecosystem tools
- Added support for FreeBSD
- Added support for installing XCode Command Line Tools on OSX (10.7, 10.8, 10.9)
- Created a DSL method for wrapping compile_time vs runtime execution
- Install additional developement tools on some platforms
- Add nicer log and warning messages with helpful information

**Potentially Breaking Changes**

- Dropped support for OSX 10.6
- OSX no longer downloads OSX GCC and uses XCode CLI tools instead
- `build_essential` -> `build-essential` in node attributes
- `compiletime` -> `compile_time` in node attributes
- Cookbook version 2.x no longer supports Chef 10.x

## v1.4.4 (2014-02-27)

- [COOK-4245] Wrong package name used for developer tools on OS X 10.9

## v1.4.2

### Bug

- **[COOK-3318](https://tickets.chef.io/browse/COOK-3318)** - Use Mixlib::ShellOut instead of Chef::ShellOut

### New Feature

- **[COOK-3093](https://tickets.chef.io/browse/COOK-3093)** - Add OmniOS support

### Improvement

- **[COOK-3024](https://tickets.chef.io/browse/COOK-3024)** - Use newer package on SmartOS

## v1.4.0

This version splits up the default recipe into recipes included based on the node's platform_family.

- [COOK-2505] - backport omnibus builder improvements

## v1.3.4

- [COOK-2272] - Complete `platform_family` conversion in build-essential

## v1.3.2

- [COOK-2069] - build-essential will install osx-gcc-installer when XCode is present

## v1.3.0

- [COOK-1895] - support smartos

## v1.2.0

- Add test-kitchen support (source repo only)
- [COOK-1677] - build-essential cookbook support for OpenSuse and SLES
- [COOK-1718] - build-essential cookbook metadata should include scientific
- [COOK-1768] - The apt-get update in build-essentials needs to be renamed

## v1.1.2

- [COOK-1620] - support OS X 10.8

## v1.1.0

- [COOK-1098] - support amazon linux
- [COOK-1149] - support Mac OS X
- [COOK-1296] - allow for compile-time installation of packages through an attribute (see README)

## v1.0.2

- [COOK-1098] - Add Amazon Linux platform support
- [COOK-1149] - Add OS X platform support
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Tim Smith](https://github.com/tas50)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-t8wz9i
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
property :plugin_name, kind_of: String, name_attribute: true
property :path, kind_of: String
property :source_file, kind_of: String
property :cookbook, kind_of: String
property :resource, [:cookbook_file, :template], default: :cookbook_file
property :variables, kind_of: Hash
property :compile_time, [true, false], default: true

action_class do
  # return the path property if specified or
  # CHEF_CONFIG_PATH/ohai/plugins if a path isn't specified
  def desired_plugin_path
    if path
      path
    else
      ohai_plugin_path
    end
  end

  # return the chef config files dir or fail hard
  def chef_config_path
    if Chef::Config['config_file']
      ::File.dirname(Chef::Config['config_file'])
    else
      Chef::Application.fatal!("No chef config file defined. Are you running \
chef-solo? If so you will need to define a path for the ohai_plugin as the \
path cannot be determined")
    end
  end

  # return the ohai plugin path. Most likely /etc/chef/ohai/plugins/
  def ohai_plugin_path
    ::File.join(chef_config_path, 'ohai', 'plugins')
  end

  # is the desired plugin dir in the ohai config plugin dir array?
  def in_plugin_path?(path)
    # get the directory where we plan to stick the plugin (not the actual file path)
    desired_dir = ::File.directory?(path) ? path : ::File.dirname(path)

    # get the array of plugin paths Ohai knows about
    ohai_plugin_dir = if ::Ohai::Config.ohai.nil?
                        ::Ohai::Config['plugin_path'] # old format
                      else
                        ::Ohai::Config.ohai['plugin_path'] # new format
                      end

    case node['platform']
    when 'windows'
      ohai_plugin_dir.map(&:downcase).include?(desired_dir.downcase)
    else
      ohai_plugin_dir.include?(desired_dir)
    end
  end

  def add_to_plugin_path(path)
    if ::Ohai::Config.ohai.nil?
      ::Ohai::Config['plugin_path'] << path # old format
    else
      ::Ohai::Config.ohai['plugin_path'] << path # new format
    end
  end

  # we need to warn the user that unless the path for this plugin is in Ohai's
  # plugin path already we're going to have to reload Ohai on every Chef run.
  # Ideally in future versions of Ohai /etc/chef/ohai/plugins is in the path.
  def plugin_path_warning
    Chef::Log.warn("The Ohai plugin_path does not include #{desired_plugin_path}. \
Ohai will reload on each chef-client run in order to add this directory to the \
path unless you modify your client.rb configuration to add this directory to \
plugin_path. The plugin_path can be set via the chef-client::config recipe. \
See 'Ohai Settings' at https://docs.chef.io/config_rb_client.html#ohai-settings \
for more details.")
  end
end

action :create do
  # why create_if_missing you ask?
  # no one can agree on perms and this allows them to manage the perms elsewhere
  directory desired_plugin_path do
    action :create
    recursive true
    not_if { ::File.exist?(desired_plugin_path) }
  end

  if new_resource.resource.eql?(:cookbook_file)
    cookbook_file ::File.join(desired_plugin_path, new_resource.plugin_name + '.rb') do
      cookbook new_resource.cookbook
      source new_resource.source_file || "#{new_resource.plugin_name}.rb"
      notifies :reload, "ohai[#{new_resource.plugin_name}]", :immediately
    end
  elsif new_resource.resource.eql?(:template)
    template ::File.join(desired_plugin_path, new_resource.plugin_name + '.rb') do
      cookbook new_resource.cookbook
      source new_resource.source_file || "#{new_resource.plugin_name}.rb"
      variables new_resource.variables
      notifies :reload, "ohai[#{new_resource.plugin_name}]", :immediately
    end
  end

  # Add the plugin path to the ohai plugin path if need be and warn
  # the user that this is going to result in a reload every run
  unless in_plugin_path?(desired_plugin_path)
    plugin_path_warning
    Chef::Log.warn("Adding #{desired_plugin_path} to the Ohai plugin path for this chef-client run only")
    add_to_plugin_path(desired_plugin_path)
    reload_required = true
  end

  ohai new_resource.plugin_name do
    action :nothing
    action :reload if reload_required
  end
end

action :delete do
  file ::File.join(desired_plugin_path, new_resource.plugin_name) do
    action :delete
    notifies :reload, 'ohai[reload ohai post plugin removal]'
  end

  ohai 'reload ohai post plugin removal' do
    action :nothing
  end
end

# this resource forces itself to run at compile_time
def after_created
  return unless compile_time
  Array(action).each do |action|
    run_action(action)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/plugin.rb to tempfile /tmp/chef-rest20170405-7856-1d9jy3l
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: build-essential
# resource:: build_essential
#
# Copyright:: 2008-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

provides :build_essential
resource_name :build_essential

property :compile_time, [true, false], default: false

action :install do
  case node['platform_family']
  when 'debian'
    package %w( autoconf binutils-doc bison build-essential flex gettext ncurses-dev )
  when 'fedora', 'rhel'
    package %w( autoconf bison flex gcc gcc-c++ gettext kernel-devel make m4 ncurses-devel patch )

    # Ensure GCC 4 is available on older pre-6 EL
    package %w( gcc44 gcc44-c++ ) if node['platform_version'].to_i < 6
  when 'freebsd'
    package 'devel/gmake'
    package 'devel/autoconf'
    package 'devel/m4'
    package 'devel/gettext'
    # Only install gcc on freebsd 9.x - 10 uses clang
    package 'lang/gcc49' if node['platform_version'].to_i <= 9
  when 'mac_os_x'
    xcode_command_line_tools 'install'
  when 'omnios'
    package 'developer/gcc48'
    package 'developer/object-file'
    package 'developer/linker'
    package 'developer/library/lint'
    package 'developer/build/gnu-make'
    package 'system/header'
    package 'system/library/math/header-math'

    # Per OmniOS documentation, the gcc bin dir isn't in the default
    # $PATH, so add it to the running process environment
    # http://omnios.omniti.com/wiki.php/DevEnv
    ENV['PATH'] = "#{ENV['PATH']}:/opt/gcc-4.7.2/bin"
  when 'solaris2'
    if node['platform_version'].to_f == 5.10
      Chef::Log.warn('build-essential does not support Solaris 10. You will need to install SUNWbison, SUNWgcc, SUNWggrp, SUNWgmake, and SUNWgtar from the Solaris DVD')
    elsif node['platform_version'].to_f == 5.11
      package 'autoconf'
      package 'automake'
      package 'bison'
      package 'gnu-coreutils'
      package 'flex'
      package 'gcc' do
        # lock because we don't use 5 yet
        version '4.8.2'
      end
      package 'gcc-3'
      package 'gnu-grep'
      package 'gnu-make'
      package 'gnu-patch'
      package 'gnu-tar'
      package 'make'
      package 'pkg-config'
      package 'ucb'
    end
  when 'smartos'
    package 'autoconf'
    package 'binutils'
    package 'build-essential'
    package 'gcc47'
    package 'gmake'
    package 'pkg-config'
  when 'suse'
    package %w( autoconf bison flex gcc gcc-c++ kernel-default-devel make m4 )
    package %w( gcc48 gcc48-c++ ) if node['platform_version'].to_i < 12
  when 'windows'
    include_recipe 'build-essential::_windows'
  else
    Chef::Log.warn <<-EOH
  A build-essential recipe does not exist for '#{node['platform_family']}'. This
  means the build-essential cookbook does not have support for the
  #{node['platform_family']} family. If you are not compiling gems with native
  extensions or building packages from source, this will likely not affect you.
  EOH
  end
end

# this resource forces itself to run at compile_time
def after_created
  return unless compile_time
  Array(action).each do |action|
    run_action(action)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
property :hint_name, kind_of: String, name_attribute: true
property :content, kind_of: Hash
property :compile_time, [true, false], default: true

action_class do
  def ohai_hint_path
    path = ::File.join(::Ohai::Config[:hints_path].first, new_resource.hint_name)
    path << '.json' unless path.end_with?('.json')
    path
  end

  def build_content
    # passing nil to file produces deprecation warnings so pass an empty string
    return nil if new_resource.content.nil? || new_resource.content.empty?
    JSON.pretty_generate(new_resource.content)
  end

  def file_content(path)
    return JSON.parse(::File.read(path))
  rescue JSON::ParserError
    Chef::Log.debug("Could not parse JSON in ohai hint at #{ohai_hint_path}. It's probably an empty hint file")
    return nil
  end
end

action :create do
  directory ::Ohai::Config[:hints_path].first do
    action :create
    recursive true
  end

  file ohai_hint_path do
    action :create
    content build_content
  end
end

action :delete do
  file ohai_hint_path do
    action :delete
    notifies :reload, ohai[reload ohai post hint removal]
  end

  ohai 'reload ohai post hint removal' do
    action :nothing
  end
end

# this resource forces itself to run at compile_time
def after_created
  return unless compile_time
  Array(action).each do |action|
    run_action(action)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/resources/hint.rb to tempfile /tmp/chef-rest20170405-7856-1vrx5zn
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/resources/hint.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/ohai/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004da5df0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004da5e68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-183gbzo
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004df7358
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004df73a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# ohai Cookbook CHANGELOG

This file is used to list changes made in each version of the ohai cookbook.

## 5.0.2 (2017-03-24)

- Remove class_eval

## 5.0.1 (2017-03-14)

- Test with Delivery Local Mode
- Bump the dependency to 12.7+ due to failures on 12.5-12.6

## 5.0.0 (2017-02-23)

- Require Chef 12.5+ and remove compat_resource dependency

## 4.2.3 (2016-12-02)
- Prevent chef_version metadata from failing runs in Opsworks
- Better explain how to resolve the plugin_path issue
- Add suse as a supported platform
- Require at least compat_resource 12.14.7

## 4.2.2 (2016-09-19)
- Ignore case in plugin path check on Windows

## 4.2.1 (2016-09-08)
- Fix typo in compile warning text
- Depend on the latest compat_resource (12.14)
- Remove Chef 11 compat in the metadata
- Require Chef 12.1 not 12.0
- Define ohai_plugin matcher for Chefspec

## v4.2.0 (2016-07-19)

- Added the ability to specify the source cookbook for the cookbook_file or template used in the ohai_plugin resource.
- Added chef_version to the metadata
- Added testing on openSUSE and switched from Rubocop to Cookstyle

## v4.1.1 (2016-06-16)

- Fixed error in notifies reload for the delete action
- Bump the compat_resource requirement from 12.9+ to 12.10+ to prevent random failures

## v4.1.0 (2016-05-26)

- Added the ability to use templates and pass in variables with the plugin custom resource

## v4.0.2 (2016-05-23)

- Resolve failures on Windows nodes

## v4.0.1 (2016-05-19)

- Added .rb to the name of the plugins so they actually load
- Added testing to ensure the plugins are being loaded in the chef run

## v4.0.0 (2016-05-18)

### BREAKING CHANGE:

The 4.0 release of the Ohai cookbook removes the previous cookbook_file behavior that required forking the cookbook and adding your own plugins. Instead the cookbook ships with a new ohai_plugin custom resource for installing plugins. In addition to this new custom resource the cookbook now requires Chef 12+. See the readme and test recipe for examples. If you require Chef 11 support you'll need to pin to version 3.0 in your environment.

## v3.0.1 (2016-03-14)

- Fixed the Chefspec matchers

## v3.0.0 (2016-03-14)

- Change the default value for `node['ohai']['hints_path']` to use the Ohai config value. This should be the same value in most use cases, but if a custom path is specified in the chef client config this value will get used automatically by the cookbook.
- Removed backwards compatibility with Chefspec < 4.1 in the matchers library
- Fix bad link to the custom Ohai plugin documentation in the readme
- Improve documentation for `node['ohai']['plugin_path']`

## v2.1.0 (2016-01-26)

- Properly handle creating ohai hints without specifying the content. Previously if the content wasn't specified a deprecation notice would be thrown and the file would not be created
- Simplified the test suite and added inspec tests to ensure hints are created, especially if the content is not specified
- Added FreeBSD and Windows as supported platform in the metadata and add them to the Test Kitchen config
- Add Test Kitchen integration tests to Travis CI
- Updated testing Gems to the latest releases in the Gemfile

## v2.0.4 (2015-10-30)

- Resolved deprecation warnings with the Chefspec matchers

## v2.0.3 (2015-10-21)

- Validate the hints before loading them to avoid failures
- Added supported platforms to the metadata
- Updated .gitignore file
- Updated Test Kitchen config for the latest platforms
- Added Chef standard Rubocop config
- Added Travis CI testing
- Added Berksfile
- Updated contributing and testing docs
- Added maintainers.md and maintainers.toml files
- Added Travis and cookbook version badges to the readme
- Expanded the requirements section in the readme and clarify the minimum supported Chef release is 11
- Updated Opscode -> Chef Software
- Added a Rakefile for simplified testing
- Added a Chefignore file
- Resolved Rubocop warnings
- Added source_url and issues_url to the metadata
- Added Chefspec matchers
- Added basic convergence Chefspec test

## v2.0.1 (2014-06-07)

- [COOK-4683] Remove warnings about reopening resource

Please note, this changes the name of a remote_directory resource. It is not expected that anyone would be explicitly notifying this resource but, please review [PR #16](https://github.com/chef-cookbooks/ohai/pull/16/files) for more info.

## v2.0.0 (2014-02-25)

'[COOK-3865] - create lwrp ohai_hint'

## v1.1.12

- Dummy release due to a Community Site upload failure

## v1.1.10

### Bug

- **[COOK-3091](https://tickets.chef.io/browse/COOK-3091)** - Fix checking `Chef::Config[:config_file]`

## v1.1.8

- [COOK-1918] - Ohai cookbook to distribute plugins fails on windows
- [COOK-2096] - Ohai cookbook sets unix-only default path attribute

## v1.1.6

- [COOK-2057] - distribution from another cookbok fails if ohai attributes are loaded after the other cookbook

## v1.1.4

- [COOK-1128] - readme update, Replace reference to deprecated chef cookbook with one to chef-client

## v1.1.2

- [COOK-1424] - prevent plugin_path growth to infinity

## v1.1.0

- [COOK-1174] - custom_plugins is only conditionally available
- [COOK-1383] - allow plugins from other cookbooks

## v1.0.2

- [COOK-463] ohai cookbook default recipe should only reload plugins if there were updates
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-3rdstu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/build-essential/resources/build_essential.rb to tempfile /tmp/chef-rest20170405-7856-1epybii
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/build-essential/resources/build_essential.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/resources/plugin.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-11ww8p
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f58eb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f58f08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   ".foodcritic"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC016
~FC009
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Sean OMeara (<someara@chef.io>)
# Cookbook:: yum-epel
# Recipe:: default
#
# Copyright:: 2013-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

node['yum-epel']['repos'].each do |repo|
  next unless node['yum'][repo]['managed']
  yum_repository repo do
    node['yum'][repo].each do |config, value|
      send(config.to_sym, value) unless value.nil? || config == 'managed'
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-1531q97
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum-epel
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum-epel/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/.foodcritic to tempfile /tmp/chef-rest20170405-7856-16ubqrp
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/.foodcritic in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# ohai Cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/ohai.svg?branch=master)](https://travis-ci.org/chef-cookbooks/ohai) [![Build status](https://ci.appveyor.com/api/projects/status/lgok2kr6l007s8hf/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks/ohai/branch/master) [![Cookbook Version](https://img.shields.io/cookbook/v/ohai.svg)](https://supermarket.chef.io/cookbooks/ohai)

Contains custom resources for adding Ohai hints and installing custom Ohai plugins. Handles path creation as well as the reloading of Ohai so that new data will be available during the same run.

## Requirements

### Platforms

- Debian/Ubuntu
- RHEL/CentOS/Scientific/Amazon/Oracle
- openSUSE / SUSE Enterprise Linux
- FreeBSD
- Windows

### Chef

- Chef 12.7+

### Cookbooks

- none

## Custom Resources

### `ohai_hint`

Creates Ohai hint files, which are consumed by Ohai plugins in order to determine if they should run or not.

#### Resource Attributes

- `hint_name` - The name of hints file and key. Should be string, default is name of resource.
- `content` - Values of hints. It will be used as automatic attributes. Should be Hash, default is empty Hash
- `compile_time` - Should the resource run at compile time. This defaults to true

#### Examples

Hint file installed to the default directory:

```ruby
ohai_hint 'ec2'
```

Hint file not installed at compile time:

```ruby
ohai_hint 'ec2' do
  compile_time false
end
```

Hint file installed with content:

```ruby
ohai_hint 'raid_present' do
  content Hash[:a, 'test_content']
end
```

#### ChefSpec Matchers

You can check for the creation or deletion of ohai hints with chefspec using these custom matches:

- create_ohai_hint
- delete_ohai_hint

### `ohai_plugin`

Installs custom Ohai plugins.

#### Resource Attributes

- `plugin_name` - The name to give the plugin on the filesystem. Should be string, default is name of resource.
- `path` - The path to your custom plugin directory. Defaults to a directory named 'plugins' under the directory 'ohai' in the Chef config dir.
- `source_file` - The source file for the plugin in your cookbook if not NAME.rb.
- `cookbook` - The cookbook where the source file exists if not the cookbook where the ohai_plugin resource is running from.
- `resource` - The resource type for the plugin file. Either `:cookbook_file` or `:template`. Defaults to `:cookbook_file`.
- `variables` - Usable only if `resource` is `:template`. Defines the template's variables.
- `compile_time` - Should the resource run at compile time. This defaults to `true`.

#### examples

Simple Ohai plugin installation:

```ruby
ohai_plugin 'my_custom_plugin'
```

Installation where the resource doesn't match the filename and you install to a custom plugins dir:

```ruby
ohai_plugin 'My Ohai Plugin' do
  name 'my_custom_plugin'
  path '/my/custom/path/'
end
```

Installation using a template:

```ruby
ohai_plugin 'My Templated Plugin' do
  name 'templated_plugin'
  resource :template
  variables node_type: :web_server
end
```

#### ChefSpec Matchers

You can check for the creation or deletion of ohai plugins with chefspec using these custom matches:

- create_ohai_plugin
- delete_ohai_plugin

## License & Authors

**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2011-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/README.md to tempfile /tmp/chef-rest20170405-7856-l9p04h
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d31fe0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d32030>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-testing-debuginfo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d1dfe0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d1e030>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-source.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004e35ea0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/ohai/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004e35ef0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "ohai",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004cf5018
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/attributes/epel.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004cf5158>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004c7ac78
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004c7ad68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a review from an existing maintainer
for the cookbook to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Jennifer Davis](https://github.com/sigje)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Sean OMeara](https://github.com/someara)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-1u6nzj9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-testing-debuginfo']['repositoryid'] = 'epel-testing-debuginfo'
default['yum']['epel-testing-debuginfo']['description'] = "Extra Packages for #{node['platform_version'].to_i} - $basearch - Testing Debug"
case node['platform']
when 'amazon'
  default['yum']['epel-testing-debuginfo']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch'
  default['yum']['epel-testing-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-testing-debuginfo']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-testing-debuginfo']['gpgkey'] = "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}"
end
default['yum']['epel-testing-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-testing-debuginfo']['gpgcheck'] = true
default['yum']['epel-testing-debuginfo']['enabled'] = false
default['yum']['epel-testing-debuginfo']['managed'] = false
default['yum']['epel-testing-debuginfo']['make_cache'] = true
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"ohai","version":"5.0.2","description":"Provides custom resources for installing Ohai hints and plugins","long_description":"# ohai Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/ohai.svg?branch=master)](https://travis-ci.org/chef-cookbooks/ohai) [![Build status](https://ci.appveyor.com/api/projects/status/lgok2kr6l007s8hf/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks/ohai/branch/master) [![Cookbook Version](https://img.shields.io/cookbook/v/ohai.svg)](https://supermarket.chef.io/cookbooks/ohai)\n\nContains custom resources for adding Ohai hints and installing custom Ohai plugins. Handles path creation as well as the reloading of Ohai so that new data will be available during the same run.\n\n## Requirements\n\n### Platforms\n\n- Debian/Ubuntu\n- RHEL/CentOS/Scientific/Amazon/Oracle\n- openSUSE / SUSE Enterprise Linux\n- FreeBSD\n- Windows\n\n### Chef\n\n- Chef 12.7+\n\n### Cookbooks\n\n- none\n\n## Custom Resources\n\n### `ohai_hint`\n\nCreates Ohai hint files, which are consumed by Ohai plugins in order to determine if they should run or not.\n\n#### Resource Attributes\n\n- `hint_name` - The name of hints file and key. Should be string, default is name of resource.\n- `content` - Values of hints. It will be used as automatic attributes. Should be Hash, default is empty Hash\n- `compile_time` - Should the resource run at compile time. This defaults to true\n\n#### Examples\n\nHint file installed to the default directory:\n\n```ruby\nohai_hint 'ec2'\n```\n\nHint file not installed at compile time:\n\n```ruby\nohai_hint 'ec2' do\n  compile_time false\nend\n```\n\nHint file installed with content:\n\n```ruby\nohai_hint 'raid_present' do\n  content Hash[:a, 'test_content']\nend\n```\n\n#### ChefSpec Matchers\n\nYou can check for the creation or deletion of ohai hints with chefspec using these custom matches:\n\n- create_ohai_hint\n- delete_ohai_hint\n\n### `ohai_plugin`\n\nInstalls custom Ohai plugins.\n\n#### Resource Attributes\n\n- `plugin_name` - The name to give the plugin on the filesystem. Should be string, default is name of resource.\n- `path` - The path to your custom plugin directory. Defaults to a directory named 'plugins' under the directory 'ohai' in the Chef config dir.\n- `source_file` - The source file for the plugin in your cookbook if not NAME.rb.\n- `cookbook` - The cookbook where the source file exists if not the cookbook where the ohai_plugin resource is running from.\n- `resource` - The resource type for the plugin file. Either `:cookbook_file` or `:template`. Defaults to `:cookbook_file`.\n- `variables` - Usable only if `resource` is `:template`. Defines the template's variables.\n- `compile_time` - Should the resource run at compile time. This defaults to `true`.\n\n#### examples\n\nSimple Ohai plugin installation:\n\n```ruby\nohai_plugin 'my_custom_plugin'\n```\n\nInstallation where the resource doesn't match the filename and you install to a custom plugins dir:\n\n```ruby\nohai_plugin 'My Ohai Plugin' do\n  name 'my_custom_plugin'\n  path '/my/custom/path/'\nend\n```\n\nInstallation using a template:\n\n```ruby\nohai_plugin 'My Templated Plugin' do\n  name 'templated_plugin'\n  resource :template\n  variables node_type: :web_server\nend\n```\n\n#### ChefSpec Matchers\n\nYou can check for the creation or deletion of ohai plugins with chefspec using these custom matches:\n\n- create_ohai_plugin\n- delete_ohai_plugin\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2011-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"ubuntu":">= 0.0.0","debian":">= 0.0.0","centos":">= 0.0.0","redhat":">= 0.0.0","amazon":">= 0.0.0","scientific":">= 0.0.0","fedora":">= 0.0.0","oracle":">= 0.0.0","suse":">= 0.0.0","opensuse":">= 0.0.0","opensuseleap":">= 0.0.0","freebsd":">= 0.0.0","windows":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/ohai","issues_url":"https://github.com/chef-cookbooks/ohai/issues","chef_version":">= 12.7","ohai_version":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/ohai/metadata.json to tempfile /tmp/chef-rest20170405-7856-abkqg4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel']['repositoryid'] = 'epel'
default['yum']['epel']['description'] = "Extra Packages for #{node['platform_version'].to_i} - $basearch"
case node['kernel']['machine']
when 's390x'
  default['yum']['epel']['baseurl'] = 'https://kojipkgs.fedoraproject.org/rhel/rc/7/Server/s390x/os/'
  default['yum']['epel']['gpgkey'] = 'https://kojipkgs.fedoraproject.org/rhel/rc/7/Server/s390x/os/RPM-GPG-KEY-redhat-release'
else
  case node['platform']
  when 'amazon'
    default['yum']['epel']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch'
    default['yum']['epel']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
  else
    default['yum']['epel']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-#{node['platform_version'].to_i}&arch=$basearch"
    default['yum']['epel']['gpgkey'] = "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}"
  end
end
default['yum']['epel']['failovermethod'] = 'priority'
default['yum']['epel']['gpgcheck'] = true
default['yum']['epel']['enabled'] = true
default['yum']['epel']['managed'] = true
default['yum']['epel']['make_cache'] = true
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/ohai/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel.rb to tempfile /tmp/chef-rest20170405-7856-9rw3av
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb to tempfile /tmp/chef-rest20170405-7856-ckbo3q
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-source']['repositoryid'] = 'epel-source'
default['yum']['epel-source']['description'] = "Extra Packages for #{node['platform_version'].to_i} - $basearch - Source"
case node['platform']
when 'amazon'
  default['yum']['epel-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch'
  default['yum']['epel-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-source']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-source']['gpgkey'] = "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}"
end
default['yum']['epel-source']['failovermethod'] = 'priority'
default['yum']['epel-source']['gpgcheck'] = true
default['yum']['epel-source']['enabled'] = false
default['yum']['epel-source']['managed'] = false
default['yum']['epel-source']['make_cache'] = true
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/yum-epel/attributes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-source.rb to tempfile /tmp/chef-rest20170405-7856-2qe47s
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-source.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004c9c558
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004c9c648>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d4c110
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d4c1b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-debuginfo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-debuginfo']['repositoryid'] = 'epel-debuginfo'
default['yum']['epel-debuginfo']['description'] = "Extra Packages for #{node['platform_version'].to_i} - $basearch - Debug"
case node['platform']
when 'amazon'
  default['yum']['epel-debuginfo']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch'
  default['yum']['epel-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-debuginfo']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-debuginfo']['gpgkey'] = "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}"
end
default['yum']['epel-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-debuginfo']['gpgcheck'] = true
default['yum']['epel-debuginfo']['enabled'] = false
default['yum']['epel-debuginfo']['managed'] = false
default['yum']['epel-debuginfo']['make_cache'] = true
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-debuginfo.rb to tempfile /tmp/chef-rest20170405-7856-p8eta4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d1f750
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d1f7a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-testing-source.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-testing-source']['repositoryid'] = 'epel-testing-source'
default['yum']['epel-testing-source']['description'] = "Extra Packages for #{node['platform_version'].to_i} - $basearch - Testing Source"
case node['platform']
when 'amazon'
  default['yum']['epel-testing-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch'
  default['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-testing-source']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-testing-source']['gpgkey'] = "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}"
end
default['yum']['epel-testing-source']['failovermethod'] = 'priority'
default['yum']['epel-testing-source']['gpgcheck'] = true
default['yum']['epel-testing-source']['enabled'] = false
default['yum']['epel-testing-source']['managed'] = false
default['yum']['epel-testing-source']['make_cache'] = true
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing-source.rb to tempfile /tmp/chef-rest20170405-7856-qo0owk
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-testing-source.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a7ac70
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a7acc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "delayed_evaluator.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# yum-epel Cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/yum-epel.svg?branch=master)](http://travis-ci.org/chef-cookbooks/yum-epel) [![Cookbook Version](https://img.shields.io/cookbook/v/yum-epel.svg)](https://supermarket.chef.io/cookbooks/yum-epel)

Extra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).

The yum-epel cookbook takes over management of the default repositoryids shipped with epel-release. It allows attribute manipulation of `epel`, `epel-debuginfo`, `epel-source`, `epel-testing`, `epel-testing-debuginfo`, and `epel-testing-source`.

## Requirements

### Platforms

- RHEL/CentOS and derivatives

### Chef

- Chef 12.1+

### Cookbooks

- compat_resource

## Attributes

The following attributes are set by default

```ruby
default['yum-epel']['repos'] = %w(
  epel
  epel-debuginfo
  epel-source
  epel-testing
  epel-testing-debuginfo
  epel-testing-source
)
```

```ruby
default['yum']['epel']['repositoryid'] = 'epel'
default['yum']['epel']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch'
default['yum']['epel']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'
default['yum']['epel']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel']['failovermethod'] = 'priority'
default['yum']['epel']['gpgcheck'] = true
default['yum']['epel']['enabled'] = true
default['yum']['epel']['managed'] = true
```

```ruby
default['yum']['epel-debuginfo']['repositoryid'] = 'epel-debuginfo'
default['yum']['epel-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Debug'
default['yum']['epel-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&arch=$basearch'
default['yum']['epel-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-debuginfo']['gpgcheck'] = true
default['yum']['epel-debuginfo']['enabled'] = false
default['yum']['epel-debuginfo']['managed'] = false
```

```ruby
default['yum']['epel-source']['repositoryid'] = 'epel-source'
default['yum']['epel-source']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Source'
default['yum']['epel-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch'
default['yum']['epel-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-source']['failovermethod'] = 'priority'
default['yum']['epel-source']['gpgcheck'] = true
default['yum']['epel-source']['enabled'] = false
default['yum']['epel-source']['managed'] = false
```

```ruby
default['yum']['epel-testing']['repositoryid'] = 'epel-testing'
default['yum']['epel-testing']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch'
default['yum']['epel-testing']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-epel6&arch=$basearch'
default['yum']['epel-testing']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6r'
default['yum']['epel-testing']['failovermethod'] = 'priority'
default['yum']['epel-testing']['gpgcheck'] = true
default['yum']['epel-testing']['enabled'] = false
default['yum']['epel-testing']['managed'] = false
```

```ruby
default['yum']['epel-testing-debuginfo']['repositoryid'] = 'epel-testing-debuginfo'
default['yum']['epel-testing-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Debug'
default['yum']['epel-testing-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-debug-epel6&arch=$basearch'
default['yum']['epel-testing-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-testing-debuginfo']['failovermethod'] = 'priority'
default['yum']['epel-testing-debuginfo']['gpgcheck'] = true
default['yum']['epel-testing-debuginfo']['enabled'] = false
default['yum']['epel-testing-debuginfo']['managed'] = false
```

```ruby
default['yum']['epel-testing-source']['repositoryid'] = 'epel-testing-source'
default['yum']['epel-testing-source']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Source'
default['yum']['epel-testing-source']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-source-epel6&arch=$basearch'
default['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
default['yum']['epel-testing-source']['failovermethod'] = 'priority'
default['yum']['epel-testing-source']['gpgcheck'] = true
default['yum']['epel-testing-source']['enabled'] = false
default['yum']['epel-testing-source']['managed'] = false
```

## Recipes
- default - Walks through node attributes and feeds a yum_resource
- parameters. The following is an example a resource generated by the
- recipe during compilation.

```ruby
  yum_repository 'epel' do
    mirrorlist 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'
    description 'Extra Packages for Enterprise Linux 5 - $basearch'
    enabled true
    gpgcheck true
    gpgkey 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL'
  end
```

## Usage Example
To disable the epel repository through a Role or Environment definition

```
default_attributes(
  :yum => {
    :epel => {
      :enabled => {
        false
       }
     }
   }
 )
```

Uncommonly used repositoryids are not managed by default. This is speeds up integration testing pipelines by avoiding yum-cache builds that nobody cares about. To enable the epel-testing repository with a wrapper cookbook, place the following in a recipe:

```ruby
node.default['yum']['epel-testing']['enabled'] = true
node.default['yum']['epel-testing']['managed'] = true
include_recipe 'yum-epel'
```

## More Examples
Point the epel repositories at an internally hosted server.

```ruby
node.default['yum']['epel']['enabled'] = true
node.default['yum']['epel']['mirrorlist'] = nil
node.default['yum']['epel']['baseurl'] = 'https://internal.example.com/centos/6/os/x86_64'
node.default['yum']['epel']['sslverify'] = false

include_recipe 'yum-epel'
```

## License & Authors

**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2011-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b50780
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b507d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/README.md to tempfile /tmp/chef-rest20170405-7856-1qhp0iz
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a9e620
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a9e670>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "constants.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-debuginfo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/delayed_evaluator'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser <jkeiser@chef.io>
# Copyright:: Copyright 2015-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class DelayedEvaluator < (defined?(::Chef::DelayedEvaluator) ? ::Chef::DelayedEvaluator : Proc)
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb to tempfile /tmp/chef-rest20170405-7856-1wswfk
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/delayed_evaluator.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049ba7e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049ba830>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "platform_introspection.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/platform_introspection'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Adam Jacob (<adam@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)

    # == Chef::DSL::PlatformIntrospection
    # Provides the DSL for platform-dependent switch logic, such as
    # #value_for_platform.
    module PlatformIntrospection
      CopiedFromChef.extend_chef_module(::Chef::DSL::PlatformIntrospection, self) if defined?(::Chef::DSL::PlatformIntrospection)

      # Implementation class for determining platform dependent values
      class PlatformDependentValue < (defined?(::Chef::DSL::PlatformIntrospection::PlatformDependentValue) ? ::Chef::DSL::PlatformIntrospection::PlatformDependentValue : Object)

        # Create a platform dependent value object.
        # === Arguments
        # platform_hash (Hash) a hash of the same structure as Chef::Platform,
        # like this:
        #   {
        #     :debian => {:default => 'the value for all debian'}
        #     [:centos, :redhat, :fedora] => {:default => "value for all EL variants"}
        #     :ubuntu => { :default => "default for ubuntu", '10.04' => "value for 10.04 only"},
        #     :default => "the default when nothing else matches"
        #   }
        # * platforms can be specified as Symbols or Strings
        # * multiple platforms can be grouped by using an Array as the key
        # * values for platforms need to be Hashes of the form:
        #   {platform_version => value_for_that_version}
        # * the exception to the above is the default value, which is given as
        #   :default => default_value
        def initialize(platform_hash)
super if defined?(::Chef::DSL::PlatformIntrospection::PlatformDependentValue)
          @values = {}
          platform_hash.each { |platforms, value| set(platforms, value) }
        end

        def value_for_node(node)
          platform, version = node[:platform].to_s, node[:platform_version].to_s
          # Check if we match a version constraint via Chef::VersionConstraint::Platform and Chef::Version::Platform
          matched_value = match_versions(node)
          if @values.key?(platform) && @values[platform].key?(version)
            @values[platform][version]
          elsif matched_value
            matched_value
          elsif @values.key?(platform) && @values[platform].key?("default")
            @values[platform]["default"]
          elsif @values.key?("default")
            @values["default"]
          else
            nil
          end
        end

        private

        def match_versions(node)
          begin
            platform, version = node[:platform].to_s, node[:platform_version].to_s
            return nil unless @values.key?(platform)
            node_version = Chef::Version::Platform.new(version)
            key_matches = []
            keys = @values[platform].keys
            keys.each do |k|
              begin
                if Chef::VersionConstraint::Platform.new(k).include?(node_version)
                  key_matches << k
                end
              rescue Chef::Exceptions::InvalidVersionConstraint => e
                Chef::Log.debug "Caught InvalidVersionConstraint. This means that a key in value_for_platform cannot be interpreted as a Chef::VersionConstraint::Platform."
                Chef::Log.debug(e)
              end
            end
            return @values[platform][version] if key_matches.include?(version)
            case key_matches.length
            when 0
              return nil
            when 1
              return @values[platform][key_matches.first]
            else
              raise "Multiple matches detected for #{platform} with values #{@values}. The matches are: #{key_matches}"
            end
          rescue Chef::Exceptions::InvalidCookbookVersion => e
            # Lets not break because someone passes a weird string like 'default' :)
            Chef::Log.debug(e)
            Chef::Log.debug "InvalidCookbookVersion exceptions are common and expected here: the generic constraint matcher attempted to match something which is not a constraint. Moving on to next version or constraint"
            return nil
          rescue Chef::Exceptions::InvalidPlatformVersion => e
            Chef::Log.debug "Caught InvalidPlatformVersion, this means that Chef::Version::Platform does not know how to turn #{node_version} into an x.y.z format"
            Chef::Log.debug(e)
            return nil
          end
        end

        def set(platforms, value)
          if platforms.to_s == "default"
            @values["default"] = value
          else
            assert_valid_platform_values!(platforms, value)
            Array(platforms).each { |platform| @values[platform.to_s] = normalize_keys(value) }
            value
          end
        end

        def normalize_keys(hash)
          hash.inject({}) do |h, key_value|
            keys, value = *key_value
            Array(keys).each do |key|
              h[key.to_s] = value
            end
            h
          end
        end

        def assert_valid_platform_values!(platforms, value)
          unless value.kind_of?(Hash)
            msg = "platform dependent values must be specified in the format :platform => {:version => value} "
            msg << "you gave a value #{value.inspect} for platform(s) #{platforms}"
            raise ArgumentError, msg
          end
        end
      end

      # Given a hash similar to the one we use for Platforms, select a value from the hash.  Supports
      # per platform defaults, along with a single base default. Arrays may be passed as hash keys and
      # will be expanded.
      #
      # === Parameters
      # platform_hash:: A platform-style hash.
      #
      # === Returns
      # value:: Whatever the most specific value of the hash is.
      def value_for_platform(platform_hash)
        PlatformDependentValue.new(platform_hash).value_for_node(node)
      end

      # Given a list of platforms, returns true if the current recipe is being run on a node with
      # that platform, false otherwise.
      #
      # === Parameters
      # args:: A list of platforms. Each platform can be in string or symbol format.
      #
      # === Returns
      # true:: If the current platform is in the list
      # false:: If the current platform is not in the list
      def platform?(*args)
        has_platform = false

        args.flatten.each do |platform|
          has_platform = true if platform.to_s == node[:platform]
        end

        has_platform
      end

     # Implementation class for determining platform family dependent values
      class PlatformFamilyDependentValue < (defined?(::Chef::DSL::PlatformIntrospection::PlatformFamilyDependentValue) ? ::Chef::DSL::PlatformIntrospection::PlatformFamilyDependentValue : Object)

        # Create a platform family dependent value object.
        # === Arguments
        # platform_family_hash (Hash) a map of platform families to values.
        # like this:
        #   {
        #     :rhel => "value for all EL variants"
        #     :fedora =>  "value for fedora variants fedora and amazon" ,
        #     [:fedora, :rhel] => "value for all known redhat variants"
        #     :debian =>  "value for debian variants including debian, ubuntu, mint" ,
        #     :default => "the default when nothing else matches"
        #   }
        # * platform families can be specified as Symbols or Strings
        # * multiple platform families can be grouped by using an Array as the key
        # * values for platform families can be any object, with no restrictions. Some examples:
        #   - [:stop, :start]
        #   - "mysql-devel"
        #   - { :key => "value" }
        def initialize(platform_family_hash)
super if defined?(::Chef::DSL::PlatformIntrospection::PlatformFamilyDependentValue)
          @values = {}
          @values["default"] = nil
          platform_family_hash.each { |platform_families, value| set(platform_families, value) }
        end

        def value_for_node(node)
          if node.key?(:platform_family)
            platform_family = node[:platform_family].to_s
            if @values.key?(platform_family)
              @values[platform_family]
            else
              @values["default"]
            end
          else
            @values["default"]
          end
        end

        private

        def set(platform_family, value)
          if platform_family.to_s == "default"
            @values["default"] = value
          else
            Array(platform_family).each { |family| @values[family.to_s] = value }
            value
          end
        end
      end

      # Given a hash mapping platform families to values, select a value from the hash. Supports a single
      # base default if platform family is not in the map. Arrays may be passed as hash keys and will be
      # expanded
      #
      # === Parameters
      # platform_family_hash:: A hash in the form { platform_family_name => value }
      #
      # === Returns
      # value:: Whatever the most specific value of the hash is.
      def value_for_platform_family(platform_family_hash)
        PlatformFamilyDependentValue.new(platform_family_hash).value_for_node(node)
      end

      # Given a list of platform families, returns true if the current recipe is being run on a
      # node within that platform family, false otherwise.
      #
      # === Parameters
      # args:: A list of platform families. Each platform family can be in string or symbol format.
      #
      # === Returns
      # true:: if the current node platform family is in the list.
      # false:: if the current node platform family is not in the list.
      def platform_family?(*args)
        args.flatten.any? do |platform_family|
          platform_family.to_s == node[:platform_family]
        end
      end

      # Shamelessly stolen from https://github.com/sethvargo/chef-sugar/blob/master/lib/chef/sugar/docker.rb
      # Given a node object, returns whether the node is a docker container.
      #
      # === Parameters
      # node:: [Chef::Node] The node to check.
      #
      # === Returns
      # true:: if the current node is a docker container
      # false:: if the current node is not a docker container
      def docker?(node = run_context.nil? ? nil : run_context.node)
        # Using "File.exist?('/.dockerinit') || File.exist?('/.dockerenv')" makes Travis sad,
        # and that makes us sad too.
        node && node[:virtualization] && node[:virtualization][:systems] &&
          node[:virtualization][:systems][:docker] && node[:virtualization][:systems][:docker] == "guest"
      end

    end
  end
end

# **DEPRECATED**
# This used to be part of chef/mixin/language. Load the file to activate the deprecation code.
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-1gnbjti
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a17be8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a17c38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "core.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/core'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/dsl/declare_resource"
require "chef_compat/copied_from_chef/chef/dsl/universal"
require "chef_compat/copied_from_chef/chef/mixin/notifying_block"
require "chef_compat/copied_from_chef/chef/mixin/lazy_module_include"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    # Part of a family of DSL mixins.
    #
    # Chef::DSL::Recipe mixes into Recipes and LWRP Providers.
    #   - this does not target core chef resources and providers.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - cookbook authors should typically include modules into here.
    #
    # Chef::DSL::Core mixes into Recipes, LWRP Providers and Core Providers
    #   - this adds cores providers on top of the Recipe DSL.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - core chef authors should typically include modules into here.
    #
    # Chef::DSL::Universal mixes into Recipes, LWRP Resources+Providers, Core Resources+Providers, and Attributes files.
    #   - this adds resources and attributes files.
    #   - do not add helpers which manipulate the resource collection.
    #   - this is for general-purpose stuff that is useful nearly everywhere.
    #   - it also pollutes the namespace of nearly every context, watch out.
    #
    module Core
      CopiedFromChef.extend_chef_module(::Chef::DSL::Core, self) if defined?(::Chef::DSL::Core)
      include Chef::DSL::Universal
      include Chef::DSL::DeclareResource
      include Chef::Mixin::NotifyingBlock
      extend Chef::Mixin::LazyModuleInclude
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb to tempfile /tmp/chef-rest20170405-7856-h5x05l
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/core.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb to tempfile /tmp/chef-rest20170405-7856-10v2phe
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d6e170
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d6e1c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/platform_introspection.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b00460
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b004b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "libraries",
   "autoload.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004cfbfa8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d08050>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "attributes",
   "epel-testing.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004988e98
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004988ee8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "recipe.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049310d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004931148>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "universal.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/universal'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/dsl/platform_introspection"
require "chef_compat/copied_from_chef/chef/mixin/powershell_out"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    # Part of a family of DSL mixins.
    #
    # Chef::DSL::Recipe mixes into Recipes and LWRP Providers.
    #   - this does not target core chef resources and providers.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - cookbook authors should typically include modules into here.
    #
    # Chef::DSL::Core mixes into Recipes, LWRP Providers and Core Providers
    #   - this adds cores providers on top of the Recipe DSL.
    #   - this is restricted to recipe/resource/provider context where a resource collection exists.
    #   - core chef authors should typically include modules into here.
    #
    # Chef::DSL::Universal mixes into Recipes, LWRP Resources+Providers, Core Resources+Providers, and Attributes files.
    #   - this adds resources and attributes files.
    #   - do not add helpers which manipulate the resource collection.
    #   - this is for general-purpose stuff that is useful nearly everywhere.
    #   - it also pollutes the namespace of nearly every context, watch out.
    #
    module Universal
      CopiedFromChef.extend_chef_module(::Chef::DSL::Universal, self) if defined?(::Chef::DSL::Universal)
      include Chef::DSL::PlatformIntrospection
      include Chef::Mixin::PowershellOut
      include Chef::Mixin::ShellOut
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/constants'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser <jkeiser@chef.io>
# Copyright:: Copyright 2015-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

class Chef < (defined?(::Chef) ? ::Chef : Object)
  NOT_PASSED = Object.new
  def NOT_PASSED.to_s
    "NOT_PASSED"
  end

  def NOT_PASSED.inspect
    to_s
  end
  NOT_PASSED.freeze
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb to tempfile /tmp/chef-rest20170405-7856-y2b2ul
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/constants.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb to tempfile /tmp/chef-rest20170405-7856-7d47nr
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/universal.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b27088
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b270d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum-epel']['repos'] = %w(
  epel
  epel-debuginfo
  epel-source
  epel-testing
  epel-testing-debuginfo
  epel-testing-source
)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-xnyr29
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
unless Gem::Requirement.new(">= 12.0").satisfied_by?(Gem::Version.new(Chef::VERSION))
  raise "This resource is written with Chef 12.5 custom resources, and requires at least Chef 12.0 used with the compat_resource cookbook, it will not work with Chef 11.x clients, and those users must pin their cookbooks to older versions or upgrade."
end

# If users are on old verisons of ChefDK which activates an (old) gem via cheffish before this cookbook loads, then
# we just try to monkeypatch over the top of a monkeypatch.  Its possible that we have checks in this cookbook which
# will defeat that purpose and fail to monkeypatch on top of monkeypatches -- in which case those checks should be
# removed -- this cookbook needs to win when it gets into a fight with the old gem versions.
if Gem.loaded_specs["compat_resource"]
  Chef.log_deprecation "using compat_resource as a gem is deprecated;  please update cheffish and chef-provisioning gems (or use the latest Chef/ChefDK packages) or else manually pin your compat_resource cookbook version to the same version as the gem you are using to remove this warning"
end

# we want to not pollute the libpath with our files until after we've done the version check
require_relative '../files/lib/chef_upstream_version'

# on any chef client later than the one we were based off of we just turn into a no-op
if Gem::Requirement.new("< #{ChefCompat::CHEF_UPSTREAM_VERSION}").satisfied_by?(Gem::Version.new(Chef::VERSION))
  Chef::Log.debug "loading compat_resource based on chef-version #{ChefCompat::CHEF_UPSTREAM_VERSION} over chef version #{Gem::Version.new(Chef::VERSION)}"
  $LOAD_PATH.unshift(File.expand_path("../files/lib", File.dirname(__FILE__)))
  require 'compat_resource'
else
  Chef::Log.debug "NOT LOADING compat_resource based on chef-version #{ChefCompat::CHEF_UPSTREAM_VERSION} over chef version #{Gem::Version.new(Chef::VERSION)}"
  unless defined?(ChefCompat::Resource) && defined?(ChefCompat::Mixin::Properties)
    module ChefCompat
      Resource = Chef::Resource
      module Mixin
        Properties = Chef::Mixin::Properties
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['yum']['epel-testing']['repositoryid'] = 'epel-testing'
default['yum']['epel-testing']['description'] = "Extra Packages for #{node['platform_version'].to_i} - $basearch - Testing "
case node['platform']
when 'amazon'
  default['yum']['epel-testing']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=testing-epel6&arch=$basearch'
  default['yum']['epel-testing']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'
else
  default['yum']['epel-testing']['mirrorlist'] = "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-epel#{node['platform_version'].to_i}&arch=$basearch"
  default['yum']['epel-testing']['gpgkey'] = "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-#{node['platform_version'].to_i}"
end
default['yum']['epel-testing']['failovermethod'] = 'priority'
default['yum']['epel-testing']['gpgcheck'] = true
default['yum']['epel-testing']['enabled'] = false
default['yum']['epel-testing']['managed'] = false
default['yum']['epel-testing']['make_cache'] = true
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/libraries/autoload.rb to tempfile /tmp/chef-rest20170405-7856-4uyids
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/attributes/epel-testing.rb to tempfile /tmp/chef-rest20170405-7856-rhcwc4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/attributes/epel-testing.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/recipe'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/dsl/core"
require "chef_compat/copied_from_chef/chef/mixin/lazy_module_include"
class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    module Recipe
      CopiedFromChef.extend_chef_module(::Chef::DSL::Recipe, self) if defined?(::Chef::DSL::Recipe)
      include Chef::DSL::Core
      extend Chef::Mixin::LazyModuleInclude
      module FullDSL
        CopiedFromChef.extend_chef_module(::Chef::DSL::Recipe::FullDSL, self) if defined?(::Chef::DSL::Recipe::FullDSL)
        include Chef::DSL::Recipe
        extend Chef::Mixin::LazyModuleInclude
      end
    end
  end
end
require "chef_compat/copied_from_chef/chef/resource"
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004863ab8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004863b30>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "notifying_block.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/notifying_block'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Lamont Granquist <lamont@chef.io>
# Copyright:: Copyright 2010-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module NotifyingBlock
      CopiedFromChef.extend_chef_module(::Chef::Mixin::NotifyingBlock, self) if defined?(::Chef::Mixin::NotifyingBlock)

      def notifying_block(&block)
        begin
          subcontext = subcontext_block(&block)
          Chef::Runner.new(subcontext).converge
        ensure
          # recipes don't have a new_resource
          if respond_to?(:new_resource)
            if subcontext && subcontext.resource_collection.any?(&:updated?)
              new_resource.updated_by_last_action(true)
            end
          end
        end
      end

      def subcontext_block(parent_context = nil, &block)
        parent_context ||= @run_context
        sub_run_context = parent_context.create_child

        begin
          outer_run_context = @run_context
          @run_context = sub_run_context
          instance_eval(&block)
        ensure
          @run_context = outer_run_context
        end

        sub_run_context
      end

    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb to tempfile /tmp/chef-rest20170405-7856-1iljpli
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb to tempfile /tmp/chef-rest20170405-7856-tsjj2e
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/recipe.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"yum-epel","version":"2.1.1","description":"Installs and configures the EPEL Yum repository","long_description":"# yum-epel Cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/yum-epel.svg?branch=master)](http://travis-ci.org/chef-cookbooks/yum-epel) [![Cookbook Version](https://img.shields.io/cookbook/v/yum-epel.svg)](https://supermarket.chef.io/cookbooks/yum-epel)\n\nExtra Packages for Enterprise Linux (or EPEL) is a Fedora Special Interest Group that creates, maintains, and manages a high quality set of additional packages for Enterprise Linux, including, but not limited to, Red Hat Enterprise Linux (RHEL), CentOS and Scientific Linux (SL), Oracle Linux (OL).\n\nThe yum-epel cookbook takes over management of the default repositoryids shipped with epel-release. It allows attribute manipulation of `epel`, `epel-debuginfo`, `epel-source`, `epel-testing`, `epel-testing-debuginfo`, and `epel-testing-source`.\n\n## Requirements\n\n### Platforms\n\n- RHEL/CentOS and derivatives\n\n### Chef\n\n- Chef 12.1+\n\n### Cookbooks\n\n- compat_resource\n\n## Attributes\n\nThe following attributes are set by default\n\n```ruby\ndefault['yum-epel']['repos'] = %w(\n  epel\n  epel-debuginfo\n  epel-source\n  epel-testing\n  epel-testing-debuginfo\n  epel-testing-source\n)\n```\n\n```ruby\ndefault['yum']['epel']['repositoryid'] = 'epel'\ndefault['yum']['epel']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch'\ndefault['yum']['epel']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'\ndefault['yum']['epel']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel']['failovermethod'] = 'priority'\ndefault['yum']['epel']['gpgcheck'] = true\ndefault['yum']['epel']['enabled'] = true\ndefault['yum']['epel']['managed'] = true\n```\n\n```ruby\ndefault['yum']['epel-debuginfo']['repositoryid'] = 'epel-debuginfo'\ndefault['yum']['epel-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Debug'\ndefault['yum']['epel-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=epel-debug-6&arch=$basearch'\ndefault['yum']['epel-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-debuginfo']['failovermethod'] = 'priority'\ndefault['yum']['epel-debuginfo']['gpgcheck'] = true\ndefault['yum']['epel-debuginfo']['enabled'] = false\ndefault['yum']['epel-debuginfo']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-source']['repositoryid'] = 'epel-source'\ndefault['yum']['epel-source']['description'] = 'Extra Packages for Enterprise Linux 6 - $basearch - Source'\ndefault['yum']['epel-source']['mirrorlist'] = 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch'\ndefault['yum']['epel-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-source']['failovermethod'] = 'priority'\ndefault['yum']['epel-source']['gpgcheck'] = true\ndefault['yum']['epel-source']['enabled'] = false\ndefault['yum']['epel-source']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-testing']['repositoryid'] = 'epel-testing'\ndefault['yum']['epel-testing']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch'\ndefault['yum']['epel-testing']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-epel6&arch=$basearch'\ndefault['yum']['epel-testing']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6r'\ndefault['yum']['epel-testing']['failovermethod'] = 'priority'\ndefault['yum']['epel-testing']['gpgcheck'] = true\ndefault['yum']['epel-testing']['enabled'] = false\ndefault['yum']['epel-testing']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-testing-debuginfo']['repositoryid'] = 'epel-testing-debuginfo'\ndefault['yum']['epel-testing-debuginfo']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Debug'\ndefault['yum']['epel-testing-debuginfo']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-debug-epel6&arch=$basearch'\ndefault['yum']['epel-testing-debuginfo']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-testing-debuginfo']['failovermethod'] = 'priority'\ndefault['yum']['epel-testing-debuginfo']['gpgcheck'] = true\ndefault['yum']['epel-testing-debuginfo']['enabled'] = false\ndefault['yum']['epel-testing-debuginfo']['managed'] = false\n```\n\n```ruby\ndefault['yum']['epel-testing-source']['repositoryid'] = 'epel-testing-source'\ndefault['yum']['epel-testing-source']['description'] = 'Extra Packages for Enterprise Linux 6 - Testing - $basearch Source'\ndefault['yum']['epel-testing-source']['mirrorlist'] = 'https://mirrors.fedoraproject.org/metalink?repo=testing-source-epel6&arch=$basearch'\ndefault['yum']['epel-testing-source']['gpgkey'] = 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6'\ndefault['yum']['epel-testing-source']['failovermethod'] = 'priority'\ndefault['yum']['epel-testing-source']['gpgcheck'] = true\ndefault['yum']['epel-testing-source']['enabled'] = false\ndefault['yum']['epel-testing-source']['managed'] = false\n```\n\n## Recipes\n- default - Walks through node attributes and feeds a yum_resource\n- parameters. The following is an example a resource generated by the\n- recipe during compilation.\n\n```ruby\n  yum_repository 'epel' do\n    mirrorlist 'http://mirrors.fedoraproject.org/mirrorlist?repo=epel-5&arch=$basearch'\n    description 'Extra Packages for Enterprise Linux 5 - $basearch'\n    enabled true\n    gpgcheck true\n    gpgkey 'http://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL'\n  end\n```\n\n## Usage Example\nTo disable the epel repository through a Role or Environment definition\n\n```\ndefault_attributes(\n  :yum => {\n    :epel => {\n      :enabled => {\n        false\n       }\n     }\n   }\n )\n```\n\nUncommonly used repositoryids are not managed by default. This is speeds up integration testing pipelines by avoiding yum-cache builds that nobody cares about. To enable the epel-testing repository with a wrapper cookbook, place the following in a recipe:\n\n```ruby\nnode.default['yum']['epel-testing']['enabled'] = true\nnode.default['yum']['epel-testing']['managed'] = true\ninclude_recipe 'yum-epel'\n```\n\n## More Examples\nPoint the epel repositories at an internally hosted server.\n\n```ruby\nnode.default['yum']['epel']['enabled'] = true\nnode.default['yum']['epel']['mirrorlist'] = nil\nnode.default['yum']['epel']['baseurl'] = 'https://internal.example.com/centos/6/os/x86_64'\nnode.default['yum']['epel']['sslverify'] = false\n\ninclude_recipe 'yum-epel'\n```\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2011-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"amazon":">= 0.0.0","centos":">= 0.0.0","oracle":">= 0.0.0","redhat":">= 0.0.0","scientific":">= 0.0.0","zlinux":">= 0.0.0"},"dependencies":{"compat_resource":">= 12.16.3"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/notifying_block.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/libraries/autoload.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000482af88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000482b000>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "powershell_out.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/powershell_out'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Copyright:: Copyright 2015-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.


class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module PowershellOut
      CopiedFromChef.extend_chef_module(::Chef::Mixin::PowershellOut, self) if defined?(::Chef::Mixin::PowershellOut)
      include Chef::Mixin::ShellOut
      include Chef::Mixin::WindowsArchitectureHelper

      # Run a command under powershell with the same API as shell_out.  The
      # options hash is extended to take an "architecture" flag which
      # can be set to :i386 or :x86_64 to force the windows architecture.
      #
      # @param script [String] script to run
      # @param options [Hash] options hash
      # @return [Mixlib::Shellout] mixlib-shellout object
      def powershell_out(*command_args)
        script = command_args.first
        options = command_args.last.is_a?(Hash) ? command_args.last : nil

        run_command_with_os_architecture(script, options)
      end

      # Run a command under powershell with the same API as shell_out!
      # (raises exceptions on errors)
      #
      # @param script [String] script to run
      # @param options [Hash] options hash
      # @return [Mixlib::Shellout] mixlib-shellout object
      def powershell_out!(*command_args)
        cmd = powershell_out(*command_args)
        cmd.error!
        cmd
      end

      private

      # Helper function to run shell_out and wrap it with the correct
      # flags to possibly disable WOW64 redirection (which we often need
      # because chef-client runs as a 32-bit app on 64-bit windows).
      #
      # @param script [String] script to run
      # @param options [Hash] options hash
      # @return [Mixlib::Shellout] mixlib-shellout object
      def run_command_with_os_architecture(script, options)
        options ||= {}
        options = options.dup
        arch = options.delete(:architecture)

        with_os_architecture(nil, architecture: arch) do
          shell_out(
            build_powershell_command(script),
            options
          )
        end
      end

      # Helper to build a powershell command around the script to run.
      #
      # @param script [String] script to run
      # @retrurn [String] powershell command to execute
      def build_powershell_command(script)
        flags = [
          # Hides the copyright banner at startup.
          "-NoLogo",
          # Does not present an interactive prompt to the user.
          "-NonInteractive",
          # Does not load the Windows PowerShell profile.
          "-NoProfile",
          # always set the ExecutionPolicy flag
          # see http://technet.microsoft.com/en-us/library/ee176961.aspx
          "-ExecutionPolicy Unrestricted",
          # Powershell will hang if STDIN is redirected
          # http://connect.microsoft.com/PowerShell/feedback/details/572313/powershell-exe-can-hang-if-stdin-is-redirected
          "-InputFormat None",
        ]

        "powershell.exe #{flags.join(' ')} -Command \"#{script.gsub('"', '\"')}\""
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/metadata.json to tempfile /tmp/chef-rest20170405-7856-159n82g
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb to tempfile /tmp/chef-rest20170405-7856-48lx5z
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/powershell_out.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048e1c88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048e1cd8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "lazy_module_include.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/yum-epel/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a9d360
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/yum-epel/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a9d3b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "yum-epel",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004818478
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048184c8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "params_validate.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047e1f68
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047e2008>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "mixin",
   "properties.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/properties'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/delayed_evaluator"
require "chef_compat/copied_from_chef/chef/mixin/params_validate"
require "chef_compat/copied_from_chef/chef/property"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module Properties
      CopiedFromChef.extend_chef_module(::Chef::Mixin::Properties, self) if defined?(::Chef::Mixin::Properties)
      module ClassMethods
        CopiedFromChef.extend_chef_module(::Chef::Mixin::Properties::ClassMethods, self) if defined?(::Chef::Mixin::Properties::ClassMethods)
        #
        # The list of properties defined on this resource.
        #
        # Everything defined with `property` is in this list.
        #
        # @param include_superclass [Boolean] `true` to include properties defined
        #   on superclasses; `false` or `nil` to return the list of properties
        #   directly on this class.
        #
        # @return [Hash<Symbol,Property>] The list of property names and types.
        #
        def properties(include_superclass = true)
          if include_superclass
            result = {}
            ancestors.reverse_each { |c| result.merge!(c.properties(false)) if c.respond_to?(:properties) }
            result
          else
            @properties ||= {}
          end
        end

        #
        # Create a property on this resource class.
        #
        # If a superclass has this property, or if this property has already been
        # defined by this resource, this will *override* the previous value.
        #
        # @param name [Symbol] The name of the property.
        # @param type [Object,Array<Object>] The type(s) of this property.
        #   If present, this is prepended to the `is` validation option.
        # @param options [Hash<Symbol,Object>] Validation options.
        #   @option options [Object,Array] :is An object, or list of
        #     objects, that must match the value using Ruby's `===` operator
        #     (`options[:is].any? { |v| v === value }`).
        #   @option options [Object,Array] :equal_to An object, or list
        #     of objects, that must be equal to the value using Ruby's `==`
        #     operator (`options[:is].any? { |v| v == value }`)
        #   @option options [Regexp,Array<Regexp>] :regex An object, or
        #     list of objects, that must match the value with `regex.match(value)`.
        #   @option options [Class,Array<Class>] :kind_of A class, or
        #     list of classes, that the value must be an instance of.
        #   @option options [Hash<String,Proc>] :callbacks A hash of
        #     messages -> procs, all of which match the value. The proc must
        #     return a truthy or falsey value (true means it matches).
        #   @option options [Symbol,Array<Symbol>] :respond_to A method
        #     name, or list of method names, the value must respond to.
        #   @option options [Symbol,Array<Symbol>] :cannot_be A property,
        #     or a list of properties, that the value cannot have (such as `:nil` or
        #     `:empty`). The method with a questionmark at the end is called on the
        #     value (e.g. `value.empty?`). If the value does not have this method,
        #     it is considered valid (i.e. if you don't respond to `empty?` we
        #     assume you are not empty).
        #   @option options [Proc] :coerce A proc which will be called to
        #     transform the user input to canonical form. The value is passed in,
        #     and the transformed value returned as output. Lazy values will *not*
        #     be passed to this method until after they are evaluated. Called in the
        #     context of the resource (meaning you can access other properties).
        #   @option options [Boolean] :required `true` if this property
        #     must be present; `false` otherwise. This is checked after the resource
        #     is fully initialized.
        #   @option options [Boolean] :name_property `true` if this
        #     property defaults to the same value as `name`. Equivalent to
        #     `default: lazy { name }`, except that #property_is_set? will
        #     return `true` if the property is set *or* if `name` is set.
        #   @option options [Boolean] :name_attribute Same as `name_property`.
        #   @option options [Object] :default The value this property
        #     will return if the user does not set one. If this is `lazy`, it will
        #     be run in the context of the instance (and able to access other
        #     properties).
        #   @option options [Boolean] :desired_state `true` if this property is
        #     part of desired state. Defaults to `true`.
        #   @option options [Boolean] :identity `true` if this property
        #     is part of object identity. Defaults to `false`.
        #   @option options [Boolean] :sensitive `true` if this property could
        #     contain sensitive information and whose value should be redacted
        #     in any resource reporting / auditing output. Defaults to `false`.
        #
        # @example Bare property
        #   property :x
        #
        # @example With just a type
        #   property :x, String
        #
        # @example With just options
        #   property :x, default: 'hi'
        #
        # @example With type and options
        #   property :x, String, default: 'hi'
        #
        def property(name, type = NOT_PASSED, **options)
          name = name.to_sym

          options = options.inject({}) { |memo, (key, value)| memo[key.to_sym] = value; memo }

          options[:instance_variable_name] = :"@#{name}" if !options.has_key?(:instance_variable_name)
          options[:name] = name
          options[:declared_in] = self

          if type == NOT_PASSED
            # If a type is not passed, the property derives from the
            # superclass property (if any)
            if properties.has_key?(name)
              property = properties[name].derive(**options)
            else
              property = property_type(**options)
            end

          # If a Property is specified, derive a new one from that.
          elsif type.is_a?(Property) || (type.is_a?(Class) && type <= Property)
            property = type.derive(**options)

          # If a primitive type was passed, combine it with "is"
          else
            if options[:is]
              options[:is] = ([ type ] + [ options[:is] ]).flatten(1)
            else
              options[:is] = type
            end
            property = property_type(**options)
          end

          local_properties = properties(false)
          local_properties[name] = property

          property.emit_dsl
        end

        #
        # Create a reusable property type that can be used in multiple properties
        # in different resources.
        #
        # @param options [Hash<Symbol,Object>] Validation options. see #property for
        #   the list of options.
        #
        # @example
        #   property_type(default: 'hi')
        #
        def property_type(**options)
          Property.derive(**options)
        end

        #
        # Create a lazy value for assignment to a default value.
        #
        # @param block The block to run when the value is retrieved.
        #
        # @return [Chef::DelayedEvaluator] The lazy value
        #
        def lazy(&block)
          DelayedEvaluator.new(&block)
        end

        #
        # Get or set the list of desired state properties for this resource.
        #
        # State properties are properties that describe the desired state
        # of the system, such as file permissions or ownership.
        # In general, state properties are properties that could be populated by
        # examining the state of the system (e.g., File.stat can tell you the
        # permissions on an existing file). Contrarily, properties that are not
        # "state properties" usually modify the way Chef itself behaves, for example
        # by providing additional options for a package manager to use when
        # installing a package.
        #
        # This list is used by the Chef client auditing system to extract
        # information from resources to describe changes made to the system.
        #
        # This method is unnecessary when declaring properties with `property`;
        # properties are added to state_properties by default, and can be turned off
        # with `desired_state: false`.
        #
        # ```ruby
        # property :x # part of desired state
        # property :y, desired_state: false # not part of desired state
        # ```
        #
        # @param names [Array<Symbol>] A list of property names to set as desired
        #   state.
        #
        # @return [Array<Property>] All properties in desired state.
        #
        def state_properties(*names)
          if !names.empty?
            names = names.map { |name| name.to_sym }.uniq

            local_properties = properties(false)
            # Add new properties to the list.
            names.each do |name|
              property = properties[name]
              if !property
                self.property name, instance_variable_name: false, desired_state: true
              elsif !property.desired_state?
                self.property name, desired_state: true
              end
            end

            # If state_attrs *excludes* something which is currently desired state,
            # mark it as desired_state: false.
            local_properties.each do |name, property|
              if property.desired_state? && !names.include?(name)
                self.property name, desired_state: false
              end
            end
          end

          properties.values.select { |property| property.desired_state? }
        end

        #
        # Set the identity of this resource to a particular set of properties.
        #
        # This drives #identity, which returns data that uniquely refers to a given
        # resource on the given node (in such a way that it can be correlated
        # across Chef runs).
        #
        # This method is unnecessary when declaring properties with `property`;
        # properties can be added to identity during declaration with
        # `identity: true`.
        #
        # ```ruby
        # property :x, identity: true # part of identity
        # property :y # not part of identity
        # ```
        #
        # If no properties are marked as identity, "name" is considered the identity.
        #
        # @param names [Array<Symbol>] A list of property names to set as the identity.
        #
        # @return [Array<Property>] All identity properties.
        #
        def identity_properties(*names)
          if !names.empty?
            names = names.map { |name| name.to_sym }

            # Add or change properties that are not part of the identity.
            names.each do |name|
              property = properties[name]
              if !property
                self.property name, instance_variable_name: false, identity: true
              elsif !property.identity?
                self.property name, identity: true
              end
            end

            # If identity_properties *excludes* something which is currently part of
            # the identity, mark it as identity: false.
            properties.each do |name, property|
              if property.identity? && !names.include?(name)

                self.property name, identity: false
              end
            end
          end

          result = properties.values.select { |property| property.identity? }
          result = [ properties[:name] ] if result.empty?
          result
        end

        def included(other)
          other.extend ClassMethods
        end
      end

      def self.included(other)
        other.extend ClassMethods
      end

      include Chef::Mixin::ParamsValidate

      #
      # Whether this property has been set (or whether it has a default that has
      # been retrieved).
      #
      # @param name [Symbol] The name of the property.
      # @return [Boolean] `true` if the property has been set.
      #
      def property_is_set?(name)
        property = self.class.properties[name.to_sym]
        raise ArgumentError, "Property #{name} is not defined in class #{self}" if !property
        property.is_set?(self)
      end

      #
      # Clear this property as if it had never been set. It will thereafter return
      # the default.
      # been retrieved).
      #
      # @param name [Symbol] The name of the property.
      #
      def reset_property(name)
        property = self.class.properties[name.to_sym]
        raise ArgumentError, "Property #{name} is not defined in class #{self}" if !property
        property.reset(self)
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb to tempfile /tmp/chef-rest20170405-7856-16t4ye
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/properties.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047aba08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047aba58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "property.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004799a88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004799b50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "apt_repository.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/apt_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"
require "chef_compat/copied_from_chef/chef/dsl/declare_resource"
require "chef_compat/copied_from_chef/chef/provider/noop"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class AptRepository < (defined?(::Chef::Provider::AptRepository) ? ::Chef::Provider::AptRepository : Chef::Provider)
      use_inline_resources

      include Chef::Mixin::ShellOut
      extend Chef::Mixin::Which

      provides :apt_repository do
        which("apt-get")
      end

      def whyrun_supported?
        true
      end

      def load_current_resource
      end

      action :add do
        unless new_resource.key.nil?
          if is_key_id?(new_resource.key) && !has_cookbook_file?(new_resource.key)
            install_key_from_keyserver
          else
            install_key_from_uri
          end
        end

        declare_resource(:execute, "apt-cache gencaches") do
          ignore_failure true
          action :nothing
        end

        declare_resource(:apt_update, new_resource.name) do
          ignore_failure true
          action :nothing
        end

        components = if is_ppa_url?(new_resource.uri) && new_resource.components.empty?
                       "main"
                     else
                       new_resource.components
                     end

        repo = build_repo(
          new_resource.uri,
          new_resource.distribution,
          components,
          new_resource.trusted,
          new_resource.arch,
          new_resource.deb_src
        )

        declare_resource(:file, "/etc/apt/sources.list.d/#{new_resource.name}.list") do
          owner "root"
          group "root"
          mode "0644"
          content repo
          sensitive new_resource.sensitive
          action :create
          notifies :run, "execute[apt-cache gencaches]", :immediately
          notifies :update, "apt_update[#{new_resource.name}]", :immediately if new_resource.cache_rebuild
        end
      end

      action :remove do
        if ::File.exist?("/etc/apt/sources.list.d/#{new_resource.name}.list")
          converge_by "Removing #{new_resource.name} repository from /etc/apt/sources.list.d/" do
            declare_resource(:file, "/etc/apt/sources.list.d/#{new_resource.name}.list") do
              sensitive new_resource.sensitive
              action :delete
              notifies :update, "apt_update[#{new_resource.name}]", :immediately if new_resource.cache_rebuild
            end

            declare_resource(:apt_update, new_resource.name) do
              ignore_failure true
              action :nothing
            end

          end
        end
      end

      def is_key_id?(id)
        id = id[2..-1] if id.start_with?("0x")
        id =~ /^\h+$/ && [8, 16, 40].include?(id.length)
      end

      def extract_fingerprints_from_cmd(cmd)
        so = shell_out(cmd)
        so.run_command
        so.stdout.split(/\n/).map do |t|
          if z = t.match(/^ +Key fingerprint = ([0-9A-F ]+)/)
            z[1].split.join
          end
        end.compact
      end

      def key_is_valid?(cmd, key)
        valid = true

        so = shell_out(cmd)
        so.run_command
        so.stdout.split(/\n/).map do |t|
          if t =~ %r{^\/#{key}.*\[expired: .*\]$}
            Chef::Log.debug "Found expired key: #{t}"
            valid = false
            break
          end
        end

        Chef::Log.debug "key #{key} #{valid ? "is valid" : "is not valid"}"
        valid
      end

      def cookbook_name
        new_resource.cookbook || new_resource.cookbook_name
      end

      def has_cookbook_file?(fn)
        run_context.has_cookbook_file_in_cookbook?(cookbook_name, fn)
      end

      def no_new_keys?(file)
        installed_keys = extract_fingerprints_from_cmd("apt-key finger")
        proposed_keys = extract_fingerprints_from_cmd("gpg --with-fingerprint #{file}")
        (installed_keys & proposed_keys).sort == proposed_keys.sort
      end

      def install_key_from_uri
        key_name = new_resource.key.gsub(/[^0-9A-Za-z\-]/, "_")
        cached_keyfile = ::File.join(Chef::Config[:file_cache_path], key_name)
        type = if new_resource.key.start_with?("http")
                 :remote_file
               elsif has_cookbook_file?(new_resource.key)
                 :cookbook_file
               else
                 raise Chef::Exceptions::FileNotFound, "Cannot locate key file"
               end

        declare_resource(type, cached_keyfile) do
          source new_resource.key
          mode "0644"
          sensitive new_resource.sensitive
          action :create
        end

        raise "The key #{cached_keyfile} is invalid and cannot be used to verify an apt repository." unless key_is_valid?("gpg #{cached_keyfile}", "")

        declare_resource(:execute, "apt-key add #{cached_keyfile}") do
          sensitive new_resource.sensitive
          action :run
          not_if do
            no_new_keys?(cached_keyfile)
          end
          notifies :run, "execute[apt-cache gencaches]", :immediately
        end
      end

      def install_key_from_keyserver(key = new_resource.key, keyserver = new_resource.keyserver)
        cmd = "apt-key adv --recv"
        cmd << " --keyserver-options http-proxy=#{new_resource.key_proxy}" if new_resource.key_proxy
        cmd << " --keyserver "
        cmd << if keyserver.start_with?("hkp://")
                 keyserver
               else
                 "hkp://#{keyserver}:80"
               end

        cmd << " #{key}"

        declare_resource(:execute, "install-key #{key}") do
          command cmd
          sensitive new_resource.sensitive
          not_if do
            present = extract_fingerprints_from_cmd("apt-key finger").any? do |fp|
              fp.end_with? key.upcase
            end
            present && key_is_valid?("apt-key list", key.upcase)
          end
          notifies :run, "execute[apt-cache gencaches]", :immediately
        end

        raise "The key #{key} is invalid and cannot be used to verify an apt repository." unless key_is_valid?("apt-key list", key.upcase)
      end

      def install_ppa_key(owner, repo)
        url = "https://launchpad.net/api/1.0/~#{owner}/+archive/#{repo}"
        key_id = Chef::HTTP::Simple.new(url).get("signing_key_fingerprint").delete('"')
        install_key_from_keyserver(key_id, "keyserver.ubuntu.com")
      rescue Net::HTTPServerException => e
        raise "Could not access Launchpad ppa API: #{e.message}"
      end

      def is_ppa_url?(url)
        url.start_with?("ppa:")
      end

      def make_ppa_url(ppa)
        return unless is_ppa_url?(ppa)
        owner, repo = ppa[4..-1].split("/")
        repo ||= "ppa"

        install_ppa_key(owner, repo)
        "http://ppa.launchpad.net/#{owner}/#{repo}/ubuntu"
      end

      def build_repo(uri, distribution, components, trusted, arch, add_src = false)
        uri = make_ppa_url(uri) if is_ppa_url?(uri)

        uri = '"' + uri + '"' unless uri.start_with?("'", '"')
        components = Array(components).join(" ")
        options = []
        options << "arch=#{arch}" if arch
        options << "trusted=yes" if trusted
        optstr = unless options.empty?
                   "[" + options.join(" ") + "]"
                 end
        info = [ optstr, uri, distribution, components ].compact.join(" ")
        repo =  "deb      #{info}\n"
        repo << "deb-src  #{info}\n" if add_src
        repo
      end
    end
  end
end

Chef::Provider::Noop.provides :apt_repository
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb to tempfile /tmp/chef-rest20170405-7856-1a5vo65
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004788fa8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004788ff8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "apt_update.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/apt_update'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/provider"
require "chef_compat/copied_from_chef/chef/provider/noop"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class AptUpdate < (defined?(::Chef::Provider::AptUpdate) ? ::Chef::Provider::AptUpdate : Chef::Provider)
      use_inline_resources

      extend Chef::Mixin::Which

      provides :apt_update do
        which("apt-get")
      end

      APT_CONF_DIR = "/etc/apt/apt.conf.d"
      STAMP_DIR = "/var/lib/apt/periodic"

      def whyrun_supported?
        true
      end

      def load_current_resource
      end

      action :periodic do
        if !apt_up_to_date?
          converge_by "update new lists of packages" do
            do_update
          end
        end
      end

      action :update do
        converge_by "force update new lists of packages" do
          do_update
        end
      end

      private

      # Determines whether we need to run `apt-get update`
      #
      # @return [Boolean]
      def apt_up_to_date?
        ::File.exist?("#{STAMP_DIR}/update-success-stamp") &&
          ::File.mtime("#{STAMP_DIR}/update-success-stamp") > Time.now - new_resource.frequency
      end

      def do_update
        [STAMP_DIR, APT_CONF_DIR].each do |d|
          declare_resource(:directory, d) do
            recursive true
          end
        end

        declare_resource(:file, "#{APT_CONF_DIR}/15update-stamp") do
          content "APT::Update::Post-Invoke-Success {\"touch #{STAMP_DIR}/update-success-stamp 2>/dev/null || true\";};\n"
          action :create_if_missing
        end

        declare_resource(:execute, "apt-get -q update")
      end

    end
  end
end

Chef::Provider::Noop.provides :apt_update
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb to tempfile /tmp/chef-rest20170405-7856-1qi0vzz
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049ed460
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049ed4d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "dsl",
   "declare_resource.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000462ee00
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000462ee50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "systemd_unit.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_update.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/params_validate'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Adam Jacob (<adam@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "chef_compat/copied_from_chef/chef/constants"
require "chef_compat/copied_from_chef/chef/property"
require "chef_compat/copied_from_chef/chef/delayed_evaluator"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    module ParamsValidate
      CopiedFromChef.extend_chef_module(::Chef::Mixin::ParamsValidate, self) if defined?(::Chef::Mixin::ParamsValidate)
      # Takes a hash of options, along with a map to validate them.  Returns the original
      # options hash, plus any changes that might have been made (through things like setting
      # default values in the validation map)
      #
      # For example:
      #
      #   validate({ :one => "neat" }, { :one => { :kind_of => String }})
      #
      # Would raise an exception if the value of :one above is not a kind_of? string.  Valid
      # map options are:
      #
      # @param opts [Hash<Symbol,Object>] Validation opts.
      #   @option opts [Object,Array] :is An object, or list of
      #     objects, that must match the value using Ruby's `===` operator
      #     (`opts[:is].any? { |v| v === value }`). (See #_pv_is.)
      #   @option opts [Object,Array] :equal_to An object, or list
      #     of objects, that must be equal to the value using Ruby's `==`
      #     operator (`opts[:is].any? { |v| v == value }`)  (See #_pv_equal_to.)
      #   @option opts [Regexp,Array<Regexp>] :regex An object, or
      #     list of objects, that must match the value with `regex.match(value)`.
      #     (See #_pv_regex)
      #   @option opts [Class,Array<Class>] :kind_of A class, or
      #     list of classes, that the value must be an instance of.  (See
      #     #_pv_kind_of.)
      #   @option opts [Hash<String,Proc>] :callbacks A hash of
      #     messages -> procs, all of which match the value. The proc must
      #     return a truthy or falsey value (true means it matches).  (See
      #     #_pv_callbacks.)
      #   @option opts [Symbol,Array<Symbol>] :respond_to A method
      #     name, or list of method names, the value must respond to.  (See
      #     #_pv_respond_to.)
      #   @option opts [Symbol,Array<Symbol>] :cannot_be A property,
      #     or a list of properties, that the value cannot have (such as `:nil` or
      #     `:empty`). The method with a questionmark at the end is called on the
      #     value (e.g. `value.empty?`). If the value does not have this method,
      #     it is considered valid (i.e. if you don't respond to `empty?` we
      #     assume you are not empty).  (See #_pv_cannot_be.)
      #   @option opts [Proc] :coerce A proc which will be called to
      #     transform the user input to canonical form. The value is passed in,
      #     and the transformed value returned as output. Lazy values will *not*
      #     be passed to this method until after they are evaluated. Called in the
      #     context of the resource (meaning you can access other properties).
      #     (See #_pv_coerce.) (See #_pv_coerce.)
      #   @option opts [Boolean] :required `true` if this property
      #     must be present and not `nil`; `false` otherwise. This is checked
      #     after the resource is fully initialized. (See #_pv_required.)
      #   @option opts [Boolean] :name_property `true` if this
      #     property defaults to the same value as `name`. Equivalent to
      #     `default: lazy { name }`, except that #property_is_set? will
      #     return `true` if the property is set *or* if `name` is set. (See
      #     #_pv_name_property.)
      #   @option opts [Boolean] :name_attribute Same as `name_property`.
      #   @option opts [Object] :default The value this property
      #     will return if the user does not set one. If this is `lazy`, it will
      #     be run in the context of the instance (and able to access other
      #     properties).  (See #_pv_default.)
      #
      def validate(opts, map)
        map = map.validation_options if map.is_a?(Property)

        #--
        # validate works by taking the keys in the validation map, assuming it's a hash, and
        # looking for _pv_:symbol as methods.  Assuming it find them, it calls the right
        # one.
        #++
        raise ArgumentError, "Options must be a hash" unless opts.kind_of?(Hash)
        raise ArgumentError, "Validation Map must be a hash" unless map.kind_of?(Hash)

        map.each do |key, validation|
          unless key.kind_of?(Symbol) || key.kind_of?(String)
            raise ArgumentError, "Validation map keys must be symbols or strings!"
          end
          case validation
          when true
            _pv_required(opts, key)
          when false
            true
          when Hash
            validation.each do |check, carg|
              check_method = "_pv_#{check}"
              if self.respond_to?(check_method, true)
                self.send(check_method, opts, key, carg)
              else
                raise ArgumentError, "Validation map has unknown check: #{check}"
              end
            end
          end
        end
        opts
      end

      def lazy(&block)
        DelayedEvaluator.new(&block)
      end

      def set_or_return(symbol, value, validation)
        property = SetOrReturnProperty.new(name: symbol, **validation)
        property.call(self, value)
      end

      private

      def explicitly_allows_nil?(key, validation)
        validation.has_key?(:is) && _pv_is({ key => nil }, key, validation[:is], raise_error: false)
      end

      # Return the value of a parameter, or nil if it doesn't exist.
      def _pv_opts_lookup(opts, key)
        if opts.has_key?(key.to_s)
          opts[key.to_s]
        elsif opts.has_key?(key.to_sym)
          opts[key.to_sym]
        else
          nil
        end
      end

      # Raise an exception if the parameter is not found.
      def _pv_required(opts, key, is_required = true, explicitly_allows_nil = false)
        if is_required
          return true if opts.has_key?(key.to_s) && (explicitly_allows_nil || !opts[key.to_s].nil?)
          return true if opts.has_key?(key.to_sym) && (explicitly_allows_nil || !opts[key.to_sym].nil?)
          raise Exceptions::ValidationFailed, "Required argument #{key.inspect} is missing!"
        end
        true
      end

      #
      # List of things values must be equal to.
      #
      # Uses Ruby's `==` to evaluate (equal_to == value).  At least one must
      # match for the value to be valid.
      #
      # `nil` passes this validation automatically.
      #
      # @return [Array,nil] List of things values must be equal to, or nil if
      #   equal_to is unspecified.
      #
      def _pv_equal_to(opts, key, to_be)
        value = _pv_opts_lookup(opts, key)
        unless value.nil?
          to_be = Array(to_be)
          to_be.each do |tb|
            return true if value == tb
          end
          raise Exceptions::ValidationFailed, "Option #{key} must be equal to one of: #{to_be.join(", ")}!  You passed #{value.inspect}."
        end
      end

      #
      # List of things values must be instances of.
      #
      # Uses value.kind_of?(kind_of) to evaluate. At least one must match for
      # the value to be valid.
      #
      # `nil` automatically passes this validation.
      #
      def _pv_kind_of(opts, key, to_be)
        value = _pv_opts_lookup(opts, key)
        unless value.nil?
          to_be = Array(to_be)
          to_be.each do |tb|
            return true if value.kind_of?(tb)
          end
          raise Exceptions::ValidationFailed, "Option #{key} must be a kind of #{to_be}!  You passed #{value.inspect}."
        end
      end

      #
      # List of method names values must respond to.
      #
      # Uses value.respond_to?(respond_to) to evaluate. At least one must match
      # for the value to be valid.
      #
      def _pv_respond_to(opts, key, method_name_list)
        value = _pv_opts_lookup(opts, key)
        unless value.nil?
          Array(method_name_list).each do |method_name|
            unless value.respond_to?(method_name)
              raise Exceptions::ValidationFailed, "Option #{key} must have a #{method_name} method!"
            end
          end
        end
      end

      #
      # List of things that must not be true about the value.
      #
      # Calls `value.<thing>?` All responses must be false for the value to be
      # valid.
      # Values which do not respond to <thing>? are considered valid (because if
      # a value doesn't respond to `:readable?`, then it probably isn't
      # readable.)
      #
      # @example
      #   ```ruby
      #   property :x, cannot_be: [ :nil, :empty ]
      #   x [ 1, 2 ] #=> valid
      #   x 1        #=> valid
      #   x []       #=> invalid
      #   x nil      #=> invalid
      #   ```
      #
      def _pv_cannot_be(opts, key, predicate_method_base_name)
        value = _pv_opts_lookup(opts, key)
        if !value.nil?
          Array(predicate_method_base_name).each do |method_name|
            predicate_method = :"#{method_name}?"

            if value.respond_to?(predicate_method)
              if value.send(predicate_method)
                raise Exceptions::ValidationFailed, "Option #{key} cannot be #{predicate_method_base_name}"
              end
            end
          end
        end
      end

      #
      # The default value for a property.
      #
      # When the property is not assigned, this will be used.
      #
      # If this is a lazy value, it will either be passed the resource as a value,
      # or if the lazy proc does not take parameters, it will be run in the
      # context of the instance with instance_eval.
      #
      # @example
      #   ```ruby
      #   property :x, default: 10
      #   ```
      #
      # @example
      #   ```ruby
      #   property :x
      #   property :y, default: lazy { x+2 }
      #   ```
      #
      # @example
      #   ```ruby
      #   property :x
      #   property :y, default: lazy { |r| r.x+2 }
      #   ```
      #
      def _pv_default(opts, key, default_value)
        value = _pv_opts_lookup(opts, key)
        if value.nil?
          default_value = default_value.freeze if !default_value.is_a?(DelayedEvaluator)
          opts[key] = default_value
        end
      end

      #
      # List of regexes values that must match.
      #
      # Uses regex.match() to evaluate. At least one must match for the value to
      # be valid.
      #
      # `nil` passes regex validation automatically.
      #
      # @example
      #   ```ruby
      #   property :x, regex: [ /abc/, /xyz/ ]
      #   ```
      #
      def _pv_regex(opts, key, regex)
        value = _pv_opts_lookup(opts, key)
        if !value.nil?
          Array(regex).flatten.each do |r|
            return true if r.match(value.to_s)
          end
          raise Exceptions::ValidationFailed, "Option #{key}'s value #{value} does not match regular expression #{regex.inspect}"
        end
      end

      #
      # List of procs we pass the value to.
      #
      # All procs must return true for the value to be valid. If any procs do
      # not return true, the key will be used for the message: `"Property x's
      # value :y <message>"`.
      #
      # @example
      #   ```ruby
      #   property :x, callbacks: { "is bigger than 10" => proc { |v| v <= 10 }, "is not awesome" => proc { |v| !v.awesome }}
      #   ```
      #
      def _pv_callbacks(opts, key, callbacks)
        raise ArgumentError, "Callback list must be a hash!" unless callbacks.kind_of?(Hash)
        value = _pv_opts_lookup(opts, key)
        if !value.nil?
          callbacks.each do |message, zeproc|
            unless zeproc.call(value)
              raise Exceptions::ValidationFailed, "Option #{key}'s value #{value} #{message}!"
            end
          end
        end
      end

      #
      # Allows a parameter to default to the value of the resource name.
      #
      # @example
      #   ```ruby
      #    property :x, name_property: true
      #   ```
      #
      def _pv_name_property(opts, key, is_name_property = true)
        if is_name_property
          if opts[key].nil?
            raise CannotValidateStaticallyError, "name_property cannot be evaluated without a resource." if self == Chef::Mixin::ParamsValidate
            opts[key] = self.instance_variable_get(:"@name")
          end
        end
      end
      alias :_pv_name_attribute :_pv_name_property

      #
      # List of valid things values can be.
      #
      # Uses Ruby's `===` to evaluate (is === value).  At least one must match
      # for the value to be valid.
      #
      # If a proc is passed, it is instance_eval'd in the resource, passed the
      # value, and must return a truthy or falsey value.
      #
      # @example Class
      #   ```ruby
      #   property :x, String
      #   x 'valid' #=> valid
      #   x 1       #=> invalid
      #   x nil     #=> invalid
      #
      # @example Value
      #   ```ruby
      #   property :x, [ :a, :b, :c, nil ]
      #   x :a  #=> valid
      #   x nil #=> valid
      #   ```
      #
      # @example Regex
      #   ```ruby
      #   property :x, /bar/
      #   x 'foobar' #=> valid
      #   x 'foo'    #=> invalid
      #   x nil      #=> invalid
      #   ```
      #
      # @example Proc
      #   ```ruby
      #   property :x, proc { |x| x > y }
      #   property :y, default: 2
      #   x 3 #=> valid
      #   x 1 #=> invalid
      #   ```
      #
      # @example Property
      #   ```ruby
      #   type = Property.new(is: String)
      #   property :x, type
      #   x 'foo' #=> valid
      #   x 1     #=> invalid
      #   x nil   #=> invalid
      #   ```
      #
      # @example RSpec Matcher
      #   ```ruby
      #   include RSpec::Matchers
      #   property :x, a_string_matching /bar/
      #   x 'foobar' #=> valid
      #   x 'foo'    #=> invalid
      #   x nil      #=> invalid
      #   ```
      #
      def _pv_is(opts, key, to_be, raise_error: true)
        return true if !opts.has_key?(key.to_s) && !opts.has_key?(key.to_sym)
        value = _pv_opts_lookup(opts, key)
        to_be = [ to_be ].flatten(1)
        errors = []
        passed = to_be.any? do |tb|
          case tb
          when Proc
            raise CannotValidateStaticallyError, "is: proc { } must be evaluated once for each resource" if self == Chef::Mixin::ParamsValidate
            instance_exec(value, &tb)
          when Property
            begin
              validate(opts, { key => tb.validation_options })
              true
            rescue Exceptions::ValidationFailed
              # re-raise immediately if there is only one "is" so we get a better stack
              raise if to_be.size == 1
              errors << $!
              false
            end
          else
            tb === value
          end
        end
        if passed
          true
        else
          message = "Property #{key} must be one of: #{to_be.map { |v| v.inspect }.join(", ")}!  You passed #{value.inspect}."
          unless errors.empty?
            message << " Errors:\n#{errors.map { |m| "- #{m}" }.join("\n")}"
          end
          raise Exceptions::ValidationFailed, message
        end
      end

      #
      # Method to mess with a value before it is validated and stored.
      #
      # Allows you to transform values into a canonical form that is easy to
      # work with.
      #
      # This is passed the value to transform, and is run in the context of the
      # instance (so it has access to other resource properties). It must return
      # the value that will be stored in the instance.
      #
      # @example
      #   ```ruby
      #   property :x, Integer, coerce: { |v| v.to_i }
      #   ```
      #
      def _pv_coerce(opts, key, coercer)
        if opts.has_key?(key.to_s)
          raise CannotValidateStaticallyError, "coerce must be evaluated for each resource." if self == Chef::Mixin::ParamsValidate
          opts[key.to_s] = instance_exec(opts[key], &coercer)
        elsif opts.has_key?(key.to_sym)
          raise CannotValidateStaticallyError, "coerce must be evaluated for each resource." if self == Chef::Mixin::ParamsValidate
          opts[key.to_sym] = instance_exec(opts[key], &coercer)
        end
      end

      # We allow Chef::Mixin::ParamsValidate.validate(), but we will raise an
      # error if you try to do anything requiring there to be an actual resource.
      # This way, you can statically validate things if you have constant validation
      # (which is the norm).
      extend self

      # Used by #set_or_return to avoid emitting a deprecation warning for
      # "value nil" and to keep default stickiness working exactly the same
      # @api private
      class SetOrReturnProperty < (defined?(::Chef::Mixin::ParamsValidate::SetOrReturnProperty) ? ::Chef::Mixin::ParamsValidate::SetOrReturnProperty : Chef::Property)
        def get(resource, nil_set: false)
          value = super
          # All values are sticky, frozen or not
          if !is_set?(resource)
            set_value(resource, value)
          end
          value
        end

        def call(resource, value = NOT_PASSED)
          # setting to nil does a get
          if value.nil? && !explicitly_accepts_nil?(resource)
            get(resource, nil_set: true)
          else
            super
          end
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb to tempfile /tmp/chef-rest20170405-7856-1rqil2m
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/apt_repository.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/params_validate.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/property'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser <jkeiser@chef.io>
# Copyright:: Copyright 2015-2016, John Keiser.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/delayed_evaluator"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  #
  # Type and validation information for a property on a resource.
  #
  # A property named "x" manipulates the "@x" instance variable on a
  # resource.  The *presence* of the variable (`instance_variable_defined?(@x)`)
  # tells whether the variable is defined; it may have any actual value,
  # constrained only by validation.
  #
  # Properties may have validation, defaults, and coercion, and have full
  # support for lazy values.
  #
  # @see Chef::Resource.property
  # @see Chef::DelayedEvaluator
  #
  class Property < (defined?(::Chef::Property) ? ::Chef::Property : Object)
    #
    # Create a reusable property type that can be used in multiple properties
    # in different resources.
    #
    # @param options [Hash<Symbol,Object>] Validation options. See Chef::Resource.property for
    #   the list of options.
    #
    # @example
    #   Property.derive(default: 'hi')
    #
    def self.derive(**options)
      new(**options)
    end

    #
    # Create a new property.
    #
    # @param options [Hash<Symbol,Object>] Property options, including
    #   control options here, as well as validation options (see
    #   Chef::Mixin::ParamsValidate#validate for a description of validation
    #   options).
    #   @option options [Symbol] :name The name of this property.
    #   @option options [Class] :declared_in The class this property comes from.
    #   @option options [Symbol] :instance_variable_name The instance variable
    #     tied to this property. Must include a leading `@`. Defaults to `@<name>`.
    #     `nil` means the property is opaque and not tied to a specific instance
    #     variable.
    #   @option options [Boolean] :desired_state `true` if this property is part of desired
    #     state. Defaults to `true`.
    #   @option options [Boolean] :identity `true` if this property is part of object
    #     identity. Defaults to `false`.
    #   @option options [Boolean] :name_property `true` if this
    #     property defaults to the same value as `name`. Equivalent to
    #     `default: lazy { name }`, except that #property_is_set? will
    #     return `true` if the property is set *or* if `name` is set.
    #   @option options [Boolean] :nillable `true` opt-in to Chef-13 style behavior where
    #     attempting to set a nil value will really set a nil value instead of issuing
    #     a warning and operating like a getter
    #   @option options [Object] :default The value this property
    #     will return if the user does not set one. If this is `lazy`, it will
    #     be run in the context of the instance (and able to access other
    #     properties) and cached. If not, the value will be frozen with Object#freeze
    #     to prevent users from modifying it in an instance.
    #   @option options [Proc] :coerce A proc which will be called to
    #     transform the user input to canonical form. The value is passed in,
    #     and the transformed value returned as output. Lazy values will *not*
    #     be passed to this method until after they are evaluated. Called in the
    #     context of the resource (meaning you can access other properties).
    #   @option options [Boolean] :required `true` if this property
    #     must be present; `false` otherwise. This is checked after the resource
    #     is fully initialized.
    #
    def initialize(**options)
super if defined?(::Chef::Property)
      options = options.inject({}) { |memo, (key, value)| memo[key.to_sym] = value; memo }
      @options = options
      options[:name] = options[:name].to_sym if options[:name]
      options[:instance_variable_name] = options[:instance_variable_name].to_sym if options[:instance_variable_name]

      # Replace name_attribute with name_property
      if options.has_key?(:name_attribute)
        # If we have both name_attribute and name_property and they differ, raise an error
        if options.has_key?(:name_property)
          raise ArgumentError, "Cannot specify both name_property and name_attribute together on property #{self}."
        end
        # replace name_property with name_attribute in place
        options = Hash[options.map { |k, v| k == :name_attribute ? [ :name_property, v ] : [ k, v ] }]
        @options = options
      end

      # Only pick the first of :default, :name_property and :name_attribute if
      # more than one is specified.
      if options.has_key?(:default) && options[:name_property]
        if options[:default].nil? || options.keys.index(:name_property) < options.keys.index(:default)
          options.delete(:default)
          preferred_default = :name_property
        else
          options.delete(:name_property)
          preferred_default = :default
        end
        Chef.log_deprecation("Cannot specify both default and name_property together on property #{self}. Only one (#{preferred_default}) will be obeyed. In Chef 13, this will become an error. Please remove one or the other from the property.")
      end

      # Validate the default early, so the user gets a good error message, and
      # cache it so we don't do it again if so
      begin
        # If we can validate it all the way to output, do it.
        @stored_default = input_to_stored_value(nil, default, is_default: true)
      rescue Chef::Exceptions::CannotValidateStaticallyError
        # If the validation is not static (i.e. has procs), we will have to
        # coerce and validate the default each time we run
      end
    end

    def to_s
      "#{name || "<property type>"}#{declared_in ? " of resource #{declared_in.resource_name}" : ""}"
    end

    #
    # The name of this property.
    #
    # @return [String]
    #
    def name
      options[:name]
    end

    #
    # The class this property was defined in.
    #
    # @return [Class]
    #
    def declared_in
      options[:declared_in]
    end

    #
    # The instance variable associated with this property.
    #
    # Defaults to `@<name>`
    #
    # @return [Symbol]
    #
    def instance_variable_name
      if options.has_key?(:instance_variable_name)
        options[:instance_variable_name]
      elsif name
        :"@#{name}"
      end
    end

    #
    # The raw default value for this resource.
    #
    # Does not coerce or validate the default. Does not evaluate lazy values.
    #
    # Defaults to `lazy { name }` if name_property is true; otherwise defaults to
    # `nil`
    #
    def default
      return options[:default] if options.has_key?(:default)
      return Chef::DelayedEvaluator.new { name } if name_property?
      nil
    end

    #
    # Whether this is part of the resource's natural identity or not.
    #
    # @return [Boolean]
    #
    def identity?
      options[:identity]
    end

    #
    # Whether this is part of desired state or not.
    #
    # Defaults to true.
    #
    # @return [Boolean]
    #
    def desired_state?
      return true if !options.has_key?(:desired_state)
      options[:desired_state]
    end

    #
    # Whether this is name_property or not.
    #
    # @return [Boolean]
    #
    def name_property?
      options[:name_property]
    end

    #
    # Whether this property has a default value.
    #
    # @return [Boolean]
    #
    def has_default?
      options.has_key?(:default) || name_property?
    end

    #
    # Whether this property is required or not.
    #
    # @return [Boolean]
    #
    def required?
      options[:required]
    end

    #
    # Whether this property is sensitive or not.
    #
    # Defaults to false.
    #
    # @return [Boolean]
    #
    def sensitive?
      options.fetch(:sensitive, false)
    end

    #
    # Validation options.  (See Chef::Mixin::ParamsValidate#validate.)
    #
    # @return [Hash<Symbol,Object>]
    #
    def validation_options
      @validation_options ||= options.reject do |k, v|
        [:declared_in, :name, :instance_variable_name, :desired_state, :identity, :default, :name_property, :coerce, :required, :nillable, :sensitive].include?(k)
      end
    end

    #
    # Handle the property being called.
    #
    # The base implementation does the property get-or-set:
    #
    # ```ruby
    # resource.myprop # get
    # resource.myprop value # set
    # ```
    #
    # Subclasses may implement this with any arguments they want, as long as
    # the corresponding DSL calls it correctly.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    # @param value The value to set (or NOT_PASSED if it is a get).
    #
    # @return The current value of the property. If it is a `set`, lazy values
    #   will be returned without running, validating or coercing. If it is a
    #   `get`, the non-lazy, coerced, validated value will always be returned.
    #
    def call(resource, value = NOT_PASSED)
      if value == NOT_PASSED
        return get(resource)
      end

      if value.nil? && !nillable?
        # In Chef 12, value(nil) does a *get* instead of a set, so we
        # warn if the value would have been changed. In Chef 13, it will be
        # equivalent to value = nil.
        result = get(resource, nil_set: true)

        # Warn about this becoming a set in Chef 13.
        begin
          input_to_stored_value(resource, value)
          # If nil is valid, and it would change the value, warn that this will change to a set.
          if !result.nil?
            Chef.log_deprecation("An attempt was made to change #{name} from #{result.inspect} to nil by calling #{name}(nil). In Chef 12, this does a get rather than a set. In Chef 13, this will change to set the value to nil.")
          end
        rescue Chef::Exceptions::DeprecatedFeatureError
          raise
        rescue
          # If nil is invalid, warn that this will become an error.
          Chef.log_deprecation("nil is an invalid value for #{self}. In Chef 13, this warning will change to an error. Error: #{$!}")
        end

        result
      else
        # Anything else, such as myprop(value) is a set
        set(resource, value)
      end
    end

    #
    # Get the property value from the resource, handling lazy values,
    # defaults, and validation.
    #
    # - If the property's value is lazy, it is evaluated, coerced and validated.
    # - If the property has no value, and is required, raises ValidationFailed.
    # - If the property has no value, but has a lazy default, it is evaluated,
    #   coerced and validated. If the evaluated value is frozen, the resulting
    # - If the property has no value, but has a default, the default value
    #   will be returned and frozen. If the default value is lazy, it will be
    #   evaluated, coerced and validated, and the result stored in the property.
    # - If the property has no value, but is name_property, `resource.name`
    #   is retrieved, coerced, validated and stored in the property.
    # - Otherwise, `nil` is returned.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    #
    # @return The value of the property.
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property, or if the value is required and not set.
    #
    def get(resource, nil_set: false)
      # If it's set, return it (and evaluate any lazy values)
      if is_set?(resource)
        value = get_value(resource)
        value = stored_value_to_output(resource, value)

      else
        # We are getting the default value.

        # If the user does something like this:
        #
        # ```
        # class MyResource < Chef::Resource
        #   property :content
        #   action :create do
        #     file '/x.txt' do
        #       content content
        #     end
        #   end
        # end
        # ```
        #
        # It won't do what they expect. This checks whether you try to *read*
        # `content` while we are compiling the resource.
        if !nil_set &&
            resource.respond_to?(:resource_initializing) &&
            resource.resource_initializing &&
            resource.respond_to?(:enclosing_provider) &&
            resource.enclosing_provider &&
            resource.enclosing_provider.new_resource &&
            resource.enclosing_provider.new_resource.respond_to?(name)
          Chef::Log.warn("#{Chef::Log.caller_location}: property #{name} is declared in both #{resource} and #{resource.enclosing_provider}. Use new_resource.#{name} instead. At #{Chef::Log.caller_location}")
        end

        if has_default?
          # If we were able to cache the stored_default, grab it.
          if defined?(@stored_default)
            value = @stored_default
          else
            # Otherwise, we have to validate it now.
            value = input_to_stored_value(resource, default, is_default: true)
          end
          value = stored_value_to_output(resource, value, is_default: true)

          # If the value is mutable (non-frozen), we set it on the instance
          # so that people can mutate it.  (All constant default values are
          # frozen.)
          if !value.frozen? && !value.nil?
            set_value(resource, value)
          end

          value

        elsif required?
          raise Chef::Exceptions::ValidationFailed, "#{name} is required"
        end
      end
    end

    #
    # Set the value of this property in the given resource.
    #
    # Non-lazy values are coerced and validated before being set. Coercion
    # and validation of lazy values is delayed until they are first retrieved.
    #
    # @param resource [Chef::Resource] The resource to set this property in.
    # @param value The value to set.
    #
    # @return The value that was set, after coercion (if lazy, still returns
    #   the lazy value)
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property.
    #
    def set(resource, value)
      set_value(resource, input_to_stored_value(resource, value))
    end

    #
    # Find out whether this property has been set.
    #
    # This will be true if:
    # - The user explicitly set the value
    # - The property has a default, and the value was retrieved.
    #
    # From this point of view, it is worth looking at this as "what does the
    # user think this value should be." In order words, if the user grabbed
    # the value, even if it was a default, they probably based calculations on
    # it. If they based calculations on it and the value changes, the rest of
    # the world gets inconsistent.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    #
    # @return [Boolean]
    #
    def is_set?(resource)
      value_is_set?(resource)
    end

    #
    # Reset the value of this property so that is_set? will return false and the
    # default will be returned in the future.
    #
    # @param resource [Chef::Resource] The resource to get the property from.
    #
    def reset(resource)
      reset_value(resource)
    end

    #
    # Coerce an input value into canonical form for the property.
    #
    # After coercion, the value is suitable for storage in the resource.
    # You must validate values after coercion, however.
    #
    # Does no special handling for lazy values.
    #
    # @param resource [Chef::Resource] The resource we're coercing against
    #   (to provide context for the coerce).
    # @param value The value to coerce.
    #
    # @return The coerced value.
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property.
    #
    def coerce(resource, value)
      if options.has_key?(:coerce)
        # If we have no default value, `nil` is never coerced or validated
        unless !has_default? && value.nil?
          value = exec_in_resource(resource, options[:coerce], value)
        end
      end
      value
    end

    #
    # Validate a value.
    #
    # Calls Chef::Mixin::ParamsValidate#validate with #validation_options as
    # options.
    #
    # @param resource [Chef::Resource] The resource we're validating against
    #   (to provide context for the validate).
    # @param value The value to validate.
    #
    # @raise Chef::Exceptions::ValidationFailed If the value is invalid for
    #   this property.
    #
    def validate(resource, value)
      # If we have no default value, `nil` is never coerced or validated
      unless value.nil? && !has_default?
        if resource
          resource.validate({ name => value }, { name => validation_options })
        else
          name = self.name || :property_type
          Chef::Mixin::ParamsValidate.validate({ name => value }, { name => validation_options })
        end
      end
    end

    #
    # Derive a new Property that is just like this one, except with some added or
    # changed options.
    #
    # @param options [Hash<Symbol,Object>] List of options that would be passed
    #   to #initialize.
    #
    # @return [Property] The new property type.
    #
    def derive(**modified_options)
      # Since name_property, name_attribute and default override each other,
      # if you specify one of them in modified_options it overrides anything in
      # the original options.
      options = self.options
      if modified_options.has_key?(:name_property) ||
          modified_options.has_key?(:name_attribute) ||
          modified_options.has_key?(:default)
        options = options.reject { |k, v| k == :name_attribute || k == :name_property || k == :default }
      end
      self.class.new(options.merge(modified_options))
    end

    #
    # Emit the DSL for this property into the resource class (`declared_in`).
    #
    # Creates a getter and setter for the property.
    #
    def emit_dsl
      # We don't create the getter/setter if it's a custom property; we will
      # be using the existing getter/setter to manipulate it instead.
      return if !instance_variable_name

      # We prefer this form because the property name won't show up in the
      # stack trace if you use `define_method`.
      declared_in.class_eval <<-EOM, __FILE__, __LINE__ + 1
        def #{name}(value=NOT_PASSED)
          raise "Property `#{name}` of `\#{self}` was incorrectly passed a block.  Possible property-resource collision.  To call a resource named `#{name}` either rename the property or else use `declare_resource(:#{name}, ...)`" if block_given?
          self.class.properties[#{name.inspect}].call(self, value)
        end
        def #{name}=(value)
          raise "Property `#{name}` of `\#{self}` was incorrectly passed a block.  Possible property-resource collision.  To call a resource named `#{name}` either rename the property or else use `declare_resource(:#{name}, ...)`" if block_given?
          self.class.properties[#{name.inspect}].set(self, value)
        end
      EOM
    rescue SyntaxError
      # If the name is not a valid ruby name, we use define_method.
      declared_in.define_method(name) do |value = NOT_PASSED, &block|
        raise "Property `#{name}` of `#{self}` was incorrectly passed a block!  Possible property-resource collision.  To call a resource named `#{name}` either rename the property or else use `declare_resource(:#{name}, ...)`" if block
        self.class.properties[name].call(self, value)
      end
      declared_in.define_method("#{name}=") do |value, &block|
        raise "Property `#{name}` of `#{self}` was incorrectly passed a block!  Possible property-resource collision.  To call a resource named `#{name}` either rename the property or else use `declare_resource(:#{name}, ...)`" if block
        self.class.properties[name].set(self, value)
      end
    end

    #
    # The options this Property will use for get/set behavior and validation.
    #
    # @see #initialize for a list of valid options.
    #
    attr_reader :options

    #
    # Find out whether this type accepts nil explicitly.
    #
    # A type accepts nil explicitly if "is" allows nil, it validates as nil, *and* is not simply
    # an empty type.
    #
    # A type is presumed to accept nil if it does coercion (which must handle nil).
    #
    # These examples accept nil explicitly:
    # ```ruby
    # property :a, [ String, nil ]
    # property :a, [ String, NilClass ]
    # property :a, [ String, proc { |v| v.nil? } ]
    # ```
    #
    # This does not (because the "is" doesn't exist or doesn't have nil):
    #
    # ```ruby
    # property :x, String
    # ```
    #
    # These do not, even though nil would validate fine (because they do not
    # have "is"):
    #
    # ```ruby
    # property :a
    # property :a, equal_to: [ 1, 2, 3, nil ]
    # property :a, kind_of: [ String, NilClass ]
    # property :a, respond_to: [ ]
    # property :a, callbacks: { "a" => proc { |v| v.nil? } }
    # ```
    #
    # @param resource [Chef::Resource] The resource we're coercing against
    #   (to provide context for the coerce).
    #
    # @return [Boolean] Whether this value explicitly accepts nil.
    #
    # @api private
    def explicitly_accepts_nil?(resource)
      options.has_key?(:coerce) ||
        (options.has_key?(:is) && resource.send(:_pv_is, { name => nil }, name, options[:is], raise_error: false))
    end

    # @api private
    def get_value(resource)
      if instance_variable_name
        resource.instance_variable_get(instance_variable_name)
      else
        resource.send(name)
      end
    end

    # @api private
    def set_value(resource, value)
      if instance_variable_name
        resource.instance_variable_set(instance_variable_name, value)
      else
        resource.send(name, value)
      end
    end

    # @api private
    def value_is_set?(resource)
      if instance_variable_name
        resource.instance_variable_defined?(instance_variable_name)
      else
        true
      end
    end

    # @api private
    def reset_value(resource)
      if instance_variable_name
        if value_is_set?(resource)
          resource.remove_instance_variable(instance_variable_name)
        end
      else
        raise ArgumentError, "Property #{name} has no instance variable defined and cannot be reset"
      end
    end

    private

    def exec_in_resource(resource, proc, *args)
      if resource
        if proc.arity > args.size
          value = proc.call(resource, *args)
        else
          value = resource.instance_exec(*args, &proc)
        end
      else
        # If we don't have a resource yet, we can't exec in resource!
        raise Chef::Exceptions::CannotValidateStaticallyError, "Cannot validate or coerce without a resource"
      end
    end

    def input_to_stored_value(resource, value, is_default: false)
      unless value.is_a?(DelayedEvaluator)
        value = coerce_and_validate(resource, value, is_default: is_default)
      end
      value
    end

    def stored_value_to_output(resource, value, is_default: false)
      # Crack open lazy values before giving the result to the user
      if value.is_a?(DelayedEvaluator)
        value = exec_in_resource(resource, value)
        value = coerce_and_validate(resource, value, is_default: is_default)
      end
      value
    end

    # Coerces and validates the value. If the value is a default, it will warn
    # the user that invalid defaults are bad mmkay, and return it as if it were
    # valid.
    def coerce_and_validate(resource, value, is_default: false)
      result = coerce(resource, value)
      begin
        # If the input is from a default, we need to emit an invalid default warning on validate.
        validate(resource, result)
      rescue Chef::Exceptions::CannotValidateStaticallyError
        # This one gets re-raised
        raise
      rescue
        # Anything else is just an invalid default: in those cases, we just
        # warn and return the (possibly coerced) value to the user.
        if is_default
          if value.nil?
            Chef.log_deprecation("Default value nil is invalid for property #{self}. Possible fixes: 1. Remove 'default: nil' if nil means 'undefined'. 2. Set a valid default value if there is a reasonable one. 3. Allow nil as a valid value of your property (for example, 'property #{name.inspect}, [ String, nil ], default: nil'). Error: #{$!}")
          else
            Chef.log_deprecation("Default value #{value.inspect} is invalid for property #{self}. In Chef 13 this will become an error: #{$!}.")
          end
        else
          raise
        end
      end

      result
    end

    def nillable?
      !!options[:nillable]
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb to tempfile /tmp/chef-rest20170405-7856-7tktcr
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/property.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004748750
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047487a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "noop.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/dsl/declare_resource'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters
# Copyright:: Copyright 2008-2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#


class Chef < (defined?(::Chef) ? ::Chef : Object)
  module DSL
    CopiedFromChef.extend_chef_module(::Chef::DSL, self) if defined?(::Chef::DSL)
    module DeclareResource
      CopiedFromChef.extend_chef_module(::Chef::DSL::DeclareResource, self) if defined?(::Chef::DSL::DeclareResource)

      # Helper for switching run_contexts.  Allows for using :parent or :root in place of
      # passing the run_context.  Executes the block in the run_context.  Returns the return
      # value of the passed block.
      #
      # @param rc  [Chef::RunContext,Symbol] Either :root, :parent or a Chef::RunContext
      #
      # @return return value of the block
      #
      # @example
      #   # creates/returns a 'service[foo]' resource in the root run_context
      #   resource = with_run_context(:root)
      #     edit_resource(:service, "foo") do
      #       action :nothing
      #     end
      #   end
      #
      def with_run_context(rc)
        raise ArgumentError, "with_run_context is useless without a block" unless block_given?
        old_run_context = @run_context
        @run_context =
          case rc
          when Chef::RunContext
            rc
          when :root
            run_context.root_run_context
          when :parent
            run_context.parent_run_context
          else
            raise ArgumentError, "bad argument to run_context helper, must be :root, :parent, or a Chef::RunContext"
          end
        yield
      ensure
        @run_context = old_run_context
      end

      # Lookup a resource in the resource collection by name and delete it.  This
      # will raise Chef::Exceptions::ResourceNotFound if the resource is not found.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The resource
      #
      # @example
      #   delete_resource!(:template, '/x/y.txy')
      #
      def delete_resource!(type, name, run_context: self.run_context)
        run_context.resource_collection.delete("#{type}[#{name}]").tap do |resource|
          # Purge any pending notifications too. This will not raise an exception
          # if there are no notifications.
          if resource
            run_context.before_notification_collection.delete(resource.declared_key)
            run_context.immediate_notification_collection.delete(resource.declared_key)
            run_context.delayed_notification_collection.delete(resource.declared_key)
          end
        end
      end

      # Lookup a resource in the resource collection by name and delete it.  Returns
      # nil if the resource is not found and should not fail.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The resource
      #
      # @example
      #   delete_resource(:template, '/x/y.txy')
      #
      def delete_resource(type, name, run_context: self.run_context)
        delete_resource!(type, name, run_context: run_context)
      rescue Chef::Exceptions::ResourceNotFound
        nil
      end

      # Lookup a resource in the resource collection by name and edit the resource.  If the resource is not
      # found this will raise Chef::Exceptions::ResourceNotFound.  This is the correct API to use for
      # "chef_rewind" functionality.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The updated resource
      #
      # @example
      #   edit_resource!(:template, '/x/y.txy') do
      #     cookbook_name: cookbook_name
      #   end
      #
      def edit_resource!(type, name, created_at = nil, run_context: self.run_context, &resource_attrs_block)
        resource = find_resource!(type, name, run_context: run_context)
        if resource_attrs_block
          if defined?(new_resource)
            resource.instance_exec(new_resource, &resource_attrs_block)
          else
            resource.instance_exec(&resource_attrs_block)
          end
        end
        resource
      end

      # Lookup a resource in the resource collection by name.  If it exists,
      # return it.  If it does not exist, create it.  This is a useful function
      # for accumulator patterns.  In CRUD terminology this is an "upsert" operation and is
      # used to assert that the resource must exist with the specified properties.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param created_at [String] The caller of the resource.  Use `caller[0]`
      #   to get the caller of your function.  Defaults to the caller of this
      #   function.
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The updated or created resource
      #
      # @example
      #   resource = edit_resource(:template, '/x/y.txy') do
      #     source "y.txy.erb"
      #     variables {}
      #   end
      #   resource.variables.merge!({ home: "/home/klowns"  })
      #
      def edit_resource(type, name, created_at = nil, run_context: self.run_context, &resource_attrs_block)
        edit_resource!(type, name, created_at, run_context: run_context, &resource_attrs_block)
      rescue Chef::Exceptions::ResourceNotFound
        declare_resource(type, name, created_at, run_context: run_context, &resource_attrs_block)
      end

      # Lookup a resource in the resource collection by name.  If the resource is not
      # found this will raise Chef::Exceptions::ResourceNotFound.  This API is identical to the
      # resources() call and while it is a synonym it is not intended to deprecate that call.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The updated resource
      #
      # @example
      #   resource = find_resource!(:template, '/x/y.txy')
      #
      def find_resource!(type, name, run_context: self.run_context)
        raise ArgumentError, "find_resource! does not take a block" if block_given?
        run_context.resource_collection.find(type => name)
      end

      # Lookup a resource in the resource collection by name.  If the resource is not found
      # the will be no exception raised and the call will return nil.  If a block is given and
      # no resource is found it will create the resource using the block, if the resource is
      # found then the block will not be applied.  The block version is similar to create_if_missing
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      #
      # @return [Chef::Resource] The updated resource
      #
      # @example
      #   if ( find_resource(:template, '/x/y.txy') )
      #     # do something
      #   else
      #     # don't worry about the error
      #   end
      #
      # @example
      #   # this API can be used to return a resource from an outer run context, and will only create
      #   # an action :nothing service if one does not already exist.
      #   resource = with_run_context(:root) do
      #     find_resource(:service, 'whatever') do
      #       action :nothing
      #     end
      #   end
      #
      def find_resource(type, name, created_at: nil, run_context: self.run_context, &resource_attrs_block)
        find_resource!(type, name, run_context: run_context)
      rescue Chef::Exceptions::ResourceNotFound
        if resource_attrs_block
          declare_resource(type, name, created_at, run_context: run_context, &resource_attrs_block)
        end # returns nil otherwise
      end

      # Instantiates a resource (via #build_resource), then adds it to the
      # resource collection. Note that resource classes are looked up directly,
      # so this will create the resource you intended even if the method name
      # corresponding to that resource has been overridden.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param created_at [String] The caller of the resource.  Use `caller[0]`
      #   to get the caller of your function.  Defaults to the caller of this
      #   function.
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The new resource.
      #
      # @example
      #   declare_resource(:file, '/x/y.txy', caller[0]) do
      #     action :delete
      #   end
      #   # Equivalent to
      #   file '/x/y.txt' do
      #     action :delete
      #   end
      #
      def declare_resource(type, name, created_at = nil, run_context: self.run_context, create_if_missing: false, &resource_attrs_block)
        created_at ||= caller[0]

        if create_if_missing
          Chef::Log.deprecation "build_resource with a create_if_missing flag is deprecated, use edit_resource instead"
          # midly goofy since we call edit_resource only to re-call ourselves, but that's why its deprecated...
          return edit_resource(type, name, created_at, run_context: run_context, &resource_attrs_block)
        end

        resource = build_resource(type, name, created_at, &resource_attrs_block)

        run_context.resource_collection.insert(resource, resource_type: type, instance_name: name)
        resource
      end

      # Instantiate a resource of the given +type+ with the given +name+ and
      # attributes as given in the +resource_attrs_block+.
      #
      # The resource is NOT added to the resource collection.
      #
      # @param type [Symbol] The type of resource (e.g. `:file` or `:package`)
      # @param name [String] The name of the resource (e.g. '/x/y.txt' or 'apache2')
      # @param created_at [String] The caller of the resource.  Use `caller[0]`
      #   to get the caller of your function.  Defaults to the caller of this
      #   function.
      # @param run_context [Chef::RunContext] the run_context of the resource collection to operate on
      # @param resource_attrs_block A block that lets you set attributes of the
      #   resource (it is instance_eval'd on the resource instance).
      #
      # @return [Chef::Resource] The new resource.
      #
      # @example
      #   build_resource(:file, '/x/y.txy', caller[0]) do
      #     action :delete
      #   end
      #
      def build_resource(type, name, created_at = nil, run_context: self.run_context, &resource_attrs_block)
        created_at ||= caller[0]

        # this needs to be lazy in order to avoid circular dependencies since ResourceBuilder
        # will requires the entire provider+resolver universe
        require "chef_compat/copied_from_chef/chef/resource_builder" unless defined?(Chef::ResourceBuilder)

        Chef::ResourceBuilder.new(
          type:                type,
          name:                name,
          created_at:          created_at,
          params:              @params,
          run_context:         run_context,
          cookbook_name:       cookbook_name,
          recipe_name:         recipe_name,
          enclosing_provider:  self.is_a?(Chef::Provider) ? self : nil
        ).build(&resource_attrs_block)
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb to tempfile /tmp/chef-rest20170405-7856-16d946z
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/dsl/declare_resource.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/systemd_unit'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Nathan Williams (<nath.e.will@gmail.com>)
# Copyright:: Copyright 2016, Nathan Williams
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/provider"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class SystemdUnit < (defined?(::Chef::Provider::SystemdUnit) ? ::Chef::Provider::SystemdUnit : Chef::Provider)
      include Chef::Mixin::Which
      include Chef::Mixin::ShellOut

      provides :systemd_unit, os: "linux"

      def load_current_resource
        @current_resource = Chef::Resource::SystemdUnit.new(new_resource.name)

        current_resource.content(::File.read(unit_path)) if ::File.exist?(unit_path)
        current_resource.user(new_resource.user)
        current_resource.enabled(enabled?)
        current_resource.active(active?)
        current_resource.masked(masked?)
        current_resource.static(static?)
        current_resource.triggers_reload(new_resource.triggers_reload)

        current_resource
      end

      def define_resource_requirements
        super

        requirements.assert(:create) do |a|
          a.assertion { IniParse.parse(new_resource.to_ini) }
          a.failure_message "Unit content is not valid INI text"
        end
      end

      def action_create
        if current_resource.content != new_resource.to_ini
          converge_by("creating unit: #{new_resource.name}") do
            manage_unit_file(:create)
            daemon_reload if new_resource.triggers_reload
          end
        end
      end

      def action_delete
        if ::File.exist?(unit_path)
          converge_by("deleting unit: #{new_resource.name}") do
            manage_unit_file(:delete)
            daemon_reload if new_resource.triggers_reload
          end
        end
      end

      def action_enable
        if current_resource.static
          Chef::Log.debug("#{new_resource.name} is a static unit, enabling is a NOP.")
        end

        unless current_resource.enabled || current_resource.static
          converge_by("enabling unit: #{new_resource.name}") do
            systemctl_execute!(:enable, new_resource.name)
          end
        end
      end

      def action_disable
        if current_resource.static
          Chef::Log.debug("#{new_resource.name} is a static unit, disabling is a NOP.")
        end

        if current_resource.enabled && !current_resource.static
          converge_by("disabling unit: #{new_resource.name}") do
            systemctl_execute!(:disable, new_resource.name)
          end
        end
      end

      def action_mask
        unless current_resource.masked
          converge_by("masking unit: #{new_resource.name}") do
            systemctl_execute!(:mask, new_resource.name)
          end
        end
      end

      def action_unmask
        if current_resource.masked
          converge_by("unmasking unit: #{new_resource.name}") do
            systemctl_execute!(:unmask, new_resource.name)
          end
        end
      end

      def action_start
        unless current_resource.active
          converge_by("starting unit: #{new_resource.name}") do
            systemctl_execute!(:start, new_resource.name)
          end
        end
      end

      def action_stop
        if current_resource.active
          converge_by("stopping unit: #{new_resource.name}") do
            systemctl_execute!(:stop, new_resource.name)
          end
        end
      end

      def action_restart
        converge_by("restarting unit: #{new_resource.name}") do
          systemctl_execute!(:restart, new_resource.name)
        end
      end

      def action_reload
        if current_resource.active
          converge_by("reloading unit: #{new_resource.name}") do
            systemctl_execute!(:reload, new_resource.name)
          end
        else
          Chef::Log.debug("#{new_resource.name} is not active, skipping reload.")
        end
      end

      def action_try_restart
        converge_by("try-restarting unit: #{new_resource.name}") do
          systemctl_execute!("try-restart", new_resource.name)
        end
      end

      def action_reload_or_restart
        converge_by("reload-or-restarting unit: #{new_resource.name}") do
          systemctl_execute!("reload-or-restart", new_resource.name)
        end
      end

      def action_reload_or_try_restart
        converge_by("reload-or-try-restarting unit: #{new_resource.name}") do
          systemctl_execute!("reload-or-try-restart", new_resource.name)
        end
      end

      def active?
        systemctl_execute("is-active", new_resource.name).exitstatus == 0
      end

      def enabled?
        systemctl_execute("is-enabled", new_resource.name).exitstatus == 0
      end

      def masked?
        systemctl_execute(:status, new_resource.name).stdout.include?("masked")
      end

      def static?
        systemctl_execute("is-enabled", new_resource.name).stdout.include?("static")
      end

      private

      def unit_path
        if new_resource.user
          "/etc/systemd/user/#{new_resource.name}"
        else
          "/etc/systemd/system/#{new_resource.name}"
        end
      end

      def manage_unit_file(action = :nothing)
        Chef::Resource::File.new(unit_path, run_context).tap do |f|
          f.owner "root"
          f.group "root"
          f.mode "0644"
          f.content new_resource.to_ini
        end.run_action(action)
      end

      def daemon_reload
        shell_out_with_systems_locale!("#{systemctl_path} daemon-reload")
      end

      def systemctl_execute!(action, unit)
        shell_out_with_systems_locale!("#{systemctl_cmd} #{action} #{unit}", systemctl_opts)
      end

      def systemctl_execute(action, unit)
        shell_out("#{systemctl_cmd} #{action} #{unit}", systemctl_opts)
      end

      def systemctl_cmd
        @systemctl_cmd ||= "#{systemctl_path} #{systemctl_args}"
      end

      def systemctl_path
        @systemctl_path ||= which("systemctl")
      end

      def systemctl_args
        @systemctl_args ||= new_resource.user ? "--user" : "--system"
      end

      def systemctl_opts
        @systemctl_opts ||=
          if new_resource.user
            {
              :user => new_resource.user,
              :environment => {
                "DBUS_SESSION_BUS_ADDRESS" => "unix:path=/run/user/#{node['etc']['passwd'][new_resource.user]['uid']}/bus",
              },
            }
          else
            {}
          end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb to tempfile /tmp/chef-rest20170405-7856-2dpp3m
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/systemd_unit.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045208d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004520928>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "yum_repository.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/mixin/lazy_module_include'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Copyright:: Copyright 2011-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef < (defined?(::Chef) ? ::Chef : Object)
  module Mixin
    CopiedFromChef.extend_chef_module(::Chef::Mixin, self) if defined?(::Chef::Mixin)
    # If you have:
    #
    # module A
    #   extend LazyModuleInclude
    # end
    #
    # module B
    #   include A
    # end
    #
    # module C
    #   include B
    # end
    #
    # module Monkeypatches
    #   def monkey
    #     puts "monkey!"
    #   end
    # end
    #
    # A.send(:include, Monkeypatches)
    #
    # Then B and C and any classes that they're included in will also get the #monkey method patched into them.
    #
    module LazyModuleInclude
      CopiedFromChef.extend_chef_module(::Chef::Mixin::LazyModuleInclude, self) if defined?(::Chef::Mixin::LazyModuleInclude)

      # Most of the magick is in this hook which creates a closure over the parent class and then builds an
      # "infector" module which infects all descendants and which is responsible for updating the list of
      # descendants in the parent class.
      def included(klass)
        super
        parent_klass = self
        infector = Module.new do
          define_method(:included) do |subklass|
            super(subklass)
            subklass.extend(infector)
            parent_klass.descendants.push(subklass)
          end
        end
        klass.extend(infector)
        parent_klass.descendants.push(klass)
      end

      def descendants
        @descendants ||= []
      end

      def include(*classes)
        super
        classes.each do |klass|
          descendants.each do |descendant|
            descendant.send(:include, klass)
          end
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb to tempfile /tmp/chef-rest20170405-7856-1odcyra
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/mixin/lazy_module_include.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000033a5428
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000033a5478>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "yum_repository.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/noop'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class Noop < (defined?(::Chef::Provider::Noop) ? ::Chef::Provider::Noop : Chef::Provider)
      def load_current_resource; end

      def respond_to_missing?(method_sym, include_private = false)
        method_sym.to_s.start_with?("action_") || super
      end

      def method_missing(method_sym, *arguments, &block)
        if method_sym.to_s =~ /^action_/
          Chef::Log.debug("NoOp-ing for #{method_sym}")
        else
          super
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb to tempfile /tmp/chef-rest20170405-7856-plebmv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000034b2000
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000034b2050>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "apt_update.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# yum-epel Cookbook CHANGELOG

This file is used to list changes made in each version of the yum-epel cookbook.

## 2.1.1 (2017-01-05)

- Revert how mirror list strings are generated to fix RHEL 7

## 2.1.0 (2016-12-22)

- Test in Travis using the current build of chef/chef docker image
- Test on older Chef
- allow the use of any valid property via attributes
- fixing tests
- output versions in the job that is being ran
- cops

## 2.0.0 (2016-11-26)

- Clarify that we require Chef 12.1+ not 12.0+
- Use compat_resource instead of the yum cookbook
- Add integration testing with inspec

## 1.0.2 (2016-10-21)

- Remove upper bound on yum constraint

## 1.0.1 (2016-09-11)

- Fix epel-testing attributes

## 1.0.0 (2016-09-06)

- Add chef_version metadata
- Testing updates
- Remove support for Chef 11

## v0.7.1 (2016-08-19)

- Remove bats testing
- Fix attribute settings
- Cleanup travis file

## v0.7.0 (2016-04-27)

- Added support for IBM zlinux platform
- Added back the Test Kitchen support for local vagrant testing
- Added long_description to the metadata
- Loosen the dependency on the yum cookbook

## v0.6.5

- updated to use `make_cache` option that yum cookbook allows for the yum resource to use.

## v0.6.5 (2015-11-23)

- Fix setting bool false properties

## v0.6.4 (2015-10-27)

- Updating default recipe for Chef 13 deprecation warnings. Not
- passing nil.

## v0.6.3 (2015-09-22)

- Added standard Chef gitignore and chefignore files
- Added the standard chef rubocop config
- Update contributing, maintainers, and testing docs
- Update Chefspec config to 4.X format
- Update distro versions in the Kitchen config
- Add Travis CI and cookbook version badges in the readme
- Expand the requirements section in the readme
- Add additional distros to the metadata
- Added source_url and issues_url metadata

## v0.6.2 (2015-06-21)

- Depending on yum ~> 3.2
- Support for the password attribute wasn't added to the
- yum_repository LWRP until yum 3.2.0.

## v0.6.1 (2015-06-21)

- Switching to https for URL links
- Using metalink URLs

## v0.6.0 (2015-01-03)

- Adding EL7 support

## v0.5.3 (2014-10-28)

- Revert Use HTTPS for GPG keys and mirror lists

## v0.5.2 (2014-10-28)

- Use HTTPS for GPG keys and mirror lists
- Use local key on Amazon Linux

## v0.5.0 (2014-09-02)

- Add all attribute available to LWRP to allow for tuning.

## v0.4.0 (2014-07-27)

- [#9] Allowing list of repositories to reference configurable.

## v0.3.6 (2014-04-09)

- [COOK-4509] add RHEL7 support to yum-epel cookbook

## v0.3.4 (2014-02-19)

COOK-4353 - Fixing typo in readme

## v0.3.2 (2014-02-13)

Updating README to explain the 'managed' parameter

## v0.3.0 (2014-02-12)

[COOK-4292] - Do not manage secondary repos by default

## v0.2.0

Adding Amazon Linux support

## v0.1.6

Fixing up attribute values for EL6

## v0.1.4

Adding CHANGELOG.md

## v0.1.0

initial release
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/yum-epel/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-1o1b8h4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/yum-epel/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000032ab888
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000032ab950>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/noop.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004683248
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004683298>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider",
   "support",
   "yum_repo.erb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# This file was generated by Chef
# Do NOT modify this file by hand.

[<%= @config.repositoryid %>]
name=<%= @config.description %>
<% if @config.baseurl %>
baseurl=<%= @config.baseurl %>
<% end %>
<% if @config.cost %>
cost=<%= @config.cost %>
<% end %>
<% if @config.enabled %>
enabled=1
<% else %>
enabled=0
<% end %>
<% if @config.enablegroups %>
enablegroups=1
<% end %>
<% if @config.exclude %>
exclude=<%= @config.exclude %>
<% end %>
<% if @config.failovermethod %>
failovermethod=<%= @config.failovermethod %>
<% end %>
<% if @config.fastestmirror_enabled %>
fastestmirror_enabled=<%= @config.fastestmirror_enabled %>
<% end %>
<% if @config.gpgcheck %>
gpgcheck=1
<% else %>
gpgcheck=0
<% end %>
<% if @config.gpgkey %>
gpgkey=<%= case @config.gpgkey
     when Array
       @config.gpgkey.join("\n       ")
     else
       @config.gpgkey
     end %>
<% end -%>
<% if @config.http_caching %>
http_caching=<%= @config.http_caching %>
<% end %>
<% if @config.include_config %>
include=<%= @config.include_config %>
<% end %>
<% if @config.includepkgs %>
includepkgs=<%= @config.includepkgs %>
<% end %>
<% if @config.keepalive %>
keepalive=1
<% end %>
<% if @config.metadata_expire %>
metadata_expire=<%= @config.metadata_expire %>
<% end %>
<% if @config.mirrorlist %>
mirrorlist=<%= @config.mirrorlist %>
<% end %>
<% if @config.mirror_expire %>
mirror_expire=<%= @config.mirror_expire %>
<% end %>
<% if @config.mirrorlist_expire %>
mirrorlist_expire=<%= @config.mirrorlist_expire %>
<% end %>
<% if @config.priority %>
priority=<%= @config.priority %>
<% end %>
<% if @config.proxy %>
proxy=<%= @config.proxy %>
<% end %>
<% if @config.proxy_username %>
proxy_username=<%= @config.proxy_username %>
<% end %>
<% if @config.proxy_password %>
proxy_password=<%= @config.proxy_password %>
<% end %>
<% if @config.username %>
username=<%= @config.username %>
<% end %>
<% if @config.password %>
password=<%= @config.password %>
<% end %>
<% if @config.repo_gpgcheck %>
repo_gpgcheck=1
<% end %>
<% if @config.max_retries %>
retries=<%= @config.max_retries %>
<% end %>
<% if @config.report_instanceid %>
report_instanceid=<%= @config.report_instanceid %>
<% end %>
<% if @config.skip_if_unavailable %>
skip_if_unavailable=1
<% end %>
<% if @config.sslcacert %>
sslcacert=<%= @config.sslcacert %>
<% end %>
<% if @config.sslclientcert %>
sslclientcert=<%= @config.sslclientcert %>
<% end %>
<% if @config.sslclientkey %>
sslclientkey=<%= @config.sslclientkey %>
<% end %>
<% unless @config.sslverify.nil? %>
sslverify=<%= ( @config.sslverify ) ? 'true' : 'false' %>
<% end %>
<% if @config.timeout %>
timeout=<%= @config.timeout %>
<% end %>
<% if @config.options -%>
<%   @config.options.each do |key, value| -%>
<%= key %>=<%=
       case value
       when Array
         value.join("\n       ")
       when TrueClass
         '1'
       when FalseClass
         '0'
       else
         value
       end %>
<%   end -%>
<% end -%>
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb to tempfile /tmp/chef-rest20170405-7856-ahsgns
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/yum_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class YumRepository < (defined?(::Chef::Resource::YumRepository) ? ::Chef::Resource::YumRepository : Chef::Resource)
      resource_name :yum_repository
      provides :yum_repository

      # http://linux.die.net/man/5/yum.conf
      property :baseurl, String, regex: /.*/
      property :cost, String, regex: /^\d+$/
      property :clean_headers, [TrueClass, FalseClass], default: false # deprecated
      property :clean_metadata, [TrueClass, FalseClass], default: true
      property :description, String, regex: /.*/, default: "Yum Repository"
      property :enabled, [TrueClass, FalseClass], default: true
      property :enablegroups, [TrueClass, FalseClass]
      property :exclude, String, regex: /.*/
      property :failovermethod, String, equal_to: %w{priority roundrobin}
      property :fastestmirror_enabled, [TrueClass, FalseClass]
      property :gpgcheck, [TrueClass, FalseClass], default: true
      property :gpgkey, [String, Array], regex: /.*/
      property :http_caching, String, equal_to: %w{packages all none}
      property :include_config, String, regex: /.*/
      property :includepkgs, String, regex: /.*/
      property :keepalive, [TrueClass, FalseClass]
      property :make_cache, [TrueClass, FalseClass], default: true
      property :max_retries, [String, Integer]
      property :metadata_expire, String, regex: [/^\d+$/, /^\d+[mhd]$/, /never/]
      property :mirrorexpire, String, regex: /.*/
      property :mirrorlist, String, regex: /.*/
      property :mirror_expire, String, regex: [/^\d+$/, /^\d+[mhd]$/]
      property :mirrorlist_expire, String, regex: [/^\d+$/, /^\d+[mhd]$/]
      property :mode, default: "0644"
      property :priority, String, regex: /^(\d?[0-9]|[0-9][0-9])$/
      property :proxy, String, regex: /.*/
      property :proxy_username, String, regex: /.*/
      property :proxy_password, String, regex: /.*/
      property :username, String, regex: /.*/
      property :password, String, regex: /.*/
      property :repo_gpgcheck, [TrueClass, FalseClass]
      property :report_instanceid, [TrueClass, FalseClass]
      property :repositoryid, String, regex: /.*/, name_property: true
      property :sensitive, [TrueClass, FalseClass], default: false
      property :skip_if_unavailable, [TrueClass, FalseClass]
      property :source, String, regex: /.*/
      property :sslcacert, String, regex: /.*/
      property :sslclientcert, String, regex: /.*/
      property :sslclientkey, String, regex: /.*/
      property :sslverify, [TrueClass, FalseClass]
      property :timeout, String, regex: /^\d+$/
      property :options, Hash

      default_action :create
      allowed_actions :create, :remove, :makecache, :add, :delete

      # provide compatibility with the yum cookbook < 3.0 properties
      alias_method :url, :baseurl
      alias_method :keyurl, :gpgkey
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support/yum_repo.erb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/support
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/apt_update'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class AptUpdate < (defined?(::Chef::Resource::AptUpdate) ? ::Chef::Resource::AptUpdate : Chef::Resource)
      resource_name :apt_update
      provides :apt_update, os: "linux"

      property :frequency, Integer, default: 86_400

      default_action :periodic
      allowed_actions :update, :periodic
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb to tempfile /tmp/chef-rest20170405-7856-132jjpp
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb to tempfile /tmp/chef-rest20170405-7856-868s7v
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/yum_repository.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_update.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/resource/action_class"
require "chef_compat/copied_from_chef/chef/provider"
require "chef_compat/copied_from_chef/chef/mixin/properties"
require "chef_compat/copied_from_chef/chef/dsl/universal"
class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    include Chef::Mixin::Properties
    property :name, String, coerce: proc { |v| v.is_a?(Array) ? v.join(", ") : v.to_s }, desired_state: false
    def initialize(name, run_context = nil)
super if defined?(::Chef::Resource)
      name(name) unless name.nil?
      @run_context = run_context
      @noop = nil
      @before = nil
      @params = Hash.new
      @provider = nil
      @allowed_actions = self.class.allowed_actions.to_a
      @action = self.class.default_action
      @updated = false
      @updated_by_last_action = false
      @supports = {}
      @ignore_failure = false
      @retries = 0
      @retry_delay = 2
      @not_if = []
      @only_if = []
      @source_line = nil
      # We would like to raise an error when the user gives us a guard
      # interpreter and a ruby_block to the guard. In order to achieve this
      # we need to understand when the user overrides the default guard
      # interpreter. Therefore we store the default separately in a different
      # attribute.
      @guard_interpreter = nil
      @default_guard_interpreter = :default
      @elapsed_time = 0
      @sensitive = false
    end
    def action(arg = nil)
      if arg
        arg = Array(arg).map(&:to_sym)
        arg.each do |action|
          validate(
            { action: action },
            { action: { kind_of: Symbol, equal_to: allowed_actions } }
          )
        end
        @action = arg
      else
        @action
      end
    end
    alias_method :action=, :action
    class UnresolvedSubscribes < (defined?(::Chef::Resource::UnresolvedSubscribes) ? ::Chef::Resource::UnresolvedSubscribes : self)
      alias_method :to_s, :name
      alias_method :declared_key, :name
    end
    def state_for_resource_reporter
      state = {}
      state_properties = self.class.state_properties
      state_properties.each do |property|
        if property.identity? || property.is_set?(self)
          state[property.name] = property.sensitive? ? "*sensitive value suppressed*" : send(property.name)
        end
      end
      state
    end
    alias_method :state, :state_for_resource_reporter
    def identity
      result = {}
      identity_properties = self.class.identity_properties
      identity_properties.each do |property|
        result[property.name] = send(property.name)
      end
      return result.values.first if identity_properties.size == 1
      result
    end
    attr_reader :resource_initializing
    def resource_initializing=(value)
      if value
        @resource_initializing = true
      else
        remove_instance_variable(:@resource_initializing)
      end
    end
    def to_hash
      # Grab all current state, then any other ivars (backcompat)
      result = {}
      self.class.state_properties.each do |p|
        result[p.name] = p.get(self)
      end
      safe_ivars = instance_variables.map { |ivar| ivar.to_sym } - FORBIDDEN_IVARS
      safe_ivars.each do |iv|
        key = iv.to_s.sub(/^@/, "").to_sym
        next if result.has_key?(key)
        result[key] = instance_variable_get(iv)
      end
      result
    end
    def self.identity_property(name = nil)
      result = identity_properties(*Array(name))
      if result.size > 1
        raise Chef::Exceptions::MultipleIdentityError, "identity_property cannot be called on an object with more than one identity property (#{result.map { |r| r.name }.join(", ")})."
      end
      result.first
    end
    attr_accessor :allowed_actions
    def allowed_actions(value = NOT_PASSED)
      if value != NOT_PASSED
        self.allowed_actions = value
      end
      @allowed_actions
    end
    def resource_name
      @resource_name || self.class.resource_name
    end
    def self.use_automatic_resource_name
      automatic_name = convert_to_snake_case(self.name.split("::")[-1])
      resource_name automatic_name
    end
    def self.allowed_actions(*actions)
      @allowed_actions ||=
        if superclass.respond_to?(:allowed_actions)
          superclass.allowed_actions.dup
        else
          [ :nothing ]
        end
      @allowed_actions |= actions.flatten
    end
    def self.allowed_actions=(value)
      @allowed_actions = value.uniq
    end
    def self.default_action(action_name = NOT_PASSED)
      unless action_name.equal?(NOT_PASSED)
        @default_action = Array(action_name).map(&:to_sym)
        self.allowed_actions |= @default_action
      end

      if @default_action
        @default_action
      elsif superclass.respond_to?(:default_action)
        superclass.default_action
      else
        [:nothing]
      end
    end
    def self.default_action=(action_name)
      default_action action_name
    end
    def self.action(action, &recipe_block)
      action = action.to_sym
      declare_action_class
      action_class.action(action, &recipe_block)
      self.allowed_actions += [ action ]
      default_action action if Array(default_action) == [:nothing]
    end
    def self.load_current_value(&load_block)
      define_method(:load_current_value!, &load_block)
    end
    def current_value_does_not_exist!
      raise Chef::Exceptions::CurrentValueDoesNotExist
    end
    def self.action_class(&block)
      return @action_class if @action_class && !block
      # If the superclass needed one, then we need one as well.
      if block || (superclass.respond_to?(:action_class) && superclass.action_class)
        @action_class = declare_action_class(&block)
      end
      @action_class
    end
    def self.declare_action_class(&block)
      @action_class ||= begin
                          if superclass.respond_to?(:action_class)
                            base_provider = superclass.action_class
                          end
                          base_provider ||= Chef::Provider

                          resource_class = self
                          Class.new(base_provider) do
                            include ActionClass
                            self.resource_class = resource_class
                          end
                        end
      @action_class.class_eval(&block) if block
      @action_class
    end
    FORBIDDEN_IVARS = [:@run_context, :@not_if, :@only_if, :@enclosing_provider]
    HIDDEN_IVARS = [:@allowed_actions, :@resource_name, :@source_line, :@run_context, :@name, :@not_if, :@only_if, :@elapsed_time, :@enclosing_provider]
    class << self
    end
    @@sorted_descendants = nil
    module DeprecatedLWRPClass
      CopiedFromChef.extend_chef_module(::Chef::Resource::DeprecatedLWRPClass, self) if defined?(::Chef::Resource::DeprecatedLWRPClass)
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb to tempfile /tmp/chef-rest20170405-7856-10jyu2y
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000030ea558
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000030ea5a8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "log.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004513520
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004513570>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "action_class.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000450bc80
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000450bcf8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "apt_repository.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider/yum_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"
require "chef_compat/copied_from_chef/chef/dsl/declare_resource"
require "chef_compat/copied_from_chef/chef/provider/noop"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    class YumRepository < (defined?(::Chef::Provider::YumRepository) ? ::Chef::Provider::YumRepository : Chef::Provider)
      use_inline_resources

      extend Chef::Mixin::Which

      provides :yum_repository do
        which "yum"
      end

      def whyrun_supported?; true; end

      def load_current_resource; end

      action :create do
        declare_resource(:template, "/etc/yum.repos.d/#{new_resource.repositoryid}.repo") do
          if template_available?(new_resource.source)
            source new_resource.source
          else
            source ::File.expand_path("../support/yum_repo.erb", __FILE__)
            local true
          end
          sensitive new_resource.sensitive
          variables(config: new_resource)
          mode new_resource.mode
          if new_resource.make_cache
            notifies :run, "execute[yum clean metadata #{new_resource.repositoryid}]", :immediately if new_resource.clean_metadata || new_resource.clean_headers
            notifies :run, "execute[yum-makecache-#{new_resource.repositoryid}]", :immediately
            notifies :create, "ruby_block[yum-cache-reload-#{new_resource.repositoryid}]", :immediately
          end
        end

        declare_resource(:execute, "yum clean metadata #{new_resource.repositoryid}") do
          command "yum clean metadata --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          action :nothing
        end

        # get the metadata for this repo only
        declare_resource(:execute, "yum-makecache-#{new_resource.repositoryid}") do
          command "yum -q -y makecache --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          action :nothing
          only_if { new_resource.enabled }
        end

        # reload internal Chef yum cache
        declare_resource(:ruby_block, "yum-cache-reload-#{new_resource.repositoryid}") do
          block { Chef::Provider::Package::Yum::YumCache.instance.reload }
          action :nothing
        end
      end

      action :delete do
        declare_resource(:file, "/etc/yum.repos.d/#{new_resource.repositoryid}.repo") do
          action :delete
          notifies :run, "execute[yum clean all #{new_resource.repositoryid}]", :immediately
          notifies :create, "ruby_block[yum-cache-reload-#{new_resource.repositoryid}]", :immediately
        end

        declare_resource(:execute, "yum clean all #{new_resource.repositoryid}") do
          command "yum clean all --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          only_if "yum repolist | grep -P '^#{new_resource.repositoryid}([ \t]|$)'"
          action :nothing
        end

        declare_resource(:ruby_block, "yum-cache-reload-#{new_resource.repositoryid}") do
          block { Chef::Provider::Package::Yum::YumCache.instance.reload }
          action :nothing
        end
      end

      action :makecache do
        declare_resource(:execute, "yum-makecache-#{new_resource.repositoryid}") do
          command "yum -q -y makecache --disablerepo=* --enablerepo=#{new_resource.repositoryid}"
          action :run
          only_if { new_resource.enabled }
        end

        declare_resource(:ruby_block, "yum-cache-reload-#{new_resource.repositoryid}") do
          block { Chef::Provider::Package::Yum::YumCache.instance.reload }
          action :run
        end
      end

      alias_method :action_add, :action_create
      alias_method :action_remove, :action_delete

      def template_available?(path)
        !path.nil? && run_context.has_template_in_cookbook?(new_resource.cookbook_name, path)
      end

    end
  end
end

Chef::Provider::Noop.provides :yum_repository
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb to tempfile /tmp/chef-rest20170405-7856-13rlacl
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider/yum_repository.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/log'

# for now we have to patch this in everything
class Chef
  class Log
    def self.caller_location
      # Pick the first caller that is *not* part of the Chef gem, that's the
      # thing the user wrote.
      compat_resource_path = File.expand_path("../../../../..", __FILE__)
      chef_gem_path = Gem.loaded_specs['chef'].full_gem_path
      caller(0..20).find { |c| !c.start_with?(compat_resource_path) && !c.start_with?(chef_gem_path) }
    end
  end
end

if Gem::Requirement.new('< 12.13.37').satisfied_by?(Gem::Version.new(Chef::VERSION))

  # FIXME: why does this not match the implementation in Chef itself?
  class Chef
    class Log
      module ChefCompatDeprecation
        def deprecation(message, location=nil)
          Chef.log_deprecation(message, location)
        end
      end
      extend ChefCompatDeprecation
    end
  end

end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb to tempfile /tmp/chef-rest20170405-7856-ext7r8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/log.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002e3df30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002e3e020>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "node.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/action_class'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: John Keiser (<jkeiser@chef.io)
# Copyright:: Copyright 2015-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/dsl/recipe"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    module ActionClass
      CopiedFromChef.extend_chef_module(::Chef::Resource::ActionClass, self) if defined?(::Chef::Resource::ActionClass)
      include Chef::DSL::Recipe

      def to_s
        "#{new_resource || "<no resource>"} action #{action ? action.inspect : "<no action>"}"
      end

      def whyrun_supported?
        true
      end

      #
      # If load_current_value! is defined on the resource, use that.
      #
      def load_current_resource
        if new_resource.respond_to?(:load_current_value!)
          # dup the resource and then reset desired-state properties.
          current_resource = new_resource.dup

          # We clear desired state in the copy, because it is supposed to be actual state.
          # We keep identity properties and non-desired-state, which are assumed to be
          # "control" values like `recurse: true`
          current_resource.class.properties.each do |name, property|
            if property.desired_state? && !property.identity? && !property.name_property?
              property.reset(current_resource)
            end
          end

          # Call the actual load_current_value! method. If it raises
          # CurrentValueDoesNotExist, set current_resource to `nil`.
          begin
            # If the user specifies load_current_value do |desired_resource|, we
            # pass in the desired resource as well as the current one.
            if current_resource.method(:load_current_value!).arity > 0
              current_resource.load_current_value!(new_resource)
            else
              current_resource.load_current_value!
            end
          rescue Chef::Exceptions::CurrentValueDoesNotExist
            current_resource = nil
          end
        end

        @current_resource = current_resource
      end

      def self.included(other)
        other.extend(ClassMethods)
        other.use_inline_resources
        other.include_resource_dsl true
      end

      module ClassMethods
        CopiedFromChef.extend_chef_module(::Chef::Resource::ActionClass::ClassMethods, self) if defined?(::Chef::Resource::ActionClass::ClassMethods)
        #
        # The Chef::Resource class this ActionClass was declared against.
        #
        # @return [Class] The Chef::Resource class this ActionClass was declared against.
        #
        attr_accessor :resource_class

        def to_s
          "#{resource_class} action provider"
        end

        def inspect
          to_s
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031f79f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031f7a90>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource_builder.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb to tempfile /tmp/chef-rest20170405-7856-17ftilu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/action_class.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/apt_repository'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Thom May (<thom@chef.io>)
# Copyright:: Copyright (c) 2016 Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class AptRepository < (defined?(::Chef::Resource::AptRepository) ? ::Chef::Resource::AptRepository : Chef::Resource)
      resource_name :apt_repository
      provides :apt_repository

      property :repo_name, String, name_property: true
      property :uri, String
      property :distribution, [ String, nil, false ], default: lazy { node["lsb"]["codename"] }, nillable: true, coerce: proc { |x| x ? x : nil }
      property :components, Array, default: []
      property :arch, [String, nil, false], default: nil, nillable: true, coerce: proc { |x| x ? x : nil }
      property :trusted, [TrueClass, FalseClass], default: false
      # whether or not to add the repository as a source repo, too
      property :deb_src, [TrueClass, FalseClass], default: false
      property :keyserver, [String, nil, false], default: "keyserver.ubuntu.com", nillable: true, coerce: proc { |x| x ? x : nil }
      property :key, [String, nil, false], default: nil, nillable: true, coerce: proc { |x| x ? x : nil }
      property :key_proxy, [String, nil, false], default: nil, nillable: true, coerce: proc { |x| x ? x : nil }

      property :cookbook, [String, nil, false], default: nil, desired_state: false, nillable: true, coerce: proc { |x| x ? x : nil }
      property :cache_rebuild, [TrueClass, FalseClass], default: true, desired_state: false
      property :sensitive, [TrueClass, FalseClass], default: false, desired_state: false

      default_action :add
      allowed_actions :add, :remove
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb to tempfile /tmp/chef-rest20170405-7856-89vwm2
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003197078
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003197348>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
module ChefCompat
  module CopiedFromChef
    def self.extend_chef_module(chef_module, target)
      target.instance_eval do
        include chef_module
        @chef_module = chef_module
        def self.method_missing(name, *args, &block)
          @chef_module.send(name, *args, &block)
        end
        def self.const_missing(name)
          @chef_module.const_get(name)
        end
      end
    end

    # This patch to CopiedFromChef's ActionClass is necessary for the include to work
    require 'chef/resource'
    class Chef < ::Chef
      class Resource < ::Chef::Resource
        module ActionClass
          def self.use_inline_resources
          end
          def self.include_resource_dsl(include_resource_dsl)
          end
        end
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb to tempfile /tmp/chef-rest20170405-7856-qnv2sn
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/apt_repository.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002ee4150
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002ee41f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "mixin",
   "params_validate.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  class Node
    unless method_defined?(:set_cookbook_attribute)
      def set_cookbook_attribute
        # this implementation deliberately left blank - we don't need to do anything we just need to not fail
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000034460a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003446170>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "resource",
   "systemd_unit.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource/systemd_unit'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Nathan Williams (<nath.e.will@gmail.com>)
# Copyright:: Copyright 2016, Nathan Williams
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef_compat/copied_from_chef/chef/resource"

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Resource < (defined?(::Chef::Resource) ? ::Chef::Resource : Object)
    class SystemdUnit < (defined?(::Chef::Resource::SystemdUnit) ? ::Chef::Resource::SystemdUnit : Chef::Resource)
      resource_name :systemd_unit

      default_action :nothing
      allowed_actions :create, :delete,
                      :enable, :disable,
                      :mask, :unmask,
                      :start, :stop,
                      :restart, :reload,
                      :try_restart, :reload_or_restart,
                      :reload_or_try_restart

      property :enabled, [TrueClass, FalseClass]
      property :active, [TrueClass, FalseClass]
      property :masked, [TrueClass, FalseClass]
      property :static, [TrueClass, FalseClass]
      property :user, String, desired_state: false
      property :content, [String, Hash]
      property :triggers_reload, [TrueClass, FalseClass],
                                 default: true, desired_state: false

      def to_ini
        case content
        when Hash
          IniParse.gen do |doc|
            content.each_pair do |sect, opts|
              doc.section(sect) do |section|
                opts.each_pair do |opt, val|
                  section.option(opt, val)
                end
              end
            end
          end.to_s
        else
          content.to_s
        end
      end
    end
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb to tempfile /tmp/chef-rest20170405-7856-jd1qk3
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource/systemd_unit.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb to tempfile /tmp/chef-rest20170405-7856-fy7y8z
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/node.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031281a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003128448>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "exceptions.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000028a1a18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000028a1b08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "provider.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/provider'
require 'chef/provider/lwrp_base'

class Chef::Provider
  if !defined?(InlineResources)
    InlineResources = Chef::Provider::LWRPBase::InlineResources
  end
  module InlineResources
    require 'chef/dsl/recipe'
    require 'chef/dsl/platform_introspection'
    require 'chef/dsl/data_query'
    require 'chef/dsl/include_recipe'
    include Chef::DSL::Recipe
    include Chef::DSL::PlatformIntrospection
    include Chef::DSL::DataQuery
    include Chef::DSL::IncludeRecipe

    unless Chef::Provider::InlineResources::ClassMethods.instance_method(:action).source_location[0] =~ /chefspec/
      # Don't override action if chefspec is doing its thing
      module ::ChefCompat
        module Monkeypatches
          module InlineResources
            module ClassMethods
              def action(name, &block)
                super(name) { send("compile_action_#{name}") }
                # We put the action in its own method so that super() works.
                define_method("compile_action_#{name}", &block)
              end
            end
          end
        end
      end
      module ClassMethods
        prepend ChefCompat::Monkeypatches::InlineResources::ClassMethods
      end
    end
  end
end


class Chef
  class Provider
    class LWRPBase < Provider
      if defined?(InlineResources)
        module InlineResources
          # since we upgrade the Chef::Runner and Chef::RunContext globally to >= 12.14 style classes, we need to also
          # fix the use_inline_resources LWRPBase wrapper that creates a sub-resource collection with the ugpraded code
          # from the Chef::Provider subclasses that do similar things in post-12.5 chef.
          def recipe_eval_with_update_check(&block)
            old_run_context = run_context
            @run_context = run_context.create_child
            return_value = instance_eval(&block)
            Chef::Runner.new(run_context).converge
            return_value
          ensure
            if run_context.resource_collection.any? { |r| r.updated? }
              new_resource.updated_by_last_action(true)
            end
            @run_context = old_run_context
          end
        end
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb to tempfile /tmp/chef-rest20170405-7856-ar53gl
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/provider.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000027ea908
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000027ea958>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "recipe.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/resource_builder'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
#
# Author:: Lamont Granquist (<lamont@chef.io>)
# Copyright:: Copyright 2015-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# NOTE: this was extracted from the Recipe DSL mixin, relevant specs are in spec/unit/recipe_spec.rb

class Chef < (defined?(::Chef) ? ::Chef : Object)
  class ResourceBuilder < (defined?(::Chef::ResourceBuilder) ? ::Chef::ResourceBuilder : Object)
    attr_reader :type
    attr_reader :name
    attr_reader :created_at
    attr_reader :params
    attr_reader :run_context
    attr_reader :cookbook_name
    attr_reader :recipe_name
    attr_reader :enclosing_provider
    attr_reader :resource

    # FIXME (ruby-2.1 syntax): most of these are mandatory
    def initialize(type: nil, name: nil, created_at: nil, params: nil, run_context: nil, cookbook_name: nil, recipe_name: nil, enclosing_provider: nil)
super if defined?(::Chef::ResourceBuilder)
      @type               = type
      @name               = name
      @created_at         = created_at
      @params             = params
      @run_context        = run_context
      @cookbook_name      = cookbook_name
      @recipe_name        = recipe_name
      @enclosing_provider = enclosing_provider
    end

    def build(&block)
      raise ArgumentError, "You must supply a name when declaring a #{type} resource" if name.nil?

      @resource = resource_class.new(name, run_context)
      if resource.resource_name.nil?
        raise Chef::Exceptions::InvalidResourceSpecification, "#{resource}.resource_name is `nil`!  Did you forget to put `provides :blah` or `resource_name :blah` in your resource class?"
      end
      resource.source_line = created_at
      resource.declared_type = type

      # If we have a resource like this one, we want to steal its state
      # This behavior is very counter-intuitive and should be removed.
      # See CHEF-3694, https://tickets.opscode.com/browse/CHEF-3694
      # Moved to this location to resolve CHEF-5052, https://tickets.opscode.com/browse/CHEF-5052
      if prior_resource
        resource.load_from(prior_resource)
      end

      resource.cookbook_name = cookbook_name
      resource.recipe_name = recipe_name
      # Determine whether this resource is being created in the context of an enclosing Provider
      resource.enclosing_provider = enclosing_provider

      # XXX: this is required for definition params inside of the scope of a
      # subresource to work correctly.
      resource.params = params

      # Evaluate resource attribute DSL
      if block_given?
        resource.resource_initializing = true
        begin
          resource.instance_eval(&block)
        ensure
          resource.resource_initializing = false
        end
      end

      # emit a cloned resource warning if it is warranted
      if prior_resource
        if is_trivial_resource?(prior_resource) && identicalish_resources?(prior_resource, resource)
          emit_harmless_cloning_debug
        else
          emit_cloned_resource_warning
        end
      end

      # Run optional resource hook
      resource.after_created

      resource
    end

    private

    def resource_class
      # Checks the new platform => short_name => resource mapping initially
      # then fall back to the older approach (Chef::Resource.const_get) for
      # backward compatibility
      @resource_class ||= Chef::Resource.resource_for_node(type, run_context.node)
    end

    def is_trivial_resource?(resource)
      trivial_resource = resource_class.new(name, run_context)
      # force un-lazy the name property on the created trivial resource
      name_property = resource_class.properties.find { |sym, p| p.name_property? }
      trivial_resource.send(name_property[0]) unless name_property.nil?
      identicalish_resources?(trivial_resource, resource)
    end

    # this is an equality test specific to checking for 3694 cloning warnings
    def identicalish_resources?(first, second)
      skipped_ivars = [ :@source_line, :@cookbook_name, :@recipe_name, :@params, :@elapsed_time, :@declared_type ]
      checked_ivars = ( first.instance_variables | second.instance_variables ) - skipped_ivars
      non_matching_ivars = checked_ivars.reject do |iv|
        if iv == :@action && ( [first.instance_variable_get(iv)].flatten == [:nothing] || [second.instance_variable_get(iv)].flatten == [:nothing] )
          # :nothing action on either side of the comparison always matches
          true
        else
          first.instance_variable_get(iv) == second.instance_variable_get(iv)
        end
      end
      Chef::Log.debug("ivars which did not match with the prior resource: #{non_matching_ivars}")
      non_matching_ivars.empty?
    end

    def emit_cloned_resource_warning
      message = "Cloning resource attributes for #{resource} from prior resource (CHEF-3694)"
      message << "\nPrevious #{prior_resource}: #{prior_resource.source_line}" if prior_resource.source_line
      message << "\nCurrent  #{resource}: #{resource.source_line}" if resource.source_line
      Chef.log_deprecation(message)
    end

    def emit_harmless_cloning_debug
      Chef::Log.debug("Harmless resource cloning from #{prior_resource}:#{prior_resource.source_line} to #{resource}:#{resource.source_line}")
    end

    def prior_resource
      @prior_resource ||=
        begin
          key = "#{type}[#{name}]"
          run_context.resource_collection.lookup_local(key)
        rescue Chef::Exceptions::ResourceNotFound
          nil
        end
    end

  end
end

require "chef_compat/copied_from_chef/chef/resource"
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb to tempfile /tmp/chef-rest20170405-7856-8qcnl9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/resource_builder.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e7dfc8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e7e040>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_builder.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002551598
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002551660>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "property.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/exceptions'

class Chef
  class Exceptions
    # Used in Resource::ActionClass#load_current_resource to denote that
    # the resource doesn't actually exist (for example, the file does not exist)
    class CurrentValueDoesNotExist < RuntimeError; end unless defined?(CurrentValueDoesNotExist)
    class CannotValidateStaticallyError < RuntimeError; end unless defined?(CannotValidateStaticallyError)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb to tempfile /tmp/chef-rest20170405-7856-4dd05
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000311e150
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000311e1a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "mixin",
   "properties.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/monkeypatches'
require 'chef_compat/copied_from_chef/chef/mixin/properties'

module ChefCompat
  module Mixin
    Properties = ChefCompat::CopiedFromChef::Chef::Mixin::Properties
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb to tempfile /tmp/chef-rest20170405-7856-ptjaat
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/exceptions.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002633e48
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002633e98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "recipe_hook.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/mixin/properties.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/mixin
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004521328
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004521378>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "copied_from_chef",
   "chef",
   "provider.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if Chef::VERSION.to_f >= 12.5 && Chef::VERSION.to_f <= 12.8
  require 'chef/mixin/params_validate'
  class Chef
    module Mixin
      module ParamsValidate
        class SetOrReturnProperty < Chef::Property
          # 12.9 introduced a new optional parameter to `get()` to avoid a nil-set warning.
          # When their method gets called with 2 args, we need to ignore and call with 1.
          alias_method :_original_get2, :get
          def get(resource, *args)
            _original_get2(resource)
          end
        end
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb to tempfile /tmp/chef-rest20170405-7856-108yjzj
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin/params_validate.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/mixin
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000515cb38
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000515cb88>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_collection",
   "resource_set.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

begin
  require 'chef/provider'
rescue LoadError; end

require 'chef_compat/copied_from_chef'
class Chef
module ::ChefCompat
module CopiedFromChef
require "chef_compat/copied_from_chef/chef/dsl/core"
class Chef < (defined?(::Chef) ? ::Chef : Object)
  class Provider < (defined?(::Chef::Provider) ? ::Chef::Provider : Object)
    include Chef::DSL::Core
    attr_accessor :action
    def initialize(new_resource, run_context)
super if defined?(::Chef::Provider)
      @new_resource = new_resource
      @action = action
      @current_resource = nil
      @run_context = run_context
      @converge_actions = nil

      @recipe_name = nil
      @cookbook_name = nil
      self.class.include_resource_dsl_module(new_resource)
    end
    def converge_if_changed(*properties, &converge_block)
      if !converge_block
        raise ArgumentError, "converge_if_changed must be passed a block!"
      end

      properties = new_resource.class.state_properties.map { |p| p.name } if properties.empty?
      properties = properties.map { |p| p.to_sym }
      if current_resource
        # Collect the list of modified properties
        specified_properties = properties.select { |property| new_resource.property_is_set?(property) }
        modified = specified_properties.select { |p| new_resource.send(p) != current_resource.send(p) }
        if modified.empty?
          properties_str = if sensitive
                             specified_properties.join(", ")
                           else
                             specified_properties.map { |p| "#{p}=#{new_resource.send(p).inspect}" }.join(", ")
                           end
          Chef::Log.debug("Skipping update of #{new_resource}: has not changed any of the specified properties #{properties_str}.")
          return false
        end

        # Print the pretty green text and run the block
        property_size = modified.map { |p| p.size }.max
        modified.map! do |p|
          properties_str = if sensitive
                             "(suppressed sensitive property)"
                           else
                             "#{new_resource.send(p).inspect} (was #{current_resource.send(p).inspect})"
                           end
          "  set #{p.to_s.ljust(property_size)} to #{properties_str}"
        end
        converge_by([ "update #{current_resource.identity}" ] + modified, &converge_block)

      else
        # The resource doesn't exist. Mark that we are *creating* this, and
        # write down any properties we are setting.
        property_size = properties.map { |p| p.size }.max
        created = properties.map do |property|
          default = " (default value)" unless new_resource.property_is_set?(property)
          properties_str = if sensitive
                             "(suppressed sensitive property)"
                           else
                             new_resource.send(property).inspect
                           end
          "  set #{property.to_s.ljust(property_size)} to #{properties_str}#{default}"
        end

        converge_by([ "create #{new_resource.identity}" ] + created, &converge_block)
      end
      true
    end
    def self.include_resource_dsl(include_resource_dsl)
      @include_resource_dsl = include_resource_dsl
    end
    def self.include_resource_dsl_module(resource)
      if @include_resource_dsl && !defined?(@included_resource_dsl_module)
        provider_class = self
        @included_resource_dsl_module = Module.new do
          extend Forwardable
          define_singleton_method(:to_s) { "forwarder module for #{provider_class}" }
          define_singleton_method(:inspect) { to_s }
          # Add a delegator for each explicit property that will get the *current* value
          # of the property by default instead of the *actual* value.
          resource.class.properties.each do |name, property|
            class_eval(<<-EOM, __FILE__, __LINE__)
              def #{name}(*args, &block)
                # If no arguments were passed, we process "get" by defaulting
                # the value to current_resource, not new_resource. This helps
                # avoid issues where resources accidentally overwrite perfectly
                # valid stuff with default values.
                if args.empty? && !block
                  if !new_resource.property_is_set?(__method__) && current_resource
                    return current_resource.public_send(__method__)
                  end
                end
                new_resource.public_send(__method__, *args, &block)
              end
            EOM
          end
          dsl_methods =
            resource.class.public_instance_methods +
            resource.class.protected_instance_methods -
            provider_class.instance_methods -
            resource.class.properties.keys
          def_delegators(:new_resource, *dsl_methods)
        end
        include @included_resource_dsl_module
      end
    end
    def self.use_inline_resources
      extend InlineResources::ClassMethods
      include InlineResources
    end
    module InlineResources
      CopiedFromChef.extend_chef_module(::Chef::Provider::InlineResources, self) if defined?(::Chef::Provider::InlineResources)
      def compile_and_converge_action(&block)
        old_run_context = run_context
        @run_context = run_context.create_child
        return_value = instance_eval(&block)
        Chef::Runner.new(run_context).converge
        return_value
      ensure
        if run_context.resource_collection.any? { |r| r.updated? }
          new_resource.updated_by_last_action(true)
        end
        @run_context = old_run_context
      end
      module ClassMethods
        CopiedFromChef.extend_chef_module(::Chef::Provider::InlineResources::ClassMethods, self) if defined?(::Chef::Provider::InlineResources::ClassMethods)
        def action(name, &block)
          # We need the block directly in a method so that `super` works
          define_method("compile_action_#{name}", &block)
          # We try hard to use `def` because define_method doesn't show the method name in the stack.
          begin
            class_eval <<-EOM
              def action_#{name}
                compile_and_converge_action { compile_action_#{name} }
              end
            EOM
          rescue SyntaxError
            define_method("action_#{name}") { send("compile_action_#{name}") }
          end
        end
      end
    end
    protected
  end
end
end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb to tempfile /tmp/chef-rest20170405-7856-k8pqy1
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/copied_from_chef/chef/provider.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000051eb888
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000051eb8d8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "run_context.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

if Gem::Requirement.new('< 12.16.42').satisfied_by?(Gem::Version.new(Chef::VERSION))
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Author:: Tim Hinderliter (<tim@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require "chef/resource_collection"
require "chef/cookbook_version"
require "chef/node"
require "chef/role"
require "chef/log"
require "chef/recipe"
require "chef/run_context/cookbook_compiler"
require "chef/event_dispatch/events_output_stream"
require "forwardable"

class Chef

  # == Chef::RunContext
  # Value object that loads and tracks the context of a Chef run
  class RunContext
    #
    # Global state
    #

    #
    # The node for this run
    #
    # @return [Chef::Node]
    #
    attr_reader :node

    #
    # The set of cookbooks involved in this run
    #
    # @return [Chef::CookbookCollection]
    #
    attr_reader :cookbook_collection

    #
    # Resource Definitions for this run. Populated when the files in
    # +definitions/+ are evaluated (this is triggered by #load).
    #
    # @return [Array[Chef::ResourceDefinition]]
    #
    attr_reader :definitions

    #
    # Event dispatcher for this run.
    #
    # @return [Chef::EventDispatch::Dispatcher]
    #
    attr_reader :events

    #
    # Hash of factoids for a reboot request.
    #
    # @return [Hash]
    #
    attr_accessor :reboot_info

    #
    # Scoped state
    #

    #
    # The parent run context.
    #
    # @return [Chef::RunContext] The parent run context, or `nil` if this is the
    #   root context.
    #
    attr_reader :parent_run_context

    #
    # The root run context.
    #
    # @return [Chef::RunContext] The root run context.
    #
    def root_run_context
      rc = self
      rc = rc.parent_run_context until rc.parent_run_context.nil?
      rc
    end

    #
    # The collection of resources intended to be converged (and able to be
    # notified).
    #
    # @return [Chef::ResourceCollection]
    #
    # @see CookbookCompiler
    #
    attr_reader :resource_collection

    #
    # The list of control groups to execute during the audit phase
    #
    attr_reader :audits

    #
    # Notification handling
    #

    #
    # A Hash containing the before notifications triggered by resources
    # during the converge phase of the chef run.
    #
    # @return [Hash[String, Array[Chef::Resource::Notification]]] A hash from
    #   <notifying resource name> => <list of notifications it sent>
    #
    attr_reader :before_notification_collection

    #
    # A Hash containing the immediate notifications triggered by resources
    # during the converge phase of the chef run.
    #
    # @return [Hash[String, Array[Chef::Resource::Notification]]] A hash from
    #   <notifying resource name> => <list of notifications it sent>
    #
    attr_reader :immediate_notification_collection

    #
    # A Hash containing the delayed (end of run) notifications triggered by
    # resources during the converge phase of the chef run.
    #
    # @return [Hash[String, Array[Chef::Resource::Notification]]] A hash from
    #   <notifying resource name> => <list of notifications it sent>
    #
    attr_reader :delayed_notification_collection

    #
    # An Array containing the delayed (end of run) notifications triggered by
    # resources during the converge phase of the chef run.
    #
    # @return [Array[Chef::Resource::Notification]] An array of notification objects
    #
    attr_reader :delayed_actions

    # Creates a new Chef::RunContext object and populates its fields. This object gets
    # used by the Chef Server to generate a fully compiled recipe list for a node.
    #
    # @param node [Chef::Node] The node to run against.
    # @param cookbook_collection [Chef::CookbookCollection] The cookbooks
    #   involved in this run.
    # @param events [EventDispatch::Dispatcher] The event dispatcher for this
    #   run.
    #
    def initialize(node, cookbook_collection, events)
      @node = node
      @cookbook_collection = cookbook_collection
      @events = events

      node.run_context = self
      node.set_cookbook_attribute

      @definitions = Hash.new
      @loaded_recipes_hash = {}
      @loaded_attributes_hash = {}
      @reboot_info = {}
      @cookbook_compiler = nil
      @delayed_actions = []

      initialize_child_state
    end

    #
    # Triggers the compile phase of the chef run.
    #
    # @param run_list_expansion [Chef::RunList::RunListExpansion] The run list.
    # @see Chef::RunContext::CookbookCompiler
    #
    def load(run_list_expansion)
      @cookbook_compiler = CookbookCompiler.new(self, run_list_expansion, events)
      cookbook_compiler.compile
    end

    #
    # Initialize state that applies to both Chef::RunContext and Chef::ChildRunContext
    #
    def initialize_child_state
      @audits = {}
      @resource_collection = Chef::ResourceCollection.new(self)
      @before_notification_collection = Hash.new { |h, k| h[k] = [] }
      @immediate_notification_collection = Hash.new { |h, k| h[k] = [] }
      @delayed_notification_collection = Hash.new { |h, k| h[k] = [] }
      @delayed_actions = []
    end

    #
    # Adds an before notification to the +before_notification_collection+.
    #
    # @param [Chef::Resource::Notification] The notification to add.
    #
    def notifies_before(notification)
      # Note for the future, notification.notifying_resource may be an instance
      # of Chef::Resource::UnresolvedSubscribes when calling {Resource#subscribes}
      # with a string value.
      before_notification_collection[notification.notifying_resource.declared_key] << notification
    end

    #
    # Adds an immediate notification to the +immediate_notification_collection+.
    #
    # @param [Chef::Resource::Notification] The notification to add.
    #
    def notifies_immediately(notification)
      # Note for the future, notification.notifying_resource may be an instance
      # of Chef::Resource::UnresolvedSubscribes when calling {Resource#subscribes}
      # with a string value.
      immediate_notification_collection[notification.notifying_resource.declared_key] << notification
    end

    #
    # Adds a delayed notification to the +delayed_notification_collection+.
    #
    # @param [Chef::Resource::Notification] The notification to add.
    #
    def notifies_delayed(notification)
      # Note for the future, notification.notifying_resource may be an instance
      # of Chef::Resource::UnresolvedSubscribes when calling {Resource#subscribes}
      # with a string value.
      delayed_notification_collection[notification.notifying_resource.declared_key] << notification
    end

    #
    # Adds a delayed action to the +delayed_actions+.
    #
    def add_delayed_action(notification)
      if delayed_actions.any? { |existing_notification| existing_notification.duplicates?(notification) }
        Chef::Log.info( "#{notification.notifying_resource} not queuing delayed action #{notification.action} on #{notification.resource}"\
                       " (delayed), as it's already been queued")
      else
        delayed_actions << notification
      end
    end

    #
    # Get the list of before notifications sent by the given resource.
    #
    # @return [Array[Notification]]
    #
    def before_notifications(resource)
      return before_notification_collection[resource.declared_key]
    end

    #
    # Get the list of immediate notifications sent by the given resource.
    #
    # @return [Array[Notification]]
    #
    def immediate_notifications(resource)
      return immediate_notification_collection[resource.declared_key]
    end

    #
    # Get the list of delayed (end of run) notifications sent by the given
    # resource.
    #
    # @return [Array[Notification]]
    #
    def delayed_notifications(resource)
      return delayed_notification_collection[resource.declared_key]
    end

    #
    # Cookbook and recipe loading
    #

    #
    # Evaluates the recipes +recipe_names+. Used by DSL::IncludeRecipe
    #
    # @param recipe_names [Array[String]] The list of recipe names (e.g.
    #   'my_cookbook' or 'my_cookbook::my_resource').
    # @param current_cookbook The cookbook we are currently running in.
    #
    # @see DSL::IncludeRecipe#include_recipe
    #
    def include_recipe(*recipe_names, current_cookbook: nil)
      result_recipes = Array.new
      recipe_names.flatten.each do |recipe_name|
        if result = load_recipe(recipe_name, current_cookbook: current_cookbook)
          result_recipes << result
        end
      end
      result_recipes
    end

    #
    # Evaluates the recipe +recipe_name+. Used by DSL::IncludeRecipe
    #
    # TODO I am sort of confused why we have both this and include_recipe ...
    #      I don't see anything different beyond accepting and returning an
    #      array of recipes.
    #
    # @param recipe_names [Array[String]] The recipe name (e.g 'my_cookbook' or
    #   'my_cookbook::my_resource').
    # @param current_cookbook The cookbook we are currently running in.
    #
    # @return A truthy value if the load occurred; `false` if already loaded.
    #
    # @see DSL::IncludeRecipe#load_recipe
    #
    def load_recipe(recipe_name, current_cookbook: nil)
      Chef::Log.debug("Loading recipe #{recipe_name} via include_recipe")

      cookbook_name, recipe_short_name = Chef::Recipe.parse_recipe_name(recipe_name, current_cookbook: current_cookbook)

      if unreachable_cookbook?(cookbook_name) # CHEF-4367
        Chef::Log.warn(<<-ERROR_MESSAGE)
MissingCookbookDependency:
Recipe `#{recipe_name}` is not in the run_list, and cookbook '#{cookbook_name}'
is not a dependency of any cookbook in the run_list.  To load this recipe,
first add a dependency on cookbook '#{cookbook_name}' in the cookbook you're
including it from in that cookbook's metadata.
ERROR_MESSAGE
      end

      if loaded_fully_qualified_recipe?(cookbook_name, recipe_short_name)
        Chef::Log.debug("I am not loading #{recipe_name}, because I have already seen it.")
        false
      else
        loaded_recipe(cookbook_name, recipe_short_name)
        node.loaded_recipe(cookbook_name, recipe_short_name)
        cookbook = cookbook_collection[cookbook_name]
        cookbook.load_recipe(recipe_short_name, self)
      end
    end

    #
    # Load the given recipe from a filename.
    #
    # @param recipe_file [String] The recipe filename.
    #
    # @return [Chef::Recipe] The loaded recipe.
    #
    # @raise [Chef::Exceptions::RecipeNotFound] If the file does not exist.
    #
    def load_recipe_file(recipe_file)
      if !File.exist?(recipe_file)
        raise Chef::Exceptions::RecipeNotFound, "could not find recipe file #{recipe_file}"
      end

      Chef::Log.debug("Loading recipe file #{recipe_file}")
      recipe = Chef::Recipe.new("@recipe_files", recipe_file, self)
      recipe.from_file(recipe_file)
      recipe
    end

    #
    # Look up an attribute filename.
    #
    # @param cookbook_name [String] The cookbook name of the attribute file.
    # @param attr_file_name [String] The attribute file's name (not path).
    #
    # @return [String] The filename.
    #
    # @see DSL::IncludeAttribute#include_attribute
    #
    # @raise [Chef::Exceptions::CookbookNotFound] If the cookbook could not be found.
    # @raise [Chef::Exceptions::AttributeNotFound] If the attribute file could not be found.
    #
    def resolve_attribute(cookbook_name, attr_file_name)
      cookbook = cookbook_collection[cookbook_name]
      raise Chef::Exceptions::CookbookNotFound, "could not find cookbook #{cookbook_name} while loading attribute #{name}" unless cookbook

      attribute_filename = cookbook.attribute_filenames_by_short_filename[attr_file_name]
      raise Chef::Exceptions::AttributeNotFound, "could not find filename for attribute #{attr_file_name} in cookbook #{cookbook_name}" unless attribute_filename

      attribute_filename
    end

    #
    # A list of all recipes that have been loaded.
    #
    # This is stored internally as a Hash, so ordering is predictable.
    #
    # TODO is the above statement true in a 1.9+ ruby world?  Is it relevant?
    #
    # @return [Array[String]] A list of recipes in fully qualified form, e.g.
    #   the recipe "nginx" will be given as "nginx::default".
    #
    # @see #loaded_recipe? To determine if a particular recipe has been loaded.
    #
    def loaded_recipes
      loaded_recipes_hash.keys
    end

    #
    # A list of all attributes files that have been loaded.
    #
    # Stored internally using a Hash, so order is predictable.
    #
    # TODO is the above statement true in a 1.9+ ruby world?  Is it relevant?
    #
    # @return [Array[String]] A list of attribute file names in fully qualified
    #   form, e.g. the "nginx" will be given as "nginx::default".
    #
    def loaded_attributes
      loaded_attributes_hash.keys
    end

    #
    # Find out if a given recipe has been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param recipe [String] Recipe name.
    #
    # @return [Boolean] `true` if the recipe has been loaded, `false` otherwise.
    #
    def loaded_fully_qualified_recipe?(cookbook, recipe)
      loaded_recipes_hash.has_key?("#{cookbook}::#{recipe}")
    end

    #
    # Find out if a given recipe has been loaded.
    #
    # @param recipe [String] Recipe name.  "nginx" and "nginx::default" yield
    #   the same results.
    #
    # @return [Boolean] `true` if the recipe has been loaded, `false` otherwise.
    #
    def loaded_recipe?(recipe)
      cookbook, recipe_name = Chef::Recipe.parse_recipe_name(recipe)
      loaded_fully_qualified_recipe?(cookbook, recipe_name)
    end

    #
    # Mark a given recipe as having been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param recipe [String] Recipe name.
    #
    def loaded_recipe(cookbook, recipe)
      loaded_recipes_hash["#{cookbook}::#{recipe}"] = true
    end

    #
    # Find out if a given attribute file has been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param attribute_file [String] Attribute file name.
    #
    # @return [Boolean] `true` if the recipe has been loaded, `false` otherwise.
    #
    def loaded_fully_qualified_attribute?(cookbook, attribute_file)
      loaded_attributes_hash.has_key?("#{cookbook}::#{attribute_file}")
    end

    #
    # Mark a given attribute file as having been loaded.
    #
    # @param cookbook [String] Cookbook name.
    # @param attribute_file [String] Attribute file name.
    #
    def loaded_attribute(cookbook, attribute_file)
      loaded_attributes_hash["#{cookbook}::#{attribute_file}"] = true
    end

    ##
    # Cookbook File Introspection

    #
    # Find out if the cookbook has the given template.
    #
    # @param cookbook [String] Cookbook name.
    # @param template_name [String] Template name.
    #
    # @return [Boolean] `true` if the template is in the cookbook, `false`
    #   otherwise.
    # @see Chef::CookbookVersion#has_template_for_node?
    #
    def has_template_in_cookbook?(cookbook, template_name)
      cookbook = cookbook_collection[cookbook]
      cookbook.has_template_for_node?(node, template_name)
    end

    #
    # Find out if the cookbook has the given file.
    #
    # @param cookbook [String] Cookbook name.
    # @param cb_file_name [String] File name.
    #
    # @return [Boolean] `true` if the file is in the cookbook, `false`
    #   otherwise.
    # @see Chef::CookbookVersion#has_cookbook_file_for_node?
    #
    def has_cookbook_file_in_cookbook?(cookbook, cb_file_name)
      cookbook = cookbook_collection[cookbook]
      cookbook.has_cookbook_file_for_node?(node, cb_file_name)
    end

    #
    # Find out whether the given cookbook is in the cookbook dependency graph.
    #
    # @param cookbook_name [String] Cookbook name.
    #
    # @return [Boolean] `true` if the cookbook is reachable, `false` otherwise.
    #
    # @see Chef::CookbookCompiler#unreachable_cookbook?
    def unreachable_cookbook?(cookbook_name)
      cookbook_compiler.unreachable_cookbook?(cookbook_name)
    end

    #
    # Open a stream object that can be printed into and will dispatch to events
    #
    # @param name [String] The name of the stream.
    # @param options [Hash] Other options for the stream.
    #
    # @return [EventDispatch::EventsOutputStream] The created stream.
    #
    # @yield If a block is passed, it will be run and the stream will be closed
    #   afterwards.
    # @yieldparam stream [EventDispatch::EventsOutputStream] The created stream.
    #
    def open_stream(name: nil, **options)
      stream = EventDispatch::EventsOutputStream.new(events, name: name, **options)
      if block_given?
        begin
          yield stream
        ensure
          stream.close
        end
      else
        stream
      end
    end

    # there are options for how to handle multiple calls to these functions:
    # 1. first call always wins (never change reboot_info once set).
    # 2. last call always wins (happily change reboot_info whenever).
    # 3. raise an exception on the first conflict.
    # 4. disable reboot after this run if anyone ever calls :cancel.
    # 5. raise an exception on any second call.
    # 6. ?
    def request_reboot(reboot_info)
      Chef::Log.info "Changing reboot status from #{self.reboot_info.inspect} to #{reboot_info.inspect}"
      @reboot_info = reboot_info
    end

    def cancel_reboot
      Chef::Log.info "Changing reboot status from #{reboot_info.inspect} to {}"
      @reboot_info = {}
    end

    def reboot_requested?
      reboot_info.size > 0
    end

    #
    # Create a child RunContext.
    #
    def create_child
      ChildRunContext.new(self)
    end

    # @api private
    attr_writer :resource_collection

    protected

    attr_reader :cookbook_compiler
    attr_reader :loaded_attributes_hash
    attr_reader :loaded_recipes_hash

    module Deprecated
      ###
      # These need to be settable so deploy can run a resource_collection
      # independent of any cookbooks via +recipe_eval+
      def audits=(value)
        Chef.log_deprecation("Setting run_context.audits will be removed in a future Chef.  Use run_context.create_child to create a new RunContext instead.")
        @audits = value
      end

      def immediate_notification_collection=(value)
        Chef.log_deprecation("Setting run_context.immediate_notification_collection will be removed in a future Chef.  Use run_context.create_child to create a new RunContext instead.")
        @immediate_notification_collection = value
      end

      def delayed_notification_collection=(value)
        Chef.log_deprecation("Setting run_context.delayed_notification_collection will be removed in a future Chef.  Use run_context.create_child to create a new RunContext instead.")
        @delayed_notification_collection = value
      end
    end
    prepend Deprecated

    #
    # A child run context.  Delegates all root context calls to its parent.
    #
    # @api private
    #
    class ChildRunContext < RunContext
      extend Forwardable
      def_delegators :parent_run_context, *%w{
        cancel_reboot
        config
        cookbook_collection
        cookbook_compiler
        definitions
        events
        has_cookbook_file_in_cookbook?
        has_template_in_cookbook?
        load
        loaded_attribute
        loaded_attributes
        loaded_attributes_hash
        loaded_fully_qualified_attribute?
        loaded_fully_qualified_recipe?
        loaded_recipe
        loaded_recipe?
        loaded_recipes
        loaded_recipes_hash
        node
        open_stream
        reboot_info
        reboot_info=
        reboot_requested?
        request_reboot
        resolve_attribute
        unreachable_cookbook?
      }

      def initialize(parent_run_context)
        @parent_run_context = parent_run_context

        # We don't call super, because we don't bother initializing stuff we're
        # going to delegate to the parent anyway.  Just initialize things that
        # every instance needs.
        initialize_child_state
      end

      CHILD_STATE = %w{
        audits
        audits=
        create_child
        add_delayed_action
        delayed_actions
        delayed_notification_collection
        delayed_notification_collection=
        delayed_notifications
        immediate_notification_collection
        immediate_notification_collection=
        immediate_notifications
        before_notification_collection
        before_notifications
        include_recipe
        initialize_child_state
        load_recipe
        load_recipe_file
        notifies_before
        notifies_immediately
        notifies_delayed
        parent_run_context
        root_run_context
        resource_collection
        resource_collection=
      }.map { |x| x.to_sym }

      # Verify that we didn't miss any methods
      unless @__skip_method_checking # hook specifically for compat_resource
        missing_methods = superclass.instance_methods(false) - instance_methods(false) - CHILD_STATE
        if !missing_methods.empty?
          raise "ERROR: not all methods of RunContext accounted for in ChildRunContext! All methods must be marked as child methods with CHILD_STATE or delegated to the parent_run_context. Missing #{missing_methods.join(", ")}."
        end
      end
    end
  end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb to tempfile /tmp/chef-rest20170405-7856-cez5if
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/run_context.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/recipe'
require 'chef_compat/recipe'

class Chef::Recipe
  # If the cookbook depends on compat_resource, create a ChefCompat::Recipe object
  # instead of Chef::Recipe, for the extra goodies.
  def self.new(cookbook_name, recipe_name, run_context)
    if run_context &&
        cookbook_name &&
        recipe_name &&
        run_context.cookbook_collection &&
        run_context.cookbook_collection[cookbook_name] &&
        run_context.cookbook_collection[cookbook_name].metadata.dependencies.has_key?('compat_resource') &&
        self != ::ChefCompat::Recipe
      ::ChefCompat::Recipe.new(cookbook_name, recipe_name, run_context)
    else
      super
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb to tempfile /tmp/chef-rest20170405-7856-710vo
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe_hook.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000521b3a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000521b420>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_collection.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/resource_collection/resource_set"
require "chef/resource_collection/resource_list"
require "chef/resource_collection"
require "chef/exceptions"

module ChefCompat
  module Monkeypatches
    module Chef
      module ResourceCollection
        module RecursiveNotificationLookup
          #
          # Copied verbatim from Chef 12.10.24
          #
          attr_accessor :run_context

          def initialize(run_context = nil)
            super()
            @run_context = run_context
          end

          def lookup_local(key)
            resource_set.lookup(key)
          end

          def find_local(*args)
            resource_set.find(*args)
          end

          def lookup(key)
            if run_context.nil?
              lookup_local(key)
            else
              lookup_recursive(run_context, key)
            end
          end

          def find(*args)
            if run_context.nil?
              find_local(*args)
            else
              find_recursive(run_context, *args)
            end
          end

          private

          def lookup_recursive(rc, key)
            rc.resource_collection.send(:resource_set).lookup(key)
          rescue ::Chef::Exceptions::ResourceNotFound
            raise if !rc.respond_to?(:parent_run_context) || rc.parent_run_context.nil?
            lookup_recursive(rc.parent_run_context, key)
          end

          def find_recursive(rc, *args)
            rc.resource_collection.send(:resource_set).find(*args)
          rescue ::Chef::Exceptions::ResourceNotFound
            raise if !rc.respond_to?(:parent_run_context) || rc.parent_run_context.nil?
            find_recursive(rc.parent_run_context, *args)
          end
        end

        module DeleteResources
          #
          # Copied verbatim from Chef 12.10.24
          #
          def delete(key)
            resource_list.delete(key)
            resource_set.delete(key)
          end
        end
      end
    end
  end
end


class Chef::ResourceCollection
  unless method_defined?(:lookup_local)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::RecursiveNotificationLookup
  end
  unless method_defined?(:delete)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::DeleteResources
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb to tempfile /tmp/chef-rest20170405-7856-9jw39g
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Lamont Granquist (<lamont@chef.io>)
# Copyright:: Copyright 2015-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# XXX: we now have two copies of this file in the compat_resource cookbook.  I'm uncertain if this is a
# bug or a feature, and I suspect it is actually a feature.  The point of this file is that for all
# resources and cookbooks the global Chef::ResourceBuilder class must be upgraded to at least the
# 12.10.24 version.  The point of the other copy is that for compat_resource cookbooks all their
# resources should be using the lastest version that has been sync'd.  So these two files should
# diverge as times goes on.  I believe that is the correct behavior and that we want to have both
# files in this cookbook.

# NOTE: this was extracted from the Recipe DSL mixin, relevant specs are in spec/unit/recipe_spec.rb

if Gem::Requirement.new("< 12.10.24").satisfied_by?(Gem::Version.new(Chef::VERSION))
  begin
    require 'chef/resource_builder'
    # we use the LoadError this creates on early 12.x to not monkeypatch chef client versions that don't have Chef::ResourceBuilder
    # (it is lazily included and doesn't appear until compile time so we can't resolve the symbol during library loading)

    class Chef
      class ResourceBuilder
        attr_reader :type
        attr_reader :name
        attr_reader :created_at
        attr_reader :params
        attr_reader :run_context
        attr_reader :cookbook_name
        attr_reader :recipe_name
        attr_reader :enclosing_provider
        attr_reader :resource

        # FIXME (ruby-2.1 syntax): most of these are mandatory
        def initialize(type:nil, name:nil, created_at: nil, params: nil, run_context: nil, cookbook_name: nil, recipe_name: nil, enclosing_provider: nil)
          @type               = type
          @name               = name
          @created_at         = created_at
          @params             = params
          @run_context        = run_context
          @cookbook_name      = cookbook_name
          @recipe_name        = recipe_name
          @enclosing_provider = enclosing_provider
        end

        def build(&block)
          raise ArgumentError, "You must supply a name when declaring a #{type} resource" if name.nil?

          @resource = resource_class.new(name, run_context)
          if resource.resource_name.nil?
            raise Chef::Exceptions::InvalidResourceSpecification, "#{resource}.resource_name is `nil`!  Did you forget to put `provides :blah` or `resource_name :blah` in your resource class?"
          end
          resource.source_line = created_at
          resource.declared_type = type

          # If we have a resource like this one, we want to steal its state
          # This behavior is very counter-intuitive and should be removed.
          # See CHEF-3694, https://tickets.opscode.com/browse/CHEF-3694
          # Moved to this location to resolve CHEF-5052, https://tickets.opscode.com/browse/CHEF-5052
          if prior_resource
            resource.load_from(prior_resource)
          end

          resource.cookbook_name = cookbook_name
          resource.recipe_name = recipe_name
          # Determine whether this resource is being created in the context of an enclosing Provider
          resource.enclosing_provider = enclosing_provider

          # XXX: this is required for definition params inside of the scope of a
          # subresource to work correctly.
          resource.params = params

          # Evaluate resource attribute DSL
          if block_given?
            resource.resource_initializing = true
            begin
              resource.instance_eval(&block)
            ensure
              resource.resource_initializing = false
            end
          end

          # emit a cloned resource warning if it is warranted
          if prior_resource
            if is_trivial_resource?(prior_resource) && identicalish_resources?(prior_resource, resource)
              emit_harmless_cloning_debug
            else
              emit_cloned_resource_warning
            end
          end

          # Run optional resource hook
          resource.after_created

          resource
        end

        private

        def resource_class
          # Checks the new platform => short_name => resource mapping initially
          # then fall back to the older approach (Chef::Resource.const_get) for
          # backward compatibility
          @resource_class ||= Chef::Resource.resource_for_node(type, run_context.node)
        end

        def is_trivial_resource?(resource)
          identicalish_resources?(resource_class.new(name, run_context), resource)
        end

        # this is an equality test specific to checking for 3694 cloning warnings
        def identicalish_resources?(first, second)
          skipped_ivars = [ :@source_line, :@cookbook_name, :@recipe_name, :@params, :@elapsed_time, :@declared_type ]
          checked_ivars = ( first.instance_variables | second.instance_variables ) - skipped_ivars
          non_matching_ivars = checked_ivars.reject do |iv|
            if iv == :@action && ( [first.instance_variable_get(iv)].flatten == [:nothing] || [second.instance_variable_get(iv)].flatten == [:nothing] )
              # :nothing action on either side of the comparison always matches
              true
            else
              first.instance_variable_get(iv) == second.instance_variable_get(iv)
            end
          end
          Chef::Log.debug("ivars which did not match with the prior resource: #{non_matching_ivars}")
          non_matching_ivars.empty?
        end

        def emit_cloned_resource_warning
          Chef::Log.warn("Cloning resource attributes for #{resource} from prior resource (CHEF-3694)")
          Chef::Log.warn("Previous #{prior_resource}: #{prior_resource.source_line}") if prior_resource.source_line
          Chef::Log.warn("Current  #{resource}: #{resource.source_line}") if resource.source_line
        end

        def emit_harmless_cloning_debug
          Chef::Log.debug("Harmless resource cloning from #{prior_resource}:#{prior_resource.source_line} to #{resource}:#{resource.source_line}")
        end

        def prior_resource
          @prior_resource ||=
            begin
              key = "#{type}[#{name}]"
              run_context.resource_collection.lookup_local(key)
            rescue Chef::Exceptions::ResourceNotFound
              nil
            end
        end

      end
    end
  rescue LoadError
    # cool we're just on early chef 12.x, nothing to do -- we don't have to worry because there's also not parent_run_context pointer, so we don't have to
    # use lookup_local to avoid resource cloning shit out of the parent run_context.  the resource collection's lookup() method will always use lookup_local
    # over lookup_recursive.
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb to tempfile /tmp/chef-rest20170405-7856-camjym
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_builder.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# 12.9 introduced a new optional parameter to `get()` to avoid a nil-set warning.
# We need to mimick it here.
if Chef::VERSION.to_f >= 12.5 && Chef::VERSION.to_f <= 12.8
  require 'chef/property'
  class Chef
    class Property
      # 12.9 introduced a new optional parameter to `get()` to avoid a nil-set warning.
      # When their method gets called with 2 args, we need to ignore and call with 1.
      alias_method :_original_get, :get
      def get(resource, *args)
        _original_get(resource)
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000025b35b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000025b3748>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource",
   "lwrp_base.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb to tempfile /tmp/chef-rest20170405-7856-p1x7et
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/property.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001b926d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001b92728>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource_collection",
   "resource_list.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tyler Ball (<tball@chef.io>)
# Copyright:: Copyright 2014-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/resource_collection/resource_list"
require "chef/exceptions"

module ChefCompat
  module Monkeypatches
    module Chef
      module ResourceCollection
        module ResourceList
          module DeleteResource
            # Copied verbatim from Chef 12.10.4
            def delete(key)
              raise ArgumentError, "Must pass a Chef::Resource or String to delete" unless key.is_a?(String) || key.is_a?(Chef::Resource)
              key = key.to_s
              ret = @resources.reject! { |r| r.to_s == key }
              if ret.nil?
                raise ::Chef::Exceptions::ResourceNotFound, "Cannot find a resource matching #{key} (did you define it first?)"
              end
              ret
            end
          end
        end
      end
    end
  end
end

class Chef::ResourceCollection::ResourceList
  unless method_defined?(:delete)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::ResourceList::DeleteResource
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005197e18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005197e68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb to tempfile /tmp/chef-rest20170405-7856-1ajp0ks
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_list.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Tyler Ball (<tball@chef.io>)
# Copyright:: Copyright 2014-2016, Chef Software, Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/resource_collection/resource_list"
require "chef/exceptions"

module ChefCompat
  module Monkeypatches
    module Chef
      module ResourceCollection
        module ResourceSet
          module DeleteResource
            def delete(key)
              raise ArgumentError, "Must pass a Chef::Resource or String to delete" unless key.is_a?(String) || key.is_a?(Chef::Resource)
              key = key.to_s
              res = @resources_by_key.delete(key)

              if res == @resources_by_key.default
                raise Chef::Exceptions::ResourceNotFound, "Cannot find a resource matching #{key} (did you define it first?)"
              end
              res
            end
          end
        end
      end
    end
  end
end

class Chef::ResourceCollection::ResourceSet
  unless method_defined?(:delete)
    prepend ChefCompat::Monkeypatches::Chef::ResourceCollection::ResourceSet::DeleteResource
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb to tempfile /tmp/chef-rest20170405-7856-1xwivw4
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource_collection/resource_set.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/resource/lwrp_base'
require 'chef/resource/lwrp_base'

module ChefCompat
  module Monkeypatches
    #
    # NOTE: LOTS OF METAPROGRAMMING HERE. NOT FOR FAINT OF HEART.
    #

    # Add an empty module to Class so we can temporarily override it in build_from_file
    module Class
    end
    class<<::Class
      prepend(ChefCompat::Monkeypatches::Class)
    end

    module Chef
      module Resource
        module LWRPBase
          def build_from_file(cookbook_name, filename, run_context)
            # If the cookbook this LWRP is from depends on compat_resource, fix its LWRPs up real good
            if run_context.cookbook_collection[cookbook_name].metadata.dependencies.has_key?('compat_resource')
              # All cookbooks do Class.new(Chef::Resource::LWRPBase). Change Class.new
              # temporarily to translate Chef::Resource::LWRPBase to ChefCompat::Resource
              ChefCompat::Monkeypatches::Class.module_eval do
                def new(*args, &block)
                  # Trick it! Use ChefCompat::Resource instead of Chef::Resource::LWRPBase
                  if args == [ ::Chef::Resource::LWRPBase ]
                    ChefCompat::Monkeypatches::Class.module_eval do
                      remove_method(:new) if method_defined?(:new)
                    end
                    args = [ ChefCompat::Resource::LWRPBase ]
                  end
                  super(*args, &block)
                end
              end

              begin

                # Call the actual build_from_file
                super

              ensure
                class<<ChefCompat::Monkeypatches::Class
                  remove_method(:new) if method_defined?(:new)
                end
              end
            else
              # Call the actual build_from_file
              super
            end
          end
        end
        class <<::Chef::Resource::LWRPBase
          prepend(LWRPBase)
        end
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb to tempfile /tmp/chef-rest20170405-7856-teviqr
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

if Gem::Requirement.new('< 12.16.42').satisfied_by?(Gem::Version.new(Chef::VERSION))
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/dsl/recipe"
require "chef/mixin/from_file"
require "chef/mixin/deprecation"

class Chef
  # == Chef::Recipe
  # A Recipe object is the context in which Chef recipes are evaluated.
  class Recipe
    attr_accessor :cookbook_name, :recipe_name, :recipe, :params, :run_context

    include Chef::DSL::Recipe

    include Chef::Mixin::FromFile
    include Chef::Mixin::Deprecation

    # Parses a potentially fully-qualified recipe name into its
    # cookbook name and recipe short name.
    #
    # For example:
    #   "aws::elastic_ip" returns [:aws, "elastic_ip"]
    #   "aws" returns [:aws, "default"]
    #   "::elastic_ip" returns [ current_cookbook, "elastic_ip" ]
    #--
    # TODO: Duplicates functionality of RunListItem
    def self.parse_recipe_name(recipe_name, current_cookbook: nil)
      case recipe_name
      when /(.+?)::(.+)/
        [ $1.to_sym, $2 ]
      when /^::(.+)/
        raise "current_cookbook is nil, cannot resolve #{recipe_name}" if current_cookbook.nil?
        [ current_cookbook.to_sym, $1 ]
      else
        [ recipe_name.to_sym, "default" ]
      end
    end

    def initialize(cookbook_name, recipe_name, run_context)
      @cookbook_name = cookbook_name
      @recipe_name = recipe_name
      @run_context = run_context
      # TODO: 5/19/2010 cw/tim: determine whether this can be removed
      @params = Hash.new
    end

    # Used in DSL mixins
    def node
      run_context.node
    end

    # Used by the DSL to look up resources when executing in the context of a
    # recipe.
    def resources(*args)
      run_context.resource_collection.find(*args)
    end

    # This was moved to Chef::Node#tag, redirecting here for compatibility
    def tag(*tags)
      run_context.node.tag(*tags)
    end

    # Returns true if the node is tagged with *all* of the supplied +tags+.
    #
    # === Parameters
    # tags<Array>:: A list of tags
    #
    # === Returns
    # true<TrueClass>:: If all the parameters are present
    # false<FalseClass>:: If any of the parameters are missing
    def tagged?(*tags)
      tags.each do |tag|
        return false unless run_context.node.tags.include?(tag)
      end
      true
    end

    # Removes the list of tags from the node.
    #
    # === Parameters
    # tags<Array>:: A list of tags
    #
    # === Returns
    # tags<Array>:: The current list of run_context.node.tags
    def untag(*tags)
      tags.each do |tag|
        run_context.node.tags.delete(tag)
      end
    end
  end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource/lwrp_base.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb to tempfile /tmp/chef-rest20170405-7856-1lun98o
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/recipe.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000051b21a0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000051b21f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "runner.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#
# THIS IS A FILE AUTOGENERATED BY 'rake update' DO NOT EDIT!!!!
#
# NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE NOTICE
#

if Gem::Requirement.new('< 12.16.42').satisfied_by?(Gem::Version.new(Chef::VERSION))
#--
# Author:: Adam Jacob (<adam@chef.io>)
# Author:: Christopher Walters (<cw@chef.io>)
# Author:: Tim Hinderliter (<tim@chef.io>)
# Copyright:: Copyright 2008-2016, Chef Software Inc.
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require "chef/exceptions"
require "chef/mixin/params_validate"
require "chef/node"
require "chef/resource_collection"

class Chef
  # == Chef::Runner
  # This class is responsible for executing the steps in a Chef run.
  class Runner

    attr_reader :run_context

    include Chef::Mixin::ParamsValidate

    def initialize(run_context)
      @run_context = run_context
    end

    def delayed_actions
      @run_context.delayed_actions
    end

    def events
      @run_context.events
    end

    # Determine the appropriate provider for the given resource, then
    # execute it.
    def run_action(resource, action, notification_type = nil, notifying_resource = nil)
      # If there are any before notifications, why-run the resource
      # and notify anyone who needs notifying
      before_notifications = run_context.before_notifications(resource) || []
      unless before_notifications.empty?
        forced_why_run do
          Chef::Log.info("#{resource} running why-run #{action} action to support before action")
          resource.run_action(action, notification_type, notifying_resource)
        end

        if resource.updated_by_last_action?
          before_notifications.each do |notification|
            Chef::Log.info("#{resource} sending #{notification.action} action to #{notification.resource} (before)")
            run_action(notification.resource, notification.action, :before, resource)
          end
          resource.updated_by_last_action(false)
        end
      end

      # Actually run the action for realsies
      resource.run_action(action, notification_type, notifying_resource)

      # Execute any immediate and queue up any delayed notifications
      # associated with the resource, but only if it was updated *this time*
      # we ran an action on it.
      if resource.updated_by_last_action?
        run_context.immediate_notifications(resource).each do |notification|
          Chef::Log.info("#{resource} sending #{notification.action} action to #{notification.resource} (immediate)")
          run_action(notification.resource, notification.action, :immediate, resource)
        end

        run_context.delayed_notifications(resource).each do |notification|
          # send the notification to the run_context of the receiving resource
          notification.resource.run_context.add_delayed_action(notification)
        end
      end
    end

    # Iterates over the +resource_collection+ in the +run_context+ calling
    # +run_action+ for each resource in turn.
    def converge
      # Resolve all lazy/forward references in notifications
      run_context.resource_collection.each do |resource|
        resource.resolve_notification_references
      end

      # Execute each resource.
      run_context.resource_collection.execute_each_resource do |resource|
        Array(resource.action).each { |action| run_action(resource, action) }
      end

    rescue Exception => e
      Chef::Log.info "Running queued delayed notifications before re-raising exception"
      run_delayed_notifications(e)
    else
      run_delayed_notifications(nil)
      true
    end

    private

    # Run all our :delayed actions
    def run_delayed_notifications(error = nil)
      collected_failures = Exceptions::MultipleFailures.new
      collected_failures.client_run_failure(error) unless error.nil?
      delayed_actions.each do |notification|
        result = run_delayed_notification(notification)
        if result.kind_of?(Exception)
          collected_failures.notification_failure(result)
        end
      end
      collected_failures.raise!
    end

    def run_delayed_notification(notification)
      Chef::Log.info( "#{notification.notifying_resource} sending #{notification.action}"\
                      " action to #{notification.resource} (delayed)")
      # Struct of resource/action to call
      run_action(notification.resource, notification.action, :delayed)
      true
    rescue Exception => e
      e
    end

    # helper to run a block of code with why_run forced to true and then restore it correctly
    def forced_why_run
      saved = Chef::Config[:why_run]
      Chef::Config[:why_run] = true
      yield
    ensure
      Chef::Config[:why_run] = saved
    end

  end
end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb to tempfile /tmp/chef-rest20170405-7856-10l6gcr
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/runner.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000508e9b8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000508ea58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "resource.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/monkeypatches'
require 'chef_compat/copied_from_chef/chef/resource'

# We do NOT want action defined if chefspec is engaged
if Chef::Provider::InlineResources::ClassMethods.instance_method(:action).source_location[0] =~ /chefspec/
  ChefCompat::CopiedFromChef::Chef::Provider::InlineResources::ClassMethods.instance_eval do
    remove_method(:action)
  end
end

module ChefCompat
  class Resource < ChefCompat::CopiedFromChef::Chef::Resource
    def initialize(*args, &block)
      super
      # @resource_name is used in earlier Chef versions
      @resource_name = self.class.resource_name
    end
    # Things we'll need to define ourselves:
    # 1. provider
    # 2. resource_name

    def provider(*args, &block)
      super || self.class.action_class
    end
    def provider=(arg)
      provider(arg)
    end

    if !respond_to?(:resource_name)
      def self.resource_name(name=Chef::NOT_PASSED)
        # Setter
        if name != Chef::NOT_PASSED
  #        remove_canonical_dsl

          # Set the resource_name and call provides
          if name
            name = name.to_sym
            # If our class is not already providing this name, provide it.
            # Commented out: use of resource_name and provides will need to be
            # mutually exclusive in this world, generally.
            # if !Chef::ResourceResolver.includes_handler?(name, self)
              provides name#, canonical: true
            # end
            @resource_name = name
          else
            @resource_name = nil
          end
        end
        @resource_name
      end
      def self.resource_name=(name)
        resource_name(name)
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource.rb to tempfile /tmp/chef-rest20170405-7856-86s8gv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/resource.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000513a7e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000513a830>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050f14f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000050f1590>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "property.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/copied_from_chef/chef/property'

module ChefCompat
  class Property < ChefCompat::CopiedFromChef::Chef::Property
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/property.rb to tempfile /tmp/chef-rest20170405-7856-1w96vle
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/property.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004ff2860
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004ff2928>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  NOT_PASSED = Object.new if !defined?(NOT_PASSED)
  # Earlier versions of Chef didn't have this message
  module ChefCompatDeprecation
    def log_deprecation(message, location=nil)
      if !location
        # Pick the first caller that is *not* part of the Chef or ChefCompat gem,
        # that's the thing the user wrote.
        chef_compat_gem_path = File.expand_path("../../..", __FILE__)
        chef_gem_path = File.expand_path("../..",::Chef::Resource.instance_method(:initialize).source_location[0])
        caller(0..10).each do |c|
          if !c.start_with?(chef_gem_path) && !c.start_with?(chef_compat_gem_path)
            location = c
            break
          end
        end
      end

      begin
        super
        # Bleagh. `super_method` doesn't exist on older rubies and I haven't
        # figured out a way to check for its existence otherwise.
      rescue NoMethodError
        Chef::Log.warn(message)
      end
    end
  end

  class<<self
    prepend ChefCompatDeprecation
  end

end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb to tempfile /tmp/chef-rest20170405-7856-wyje8a
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004faf470
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004faf4c0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000021f5ae8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000021f5bd8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "monkeypatches",
   "chef",
   "resource.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# this is NOT an AUTOGENERATED file

require 'chef/resource'

class Chef
  class Resource

    class UnresolvedSubscribes < self
      # The full key ise given as the name in {Resource#subscribes}
      alias_method :to_s, :name
      alias_method :declared_key, :name
    end

    #
    # Force a delayed notification into this resource's run_context.
    #
    # This should most likely be paired with action :nothing
    #
    # @param arg [Array[Symbol], Symbol] A list of actions (e.g. `:create`)
    #
    def delayed_action(arg)
      arg = Array(arg).map(&:to_sym)
      arg.map do |action|
        validate(
          { action: action },
          { action: { kind_of: Symbol, equal_to: allowed_actions } }
        )
        # the resource effectively sends a delayed notification to itself
        run_context.add_delayed_action(Notification.new(self, action, self))
      end
    end

    def subscribes(action, resources, timing = :delayed)
      resources = [resources].flatten
      resources.each do |resource|
        if resource.is_a?(String)
          resource = UnresolvedSubscribes.new(resource, run_context)
        end
        if resource.run_context.nil?
          resource.run_context = run_context
        end
        resource.notifies(action, self, timing)
      end
      true
    end

    def notifies(action, resource_spec, timing = :delayed)
      # when using old-style resources(:template => "/foo.txt") style, you
      # could end up with multiple resources.
      validate_resource_spec!(resource_spec)

      resources = [ resource_spec ].flatten
      resources.each do |resource|

        case timing.to_s
        when "delayed"
          notifies_delayed(action, resource)
        when "immediate", "immediately"
          notifies_immediately(action, resource)
        when "before"
          notifies_before(action, resource)
        else
          raise ArgumentError,  "invalid timing: #{timing} for notifies(#{action}, #{resources.inspect}, #{timing}) resource #{self} "\
            "Valid timings are: :delayed, :immediate, :immediately, :before"
        end
      end

      true
    end

    #
    # Iterates over all immediate and delayed notifications, calling
    # resolve_resource_reference on each in turn, causing them to
    # resolve lazy/forward references.
    def resolve_notification_references
      run_context.before_notifications(self).each { |n|
        n.resolve_resource_reference(run_context.resource_collection)
      }
      run_context.immediate_notifications(self).each { |n|
        n.resolve_resource_reference(run_context.resource_collection)
      }
      run_context.delayed_notifications(self).each {|n|
        n.resolve_resource_reference(run_context.resource_collection)
      }
    end

    # Helper for #notifies
    def notifies_before(action, resource_spec)
      run_context.notifies_before(Notification.new(resource_spec, action, self))
    end

    # Helper for #notifies
    def notifies_immediately(action, resource_spec)
      run_context.notifies_immediately(Notification.new(resource_spec, action, self))
    end

    # Helper for #notifies
    def notifies_delayed(action, resource_spec)
      run_context.notifies_delayed(Notification.new(resource_spec, action, self))
    end

    #
    # Get the current actual value of this resource.
    #
    # This does not cache--a new value will be returned each time.
    #
    # @return A new copy of the resource, with values filled in from the actual
    #   current value.
    #
    def current_value
      provider = provider_for_action(Array(action).first)
      if provider.whyrun_mode? && !provider.whyrun_supported?
        raise "Cannot retrieve #{self.class.current_resource} in why-run mode: #{provider} does not support why-run"
      end
      provider.load_current_resource
      provider.current_resource
    end

    # These methods are necessary for new resources to initialize old ones properly
    attr_reader :resource_initializing
    def resource_initializing=(value)
      if value
        @resource_initializing = value
      else
        remove_instance_variable(:@resource_initializing)
      end
    end

    if !respond_to?(:resource_name)
      def self.resource_name(name=Chef::NOT_PASSED)
        # Setter
        if name != Chef::NOT_PASSED
  #        remove_canonical_dsl

          # Set the resource_name and call provides
          if name
            name = name.to_sym
            # If our class is not already providing this name, provide it.
            # Commented out: use of resource_name and provides will need to be
            # mutually exclusive in this world, generally.
            # if !Chef::ResourceResolver.includes_handler?(name, self)
              provides name#, canonical: true
            # end
            @resource_name = name
          else
            @resource_name = nil
          end
        end
        @resource_name
      end
      def self.resource_name=(name)
        resource_name(name)
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb to tempfile /tmp/chef-rest20170405-7856-uf20qx
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
class Chef
  class RunContext
    class ChildRunContext < RunContext
      # magic that lets us re-parse the ChildRunContext without erroring due to
      # cheffish and chef-provisioning hooks having been loaded (on old versions of
      # chef-client without the lazy hooks for those gems)
      @__skip_method_checking = true
    end
  end
end

# fix to quiet constant redefined warnings
if defined?(Chef::RunContext::ChildRunContext::CHILD_STATE)
  Chef::RunContext::ChildRunContext.send(:remove_const, :CHILD_STATE)
end

require 'chef_compat/monkeypatches/chef'
require 'chef_compat/monkeypatches/chef/exceptions'
require 'chef_compat/monkeypatches/chef/log'
require 'chef_compat/monkeypatches/chef/node'
require 'chef_compat/monkeypatches/chef/mixin/params_validate'
require 'chef_compat/monkeypatches/chef/property'
require 'chef_compat/monkeypatches/chef/provider'
require 'chef_compat/monkeypatches/chef/recipe'  # copied from chef
require 'chef_compat/monkeypatches/chef/recipe_hook'
require 'chef_compat/monkeypatches/chef/resource'
require 'chef_compat/monkeypatches/chef/resource_builder'
require 'chef_compat/monkeypatches/chef/resource/lwrp_base'
require 'chef_compat/monkeypatches/chef/resource_collection'
require 'chef_compat/monkeypatches/chef/resource_collection/resource_list'
require 'chef_compat/monkeypatches/chef/resource_collection/resource_set'
require 'chef_compat/monkeypatches/chef/run_context'  # copied from chef
require 'chef_compat/monkeypatches/chef/runner'  # copied from chef

# fix for Chef::RunContext instance that has already been created
ObjectSpace.each_object(Chef::RunContext) do |run_context|
  run_context.node.run_context = run_context
  run_context.instance_variable_set(:@loaded_recipes_hash, {})
  run_context.instance_variable_set(:@loaded_attributes_hash, {})
  run_context.initialize_child_state
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb to tempfile /tmp/chef-rest20170405-7856-3x4h6v
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/monkeypatches/chef/resource.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050275b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005027600>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "compat_resource.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f3e568
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f3e5e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004f26eb8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004f26f08>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005081880
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000050818d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "resource",
   "lwrp_base.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef_compat/resource'
require 'chef_compat/copied_from_chef/chef/resource'
require 'chef/mixin/convert_to_class_name'
require 'chef/mixin/from_file'

module ChefCompat
  class Resource < ChefCompat::CopiedFromChef::Chef::Resource
    class LWRPBase < ChefCompat::Resource
      class<<self

        include Chef::Mixin::ConvertToClassName
        include Chef::Mixin::FromFile

        alias :attribute :property

        # Adds +action_names+ to the list of valid actions for this resource.
        # Does not include superclass's action list when appending.
        def actions(*action_names)
          action_names = action_names.flatten
          if !action_names.empty? && !@allowed_actions
            self.allowed_actions = ([ :nothing ] + action_names).uniq
          else
            allowed_actions(*action_names)
          end
        end
        alias :actions= :allowed_actions=

        # @deprecated
        def valid_actions(*args)
          Chef::Log.warn("`valid_actions' is deprecated, please use allowed_actions `instead'!")
          allowed_actions(*args)
        end

        # Set the run context on the class. Used to provide access to the node
        # during class definition.
        attr_accessor :run_context

        def node
          run_context ? run_context.node : nil
        end
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/compat_resource/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb to tempfile /tmp/chef-rest20170405-7856-cj9bku
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/resource/lwrp_base.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/compat_resource/files/lib/chef_compat/resource
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/resources/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004ed1710
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/resources/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004ed1760>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "resources",
   "repo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050a52f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000050a5348>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_compat",
   "recipe.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"compat_resource","version":"12.16.3","description":"Backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards","long_description":"# compat_resource cookbook\n\n[![Build Status](https://travis-ci.org/chef-cookbooks/compat_resource.svg?branch=master)](https://travis-ci.org/chef-cookbooks/compat_resource) [![Cookbook Version](https://img.shields.io/cookbook/v/compat_resource.svg)](https://supermarket.chef.io/cookbooks/compat_resource)\n\nThis cookbook backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards. This includes [Custom Resource](https://docs.chef.io/custom_resources.html) functionality, notification improvements, as well as new resources added to core chef. It allows for the usage of these new resources in cookbooks without requiring the very latest Chef client release.\n\n## Backported functionality\n\n- [Custom Resources](https://docs.chef.io/custom_resources.html)\n- [apt_repository](https://docs.chef.io/resource_apt_repository.html)\n- [apt_update](https://docs.chef.io/resource_apt_update.html)\n- [systemd_unit](https://docs.chef.io/resource_systemd_unit.html)\n- [yum_repository](https://docs.chef.io/resource_yum_repository.html)\n- [:before notifications](https://docs.chef.io/resources.html#timers)\n\n## Requirements\n\n### Platforms\n\n- All platforms supported by Chef\n\n### Chef\n\n- Chef 12.1+\n\n### Cookbooks\n\n- none\n\n## Usage\n\nTo use this cookbook, put `depends 'compat_resource'` in the metadata.rb of your cookbook. Once this is done, you can use all the new custom resource features to define resources. It Just Works.\n\n## Custom Resources?\n\nCurious about how to use custom resources?\n\n- Docs: <https://docs.chef.io/custom_resources.html>\n- Slides: <https://docs.chef.io/decks/custom_resources.html>\n\n## License & Authors\n\n- Author:: Lamont Granquist ([lamont@chef.io](mailto:lamont@chef.io))\n- Author:: John Keiser ([jkeiser@chef.io](mailto:jkeiser@chef.io))\n\n```text\nCopyright:: 2015-2016 Chef Software, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Lamont Granquist","maintainer_email":"lamont@chef.io","license":"Apache 2.0","platforms":{},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/compat_resource","issues_url":"https://github.com/chef-cookbooks/compat_resource/issues","chef_version":">= 12.1","ohai_version":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/metadata.json to tempfile /tmp/chef-rest20170405-7856-hlf0wz
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-55ah2q
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# compat_resource cookbook

[![Build Status](https://travis-ci.org/chef-cookbooks/compat_resource.svg?branch=master)](https://travis-ci.org/chef-cookbooks/compat_resource) [![Cookbook Version](https://img.shields.io/cookbook/v/compat_resource.svg)](https://supermarket.chef.io/cookbooks/compat_resource)

This cookbook backports functionality introduced in the latest chef-client releases to any chef-client from 12.1 onwards. This includes [Custom Resource](https://docs.chef.io/custom_resources.html) functionality, notification improvements, as well as new resources added to core chef. It allows for the usage of these new resources in cookbooks without requiring the very latest Chef client release.

## Backported functionality

- [Custom Resources](https://docs.chef.io/custom_resources.html)
- [apt_repository](https://docs.chef.io/resource_apt_repository.html)
- [apt_update](https://docs.chef.io/resource_apt_update.html)
- [systemd_unit](https://docs.chef.io/resource_systemd_unit.html)
- [yum_repository](https://docs.chef.io/resource_yum_repository.html)
- [:before notifications](https://docs.chef.io/resources.html#timers)

## Requirements

### Platforms

- All platforms supported by Chef

### Chef

- Chef 12.1+

### Cookbooks

- none

## Usage

To use this cookbook, put `depends 'compat_resource'` in the metadata.rb of your cookbook. Once this is done, you can use all the new custom resource features to define resources. It Just Works.

## Custom Resources?

Curious about how to use custom resources?

- Docs: <https://docs.chef.io/custom_resources.html>
- Slides: <https://docs.chef.io/decks/custom_resources.html>

## License & Authors

- Author:: Lamont Granquist ([lamont@chef.io](mailto:lamont@chef.io))
- Author:: John Keiser ([jkeiser@chef.io](mailto:jkeiser@chef.io))

```text
Copyright:: 2015-2016 Chef Software, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/providers/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004e37200
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/providers/repo.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004e37250>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "providers",
   "repo.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/README.md to tempfile /tmp/chef-rest20170405-7856-11thfcv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Lamont Granquist](https://github.com/lamont-granquist)

# Maintainers
* [Jennifer Davis](https://github.com/sigje)
* [Tim Smith](https://github.com/tas50)
* [Thom May](https://github.com/thommay)
* [Lamont Granquist](https://github.com/lamont-granquist)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
actions :add, :remove
default_action :add

attribute :repo_name, kind_of: String, name_attribute: true
attribute :autorefresh, kind_of: [TrueClass, FalseClass]
attribute :uri, kind_of: String
attribute :key, kind_of: String, default: nil
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/resources/repo.rb to tempfile /tmp/chef-rest20170405-7856-1ogwalu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-187ty8x
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require "chef/version"

if Gem::Requirement.new(">= 12.0").satisfied_by?(Gem::Version.new(Chef::VERSION))

  require 'chef_compat/resource'
  require 'chef_compat/property'
  require 'chef_compat/mixin/properties'

  resources_dir = File.expand_path("chef_compat/copied_from_chef/chef/resource", File.dirname(__FILE__))
  providers_dir = File.expand_path("chef_compat/copied_from_chef/chef/provider", File.dirname(__FILE__))
  Dir["#{resources_dir}/*.rb"].each {|file| require file }
  Dir["#{providers_dir}/*.rb"].each {|file| require file }
else

  class Chef
    class Resource
      def self.property(args, &block)
        raise_chef_11_error
      end

      def self.resource_name(args, &block)
        raise_chef_11_error
      end

      def self.action(args, &block)
        raise_chef_11_error
      end

      def self.raise_chef_11_error
        raise "This resource is written with Chef 12.5 custom resources, and requires at least Chef 12.0 used with the compat_resource cookbook, it will not work with Chef 11.x clients, and those users must pin their cookbooks to older versions or upgrade."
      end
    end
  end

end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/compat_resource.rb to tempfile /tmp/chef-rest20170405-7856-16pq68p
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/compat_resource.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/resources/repo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/zypper
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/zypper/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004edf0e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/compat_resource/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004edf130>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'chef/recipe'
require 'chef_compat/copied_from_chef/chef/dsl/recipe'

module ChefCompat
  class Recipe < Chef::Recipe
    include ChefCompat::CopiedFromChef::Chef::DSL::Recipe::FullDSL
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_compat/recipe.rb to tempfile /tmp/chef-rest20170405-7856-u92g7r
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_compat/recipe.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/recipes/smt_client.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000050421a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000050421f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "compat_resource",
   "files",
   "lib",
   "chef_upstream_version.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d90950
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d909a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---

if defined?(ChefSpec)
  ChefSpec.define_matcher :zypper_repo

  def add_zypper_repo(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:zypper_repo, :add, resource_name)
  end

  def remove_zypper_repo(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:zypper_repo, :remove, resource_name)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-j201f
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/zypper/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/resources/archive.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d32ad0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d32b20>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# zypper CHANGELOG

## 0.3.0

- [tas50] - Add issues_url, source_url, and chef_version to the metadata
- [tas50] - Add Chefspec matchers for the repo LWRP
- [tas50] - Add testing and metadata supports attribute for opensuseleap

## 0.2.1

- [gimler] - Use --non-interactive mode when running zypper refresh

## 0.2.0

- [jarosser06] - Added Key attribute to allow importing a gpg key for a new repo
- [jarosser06] - Renamed alias attribute to repo_name

## 0.1.0

- [jarosser06] - Initial release of zypper
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-klgky8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/providers/archive.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004bf94e8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/providers/archive.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004bf9538>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "providers",
   "archive.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004dbb060
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/recipes/smt_client.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004dbb0b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "recipes",
   "smt_client.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
        module ChefCompat
          CHEF_UPSTREAM_VERSION="12.16.42"
        end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/files/lib/chef_upstream_version.rb to tempfile /tmp/chef-rest20170405-7856-2jb4fm
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004c7e558
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/resources/archive.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004c7e788>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "resources",
   "archive.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d564a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d564f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/README.md
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Shawn Neal (<sneal@sneal.net>)
# Cookbook Name:: seven_zip
# Provider:: archive
#
# Copyright:: 2013, Daptiv Solutions LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'fileutils'
require 'chef/mixin/shell_out'

include Chef::Mixin::ShellOut
include Windows::Helper

def whyrun_supported?
  true
end

use_inline_resources

action :extract do
  converge_by("Extract #{@new_resource.source} => #{@new_resource.path} (overwrite=#{@new_resource.overwrite})") do
    FileUtils.mkdir_p(@new_resource.path) unless Dir.exist?(@new_resource.path)
    local_source = cached_file(@new_resource.source, @new_resource.checksum)
    cmd = "\"#{seven_zip_exe}\" x"
    cmd << ' -y' if @new_resource.overwrite
    cmd << " -o\"#{win_friendly_path(@new_resource.path)}\""
    cmd << " \"#{local_source}\""
    Chef::Log.debug(cmd)
    shell_out!(cmd, timeout: extract_timeout)
  end
end

def seven_zip_exe
  path = if node['seven_zip']['home']
           node['seven_zip']['home']
         else
           seven_zip_exe_from_registry
         end
  Chef::Log.debug("Using 7-zip home: #{path}")
  win_friendly_path(::File.join(path, '7z.exe'))
end

def seven_zip_exe_from_registry
  require 'win32/registry'
  # Read path from recommended Windows App Paths registry location
  # docs: https://msdn.microsoft.com/en-us/library/windows/desktop/ee872121
  ::Win32::Registry::HKEY_LOCAL_MACHINE.open(
    'SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\7zFM.exe',
    ::Win32::Registry::KEY_READ
  ).read_s('Path')
end

def extract_timeout
  @new_resource.timeout || node['seven_zip']['default_extract_timeout']
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/providers/archive.rb to tempfile /tmp/chef-rest20170405-7856-fnuaf2
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/providers/archive.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/seven_zip
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/seven_zip/providers
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b5b298
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b5b2e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: seven_zip
# Recipe:: default
#
# Copyright 2011-2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

windows_package node['seven_zip']['package_name'] do
  source node['seven_zip']['url']
  checksum node['seven_zip']['checksum']
  options "INSTALLDIR=\"#{node['seven_zip']['home']}\"" if node['seven_zip']['home']
  action :install
end

# update path
windows_path 'seven_zip' do
  path lazy {
    if node['seven_zip']['home']
      node['seven_zip']['home']
    else
      ::Win32::Registry::HKEY_LOCAL_MACHINE.open(
        'SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths\7zFM.exe',
        ::Win32::Registry::KEY_READ
      ).read_s('Path')
    end
  }
  action :add
end if node['seven_zip']['syspath']
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-vonc1i
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: zypper
# Recipe:: smt_client
#
# Copyright 2014 - 2016, Jim Rosser
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#
package 'smt-client'

client_setup = "#{Chef::Config[:file_cache_path]}/clientSetup4SMT.sh"
register_log = '/root/.suse_register.log'

remote_file client_setup do
  action :create
  source "http://#{node['zypper']['smt_host']}/repo/tools/clientSetup4SMT.sh"
  mode 0544
  owner 'root'
  not_if { ::File.exist? register_log }
end

execute 'register_smt' do
  command "yes | #{client_setup} --host #{node['zypper']['smt_host']}"
  user 'root'
  creates register_log
  notifies :run, 'execute[initial_smt_agent]', :immediately
end

execute 'initial_smt_agent' do
  user 'root'
  command 'smt-agent'
  action :nothing
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/files/lib/chef_upstream_version.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/seven_zip/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# compat_resource Cookbook CHANGELOG

This file is used to list changes made in each version of the compat_resource cookbook.

## 12.16.2 (2016-11-09)

- Sync chef-client changes from Chef 12.16.42

## 12.16.1 (2016-10-20)

- add delayed_action helper

## 12.16.0 (2016-10-19)

- Sync chef-client changes from Chef 12.16.14

## 12.14.7 (2016-09-26)

- Update to 12.14.89 Chef
- Fix autoload by applying fix from #106

## 12.14.6 (2016-09-20)

- Update backported codebase to Chef 12.14.77 which brings in yum_repository updates and why-run enabled by default in custom resources

## 12.14.5 (2016-09-19)

- Prevent spamming messages in Chefspec runs for cookbooks that depend on compat_resource

## 12.14.4 (2016-09-19)

- Fix delayed notifications cloning

## 12.14.3 (2016-09-12)

- Fix subscribes notifications

## 12.14.2 (2016-09-09)

- Improve documentation
- keep ChefCompat::Resource defined even if we don't load

## 12.14.1 (2016-09-07)

- add yum_repository resource from Chef 12.14
- Update the minimum chef version in the metadata to 12.1
- Added maintainers files
- suppress constant redef warnings when running chefspec
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/compat_resource/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-1tr2q63
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/compat_resource/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b03390
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b033e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
[![Cookbook Version](http://img.shields.io/cookbook/v/seven_zip.svg)](https://supermarket.chef.io/cookbooks/seven_zip)
[![Build status](https://ci.appveyor.com/api/projects/status/y1lsnlkd2b3q6gfd/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks65871/seven-zip/branch/master)

# seven_zip Cookbook
[7-Zip](http://www.7-zip.org/) is a file archiver with a high compression ratio. This cookbook installs the full 7-zip suite of tools (GUI and CLI). This cookbook replaces the older [7-zip cookbook](https://github.com/sneal/7-zip).

# Requirements
## Platforms
- Windows XP
- Windows Vista
- Windows 7
- Windows 8, 8.1
- Windows 10
- Windows Server 2003 R2
- Windows Server 2008 (R1, R2)
- Windows Server 2012 (R1, R2)

## Chef
- Chef >= 11.6

## Cookbooks
- windows

# Attributes
## Optional
<table>
  <tr>
    <th>Key</th>
    <th>Type</th>
    <th>Description</th>
    <th>Default</th>
  </tr>
  <tr>
    <td><code>['seven_zip']['home']</code></td>
    <td>String</td>
    <td>7-Zip installation directory.</td>
    <td></td>
  </tr>
  <tr>
    <td><code>['seven_zip']['syspath']</code></td>
    <td>Boolean</td>
    <td>If true, adds 7-zip directory to system PATH environment variable.</td>
    <td></td>
  </tr>
  <tr>
    <td><code>['seven_zip']['default_extract_timeout']</code></td>
    <td>Integer</td>
    <td>The default timeout for an extract operation in seconds. This can be overridden by a resource attribute.</td>
    <td>600</td>
  </tr>
</table>

# Usage
## default

Add `seven_zip::default` to your run\_list which will download and install 7-zip for the current Windows platform. 

# Resource/Provider
## seven_zip_archive
Extracts a 7-zip compatible archive (iso, zip, 7z etc) to the specified destination directory.

#### Actions
- `:extract` - Extract a 7-zip compatible archive

#### Attribute Parameters
- `path` - Name attribute. The destination to extract to.
- `source` - The file path to the archive to extract.
- `overwrite` - Defaults to false. If true, the destination files will be overwritten.
- `checksum` - The archive file checksum.
- `timeout` - The extract action timeout in seconds, defaults to `node['seven_zip']['default_extract_timeout']`.

#### Examples
Extract 7-zip source files to `C:\seven_zip_source`.

```ruby
seven_zip_archive 'seven_zip_source' do
  path      'C:\seven_zip_source'
  source    'http://www.7-zip.org/a/7z1514-src.7z'
  overwrite true
  checksum  '3713aed72728eae8f6649e4803eba0b3676785200c76df6269034c520df4bbd5'
  timeout   30
end
```

# Recipes
## default

Installs 7-zip and adds it to your system PATH.

# License & Authors
- Author:: Seth Chisamore (<schisamo@chef.io>)
- Author:: Shawn Neal (<sneal@sneal.net>)

```text
Copyright:: 2011-2016, Chef Software, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/README.md to tempfile /tmp/chef-rest20170405-7856-dqg70
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/smt_client.rb to tempfile /tmp/chef-rest20170405-7856-18flfxl
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004dc3df0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004dc3fa8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook Name:: zypper
# Recipe:: default
#
# Copyright 2014 - 2016, Jim Rosser
#
# Permission is hereby granted, free of charge, to any person obtaining
# a copy of this software and associated documentation files (the
# "Software"), to deal in the Software without restriction, including
# without limitation the rights to use, copy, modify, merge, publish,
# distribute, sublicense, and/or sell copies of the Software, and to
# permit persons to whom the Software is furnished to do so, subject to
# the following conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE
# LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION
# OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
# WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#

execute 'zypper_refresh' do
  command 'zypper --non-interactive refresh'
  user 'root'
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-jnybwq
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/zypper/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b38310
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b383b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d63400
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d63450>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# zypper Cookbook

Cookbook that provides a lwrp for zypper repositories and also a recipe to install and configure the smt-client for SLES.

## Requirements

### Platforms

- SLES 11+
- openSUSE 13+
- openSUSE Leap

### Chef

- Chef 11+

### Cookbooks

- none

## Attributes

### zypper::smt_client

Key                             | Type   | Description         | Default
------------------------------- | ------ | ------------------- | ------------
<tt>['zypper']['smt_host']</tt> | String | uri of the SMT host | <tt>nil</tt>

## Resource/Provider

## zypper_repo

### Actions

- **add** - adds a repo
- **delete** - removes a repo

### Attributes

- **repo_name** - repo alias (name attribute)
- **uri** - uri of the repo
- **autorefresh** - enable autorefresh
- **key** - location of repo key to import

## Example Usage

```ruby
zypper_repo 'remove_dvd_repo' do
  action :remove
  repo_name 'SLES11SP3-x64 DVD1 Online'
end

zypper_repo 'add_dvd_repo' do
  repo_name 'SLES11SP3-x64 DVD1 Online'
  uri 'http://demeter.uni-regensburg.de/SLES11SP3-x64/DVD1/'
end

zypper_repo 'jenkins' do
  key 'http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key'
  uri 'http://pkg.jenkins-ci.org/opensuse/'
end
```

### zypper::smt_client

Just include `zypper::smt_client` in your node's `run_list` and set the `smt_host` attribute to your smt server:

```json
{
  "name":"my_node",
  "normal": {
    "zypper": {
      "smt_host": "smt.example.com"
    }
  },
  "run_list": [
    "recipe[zypper]"
  ]
}
```

## Testing

To test with test kitchen you need to have a SLES Vagrant box already on your system(checkout github.com/opscode/bento). In order to test the smt recipe with your smt server set the SMT_HOST env variable to your smt host:

```shell
export SMT_HOST=smt.example.com
```

## Contributing

1. Fork the repository on Github
2. Create a named feature branch (like `add_component_x`)
3. Write you change
4. Write tests for your change (if applicable)
5. Run the tests, ensuring they all pass
6. Submit a Pull Request using Github

## License and Authors

- Author:: Jim Rosser(jarosser06@gmail.com)

```text
copyright (C) 2014-2016 Jim Rosser

Permission is hereby granted, free of charge, to any person
obtaining a copy of this software and associated documentation
files (the “Software”), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge,
publish, distribute, sublicense, and/or sell copies of the Software,
and to permit persons to whom the Software is furnished to do so,
subject to the following conditions:

The above copyright notice and this permission notice shall be
included in all copies or substantial portions of the Software.

THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
OTHER DEALINGS IN THE SOFTWARE.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/README.md to tempfile /tmp/chef-rest20170405-7856-171o86d
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"zypper","version":"0.3.0","description":"Provides resources for managing zypper repositories","long_description":"# zypper Cookbook\n\nCookbook that provides a lwrp for zypper repositories and also a recipe to install and configure the smt-client for SLES.\n\n## Requirements\n\n### Platforms\n\n- SLES 11+\n- openSUSE 13+\n- openSUSE Leap\n\n### Chef\n\n- Chef 11+\n\n### Cookbooks\n\n- none\n\n## Attributes\n\n### zypper::smt_client\n\nKey                             | Type   | Description         | Default\n------------------------------- | ------ | ------------------- | ------------\n<tt>['zypper']['smt_host']</tt> | String | uri of the SMT host | <tt>nil</tt>\n\n## Resource/Provider\n\n## zypper_repo\n\n### Actions\n\n- **add** - adds a repo\n- **delete** - removes a repo\n\n### Attributes\n\n- **repo_name** - repo alias (name attribute)\n- **uri** - uri of the repo\n- **autorefresh** - enable autorefresh\n- **key** - location of repo key to import\n\n## Example Usage\n\n```ruby\nzypper_repo 'remove_dvd_repo' do\n  action :remove\n  repo_name 'SLES11SP3-x64 DVD1 Online'\nend\n\nzypper_repo 'add_dvd_repo' do\n  repo_name 'SLES11SP3-x64 DVD1 Online'\n  uri 'http://demeter.uni-regensburg.de/SLES11SP3-x64/DVD1/'\nend\n\nzypper_repo 'jenkins' do\n  key 'http://pkg.jenkins-ci.org/redhat/jenkins-ci.org.key'\n  uri 'http://pkg.jenkins-ci.org/opensuse/'\nend\n```\n\n### zypper::smt_client\n\nJust include `zypper::smt_client` in your node's `run_list` and set the `smt_host` attribute to your smt server:\n\n```json\n{\n  \"name\":\"my_node\",\n  \"normal\": {\n    \"zypper\": {\n      \"smt_host\": \"smt.example.com\"\n    }\n  },\n  \"run_list\": [\n    \"recipe[zypper]\"\n  ]\n}\n```\n\n## Testing\n\nTo test with test kitchen you need to have a SLES Vagrant box already on your system(checkout github.com/opscode/bento). In order to test the smt recipe with your smt server set the SMT_HOST env variable to your smt host:\n\n```shell\nexport SMT_HOST=smt.example.com\n```\n\n## Contributing\n\n1. Fork the repository on Github\n2. Create a named feature branch (like `add_component_x`)\n3. Write you change\n4. Write tests for your change (if applicable)\n5. Run the tests, ensuring they all pass\n6. Submit a Pull Request using Github\n\n## License and Authors\n\n- Author:: Jim Rosser(jarosser06@gmail.com)\n\n```text\ncopyright (C) 2014-2016 Jim Rosser\n\nPermission is hereby granted, free of charge, to any person\nobtaining a copy of this software and associated documentation\nfiles (the “Software”), to deal in the Software without restriction,\nincluding without limitation the rights to use, copy, modify, merge,\npublish, distribute, sublicense, and/or sell copies of the Software,\nand to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES\nOF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT\nHOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,\nWHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\nFROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR\nOTHER DEALINGS IN THE SOFTWARE.\n```\n","maintainer":"Jim Rosser","maintainer_email":"jarosser06@gmail.com","license":"MIT","platforms":{"suse":">= 0.0.0","opensuse":">= 0.0.0","opensuseleap":">= 0.0.0"},"dependencies":{},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/metadata.json to tempfile /tmp/chef-rest20170405-7856-32bl45
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/zypper/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004d1dea0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/zypper/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004d1df18>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "zypper",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
default['zypper']['smt_host'] = nil
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-15s2mty
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Shawn Neal (<sneal@sneal.net>)
# Cookbook Name:: visualstudio
#
# Copyright 2015, Shawn Neal
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if defined?(ChefSpec)
  chefspec_version = Gem.loaded_specs['chefspec'].version
  define_method = if chefspec_version < Gem::Version.new('4.1.0')
                    ChefSpec::Runner.method(:define_runner_method)
                  else
                    ChefSpec.method(:define_matcher)
                  end

  define_method.call :seven_zip_archive

  def extract_seven_zip_archive(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:seven_zip_archive, :extract, resource_name)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/zypper/attributes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a84ce8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a84d38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-1sact96
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/recipes/smt_client.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/resources/get.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
require 'mixlib/shellout'

use_inline_resources

action :add do
  if repo_exist?
    new_resource.updated_by_last_action false
  else
    unless new_resource.key.nil?
      install_curl
      import_key
    end
    command = 'zypper ar'
    command << ' -f' if new_resource.autorefresh
    command << " #{new_resource.uri} \"#{new_resource.repo_name}\""
    shellout = Mixlib::ShellOut.new(command, user: 'root').run_command
    if shellout.stderr.empty?
      new_resource.updated_by_last_action true
    else
      Chef::Log.error("Error adding repo: #{shellout.stderr}")
    end
  end
end

action :remove do
  if repo_exist?
    command = "zypper rr \"#{new_resource.repo_name}\""
    shellout = Mixlib::ShellOut.new(command, user: 'root').run_command
    if shellout.stderr.empty?
      new_resource.updated_by_last_action true
    else
      Chef::Log.error("Error removing repo: #{shellout.stderr}")
    end
  else
    new_resource.updated_by_last_action false
  end
end

def repo_exist?
  command = "zypper repos | grep \"#{new_resource.repo_name}\""
  shellout = Mixlib::ShellOut.new(command, user: 'root').run_command
  if shellout.stdout.empty?
    false
  else
    true
  end
end

def install_curl
  # Make sure curl is installed
  pkg = Chef::Resource::Package.new('curl', run_context)
  pkg.run_action :install
end

def import_key
  cmd = Chef::Resource::Execute.new("import key for #{new_resource.repo_name}",
                                run_context)
  cmd.command "rpm --import #{new_resource.key}"
  cmd.run_action :run
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/zypper/providers/repo.rb to tempfile /tmp/chef-rest20170405-7856-1b8416h
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/zypper/providers/repo.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/zypper/providers
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/libraries/_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/seven_zip/libraries
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/resources/msys2_package.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a17be8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/resources/msys2_package.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a17c38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "resources",
   "msys2_package.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: mingw
# Resource:: msys2_package
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Installs msys2 base system and installs/upgrades packages within in.
#
# Where's the version flag?  Where's idempotence you say?  Well f*** you
# for trying to version your product.  This is arch.  They live on the edge.
# You never get anything but the latest version.  And if that's broken...
# well that's your problem isn't it?  And they don't believe in preserving
# older versions.  Good luck!

property :package, kind_of: String, name_property: true
property :root, kind_of: String, required: true

resource_name :msys2_package

action_class do
  #
  # Runs a command through a bash login shell made by our shim .bat file.
  # The bash.bat file defaults %HOME% to #{root}/home/%USERNAME% and requests
  # that the command be run in the current working directory.
  #
  def msys2_exec(comment, cmd)
    f_root = win_friendly_path(root)
    execute comment do
      command ".\\bin\\bash.bat -c '#{cmd}'"
      cwd f_root
      live_stream true
      environment('MSYSTEM' => 'MSYS')
    end
  end

  def msys2_init
    cache_dir = ::File.join(root, '.cache')
    f_cache_dir = win_friendly_path(cache_dir)
    base_url = 'http://downloads.sourceforge.net/project/msys2/Base/x86_64/msys2-base-x86_64-20160205.tar.xz'
    base_checksum = '7e97e2af042e1b6f62cf0298fe84839014ef3d4a3e7825cffc6931c66cc0fc20'

    unless ::File.exist?(::File.join(root, 'msys2.exe'))
      seven_zip_archive "cache msys2 base to #{f_cache_dir}" do
        source base_url
        path f_cache_dir
        checksum base_checksum
        overwrite true
      end

      seven_zip_archive "extract msys2 base archive to #{f_cache_dir}" do
        source "#{f_cache_dir}\\#{tar_name(base_url)}"
        path f_cache_dir
        overwrite true
      end

      ruby_block 'copy msys2 base files to root' do
        block do
          # Oh my god msys2 and pacman are picky as hell when it comes to
          # updating core files. They use the mtime on certain files to
          # determine if they need to updated or not and simply skip various
          # steps otherwise.
          ::FileUtils.cp_r(::Dir.glob("#{cache_dir}/msys64/*"), root, preserve: true)
        end
      end
    end

    pacman_key_dir = ::File.join(root, 'etc/pacman.d/gnupg')
    bin_dir = ::File.join(root, 'bin')

    directory win_friendly_path(bin_dir)

    cookbook_file win_friendly_path("#{bin_dir}/bash.bat") do
      source 'bash.bat'
      cookbook 'mingw'
    end

    cookbook_file win_friendly_path(::File.join(root, 'custom-upgrade.sh')) do
      source 'custom-upgrade.sh'
      cookbook 'mingw'
    end

    cookbook_file win_friendly_path(::File.join(root, 'etc/profile.d/custom_prefix.sh')) do
      source 'custom_prefix.sh'
      cookbook 'mingw'
    end

    # $HOME is using files from /etc/skel.  The home-directory creation step
    # will automatically be performed if other users log in - so if you wish
    # to globally modify user first time setup, edit /etc/skel or add
    # "post-setup" steps to /etc/post-install/
    # The first-time init shell must be restarted and cannot be reused.
    msys2_exec('msys2 first time init', 'exit') unless ::File.exist?(pacman_key_dir)

    # Update pacman and msys base packages.
    if ::File.exist?(::File.join(root, 'usr/bin/update-core')) || !::File.exist?(::File.join(root, 'custom-upgrade.sh'))
      msys2_exec('upgrade msys2 core', '/custom-upgrade.sh')
      msys2_exec('upgrade msys2 core: part 2', 'pacman -Suu --noconfirm')
      # Now we can actually upgrade everything ever.
      msys2_exec('upgrade entire msys2 system: 1', 'pacman -Syuu --noconfirm')
      # Might need to do it once more to pick up a few stragglers.
      msys2_exec('upgrade entire msys2 system: 2', 'pacman -Syuu --noconfirm')
    end
  end

  def msys2_do_action(comment, action_cmd)
    msys2_init
    msys2_exec(comment, action_cmd)
  end
end

action :install do
  msys2_do_action("installing #{package}", "pacman -S --needed --noconfirm #{package}")
end

# Package name is ignored.  This is arch.  Why would you ever upgrade a single
# package and its deps?  That'll just break everything else that ever depended
# on a different version of that dep.  Because arch is wonderful like that.
# So you only get the choice to move everything to latest or not...  it's the
# most agile development possible!
action :upgrade do
  msys2_do_action("upgrading #{package}", "pacman -Syu --noconfirm #{package}")
end

action :remove do
  msys2_do_action("removing #{package}", "pacman -R --noconfirm #{package}")
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/resources/tdm_gcc.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a136d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/resources/tdm_gcc.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a13728>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "resources",
   "tdm_gcc.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: mingw
# Resource:: tdm_gcc
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Installs a gcc based C/C++ compiler and runtime from TDM GCC.

property :flavor, kind_of: Symbol, is: [:sjlj_32, :seh_sjlj_64], default: :seh_sjlj_64
property :root, kind_of: String, required: true
property :version, kind_of: String, is: ['5.1.0'], name_property: true

resource_name :mingw_tdm_gcc

tdm_gcc_64 = {
  'http://iweb.dl.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-core.tar.lzma' =>
    '29393aac890847089ad1e93f81a28f6744b1609c00b25afca818f3903e42e4bd',
  'http://iweb.dl.sourceforge.net/project/tdm-gcc/MinGW-w64%20runtime/GCC%205%20series/mingw64runtime-v4-git20150618-gcc5-tdm64-1.tar.lzma' =>
    '29186e0bb36824b10026d78bdcf238d631d8fc1d90718d2ebbd9ec239b6f94dd',
  'http://iweb.dl.sourceforge.net/project/tdm-gcc/GNU%20binutils/binutils-2.25-tdm64-1.tar.lzma' =>
    '4722bb7b4d46cef714234109e25e5d1cfd29f4e53365b6d615c8a00735f60e40',
  'http://iweb.dl.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm64-1/gcc-5.1.0-tdm64-1-c%2B%2B.tar.lzma' =>
    '17fd497318d1ac187a113e8665330d746ad9607a0406ab2374db0d8e6f4094d1',
}

tdm_gcc_32 = {
  'http://iweb.dl.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm-1%20SJLJ/gcc-5.1.0-tdm-1-core.tar.lzma' =>
    '9199e6ecbce956ff4704b52098beb38e313176ace610285fb93758a08752870e',
  'http://iweb.dl.sourceforge.net/project/tdm-gcc/TDM-GCC%205%20series/5.1.0-tdm-1%20SJLJ/gcc-5.1.0-tdm-1-c%2B%2B.tar.lzma' =>
    '19fe46819ce43531d066b438479300027bbf06da57e8a10be5100466f80c28fc',
}

action :install do
  cache_dir = ::File.join(root, '.cache')
  f_root = win_friendly_path(root)

  if flavor == :sjlj_32
    [
      'binutils-bin=2.25.1',
      'libintl-dll=0.18.3.2',
      'mingwrt-dll=3.21.1',
      'mingwrt-dev=3.21.1',
      'w32api-dev=3.17',
    ].each do |package_fragment|
      mingw_get "install #{package_fragment} at #{f_root}" do
        package "mingw32-#{package_fragment}-*"
        root new_resource.root
      end
    end
  end

  to_fetch =
    case flavor
    when :sjlj_32
      tdm_gcc_32
    when :seh_sjlj_64
      tdm_gcc_64
    else
      raise "Unknown flavor: #{flavor}"
    end

  to_fetch.each do |url, hash|
    seven_zip_archive "cache #{archive_name(url)} to #{win_friendly_path(cache_dir)}" do
      source url
      path cache_dir
      checksum hash
      overwrite true
    end

    seven_zip_archive "extract #{tar_name(url)} to #{f_root}" do
      source ::File.join(cache_dir, tar_name(url))
      path root
      overwrite true
    end
  end

  # Patch time.h headers for compatibility with winpthreads.
  # These patches were made for binutils 2.25.1 for 32-bit TDM GCC only.
  if flavor == :sjlj_32
    include_dir = win_friendly_path(::File.join(root, 'include'))
    cookbook_file "#{include_dir}\\pthread.h" do
      cookbook 'mingw'
      source 'pthread.h'
    end

    cookbook_file "#{include_dir}\\time.h" do
      cookbook 'mingw'
      source 'time.h'
    end
  end
end

def archive_name(source)
  url = ::URI.parse(source)
  ::File.basename(::URI.unescape(url.path))
end

def tar_name(source)
  aname = archive_name(source)
  ::File.basename(aname, ::File.extname(aname))
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/tdm_gcc.rb to tempfile /tmp/chef-rest20170405-7856-1rxvbn6
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049b0650
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/libraries/_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049b06a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "libraries",
   "_helper.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/msys2_package.rb to tempfile /tmp/chef-rest20170405-7856-192qetu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/resources/msys2_package.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/mingw
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/mingw/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"seven_zip","version":"2.0.2","description":"Installs/Configures the 7-zip file archiver","long_description":"[![Cookbook Version](http://img.shields.io/cookbook/v/seven_zip.svg)](https://supermarket.chef.io/cookbooks/seven_zip)\n[![Build status](https://ci.appveyor.com/api/projects/status/y1lsnlkd2b3q6gfd/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks65871/seven-zip/branch/master)\n\n# seven_zip Cookbook\n[7-Zip](http://www.7-zip.org/) is a file archiver with a high compression ratio. This cookbook installs the full 7-zip suite of tools (GUI and CLI). This cookbook replaces the older [7-zip cookbook](https://github.com/sneal/7-zip).\n\n# Requirements\n## Platforms\n- Windows XP\n- Windows Vista\n- Windows 7\n- Windows 8, 8.1\n- Windows 10\n- Windows Server 2003 R2\n- Windows Server 2008 (R1, R2)\n- Windows Server 2012 (R1, R2)\n\n## Chef\n- Chef >= 11.6\n\n## Cookbooks\n- windows\n\n# Attributes\n## Optional\n<table>\n  <tr>\n    <th>Key</th>\n    <th>Type</th>\n    <th>Description</th>\n    <th>Default</th>\n  </tr>\n  <tr>\n    <td><code>['seven_zip']['home']</code></td>\n    <td>String</td>\n    <td>7-Zip installation directory.</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><code>['seven_zip']['syspath']</code></td>\n    <td>Boolean</td>\n    <td>If true, adds 7-zip directory to system PATH environment variable.</td>\n    <td></td>\n  </tr>\n  <tr>\n    <td><code>['seven_zip']['default_extract_timeout']</code></td>\n    <td>Integer</td>\n    <td>The default timeout for an extract operation in seconds. This can be overridden by a resource attribute.</td>\n    <td>600</td>\n  </tr>\n</table>\n\n# Usage\n## default\n\nAdd `seven_zip::default` to your run\\_list which will download and install 7-zip for the current Windows platform. \n\n# Resource/Provider\n## seven_zip_archive\nExtracts a 7-zip compatible archive (iso, zip, 7z etc) to the specified destination directory.\n\n#### Actions\n- `:extract` - Extract a 7-zip compatible archive\n\n#### Attribute Parameters\n- `path` - Name attribute. The destination to extract to.\n- `source` - The file path to the archive to extract.\n- `overwrite` - Defaults to false. If true, the destination files will be overwritten.\n- `checksum` - The archive file checksum.\n- `timeout` - The extract action timeout in seconds, defaults to `node['seven_zip']['default_extract_timeout']`.\n\n#### Examples\nExtract 7-zip source files to `C:\\seven_zip_source`.\n\n```ruby\nseven_zip_archive 'seven_zip_source' do\n  path      'C:\\seven_zip_source'\n  source    'http://www.7-zip.org/a/7z1514-src.7z'\n  overwrite true\n  checksum  '3713aed72728eae8f6649e4803eba0b3676785200c76df6269034c520df4bbd5'\n  timeout   30\nend\n```\n\n# Recipes\n## default\n\nInstalls 7-zip and adds it to your system PATH.\n\n# License & Authors\n- Author:: Seth Chisamore (<schisamo@chef.io>)\n- Author:: Shawn Neal (<sneal@sneal.net>)\n\n```text\nCopyright:: 2011-2016, Chef Software, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Shawn Neal","maintainer_email":"sneal@sneal.net","license":"Apache 2.0","platforms":{"windows":">= 0.0.0"},"dependencies":{"windows":">= 1.2.2"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/metadata.json to tempfile /tmp/chef-rest20170405-7856-1g6v221
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/files/default/custom_prefix.sh
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004924f88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/mingw/files/default/custom_prefix.sh",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004924fd8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "files",
   "default",
   "custom_prefix.sh"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/resources/tdm_gcc.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/files/default/bash.bat
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004970460
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/files/default/bash.bat",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049704b0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "files",
   "default",
   "bash.bat"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/seven_zip/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: mingw
# Library:: _helper
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

module Mingw
  module Helper
    def win_friendly_path(path)
      path.gsub(::File::SEPARATOR, ::File::ALT_SEPARATOR || '\\') if path
    end

    def archive_name(source)
      url = ::URI.parse(source)
      ::File.basename(::URI.unescape(url.path))
    end

    def tar_name(source)
      aname = archive_name(source)
      ::File.basename(aname, ::File.extname(aname))
    end
  end
end

Chef::Resource.send(:include, Mingw::Helper)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/libraries/_helper.rb to tempfile /tmp/chef-rest20170405-7856-uttuga
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/files/default/custom-upgrade.sh
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000492a988
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/mingw/files/default/custom-upgrade.sh",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000492aa00>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "files",
   "default",
   "custom-upgrade.sh"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Shawn Neal (<sneal@sneal.net>)
# Cookbook Name:: seven_zip
# Resource:: archive
#
# Copyright:: 2013, Daptiv Solutions LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default_action :extract

actions :extract

attribute :path, kind_of: String, name_attribute: true
attribute :source, kind_of: String
attribute :overwrite, kind_of: [TrueClass, FalseClass], default: false
attribute :checksum, kind_of: String
attribute :timeout, kind_of: Integer
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/resources/archive.rb to tempfile /tmp/chef-rest20170405-7856-xqpm4s
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/resources/archive.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/seven_zip/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/files/default/time.h
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004855d50
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/files/default/time.h",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004855da0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "files",
   "default",
   "time.h"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/libraries/_helper.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/mingw/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004972cd8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004972d28>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
@echo off
set HOME=/home/%USERNAME%

IF "%MSYSTEM%"=="" (
  echo MSYSTEM is NOT defined
  exit
)

rem Ask MSYS to initialize with a minimal path by default.
rem This will put only the windows system paths into the msys path.
set MSYS2_PATH_TYPE=minimal

rem See /etc/profile - it should invoke post-install step 05-home-dir.post
rem which uses this environment variable to change directories.
set CHERE_INVOKING=1

%~dp0..\usr\bin\bash.exe -l %*
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/bash.bat to tempfile /tmp/chef-rest20170405-7856-7fk2py
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/files/default/bash.bat in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/mingw/files
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/mingw/files/default
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/README.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047e3250
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047e32a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# mingw Cookbook

[![Cookbook Version](http://img.shields.io/cookbook/v/mingw.svg)][cookbook] [![Build Status](http://img.shields.io/travis/chef-cookbooks/mingw.svg?branch=master)][travis]

Installs a mingw/msys based compiler tools chain on windows. This is required for compiling C software from source.

## Requirements

### Platforms

- Windows

### Chef

- Chef 12.5+

### Cookbooks

- seven_zip

## Usage

Add this cookbook as a dependency to your cookbook in its `metadata.rb` and include the default recipe in one of your recipes.

```ruby
# metadata.rb
depends 'mingw'
```

```ruby
# your recipe.rb
include_recipe 'mingw::default'
```

Use the `msys2_package` resource in any recipe to fetch msys2 based packages. Use the `mingw_get` resource in any recipe to fetch mingw packages. Use the `mingw_tdm_gcc` resource to fetch a version of the TDM GCC compiler.

By default, you should prefer the msys2 packages as they are newer and better supported. C/C++ compilers on windows use various different exception formats and you need to pick the right one for your task. In the 32-bit world, you have SJLJ (set-jump/long-jump) based exception handling and DWARF-2 (shortened to DW2) based exception handling. SJLJ produces code that can happily throw exceptions across stack frames of code compiled by MSVC. DW2 involves more extensive metadata but produces code that cannot unwind MSVC generated stack-frames - hence you need to ensure that you don't have any code that throws across a "system call". Certain languages and runtimes have specific requirements as to the exception format supported. As an example, if you are building code for Rust, you will probably need a modern gcc from msys2 with DW2 support as that's what the panic/exception formatter in Rust depends on. In a 64-bit world, you may still use SJLJ but compilers all commonly support SEH (structured exception handling).

Of course, to further complicate matters, different versions of different compilers support different exception handling. The default compilers that come with mingw_get are 32-bit only compilers and support DW2\. The TDM compilers come in 3 flavors: a 32-bit only version with SJLJ support, a 32-bit only version with DW2 support and a "multilib" compiler which supports only SJLJ in 32-bit mode but can produce 64-bit SEH code. The standard library support varies drastically between these various compiler flavors (even within the same version). In msys2, you can install a mingw-w64 based compilers for either 32-bit DW2 support or 64-bit SEH support. If all this hurts your brain, I can only apologize.

## Resources

### msys2_package

- ':install' - Installs an msys2 package using pacman.
- ':remove' - Uninstalls any existing msys2 package.
- ':upgrade' - Upgrades the specified package using pacman.

All options also automatically attempt to install a 64-bit based msys2 base file system at the root path specified. Note that you probably won't need a "32-bit" msys2 unless you are actually on a 32-bit only platform. You can still install both 32 and 64-bit compilers and libraries in a 64-bit msys2 base file system.

#### Parameters

- `package` - An msys2 pacman package (or meta-package) to fetch and install. You may use a legal package wild-card pattern here if you are installing. This is the name attribute.
- `root` - The root directory where msys2 tools will be installed. This directory must not contain any spaces in order to pacify old posix tools and most Makefiles.

#### Examples

To get the core msys2 developer tools in `C:\msys2`

```ruby
msys2_package 'base-devel' do
  root 'C:\msys2'
end
```

### mingw_get

#### Actions

- `:install` - Installs a mingw package from sourceforge using mingw-get.exe.
- `:remove` - Uninstalls a mingw package.
- `:upgrade` - Upgrades a mingw package (even to a lower version).

#### Parameters

- `package` - A mingw-get package (or meta-package) to fetch and install. You may use a legal package wild-card pattern here if you are installing. This is the name attribute.
- `root` - The root directory where msys and mingw tools will be installed. This directory must not contain any spaces in order to pacify old posix tools and most Makefiles.

#### Examples

To get the core msys developer tools in `C:\mingw32`

```ruby
mingw_get 'msys-base=2013072300-msys-bin.meta' do
  root 'C:\mingw32'
end
```

### mingw_tdm_gcc

#### Actions

- `:install` - Installs the TDM compiler toolchain at the given path. This only gives you a compiler. If you need any support tooling such as make/grep/awk/bash etc., see `mingw_get`.

#### Parameters

- `flavor` - Either `:sjlj_32` or `:seh_sjlj_64`. TDM-64 is a 32/64-bit multi-lib "cross-compiler" toolchain that builds 64-bit by default. It uses structured exception handling (SEH) in 64-bit code and setjump-longjump exception handling (SJLJ) in 32-bit code. TDM-32 only builds 32-bit binaries and uses SJLJ.
- `root` - The root directory where compiler tools and runtime will be installed. This directory must not contain any spaces in order to pacify old posix tools and most Makefiles.
- `version` - The version of the compiler to fetch and install. This is the name attribute. Currently, '5.1.0' is supported.

#### Examples

To get the 32-bit TDM GCC compiler in `C:\mingw32`

```ruby
mingw_tdm_gcc '5.1.0' do
  flavor :sjlj_32
  root 'C:\mingw32'
end
```

## License & Authors

**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))

**Copyright:** 2009-2016, Chef Software, Inc.

```
Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```

[cookbook]: https://supermarket.chef.io/cookbooks/mingw
[travis]: http://travis-ci.org/chef-cookbooks/mingw
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/README.md to tempfile /tmp/chef-rest20170405-7856-upz681
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000047cc7f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000047cc848>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/.foodcritic
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
/*
 * time.h
 *
 * Type definitions and function declarations relating to date and time.
 *
 * $Id: time.h,v ffe8d63c87e3 2015/05/18 12:49:39 keithmarshall $
 *
 * Written by Rob Savoye <rob@cygnus.com>
 * Copyright (C) 1997-2007, 2011, 2015, MinGW.org Project.
 *
 *
 * Permission is hereby granted, free of charge, to any person obtaining a
 * copy of this software and associated documentation files (the "Software"),
 * to deal in the Software without restriction, including without limitation
 * the rights to use, copy, modify, merge, publish, distribute, sublicense,
 * and/or sell copies of the Software, and to permit persons to whom the
 * Software is furnished to do so, subject to the following conditions:
 *
 * The above copyright notice, this permission notice, and the following
 * disclaimer shall be included in all copies or substantial portions of
 * the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
 * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
 * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OF OR OTHER
 * DEALINGS IN THE SOFTWARE.
 *
 */
#ifndef _TIME_H
#define _TIME_H

/* All the headers include this file. */
#include <_mingw.h>

/* Number of clock ticks per second. A clock tick is the unit by which
 * processor time is measured and is returned by 'clock'.
 */
#define CLOCKS_PER_SEC	((clock_t)(1000))
#define CLK_TCK 	CLOCKS_PER_SEC

#ifndef RC_INVOKED
/*
 * Some elements declared in time.h may also be required by other
 * header files, without necessarily including time.h itself; such
 * elements are declared in the local parts/time.h system header file.
 * Declarations for such elements must be selected prior to inclusion:
 */
#define __need_time_t
#define __need_struct_timespec
#include <parts/time.h>

/* time.h is also required to duplicate the following type definitions,
 * which are nominally defined in stddef.h
 */
#define __need_NULL
#define __need_wchar_t
#define __need_size_t
#include <stddef.h>

/* A type for measuring processor time in clock ticks; (no need to
 * guard this, since it isn't defined elsewhere).
 */
typedef long clock_t;

#ifndef _TM_DEFINED
/*
 * A structure for storing all kinds of useful information about the
 * current (or another) time.
 */
struct tm
{
	int	tm_sec;		/* Seconds: 0-59 (K&R says 0-61?) */
	int	tm_min;		/* Minutes: 0-59 */
	int	tm_hour;	/* Hours since midnight: 0-23 */
	int	tm_mday;	/* Day of the month: 1-31 */
	int	tm_mon;		/* Months *since* january: 0-11 */
	int	tm_year;	/* Years since 1900 */
	int	tm_wday;	/* Days since Sunday (0-6) */
	int	tm_yday;	/* Days since Jan. 1: 0-365 */
	int	tm_isdst;	/* +1 Daylight Savings Time, 0 No DST,
				 * -1 don't know */
};
#define _TM_DEFINED
#endif

_BEGIN_C_DECLS

_CRTIMP clock_t __cdecl __MINGW_NOTHROW	clock (void);
#if __MSVCRT_VERSION__ < 0x0800
_CRTIMP time_t __cdecl __MINGW_NOTHROW	time (time_t*);
_CRTIMP double __cdecl __MINGW_NOTHROW	difftime (time_t, time_t);
_CRTIMP time_t __cdecl __MINGW_NOTHROW	mktime (struct tm*);
#endif

/*
 * These functions write to and return pointers to static buffers that may
 * be overwritten by other function calls. Yikes!
 *
 * NOTE: localtime, and perhaps the others of the four functions grouped
 * below may return NULL if their argument is not 'acceptable'. Also note
 * that calling asctime with a NULL pointer will produce an Invalid Page
 * Fault and crap out your program. Guess how I know. Hint: stat called on
 * a directory gives 'invalid' times in st_atime etc...
 */
_CRTIMP char* __cdecl __MINGW_NOTHROW		asctime (const struct tm*);
#if __MSVCRT_VERSION__ < 0x0800
_CRTIMP char* __cdecl __MINGW_NOTHROW		ctime (const time_t*);
_CRTIMP struct tm*  __cdecl __MINGW_NOTHROW	gmtime (const time_t*);
_CRTIMP struct tm*  __cdecl __MINGW_NOTHROW	localtime (const time_t*);
#endif

_CRTIMP size_t __cdecl __MINGW_NOTHROW		strftime (char*, size_t, const char*, const struct tm*);

#ifndef __STRICT_ANSI__

extern _CRTIMP void __cdecl __MINGW_NOTHROW	_tzset (void);

#ifndef _NO_OLDNAMES
extern _CRTIMP void __cdecl __MINGW_NOTHROW	tzset (void);
#endif

_CRTIMP char* __cdecl __MINGW_NOTHROW	_strdate(char*);
_CRTIMP char* __cdecl __MINGW_NOTHROW	_strtime(char*);

/* These require newer versions of msvcrt.dll (6.10 or higher). */
#if __MSVCRT_VERSION__ >= 0x0601
_CRTIMP __time64_t __cdecl __MINGW_NOTHROW  _time64( __time64_t*);
_CRTIMP __time64_t __cdecl __MINGW_NOTHROW  _mktime64 (struct tm*);
_CRTIMP char* __cdecl __MINGW_NOTHROW _ctime64 (const __time64_t*);
_CRTIMP struct tm*  __cdecl __MINGW_NOTHROW _gmtime64 (const __time64_t*);
_CRTIMP struct tm*  __cdecl __MINGW_NOTHROW _localtime64 (const __time64_t*);
#endif /* __MSVCRT_VERSION__ >= 0x0601 */

/* These require newer versions of msvcrt.dll (8.00 or higher). */
#if __MSVCRT_VERSION__ >= 0x0800
_CRTIMP __time32_t __cdecl __MINGW_NOTHROW	_time32 (__time32_t*);
_CRTIMP double	   __cdecl __MINGW_NOTHROW	_difftime32 (__time32_t, __time32_t);
_CRTIMP double	   __cdecl __MINGW_NOTHROW	_difftime64 (__time64_t, __time64_t);
_CRTIMP __time32_t __cdecl __MINGW_NOTHROW	_mktime32 (struct tm*);
_CRTIMP __time32_t __cdecl __MINGW_NOTHROW	_mkgmtime32 (struct tm*);
_CRTIMP __time64_t __cdecl __MINGW_NOTHROW	_mkgmtime64 (struct tm*);
_CRTIMP char*	   __cdecl __MINGW_NOTHROW	_ctime32 (const __time32_t*);
_CRTIMP struct tm* __cdecl __MINGW_NOTHROW	_gmtime32 (const __time32_t*);
_CRTIMP struct tm* __cdecl __MINGW_NOTHROW	_localtime32 (const __time32_t*);
#ifndef _USE_32BIT_TIME_T
_CRTALIAS time_t	   __cdecl __MINGW_NOTHROW	time (time_t* _v)		  { return(_time64 (_v)); }
_CRTALIAS double	   __cdecl __MINGW_NOTHROW	difftime (time_t _v1, time_t _v2) { return(_difftime64 (_v1,_v2)); }
_CRTALIAS time_t	   __cdecl __MINGW_NOTHROW	mktime (struct tm* _v)		  { return(_mktime64 (_v)); }
_CRTALIAS time_t	   __cdecl __MINGW_NOTHROW	_mkgmtime (struct tm* _v)	  { return(_mkgmtime64 (_v)); }
_CRTALIAS char*		   __cdecl __MINGW_NOTHROW	ctime (const time_t* _v)	  { return(_ctime64 (_v)); }
_CRTALIAS struct tm*	   __cdecl __MINGW_NOTHROW	gmtime (const time_t* _v)	  { return(_gmtime64 (_v)); }
_CRTALIAS struct tm*	   __cdecl __MINGW_NOTHROW	localtime (const time_t* _v)	  { return(_localtime64 (_v)); }
#else
_CRTALIAS time_t	   __cdecl __MINGW_NOTHROW	time (time_t* _v)		  { return(_time32 (_v)); }
_CRTALIAS double	   __cdecl __MINGW_NOTHROW	difftime (time_t _v1, time_t _v2) { return(_difftime32 (_v1,_v2)); }
_CRTALIAS time_t	   __cdecl __MINGW_NOTHROW	mktime (struct tm* _v)		  { return(_mktime32 (_v)); }
_CRTALIAS time_t	   __cdecl __MINGW_NOTHROW	_mkgmtime (struct tm* _v)	  { return(_mkgmtime32 (_v)); }
_CRTALIAS char*		   __cdecl __MINGW_NOTHROW	ctime (const time_t* _v)	  { return(_ctime32 (_v)); }
_CRTALIAS struct tm*	   __cdecl __MINGW_NOTHROW	gmtime (const time_t* _v)	  { return(_gmtime32 (_v)); }
_CRTALIAS struct tm*	   __cdecl __MINGW_NOTHROW	localtime (const time_t* _v)	  { return(_localtime32 (_v)); }
#endif /* !_USE_32BIT_TIME_T */
#endif /* __MSVCRT_VERSION__ >= 0x0800 */

/* _daylight: non zero if daylight savings time is used.
 * _timezone: difference in seconds between GMT and local time.
 * _tzname: standard/daylight savings time zone names (an array with two
 *          elements).
 */
#ifdef __MSVCRT__

/* These are for compatibility with pre-VC 5.0 suppied MSVCRT. */
extern _CRTIMP int* __cdecl __MINGW_NOTHROW	__p__daylight (void);
extern _CRTIMP long* __cdecl __MINGW_NOTHROW	__p__timezone (void);
extern _CRTIMP char** __cdecl __MINGW_NOTHROW	__p__tzname (void);

__MINGW_IMPORT int	_daylight;
__MINGW_IMPORT long	_timezone;
__MINGW_IMPORT char 	*_tzname[2];

#else /* not __MSVCRT (ie. crtdll) */

#ifndef __DECLSPEC_SUPPORTED

extern int*	_imp___daylight_dll;
extern long*	_imp___timezone_dll;
extern char**	_imp___tzname;

#define _daylight	(*_imp___daylight_dll)
#define _timezone	(*_imp___timezone_dll)
#define _tzname		(*_imp___tzname)

#else /* __DECLSPEC_SUPPORTED */

__MINGW_IMPORT int	_daylight_dll;
__MINGW_IMPORT long	_timezone_dll;
__MINGW_IMPORT char*	_tzname[2];

#define _daylight	_daylight_dll
#define _timezone	_timezone_dll

#endif /* __DECLSPEC_SUPPORTED */
#endif /* ! __MSVCRT__ */
#endif /* ! __STRICT_ANSI__ */

#ifndef _NO_OLDNAMES
#ifdef __MSVCRT__

/* These go in the oldnames import library for MSVCRT.
 */
__MINGW_IMPORT int	daylight;
__MINGW_IMPORT long	timezone;
__MINGW_IMPORT char 	*tzname[2];

#else /* ! __MSVCRT__ */
/*
 * CRTDLL is royally messed up when it comes to these macros.
 * TODO: import and alias these via oldnames import library instead
 * of macros.
 */
#define daylight        _daylight
/*
 * NOTE: timezone not defined as a macro because it would conflict with
 * struct timezone in sys/time.h.  Also, tzname used to a be macro, but
 * now it's in moldname.
 */
__MINGW_IMPORT char 	*tzname[2];

#endif /* ! __MSVCRT__ */
#endif /* ! _NO_OLDNAMES */

#ifndef _WTIME_DEFINED
/* wide function prototypes, also declared in wchar.h */
#ifndef __STRICT_ANSI__
#ifdef __MSVCRT__
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW	_wasctime(const struct tm*);
#if __MSVCRT_VERSION__ < 0x0800
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW	_wctime(const time_t*);
#endif
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW	_wstrdate(wchar_t*);
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW	_wstrtime(wchar_t*);
#if __MSVCRT_VERSION__ >= 0x0601
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW	_wctime64 (const __time64_t*);
#endif
#if __MSVCRT_VERSION__ >= 0x0800
_CRTIMP wchar_t* __cdecl __MINGW_NOTHROW	_wctime32 (const __time32_t*);
#ifndef _USE_32BIT_TIME_T
_CRTALIAS wchar_t* __cdecl __MINGW_NOTHROW	_wctime (const time_t* _v) { return(_wctime64 (_v)); }
#else
_CRTALIAS wchar_t* __cdecl __MINGW_NOTHROW	_wctime (const time_t* _v) { return(_wctime32 (_v)); }
#endif
#endif /* __MSVCRT_VERSION__ >= 0x0800 */
#endif /*  __MSVCRT__ */
#endif /* __STRICT_ANSI__ */
_CRTIMP size_t __cdecl __MINGW_NOTHROW		wcsftime (wchar_t*, size_t, const wchar_t*, const struct tm*);
#define _WTIME_DEFINED
#endif /* _WTIME_DEFINED */

_END_C_DECLS

/* -------------------------------------------------------------------
 * CHEF PATCHES
 *
 * PROVIDE clock_gettime ETC. IN time.h FOR POSIX COMPLIANCE.
 *
 * This code was copied from the 64-bit TDM gcc compiler headers.  It
 * is here to allow certain libraries (like libxslt) to compile
 * because they assume that they are only going to be built on a POSIX
 * system.  The C99 standards do not require that these functions be
 * available but most POSIX systems provide them unless strict x-play
 * compatibility is requested.
 *
 * On windows, configure could possibly identify that these functions
 * are unavailable but since it tests for function availability to
 * attempting to link a binary with said functions, these tests
 * succeed with our TDM mingw runtime (because we indeed support these
 * posix compatibility methods).  Hence we pretend like we are a POSIX
 * compliant system and export these methods.
 */

/* POSIX 2008 says clock_gettime and timespec are defined in time.h header,
   but other systems - like Linux, Solaris, etc - tend to declare such
   recent extensions only if the following guards are met.  */
#if !defined(IN_WINPTHREAD) && \
	((!defined(_STRICT_STDC) && !defined(__XOPEN_OR_POSIX)) || \
	 (_POSIX_C_SOURCE > 2) || defined(__EXTENSIONS__))
#include <pthread_time.h>
#endif

/* END OF CHEF PATCHES
 * -------------------------------------------------------------------
 */

#endif /* ! RC_INVOKED */
#endif /* ! _TIME_H: $RCSfile: time.h,v $: end of file */
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/time.h to tempfile /tmp/chef-rest20170405-7856-eax7gb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
seven_zip Cookbook CHANGELOG
========================
This file is used to list changes made in each version of the seven_zip cookbook.

v2.0.2
------
- Add timeout to extract action on seven\_zip resource and configurable default\_extract_timeout attribute.

v2.0.1
------
- [GH Issue 21 - NoMethodError: Undefined method or attribute `kernel' on `node'](https://github.com/daptiv/seven_zip/issues/21).

v2.0.0
------
- [Upgrade to 7-Zip 15.14](https://github.com/daptiv/seven_zip/pull/9).
- [7-Zip now installed to the default MSI location by default](https://github.com/daptiv/seven_zip/pull/11).
- [7z.exe is located using the Windows registry unless the home attribute is explicitly set](https://github.com/daptiv/seven_zip/pull/10).
- [7-Zip is only added to the Windows PATH if the syspath attribute is set](https://github.com/daptiv/seven_zip/pull/11).
- [Installation idempotence check was fixed](https://github.com/daptiv/seven_zip/pull/14), package name was corrected.
- [TravisCI build added](https://github.com/daptiv/seven_zip/pull/12).
- [ServerSpec tests added](https://github.com/daptiv/seven_zip/pull/9)
- [Document Archive LRWP](https://github.com/daptiv/seven_zip/pull/6)

v1.0.2
------
- [COOK-3476 - Upgrade to 7-zip 9.22](https://tickets.opscode.com/browse/COOK-3476)

1.0.0
-----
- initial release
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004b24ba8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/seven_zip/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004b24bf8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "seven_zip",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-je9x2j
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004a5d3f0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/resources/get.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004a5d440>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "resources",
   "get.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: mingw
# Resource:: get
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Installs the core msys utilities needed for mingw/git/any other posix
# based toolchain at a desired location using mingw-get.exe.

property :package, kind_of: String, name_property: true
property :root, kind_of: String, required: true

resource_name :mingw_get

action_class do
  def mingw_do_action(action_cmd)
    seven_zip_archive "fetching mingw-get to #{win_friendly_path(root)}" do
      source 'http://iweb.dl.sourceforge.net/project/mingw/Installer/mingw-get/mingw-get-0.6.2-beta-20131004-1/mingw-get-0.6.2-mingw32-beta-20131004-1-bin.zip'
      path root
      checksum '2e0e9688d42adc68c5611759947e064156e169ff871816cae52d33ee0655826d'
      not_if do
        ::File.exist?(::File.join(root, 'bin/mingw-get.exe'))
      end
    end

    execute "performing #{action_cmd} for #{package}" do
      command ".\\bin\\mingw-get.exe -v #{action_cmd} #{package}"
      cwd root
    end
  end
end

action :install do
  mingw_do_action('install')
end

action :upgrade do
  mingw_do_action('upgrade')
end

action :remove do
  mingw_do_action('remove')
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/resources/get.rb to tempfile /tmp/chef-rest20170405-7856-1trnrhg
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/resources/get.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/files/default/pthread.h
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000048e2ae8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/files/default/pthread.h",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000048e2b38>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "files",
   "default",
   "pthread.h"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Prepend values from the parent environment to msys2 environment variables.

export PKG_CONFIG_PATH="${PREMSYS2_PKG_CONFIG_PATH:+${PREMSYS2_PKG_CONFIG_PATH}:}${PKG_CONFIG_PATH}"

# Instead of placing our entire windows path into msys2, we can selectively
# prepend just the important parts that we need. This also ensures that
# we don't accidentally add other unnecessary chef or git msys2 library
# files in the path.
export PATH="${PREMSYS2_PATH:+${PREMSYS2_PATH}:}${PATH}"

# TODO: If there are other variabled we want to control like MANPATH or ACLOCALPATH,
# add those here.

--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom_prefix.sh to tempfile /tmp/chef-rest20170405-7856-1dagz5g
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/files/default/custom_prefix.sh in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/files/default/time.h in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000482a3d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000482a538>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   ".foodcritic"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC016
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000049ec448
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000049ec538>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: mingw
# Recipe:: default
#
# Copyright:: 2016, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

include_recipe 'seven_zip::default'
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/.foodcritic to tempfile /tmp/chef-rest20170405-7856-8eq1u0
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-53ux12
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/mingw/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046d8540
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046d8590>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# mingw Cookbook CHANGELOG

This file is used to list changes made in each version of the mingw cookbook.

## 2.0.0 (2017-02-27)

- Require Chef 12.5 and remove compat_resource dependency

## 1.2.5 (2017-01-18)

- Require a working compat_resource

## v1.2.4 (2016-07-26)

- New msys2 shells do not inherit PATH from windows. Provide a way for
  clients to do this.

## v1.2.3 (2016-07-25)

- If PKG_CONFIG_PATH is already defined, honor it in the msys2 shell.

## v1.2.2 (2016-06-24)

- Download msys2 from the primary download url (instead of a specific mirror).

## v1.2.1 (2016-06-23)

- Fix msys2 initial install/upgrade steps that dependended on file modification time.
- Make msys2_package :install idempotent - it should not reinstall packages.
- Do not allow bash.exe to be called if MSYSTEM is undefined.

## v1.2.0 (2016-06-03)
- Updating to fix the issue where msys2 bash does not inherit the cwd correctly

## v1.1.0 (2016-06-03)
- Add msys2 based compiler support using the new msys2_package resource

## v1.0.0 (2016-05-11)

- Remove unnecessary default_action from the resources
- Depend on compat_resource cookbook to add Chef 12.1 - 12.4 compatbility
- Add this changelog file
- Fix license metadata in metadata.rb
- Disable FC016 check
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-152wtg9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/certificate_binding.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004636c18
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/resources/certificate_binding.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004636c68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "certificate_binding.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook Name:: seven_zip
# Attribute:: default
#
# Copyright:: Copyright (c) 2011-2016 Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if node['kernel']['machine'] == 'x86_64'
  default['seven_zip']['url']          = 'http://www.7-zip.org/a/7z1514-x64.msi'
  default['seven_zip']['checksum']     = 'cefe1a9092d8a6be68468c33910d6206b40e934fb63cab686c5cccf369fbf712'
  default['seven_zip']['package_name'] = '7-Zip 15.14 (x64 edition)'
else
  default['seven_zip']['url']          = 'http://www.7-zip.org/a/7z1514.msi'
  default['seven_zip']['checksum']     = 'eaf58e29941d8ca95045946949d75d9b5455fac167df979a7f8e4a6bf2d39680'
  default['seven_zip']['package_name'] = '7-Zip 15.14'
end

default['seven_zip']['default_extract_timeout'] = 600
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
/*
   Copyright (c) 2011-2013 mingw-w64 project

   Permission is hereby granted, free of charge, to any person obtaining a
   copy of this software and associated documentation files (the "Software"),
   to deal in the Software without restriction, including without limitation
   the rights to use, copy, modify, merge, publish, distribute, sublicense,
   and/or sell copies of the Software, and to permit persons to whom the
   Software is furnished to do so, subject to the following conditions:

   The above copyright notice and this permission notice shall be included in
   all copies or substantial portions of the Software.

   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
   FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
   DEALINGS IN THE SOFTWARE.
*/

/*
 * Parts of this library are derived by:
 *
 * Posix Threads library for Microsoft Windows
 *
 * Use at own risk, there is no implied warranty to this code.
 * It uses undocumented features of Microsoft Windows that can change
 * at any time in the future.
 *
 * (C) 2010 Lockless Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without modification,
 * are permitted provided that the following conditions are met:
 *
 *
 *  * Redistributions of source code must retain the above copyright notice,
 *    this list of conditions and the following disclaimer.
 *  * Redistributions in binary form must reproduce the above copyright notice,
 *    this list of conditions and the following disclaimer in the documentation
 *    and/or other materials provided with the distribution.
 *  * Neither the name of Lockless Inc. nor the names of its contributors may be
 *    used to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AN
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF
 * LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
 * OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#ifndef WIN_PTHREADS_H
#define WIN_PTHREADS_H

#include <stddef.h>
#include <errno.h>
#include <sys/types.h>

#include <process.h>
#include <limits.h>
#include <signal.h>

#include <sys/timeb.h>

#include "pthread_compat.h"

#ifdef __cplusplus
extern "C" {
#endif

#define __WINPTHREADS_VERSION_MAJOR 0
#define __WINPTHREADS_VERSION_MINOR 5
#define __WINPTHREADS_VERSION_PATCHLEVEL 0

/* MSB 8-bit major version, 8-bit minor version, 16-bit patch level.  */
#define __WINPTHREADS_VERSION 0x00050000

#if defined DLL_EXPORT && !defined WINPTHREAD_STATIC
#ifdef IN_WINPTHREAD
#define WINPTHREAD_API __declspec(dllexport)
#else
#define WINPTHREAD_API __declspec(dllimport)
#endif
#else
#define WINPTHREAD_API
#endif

/* #define WINPTHREAD_DBG 1 */

/* Compatibility stuff: */
#define RWLS_PER_THREAD						8

/* Error-codes.  */
#ifndef ETIMEDOUT
#define ETIMEDOUT	138
#endif
#ifndef ENOTSUP
#define ENOTSUP		129
#endif
#ifndef EWOULDBLOCK
#define EWOULDBLOCK	140
#endif

/* pthread specific defines.  */

#define PTHREAD_CANCEL_DISABLE 0
#define PTHREAD_CANCEL_ENABLE 0x01

#define PTHREAD_CANCEL_DEFERRED 0
#define PTHREAD_CANCEL_ASYNCHRONOUS 0x02

#define PTHREAD_CREATE_JOINABLE 0
#define PTHREAD_CREATE_DETACHED 0x04

#define PTHREAD_EXPLICIT_SCHED 0
#define PTHREAD_INHERIT_SCHED 0x08

#define PTHREAD_SCOPE_PROCESS 0
#define PTHREAD_SCOPE_SYSTEM 0x10

#define PTHREAD_DEFAULT_ATTR (PTHREAD_CANCEL_ENABLE)

#define PTHREAD_CANCELED ((void *) (intptr_t) 0xDEADBEEF)

#define _PTHREAD_NULL_THREAD ((pthread_t) 0)

#define PTHREAD_ONCE_INIT 0

#define PTHREAD_DESTRUCTOR_ITERATIONS 256
#define PTHREAD_KEYS_MAX (1<<20)

#define PTHREAD_MUTEX_NORMAL 0
#define PTHREAD_MUTEX_ERRORCHECK 1
#define PTHREAD_MUTEX_RECURSIVE 2
#define PTHREAD_MUTEX_DEFAULT PTHREAD_MUTEX_NORMAL

#define PTHREAD_MUTEX_SHARED 1
#define PTHREAD_MUTEX_PRIVATE 0

#define PTHREAD_PRIO_NONE 0
#define PTHREAD_PRIO_INHERIT 8
#define PTHREAD_PRIO_PROTECT 16
#define PTHREAD_PRIO_MULT 32
#define PTHREAD_PROCESS_SHARED 1
#define PTHREAD_PROCESS_PRIVATE 0

#define PTHREAD_MUTEX_FAST_NP		PTHREAD_MUTEX_NORMAL
#define PTHREAD_MUTEX_TIMED_NP		PTHREAD_MUTEX_FAST_NP
#define PTHREAD_MUTEX_ADAPTIVE_NP	PTHREAD_MUTEX_FAST_NP
#define PTHREAD_MUTEX_ERRORCHECK_NP	PTHREAD_MUTEX_ERRORCHECK
#define PTHREAD_MUTEX_RECURSIVE_NP	PTHREAD_MUTEX_RECURSIVE

void * WINPTHREAD_API pthread_timechange_handler_np(void * dummy);
/* int    WINPTHREAD_API pthread_delay_np (const struct timespec *interval); */
int    WINPTHREAD_API pthread_num_processors_np(void);
int    WINPTHREAD_API pthread_set_num_processors_np(int n);

#define PTHREAD_BARRIER_SERIAL_THREAD 1

/* maximum number of times a read lock may be obtained */
#define	MAX_READ_LOCKS		(INT_MAX - 1)

/* No fork() in windows - so ignore this */
#define pthread_atfork(F1,F2,F3) 0

/* unsupported stuff: */
#define pthread_mutex_getprioceiling(M, P) ENOTSUP
#define pthread_mutex_setprioceiling(M, P) ENOTSUP
#define pthread_getcpuclockid(T, C) ENOTSUP
#define pthread_attr_getguardsize(A, S) ENOTSUP
#define pthread_attr_setgaurdsize(A, S) ENOTSUP

typedef long pthread_once_t;
typedef unsigned pthread_mutexattr_t;
typedef unsigned pthread_key_t;
typedef void *pthread_barrierattr_t;
typedef int pthread_condattr_t;
typedef int pthread_rwlockattr_t;

/*
struct _pthread_v;

typedef struct pthread_t {
  struct _pthread_v *p;
  int x;
} pthread_t;
*/

typedef uintptr_t pthread_t;

typedef struct _pthread_cleanup _pthread_cleanup;
struct _pthread_cleanup
{
    void (*func)(void *);
    void *arg;
    _pthread_cleanup *next;
};

#define pthread_cleanup_push(F, A)\
{\
    const _pthread_cleanup _pthread_cup = {(F), (A), *pthread_getclean()};\
    __sync_synchronize();\
    *pthread_getclean() = (_pthread_cleanup *) &_pthread_cup;\
    __sync_synchronize()

/* Note that if async cancelling is used, then there is a race here */
#define pthread_cleanup_pop(E)\
    (*pthread_getclean() = _pthread_cup.next, (E?_pthread_cup.func((pthread_once_t *)_pthread_cup.arg):0));}

/* -------------------------------------------------------------------
 * CHEF PATCHES
 *
 * PREVENT REDECLERATION OF timespec
 *
 * The original header here assumed that struct timespec was not
 * available on windows under mingw. So it redeclared timespec itself.
 *
 * This currently generates and error.  With recent binutils, timespec
 * is declared in time.h but in a slightly different manner from the
 * traditional posix definition (it involves unions) to account for
 * MSVC related issues.
 *
 * They need to go through a lot of hoops to declare the exact size
 * and layout of timespec because MSVC uses a slightly more loltastic
 * definition of time_t than everyone else in the universe.
 * Traditionally, time_t was an integral quantity that represents the
 * number of seconds since the unix epoch and it's 32-bits wide.
 * This leads to the Y2038 problem where the timestamp will overflow.
 * MSVC "solves" this by changing the definition of time_t to 64-bit
 * on 64-bit platforms which wreaks havoc on a large number of
 * structs that need to deal with the new layout (including timespec).
 * Thankfully, we are using a compiler that sticks to the older
 * definition of time_t - so as long as we don't attempt to link it
 * to any MSVC generated libraries, we should be ok.  The winpthreads
 * compatibility layer that ships with TDM GCC was patched and
 * compiled under these assumptions.
 *
 * Since we are assuming that we aren't going to generally be mixing
 * MSVC generated and mingw generated dlls and TDM GCC provides us with
 * good old-fashioned system libraries and dlls, we can simply delete
 * the declaration of timespec here and use parts/time.h from mingwrt
 * instead.
 */

#define __need_time_t
#define __need_struct_timespec
#define _FAKE_TIME_H_SOURCED 1
#include <parts/time.h>

/* END OF CHEF PATCHES
 * -------------------------------------------------------------------
 */

#ifndef SCHED_OTHER
/* Some POSIX realtime extensions, mostly stubbed */
#define SCHED_OTHER     0
#define SCHED_FIFO      1
#define SCHED_RR        2
#define SCHED_MIN       SCHED_OTHER
#define SCHED_MAX       SCHED_RR

struct sched_param {
  int sched_priority;
};

int WINPTHREAD_API sched_yield(void);
int WINPTHREAD_API sched_get_priority_min(int pol);
int WINPTHREAD_API sched_get_priority_max(int pol);
int WINPTHREAD_API sched_getscheduler(pid_t pid);
int WINPTHREAD_API sched_setscheduler(pid_t pid, int pol, const struct sched_param *param);

#endif

typedef struct pthread_attr_t pthread_attr_t;
struct pthread_attr_t
{
    unsigned p_state;
    void *stack;
    size_t s_size;
    struct sched_param param;
};

int WINPTHREAD_API pthread_attr_setschedparam(pthread_attr_t *attr, const struct sched_param *param);
int WINPTHREAD_API pthread_attr_getschedparam(const pthread_attr_t *attr, struct sched_param *param);
int WINPTHREAD_API pthread_getschedparam(pthread_t thread, int *pol, struct sched_param *param);
int WINPTHREAD_API pthread_setschedparam(pthread_t thread, int pol, const struct sched_param *param);
int WINPTHREAD_API pthread_attr_setschedpolicy (pthread_attr_t *attr, int pol);
int WINPTHREAD_API pthread_attr_getschedpolicy (pthread_attr_t *attr, int *pol);

/* synchronization objects */
typedef void	*pthread_spinlock_t;
typedef void	*pthread_mutex_t;
typedef void	*pthread_cond_t;
typedef void	*pthread_rwlock_t;
typedef void	*pthread_barrier_t;

#define PTHREAD_MUTEX_NORMAL 0
#define PTHREAD_MUTEX_ERRORCHECK 1
#define PTHREAD_MUTEX_RECURSIVE 2

#define GENERIC_INITIALIZER				((void *) (size_t) -1)
#define GENERIC_ERRORCHECK_INITIALIZER			((void *) (size_t) -2)
#define GENERIC_RECURSIVE_INITIALIZER			((void *) (size_t) -3)
#define GENERIC_NORMAL_INITIALIZER			((void *) (size_t) -1)
#define PTHREAD_MUTEX_INITIALIZER			(pthread_mutex_t)GENERIC_INITIALIZER
#define PTHREAD_RECURSIVE_MUTEX_INITIALIZER		(pthread_mutex_t)GENERIC_RECURSIVE_INITIALIZER
#define PTHREAD_ERRORCHECK_MUTEX_INITIALIZER		(pthread_mutex_t)GENERIC_ERRORCHECK_INITIALIZER
#define PTHREAD_NORMAL_MUTEX_INITIALIZER		(pthread_mutex_t)GENERIC_NORMAL_INITIALIZER
#define PTHREAD_DEFAULT_MUTEX_INITIALIZER		PTHREAD_NORMAL_MUTEX_INITIALIZER
#define PTHREAD_COND_INITIALIZER			(pthread_cond_t)GENERIC_INITIALIZER
#define PTHREAD_RWLOCK_INITIALIZER			(pthread_rwlock_t)GENERIC_INITIALIZER
#define PTHREAD_SPINLOCK_INITIALIZER			(pthread_spinlock_t)GENERIC_INITIALIZER

extern void WINPTHREAD_API (**_pthread_key_dest)(void *);
int         WINPTHREAD_API pthread_key_create(pthread_key_t *key, void (* dest)(void *));
int         WINPTHREAD_API pthread_key_delete(pthread_key_t key);
void *      WINPTHREAD_API pthread_getspecific(pthread_key_t key);
int         WINPTHREAD_API pthread_setspecific(pthread_key_t key, const void *value);

pthread_t WINPTHREAD_API pthread_self(void);
int       WINPTHREAD_API pthread_once(pthread_once_t *o, void (*func)(void));
void      WINPTHREAD_API pthread_testcancel(void);
int       WINPTHREAD_API pthread_equal(pthread_t t1, pthread_t t2);
void      WINPTHREAD_API pthread_tls_init(void);
void      WINPTHREAD_API _pthread_cleanup_dest(pthread_t t);
int       WINPTHREAD_API pthread_get_concurrency(int *val);
int       WINPTHREAD_API pthread_set_concurrency(int val);
void      WINPTHREAD_API pthread_exit(void *res);
void      WINPTHREAD_API _pthread_invoke_cancel(void);
int       WINPTHREAD_API pthread_cancel(pthread_t t);
int       WINPTHREAD_API pthread_kill(pthread_t t, int sig);
unsigned  WINPTHREAD_API _pthread_get_state(const pthread_attr_t *attr, unsigned flag);
int       WINPTHREAD_API _pthread_set_state(pthread_attr_t *attr, unsigned flag, unsigned val);
int       WINPTHREAD_API pthread_setcancelstate(int state, int *oldstate);
int       WINPTHREAD_API pthread_setcanceltype(int type, int *oldtype);
int       WINPTHREAD_API pthread_create_wrapper(void *args);
int       WINPTHREAD_API pthread_create(pthread_t *th, const pthread_attr_t *attr, void *(* func)(void *), void *arg);
int       WINPTHREAD_API pthread_join(pthread_t t, void **res);
int       WINPTHREAD_API pthread_detach(pthread_t t);

int WINPTHREAD_API pthread_rwlock_init(pthread_rwlock_t *rwlock_, const pthread_rwlockattr_t *attr);
int WINPTHREAD_API pthread_rwlock_wrlock(pthread_rwlock_t *l);
int WINPTHREAD_API pthread_rwlock_timedwrlock(pthread_rwlock_t *rwlock, const struct timespec *ts);
int WINPTHREAD_API pthread_rwlock_rdlock(pthread_rwlock_t *l);
int WINPTHREAD_API pthread_rwlock_timedrdlock(pthread_rwlock_t *l, const struct timespec *ts);
int WINPTHREAD_API pthread_rwlock_unlock(pthread_rwlock_t *l);
int WINPTHREAD_API pthread_rwlock_tryrdlock(pthread_rwlock_t *l);
int WINPTHREAD_API pthread_rwlock_trywrlock(pthread_rwlock_t *l);
int WINPTHREAD_API pthread_rwlock_destroy (pthread_rwlock_t *l);

int WINPTHREAD_API pthread_cond_init(pthread_cond_t *cv, const pthread_condattr_t *a);
int WINPTHREAD_API pthread_cond_destroy(pthread_cond_t *cv);
int WINPTHREAD_API pthread_cond_signal (pthread_cond_t *cv);
int WINPTHREAD_API pthread_cond_broadcast (pthread_cond_t *cv);
int WINPTHREAD_API pthread_cond_wait (pthread_cond_t *cv, pthread_mutex_t *external_mutex);
int WINPTHREAD_API pthread_cond_timedwait(pthread_cond_t *cv, pthread_mutex_t *external_mutex, const struct timespec *t);
int WINPTHREAD_API pthread_cond_timedwait_relative_np(pthread_cond_t *cv, pthread_mutex_t *external_mutex, const struct timespec *t);

int WINPTHREAD_API pthread_mutex_lock(pthread_mutex_t *m);
int WINPTHREAD_API pthread_mutex_timedlock(pthread_mutex_t *m, const struct timespec *ts);
int WINPTHREAD_API pthread_mutex_unlock(pthread_mutex_t *m);
int WINPTHREAD_API pthread_mutex_trylock(pthread_mutex_t *m);
int WINPTHREAD_API pthread_mutex_init(pthread_mutex_t *m, const pthread_mutexattr_t *a);
int WINPTHREAD_API pthread_mutex_destroy(pthread_mutex_t *m);

int WINPTHREAD_API pthread_barrier_destroy(pthread_barrier_t *b);
int WINPTHREAD_API pthread_barrier_init(pthread_barrier_t *b, const void *attr, unsigned int count);
int WINPTHREAD_API pthread_barrier_wait(pthread_barrier_t *b);

int WINPTHREAD_API pthread_spin_init(pthread_spinlock_t *l, int pshared);
int WINPTHREAD_API pthread_spin_destroy(pthread_spinlock_t *l);
/* No-fair spinlock due to lack of knowledge of thread number.  */
int WINPTHREAD_API pthread_spin_lock(pthread_spinlock_t *l);
int WINPTHREAD_API pthread_spin_trylock(pthread_spinlock_t *l);
int WINPTHREAD_API pthread_spin_unlock(pthread_spinlock_t *l);

int WINPTHREAD_API pthread_attr_init(pthread_attr_t *attr);
int WINPTHREAD_API pthread_attr_destroy(pthread_attr_t *attr);
int WINPTHREAD_API pthread_attr_setdetachstate(pthread_attr_t *a, int flag);
int WINPTHREAD_API pthread_attr_getdetachstate(const pthread_attr_t *a, int *flag);
int WINPTHREAD_API pthread_attr_setinheritsched(pthread_attr_t *a, int flag);
int WINPTHREAD_API pthread_attr_getinheritsched(const pthread_attr_t *a, int *flag);
int WINPTHREAD_API pthread_attr_setscope(pthread_attr_t *a, int flag);
int WINPTHREAD_API pthread_attr_getscope(const pthread_attr_t *a, int *flag);
int WINPTHREAD_API pthread_attr_getstackaddr(pthread_attr_t *attr, void **stack);
int WINPTHREAD_API pthread_attr_setstackaddr(pthread_attr_t *attr, void *stack);
int WINPTHREAD_API pthread_attr_getstacksize(const pthread_attr_t *attr, size_t *size);
int WINPTHREAD_API pthread_attr_setstacksize(pthread_attr_t *attr, size_t size);

int WINPTHREAD_API pthread_mutexattr_init(pthread_mutexattr_t *a);
int WINPTHREAD_API pthread_mutexattr_destroy(pthread_mutexattr_t *a);
int WINPTHREAD_API pthread_mutexattr_gettype(const pthread_mutexattr_t *a, int *type);
int WINPTHREAD_API pthread_mutexattr_settype(pthread_mutexattr_t *a, int type);
int WINPTHREAD_API pthread_mutexattr_getpshared(const pthread_mutexattr_t *a, int *type);
int WINPTHREAD_API pthread_mutexattr_setpshared(pthread_mutexattr_t * a, int type);
int WINPTHREAD_API pthread_mutexattr_getprotocol(const pthread_mutexattr_t *a, int *type);
int WINPTHREAD_API pthread_mutexattr_setprotocol(pthread_mutexattr_t *a, int type);
int WINPTHREAD_API pthread_mutexattr_getprioceiling(const pthread_mutexattr_t *a, int * prio);
int WINPTHREAD_API pthread_mutexattr_setprioceiling(pthread_mutexattr_t *a, int prio);
int WINPTHREAD_API pthread_getconcurrency(void);
int WINPTHREAD_API pthread_setconcurrency(int new_level);

int WINPTHREAD_API pthread_condattr_destroy(pthread_condattr_t *a);
int WINPTHREAD_API pthread_condattr_init(pthread_condattr_t *a);
int WINPTHREAD_API pthread_condattr_getpshared(const pthread_condattr_t *a, int *s);
int WINPTHREAD_API pthread_condattr_setpshared(pthread_condattr_t *a, int s);

#ifndef __clockid_t_defined
typedef int clockid_t;
#define __clockid_t_defined 1
#endif  /* __clockid_t_defined */

int WINPTHREAD_API pthread_condattr_getclock (const pthread_condattr_t *attr,
       clockid_t *clock_id);
int WINPTHREAD_API pthread_condattr_setclock(pthread_condattr_t *attr,
       clockid_t clock_id);
int WINPTHREAD_API __pthread_clock_nanosleep(clockid_t clock_id, int flags, const struct timespec *rqtp, struct timespec *rmtp);

int WINPTHREAD_API pthread_barrierattr_init(void **attr);
int WINPTHREAD_API pthread_barrierattr_destroy(void **attr);
int WINPTHREAD_API pthread_barrierattr_setpshared(void **attr, int s);
int WINPTHREAD_API pthread_barrierattr_getpshared(void **attr, int *s);

/* Private extensions for analysis and internal use.  */
struct _pthread_cleanup ** WINPTHREAD_API pthread_getclean (void);
void *                     WINPTHREAD_API pthread_gethandle (pthread_t t);
void *                     WINPTHREAD_API pthread_getevent ();

unsigned long long         WINPTHREAD_API _pthread_rel_time_in_ms(const struct timespec *ts);
unsigned long long         WINPTHREAD_API _pthread_time_in_ms(void);
unsigned long long         WINPTHREAD_API _pthread_time_in_ms_from_timespec(const struct timespec *ts);
int                        WINPTHREAD_API _pthread_tryjoin (pthread_t t, void **res);
int                        WINPTHREAD_API pthread_rwlockattr_destroy(pthread_rwlockattr_t *a);
int                        WINPTHREAD_API pthread_rwlockattr_getpshared(pthread_rwlockattr_t *a, int *s);
int                        WINPTHREAD_API pthread_rwlockattr_init(pthread_rwlockattr_t *a);
int                        WINPTHREAD_API pthread_rwlockattr_setpshared(pthread_rwlockattr_t *a, int s);

#ifndef SIG_BLOCK
#define SIG_BLOCK 0
#endif
#ifndef SIG_UNBLOCK
#define SIG_UNBLOCK 1
#endif
#ifndef SIG_SETMASK
#define SIG_SETMASK 2
#endif

#include <pthread_unistd.h>

#undef _POSIX_THREAD_DESTRUCTOR_ITERATIONS
#define _POSIX_THREAD_DESTRUCTOR_ITERATIONS     PTHREAD_DESTRUCTOR_ITERATIONS

#undef _POSIX_THREAD_KEYS_MAX
#define _POSIX_THREAD_KEYS_MAX                  PTHREAD_KEYS_MAX

#undef PTHREAD_THREADS_MAX
#define PTHREAD_THREADS_MAX                     2019

#undef _POSIX_SEM_NSEMS_MAX
#define _POSIX_SEM_NSEMS_MAX                    256

#undef SEM_NSEMS_MAX
#define SEM_NSEMS_MAX                           1024

/* Wrap cancellation points.  */
#ifdef __WINPTRHEAD_ENABLE_WRAP_API
#define accept(...) (pthread_testcancel(), accept(__VA_ARGS__))
#define aio_suspend(...) (pthread_testcancel(), aio_suspend(__VA_ARGS__))
#define clock_nanosleep(...) (pthread_testcancel(), clock_nanosleep(__VA_ARGS__))
#define close(...) (pthread_testcancel(), close(__VA_ARGS__))
#define connect(...) (pthread_testcancel(), connect(__VA_ARGS__))
#define creat(...) (pthread_testcancel(), creat(__VA_ARGS__))
#define fcntl(...) (pthread_testcancel(), fcntl(__VA_ARGS__))
#define fdatasync(...) (pthread_testcancel(), fdatasync(__VA_ARGS__))
#define fsync(...) (pthread_testcancel(), fsync(__VA_ARGS__))
#define getmsg(...) (pthread_testcancel(), getmsg(__VA_ARGS__))
#define getpmsg(...) (pthread_testcancel(), getpmsg(__VA_ARGS__))
#define lockf(...) (pthread_testcancel(), lockf(__VA_ARGS__))
#define mg_receive(...) (pthread_testcancel(), mg_receive(__VA_ARGS__))
#define mg_send(...) (pthread_testcancel(), mg_send(__VA_ARGS__))
#define mg_timedreceive(...) (pthread_testcancel(), mg_timedreceive(__VA_ARGS__))
#define mg_timessend(...) (pthread_testcancel(), mg_timedsend(__VA_ARGS__))
#define msgrcv(...) (pthread_testcancel(), msgrecv(__VA_ARGS__))
#define msgsnd(...) (pthread_testcancel(), msgsnd(__VA_ARGS__))
#define msync(...) (pthread_testcancel(), msync(__VA_ARGS__))
#define nanosleep(...) (pthread_testcancel(), nanosleep(__VA_ARGS__))
#define open(...) (pthread_testcancel(), open(__VA_ARGS__))
#define pause(...) (pthread_testcancel(), pause(__VA_ARGS__))
#define poll(...) (pthread_testcancel(), poll(__VA_ARGS__))
#define pread(...) (pthread_testcancel(), pread(__VA_ARGS__))
#define pselect(...) (pthread_testcancel(), pselect(__VA_ARGS__))
#define putmsg(...) (pthread_testcancel(), putmsg(__VA_ARGS__))
#define putpmsg(...) (pthread_testcancel(), putpmsg(__VA_ARGS__))
#define pwrite(...) (pthread_testcancel(), pwrite(__VA_ARGS__))
#define read(...) (pthread_testcancel(), read(__VA_ARGS__))
#define readv(...) (pthread_testcancel(), readv(__VA_ARGS__))
#define recv(...) (pthread_testcancel(), recv(__VA_ARGS__))
#define recvfrom(...) (pthread_testcancel(), recvfrom(__VA_ARGS__))
#define recvmsg(...) (pthread_testcancel(), recvmsg(__VA_ARGS__))
#define select(...) (pthread_testcancel(), select(__VA_ARGS__))
#define sem_timedwait(...) (pthread_testcancel(), sem_timedwait(__VA_ARGS__))
#define sem_wait(...) (pthread_testcancel(), sem_wait(__VA_ARGS__))
#define send(...) (pthread_testcancel(), send(__VA_ARGS__))
#define sendmsg(...) (pthread_testcancel(), sendmsg(__VA_ARGS__))
#define sendto(...) (pthread_testcancel(), sendto(__VA_ARGS__))
#define sigpause(...) (pthread_testcancel(), sigpause(__VA_ARGS__))
#define sigsuspend(...) (pthread_testcancel(), sigsuspend(__VA_ARGS__))
#define sigwait(...) (pthread_testcancel(), sigwait(__VA_ARGS__))
#define sigwaitinfo(...) (pthread_testcancel(), sigwaitinfo(__VA_ARGS__))
#define sleep(...) (pthread_testcancel(), sleep(__VA_ARGS__))
//#define Sleep(...) (pthread_testcancel(), Sleep(__VA_ARGS__))
#define system(...) (pthread_testcancel(), system(__VA_ARGS__))
#define access(...) (pthread_testcancel(), access(__VA_ARGS__))
#define asctime(...) (pthread_testcancel(), asctime(__VA_ARGS__))
#define catclose(...) (pthread_testcancel(), catclose(__VA_ARGS__))
#define catgets(...) (pthread_testcancel(), catgets(__VA_ARGS__))
#define catopen(...) (pthread_testcancel(), catopen(__VA_ARGS__))
#define closedir(...) (pthread_testcancel(), closedir(__VA_ARGS__))
#define closelog(...) (pthread_testcancel(), closelog(__VA_ARGS__))
#define ctermid(...) (pthread_testcancel(), ctermid(__VA_ARGS__))
#define ctime(...) (pthread_testcancel(), ctime(__VA_ARGS__))
#define dbm_close(...) (pthread_testcancel(), dbm_close(__VA_ARGS__))
#define dbm_delete(...) (pthread_testcancel(), dbm_delete(__VA_ARGS__))
#define dbm_fetch(...) (pthread_testcancel(), dbm_fetch(__VA_ARGS__))
#define dbm_nextkey(...) (pthread_testcancel(), dbm_nextkey(__VA_ARGS__))
#define dbm_open(...) (pthread_testcancel(), dbm_open(__VA_ARGS__))
#define dbm_store(...) (pthread_testcancel(), dbm_store(__VA_ARGS__))
#define dlclose(...) (pthread_testcancel(), dlclose(__VA_ARGS__))
#define dlopen(...) (pthread_testcancel(), dlopen(__VA_ARGS__))
#define endgrent(...) (pthread_testcancel(), endgrent(__VA_ARGS__))
#define endhostent(...) (pthread_testcancel(), endhostent(__VA_ARGS__))
#define endnetent(...) (pthread_testcancel(), endnetent(__VA_ARGS__))
#define endprotoent(...) (pthread_testcancel(), endprotoend(__VA_ARGS__))
#define endpwent(...) (pthread_testcancel(), endpwent(__VA_ARGS__))
#define endservent(...) (pthread_testcancel(), endservent(__VA_ARGS__))
#define endutxent(...) (pthread_testcancel(), endutxent(__VA_ARGS__))
#define fclose(...) (pthread_testcancel(), fclose(__VA_ARGS__))
#define fflush(...) (pthread_testcancel(), fflush(__VA_ARGS__))
#define fgetc(...) (pthread_testcancel(), fgetc(__VA_ARGS__))
#define fgetpos(...) (pthread_testcancel(), fgetpos(__VA_ARGS__))
#define fgets(...) (pthread_testcancel(), fgets(__VA_ARGS__))
#define fgetwc(...) (pthread_testcancel(), fgetwc(__VA_ARGS__))
#define fgetws(...) (pthread_testcancel(), fgetws(__VA_ARGS__))
#define fmtmsg(...) (pthread_testcancel(), fmtmsg(__VA_ARGS__))
#define fopen(...) (pthread_testcancel(), fopen(__VA_ARGS__))
#define fpathconf(...) (pthread_testcancel(), fpathconf(__VA_ARGS__))
#define fprintf(...) (pthread_testcancel(), fprintf(__VA_ARGS__))
#define fputc(...) (pthread_testcancel(), fputc(__VA_ARGS__))
#define fputs(...) (pthread_testcancel(), fputs(__VA_ARGS__))
#define fputwc(...) (pthread_testcancel(), fputwc(__VA_ARGS__))
#define fputws(...) (pthread_testcancel(), fputws(__VA_ARGS__))
#define fread(...) (pthread_testcancel(), fread(__VA_ARGS__))
#define freopen(...) (pthread_testcancel(), freopen(__VA_ARGS__))
#define fscanf(...) (pthread_testcancel(), fscanf(__VA_ARGS__))
#define fseek(...) (pthread_testcancel(), fseek(__VA_ARGS__))
#define fseeko(...) (pthread_testcancel(), fseeko(__VA_ARGS__))
#define fsetpos(...) (pthread_testcancel(), fsetpos(__VA_ARGS__))
#define fstat(...) (pthread_testcancel(), fstat(__VA_ARGS__))
#define ftell(...) (pthread_testcancel(), ftell(__VA_ARGS__))
#define ftello(...) (pthread_testcancel(), ftello(__VA_ARGS__))
#define ftw(...) (pthread_testcancel(), ftw(__VA_ARGS__))
#define fwprintf(...) (pthread_testcancel(), fwprintf(__VA_ARGS__))
#define fwrite(...) (pthread_testcancel(), fwrite(__VA_ARGS__))
#define fwscanf(...) (pthread_testcancel(), fwscanf(__VA_ARGS__))
#define getaddrinfo(...) (pthread_testcancel(), getaddrinfo(__VA_ARGS__))
#define getc(...) (pthread_testcancel(), getc(__VA_ARGS__))
#define getc_unlocked(...) (pthread_testcancel(), getc_unlocked(__VA_ARGS__))
#define getchar(...) (pthread_testcancel(), getchar(__VA_ARGS__))
#define getchar_unlocked(...) (pthread_testcancel(), getchar_unlocked(__VA_ARGS__))
#define getcwd(...) (pthread_testcancel(), getcwd(__VA_ARGS__))
#define getdate(...) (pthread_testcancel(), getdate(__VA_ARGS__))
#define getgrent(...) (pthread_testcancel(), getgrent(__VA_ARGS__))
#define getgrgid(...) (pthread_testcancel(), getgrgid(__VA_ARGS__))
#define getgrgid_r(...) (pthread_testcancel(), getgrgid_r(__VA_ARGS__))
#define gergrnam(...) (pthread_testcancel(), getgrnam(__VA_ARGS__))
#define getgrnam_r(...) (pthread_testcancel(), getgrnam_r(__VA_ARGS__))
#define gethostbyaddr(...) (pthread_testcancel(), gethostbyaddr(__VA_ARGS__))
#define gethostbyname(...) (pthread_testcancel(), gethostbyname(__VA_ARGS__))
#define gethostent(...) (pthread_testcancel(), gethostent(__VA_ARGS__))
#define gethostid(...) (pthread_testcancel(), gethostid(__VA_ARGS__))
#define gethostname(...) (pthread_testcancel(), gethostname(__VA_ARGS__))
#define getlogin(...) (pthread_testcancel(), getlogin(__VA_ARGS__))
#define getlogin_r(...) (pthread_testcancel(), getlogin_r(__VA_ARGS__))
#define getnameinfo(...) (pthread_testcancel(), getnameinfo(__VA_ARGS__))
#define getnetbyaddr(...) (pthread_testcancel(), getnetbyaddr(__VA_ARGS__))
#define getnetbyname(...) (pthread_testcancel(), getnetbyname(__VA_ARGS__))
#define getnetent(...) (pthread_testcancel(), getnetent(__VA_ARGS__))
#define getopt(...) (pthread_testcancel(), getopt(__VA_ARGS__))
#define getprotobyname(...) (pthread_testcancel(), getprotobyname(__VA_ARGS__))
#define getprotobynumber(...) (pthread_testcancel(), getprotobynumber(__VA_ARGS__))
#define getprotoent(...) (pthread_testcancel(), getprotoent(__VA_ARGS__))
#define getpwent(...) (pthread_testcancel(), getpwent(__VA_ARGS__))
#define getpwnam(...) (pthread_testcancel(), getpwnam(__VA_ARGS__))
#define getpwnam_r(...) (pthread_testcancel(), getpwnam_r(__VA_ARGS__))
#define getpwuid(...) (pthread_testcancel(), getpwuid(__VA_ARGS__))
#define getpwuid_r(...) (pthread_testcancel(), getpwuid_r(__VA_ARGS__))
#define gets(...) (pthread_testcancel(), gets(__VA_ARGS__))
#define getservbyname(...) (pthread_testcancel(), getservbyname(__VA_ARGS__))
#define getservbyport(...) (pthread_testcancel(), getservbyport(__VA_ARGS__))
#define getservent(...) (pthread_testcancel(), getservent(__VA_ARGS__))
#define getutxent(...) (pthread_testcancel(), getutxent(__VA_ARGS__))
#define getutxid(...) (pthread_testcancel(), getutxid(__VA_ARGS__))
#define getutxline(...) (pthread_testcancel(), getutxline(__VA_ARGS__))
#undef getwc
#define getwc(...) (pthread_testcancel(), getwc(__VA_ARGS__))
#undef getwchar
#define getwchar(...) (pthread_testcancel(), getwchar(__VA_ARGS__))
#define getwd(...) (pthread_testcancel(), getwd(__VA_ARGS__))
#define glob(...) (pthread_testcancel(), glob(__VA_ARGS__))
#define iconv_close(...) (pthread_testcancel(), iconv_close(__VA_ARGS__))
#define iconv_open(...) (pthread_testcancel(), iconv_open(__VA_ARGS__))
#define ioctl(...) (pthread_testcancel(), ioctl(__VA_ARGS__))
#define link(...) (pthread_testcancel(), link(__VA_ARGS__))
#define localtime(...) (pthread_testcancel(), localtime(__VA_ARGS__))
#define lseek(...) (pthread_testcancel(), lseek(__VA_ARGS__))
#define lstat(...) (pthread_testcancel(), lstat(__VA_ARGS__))
#define mkstemp(...) (pthread_testcancel(), mkstemp(__VA_ARGS__))
#define nftw(...) (pthread_testcancel(), nftw(__VA_ARGS__))
#define opendir(...) (pthread_testcancel(), opendir(__VA_ARGS__))
#define openlog(...) (pthread_testcancel(), openlog(__VA_ARGS__))
#define pathconf(...) (pthread_testcancel(), pathconf(__VA_ARGS__))
#define pclose(...) (pthread_testcancel(), pclose(__VA_ARGS__))
#define perror(...) (pthread_testcancel(), perror(__VA_ARGS__))
#define popen(...) (pthread_testcancel(), popen(__VA_ARGS__))
#define posix_fadvise(...) (pthread_testcancel(), posix_fadvise(__VA_ARGS__))
#define posix_fallocate(...) (pthread_testcancel(), posix_fallocate(__VA_ARGS__))
#define posix_madvise(...) (pthread_testcancel(), posix_madvise(__VA_ARGS__))
#define posix_openpt(...) (pthread_testcancel(), posix_openpt(__VA_ARGS__))
#define posix_spawn(...) (pthread_testcancel(), posix_spawn(__VA_ARGS__))
#define posix_spawnp(...) (pthread_testcancel(), posix_spawnp(__VA_ARGS__))
#define posix_trace_clear(...) (pthread_testcancel(), posix_trace_clear(__VA_ARGS__))
#define posix_trace_close(...) (pthread_testcancel(), posix_trace_close(__VA_ARGS__))
#define posix_trace_create(...) (pthread_testcancel(), posix_trace_create(__VA_ARGS__))
#define posix_trace_create_withlog(...) (pthread_testcancel(), posix_trace_create_withlog(__VA_ARGS__))
#define posix_trace_eventtypelist_getne(...) (pthread_testcancel(), posix_trace_eventtypelist_getne(__VA_ARGS__))
#define posix_trace_eventtypelist_rewin(...) (pthread_testcancel(), posix_trace_eventtypelist_rewin(__VA_ARGS__))
#define posix_trace_flush(...) (pthread_testcancel(), posix_trace_flush(__VA_ARGS__))
#define posix_trace_get_attr(...) (pthread_testcancel(), posix_trace_get_attr(__VA_ARGS__))
#define posix_trace_get_filter(...) (pthread_testcancel(), posix_trace_get_filter(__VA_ARGS__))
#define posix_trace_get_status(...) (pthread_testcancel(), posix_trace_get_status(__VA_ARGS__))
#define posix_trace_getnext_event(...) (pthread_testcancel(), posix_trace_getnext_event(__VA_ARGS__))
#define posix_trace_open(...) (pthread_testcancel(), posix_trace_open(__VA_ARGS__))
#define posix_trace_rewind(...) (pthread_testcancel(), posix_trace_rewind(__VA_ARGS__))
#define posix_trace_setfilter(...) (pthread_testcancel(), posix_trace_setfilter(__VA_ARGS__))
#define posix_trace_shutdown(...) (pthread_testcancel(), posix_trace_shutdown(__VA_ARGS__))
#define posix_trace_timedgetnext_event(...) (pthread_testcancel(), posix_trace_timedgetnext_event(__VA_ARGS__))
#define posix_typed_mem_open(...) (pthread_testcancel(), posix_typed_mem_open(__VA_ARGS__))
#define printf(...) (pthread_testcancel(), printf(__VA_ARGS__))
#define putc(...) (pthread_testcancel(), putc(__VA_ARGS__))
#define putc_unlocked(...) (pthread_testcancel(), putc_unlocked(__VA_ARGS__))
#define putchar(...) (pthread_testcancel(), putchar(__VA_ARGS__))
#define putchar_unlocked(...) (pthread_testcancel(), putchar_unlocked(__VA_ARGS__))
#define puts(...) (pthread_testcancel(), puts(__VA_ARGS__))
#define pututxline(...) (pthread_testcancel(), pututxline(__VA_ARGS__))
#undef putwc
#define putwc(...) (pthread_testcancel(), putwc(__VA_ARGS__))
#undef putwchar
#define putwchar(...) (pthread_testcancel(), putwchar(__VA_ARGS__))
#define readdir(...) (pthread_testcancel(), readdir(__VA_ARSG__))
#define readdir_r(...) (pthread_testcancel(), readdir_r(__VA_ARGS__))
#define remove(...) (pthread_testcancel(), remove(__VA_ARGS__))
#define rename(...) (pthread_testcancel(), rename(__VA_ARGS__))
#define rewind(...) (pthread_testcancel(), rewind(__VA_ARGS__))
#define rewinddir(...) (pthread_testcancel(), rewinddir(__VA_ARGS__))
#define scanf(...) (pthread_testcancel(), scanf(__VA_ARGS__))
#define seekdir(...) (pthread_testcancel(), seekdir(__VA_ARGS__))
#define semop(...) (pthread_testcancel(), semop(__VA_ARGS__))
#define setgrent(...) (pthread_testcancel(), setgrent(__VA_ARGS__))
#define sethostent(...) (pthread_testcancel(), sethostemt(__VA_ARGS__))
#define setnetent(...) (pthread_testcancel(), setnetent(__VA_ARGS__))
#define setprotoent(...) (pthread_testcancel(), setprotoent(__VA_ARGS__))
#define setpwent(...) (pthread_testcancel(), setpwent(__VA_ARGS__))
#define setservent(...) (pthread_testcancel(), setservent(__VA_ARGS__))
#define setutxent(...) (pthread_testcancel(), setutxent(__VA_ARGS__))
#define stat(...) (pthread_testcancel(), stat(__VA_ARGS__))
#define strerror(...) (pthread_testcancel(), strerror(__VA_ARGS__))
#define strerror_r(...) (pthread_testcancel(), strerror_r(__VA_ARGS__))
#define strftime(...) (pthread_testcancel(), strftime(__VA_ARGS__))
#define symlink(...) (pthread_testcancel(), symlink(__VA_ARGS__))
#define sync(...) (pthread_testcancel(), sync(__VA_ARGS__))
#define syslog(...) (pthread_testcancel(), syslog(__VA_ARGS__))
#define tmpfile(...) (pthread_testcancel(), tmpfile(__VA_ARGS__))
#define tmpnam(...) (pthread_testcancel(), tmpnam(__VA_ARGS__))
#define ttyname(...) (pthread_testcancel(), ttyname(__VA_ARGS__))
#define ttyname_r(...) (pthread_testcancel(), ttyname_r(__VA_ARGS__))
#define tzset(...) (pthread_testcancel(), tzset(__VA_ARGS__))
#define ungetc(...) (pthread_testcancel(), ungetc(__VA_ARGS__))
#define ungetwc(...) (pthread_testcancel(), ungetwc(__VA_ARGS__))
#define unlink(...) (pthread_testcancel(), unlink(__VA_ARGS__))
#define vfprintf(...) (pthread_testcancel(), vfprintf(__VA_ARGS__))
#define vfwprintf(...) (pthread_testcancel(), vfwprintf(__VA_ARGS__))
#define vprintf(...) (pthread_testcancel(), vprintf(__VA_ARGS__))
#define vwprintf(...) (pthread_testcancel(), vwprintf(__VA_ARGS__))
#define wcsftime(...) (pthread_testcancel(), wcsftime(__VA_ARGS__))
#define wordexp(...) (pthread_testcancel(), wordexp(__VA_ARGS__))
#define wprintf(...) (pthread_testcancel(), wprintf(__VA_ARGS__))
#define wscanf(...) (pthread_testcancel(), wscanf(__VA_ARGS__))
#endif

/* We deal here with a gcc issue for posix threading on Windows.
   We would need to change here gcc's gthr-posix.h header, but this
   got rejected.  So we deal it within this header.  */
#ifdef _GTHREAD_USE_MUTEX_INIT_FUNC
#undef _GTHREAD_USE_MUTEX_INIT_FUNC
#endif
#define _GTHREAD_USE_MUTEX_INIT_FUNC 1

#ifdef __cplusplus
}
#endif

#endif /* WIN_PTHREADS_H */
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/seven_zip/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-1d5z77q
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/pthread.h to tempfile /tmp/chef-rest20170405-7856-1r8asko
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/files/default/pthread.h in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
declare -r CRITICAL_PACKAGES="bash pacman msys2-runtime"
declare -r OPTIONAL_PACKAGES="msys2-runtime-devel"

# set pacman command if not already defined
PACMAN=${PACMAN:-pacman}
# save full path to command as PATH may change when sourcing /etc/profile
PACMAN_PATH=$(type -P $PACMAN)

run_pacman() {
	local cmd
	cmd=("$PACMAN_PATH" "$@")
	"${cmd[@]}"
}

if ! run_pacman -Sy; then
  exit 1
fi

run_pacman -Qu ${CRITICAL_PACKAGES}

if ! run_pacman -S --noconfirm --needed ${CRITICAL_PACKAGES} ${OPTIONAL_PACKAGES}; then
  exit 1
fi
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/seven_zip/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/seven_zip/attributes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/files/default/custom-upgrade.sh to tempfile /tmp/chef-rest20170405-7856-1lmd6nk
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/files/default/custom-upgrade.sh in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/certificate.rb
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/.foodcritic in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046e7b08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046e7b58>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers
This file lists how this cookbook project is maintained. When making changes to the system, this
file tells you who needs to review your patch - you need a simple majority of maintainers
for the relevant subsystems to provide a :+1: on your pull request. Additionally, you need
to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) 
for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Kartik Null Cating-Subramanian](https://github.com/ksubrama)

# Maintainers
* [Kartik Null Cating-Subramanian](https://github.com/ksubrama)
* [Seth Chisamore](https://github.com/schisamo)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-1mlkoce
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/font.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/mingw/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/feature.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045eb5b0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/feature.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045eb600>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "feature.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Resource:: feature
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :feature_name, [Array, String], name_property: true
property :source, String
property :all, [true, false], default: false
property :install_method, Symbol, equal_to: [:windows_feature_dism, :windows_feature_powershell, :windows_feature_servermanagercmd]

include Windows::Helper

action_class do
  def locate_default_provider
    if new_resource.install_method
      new_resource.install_method
    elsif ::File.exist?(locate_sysnative_cmd('dism.exe'))
      :windows_feature_dism
    elsif ::File.exist?(locate_sysnative_cmd('servermanagercmd.exe'))
      :windows_feature_servermanagercmd
    else
      :windows_feature_powershell
    end
  end

  def run_default_provider(desired_action)
    case locate_default_provider
    when :windows_feature_dism
      windows_feature_dism new_resource.name do
        action desired_action
        feature_name new_resource.feature_name
        source new_resource.source if new_resource.source
        all new_resource.all
      end
    when :windows_feature_servermanagercmd
      windows_feature_servermanagercmd new_resource.name do
        action desired_action
        feature_name new_resource.feature_name
        source new_resource.source if new_resource.source
        all new_resource.all
      end
    when :windows_feature_powershell
      windows_feature_powershell new_resource.name do
        action desired_action
        feature_name new_resource.feature_name
        source new_resource.source if new_resource.source
        all new_resource.all
      end
    end
  end
end

action :install do
  run_default_provider :install
end

action :remove do
  run_default_provider :remove
end

action :delete do
  run_default_provider :delete
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature.rb to tempfile /tmp/chef-rest20170405-7856-xnh90n
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/feature.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/resources
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/feature_servermanagercmd.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/feature_dism.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046740e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/certificate.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004674130>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "certificate.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"mingw","version":"2.0.0","description":"Installs a mingw/msys based toolchain on windows","long_description":"# mingw Cookbook\n\n[![Cookbook Version](http://img.shields.io/cookbook/v/mingw.svg)][cookbook] [![Build Status](http://img.shields.io/travis/chef-cookbooks/mingw.svg?branch=master)][travis]\n\nInstalls a mingw/msys based compiler tools chain on windows. This is required for compiling C software from source.\n\n## Requirements\n\n### Platforms\n\n- Windows\n\n### Chef\n\n- Chef 12.5+\n\n### Cookbooks\n\n- seven_zip\n\n## Usage\n\nAdd this cookbook as a dependency to your cookbook in its `metadata.rb` and include the default recipe in one of your recipes.\n\n```ruby\n# metadata.rb\ndepends 'mingw'\n```\n\n```ruby\n# your recipe.rb\ninclude_recipe 'mingw::default'\n```\n\nUse the `msys2_package` resource in any recipe to fetch msys2 based packages. Use the `mingw_get` resource in any recipe to fetch mingw packages. Use the `mingw_tdm_gcc` resource to fetch a version of the TDM GCC compiler.\n\nBy default, you should prefer the msys2 packages as they are newer and better supported. C/C++ compilers on windows use various different exception formats and you need to pick the right one for your task. In the 32-bit world, you have SJLJ (set-jump/long-jump) based exception handling and DWARF-2 (shortened to DW2) based exception handling. SJLJ produces code that can happily throw exceptions across stack frames of code compiled by MSVC. DW2 involves more extensive metadata but produces code that cannot unwind MSVC generated stack-frames - hence you need to ensure that you don't have any code that throws across a \"system call\". Certain languages and runtimes have specific requirements as to the exception format supported. As an example, if you are building code for Rust, you will probably need a modern gcc from msys2 with DW2 support as that's what the panic/exception formatter in Rust depends on. In a 64-bit world, you may still use SJLJ but compilers all commonly support SEH (structured exception handling).\n\nOf course, to further complicate matters, different versions of different compilers support different exception handling. The default compilers that come with mingw_get are 32-bit only compilers and support DW2\\. The TDM compilers come in 3 flavors: a 32-bit only version with SJLJ support, a 32-bit only version with DW2 support and a \"multilib\" compiler which supports only SJLJ in 32-bit mode but can produce 64-bit SEH code. The standard library support varies drastically between these various compiler flavors (even within the same version). In msys2, you can install a mingw-w64 based compilers for either 32-bit DW2 support or 64-bit SEH support. If all this hurts your brain, I can only apologize.\n\n## Resources\n\n### msys2_package\n\n- ':install' - Installs an msys2 package using pacman.\n- ':remove' - Uninstalls any existing msys2 package.\n- ':upgrade' - Upgrades the specified package using pacman.\n\nAll options also automatically attempt to install a 64-bit based msys2 base file system at the root path specified. Note that you probably won't need a \"32-bit\" msys2 unless you are actually on a 32-bit only platform. You can still install both 32 and 64-bit compilers and libraries in a 64-bit msys2 base file system.\n\n#### Parameters\n\n- `package` - An msys2 pacman package (or meta-package) to fetch and install. You may use a legal package wild-card pattern here if you are installing. This is the name attribute.\n- `root` - The root directory where msys2 tools will be installed. This directory must not contain any spaces in order to pacify old posix tools and most Makefiles.\n\n#### Examples\n\nTo get the core msys2 developer tools in `C:\\msys2`\n\n```ruby\nmsys2_package 'base-devel' do\n  root 'C:\\msys2'\nend\n```\n\n### mingw_get\n\n#### Actions\n\n- `:install` - Installs a mingw package from sourceforge using mingw-get.exe.\n- `:remove` - Uninstalls a mingw package.\n- `:upgrade` - Upgrades a mingw package (even to a lower version).\n\n#### Parameters\n\n- `package` - A mingw-get package (or meta-package) to fetch and install. You may use a legal package wild-card pattern here if you are installing. This is the name attribute.\n- `root` - The root directory where msys and mingw tools will be installed. This directory must not contain any spaces in order to pacify old posix tools and most Makefiles.\n\n#### Examples\n\nTo get the core msys developer tools in `C:\\mingw32`\n\n```ruby\nmingw_get 'msys-base=2013072300-msys-bin.meta' do\n  root 'C:\\mingw32'\nend\n```\n\n### mingw_tdm_gcc\n\n#### Actions\n\n- `:install` - Installs the TDM compiler toolchain at the given path. This only gives you a compiler. If you need any support tooling such as make/grep/awk/bash etc., see `mingw_get`.\n\n#### Parameters\n\n- `flavor` - Either `:sjlj_32` or `:seh_sjlj_64`. TDM-64 is a 32/64-bit multi-lib \"cross-compiler\" toolchain that builds 64-bit by default. It uses structured exception handling (SEH) in 64-bit code and setjump-longjump exception handling (SJLJ) in 32-bit code. TDM-32 only builds 32-bit binaries and uses SJLJ.\n- `root` - The root directory where compiler tools and runtime will be installed. This directory must not contain any spaces in order to pacify old posix tools and most Makefiles.\n- `version` - The version of the compiler to fetch and install. This is the name attribute. Currently, '5.1.0' is supported.\n\n#### Examples\n\nTo get the 32-bit TDM GCC compiler in `C:\\mingw32`\n\n```ruby\nmingw_tdm_gcc '5.1.0' do\n  flavor :sjlj_32\n  root 'C:\\mingw32'\nend\n```\n\n## License & Authors\n\n**Author:** Cookbook Engineering Team ([cookbooks@chef.io](mailto:cookbooks@chef.io))\n\n**Copyright:** 2009-2016, Chef Software, Inc.\n\n```\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n\n[cookbook]: https://supermarket.chef.io/cookbooks/mingw\n[travis]: http://travis-ci.org/chef-cookbooks/mingw\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache 2.0","platforms":{"windows":">= 0.0.0"},"dependencies":{"seven_zip":">= 0.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/metadata.json to tempfile /tmp/chef-rest20170405-7856-1p8m015
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045805f8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/font.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004580648>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "font.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Sander Botman <sbotman@schubergphilis.com>
# Cookbook:: windows
# Resource:: font
#
# Copyright:: 2014-2017, Schuberg Philis BV.
# Copyright:: 2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :name, String, name_property: true
property :source, String, required: false

include Windows::Helper

action :install do
  if font_exists?
    Chef::Log.debug("Not installing font: #{new_resource.name}, font already installed.")
  else
    retrieve_cookbook_font
    install_font
    del_cookbook_font
  end
end

action_class do
  def retrieve_cookbook_font
    font_file = new_resource.name
    if new_resource.source
      remote_file font_file do
        action  :nothing
        source  "file://#{new_resource.source}"
        path    win_friendly_path(::File.join(ENV['TEMP'], font_file))
      end.run_action(:create)
    else
      cookbook_file font_file do
        action    :nothing
        cookbook  cookbook_name.to_s unless cookbook_name.nil?
        path      win_friendly_path(::File.join(ENV['TEMP'], font_file))
      end.run_action(:create)
    end
  end

  def del_cookbook_font
    file ::File.join(ENV['TEMP'], new_resource.name) do
      action :delete
    end
  end

  def install_font
    require 'win32ole' if RUBY_PLATFORM =~ /mswin|mingw32|windows/
    fonts_dir = WIN32OLE.new('WScript.Shell').SpecialFolders('Fonts')
    folder = WIN32OLE.new('Shell.Application').Namespace(fonts_dir)
    converge_by("install font #{new_resource.name}") do
      folder.CopyHere(win_friendly_path(::File.join(ENV['TEMP'], new_resource.name)))
    end
  end

  # Check to see if the font is installed
  #
  # === Returns
  # <true>:: If the font is installed
  # <false>:: If the font is not instaled
  def font_exists?
    require 'win32ole' if RUBY_PLATFORM =~ /mswin|mingw32|windows/
    fonts_dir = WIN32OLE.new('WScript.Shell').SpecialFolders('Fonts')
    ::File.exist?(win_friendly_path(::File.join(fonts_dir, new_resource.name)))
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000472d568
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/mingw/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000472d5e0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "mingw",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/http_acl.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/feature_powershell.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045c1c88
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/resources/feature_powershell.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045c1e40>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "feature_powershell.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/font.rb to tempfile /tmp/chef-rest20170405-7856-gnpk1v
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/font.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045b3a20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/feature_dism.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045b3a70>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "feature_dism.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Provider:: feature_dism
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :feature_name, [Array, String], name_property: true
property :source, String
property :all, [true, false], default: false

include Chef::Mixin::ShellOut
include Windows::Helper

action_class do
  def installed?
    @installed ||= begin
      install_ohai_plugin unless node['dism_features']

      # Compare against ohai plugin instead of costly dism run
      node['dism_features'].key?(new_resource.feature_name) && node['dism_features'][new_resource.feature_name] =~ /Enable/
    end
  end

  def available?
    @available ||= begin
      install_ohai_plugin unless node['dism_features']

      # Compare against ohai plugin instead of costly dism run
      node['dism_features'].key?(new_resource.feature_name) && node['dism_features'][new_resource.feature_name] !~ /with payload removed/
    end
  end

  def reload_ohai_features_plugin(take_action, feature_name)
    ohai "Reloading Dism_Features Plugin - Action #{take_action} of feature #{feature_name}" do
      action :reload
      plugin 'dism_features'
    end
  end

  def install_ohai_plugin
    Chef::Log.info("node['dism_features'] data missing. Installing the dism_features Ohai plugin")

    ohai_plugin 'dism_features' do
      compile_time true
      cookbook 'windows'
    end
  end

  def supports_feature_delete?
    win_version.major_version >= 6 && win_version.minor_version >= 2
  end

  # account for File System Redirector
  # http://msdn.microsoft.com/en-us/library/aa384187(v=vs.85).aspx
  def dism
    @dism ||= begin
      locate_sysnative_cmd('dism.exe')
    end
  end
end

action :install do
  Chef::Log.warn("Requested feature #{new_resource.feature_name} is not available on this system.") unless available?
  unless !available? || installed?
    converge_by("install Windows feature #{new_resource.feature_name}") do
      addsource = new_resource.source ? "/LimitAccess /Source:\"#{new_resource.source}\"" : ''
      addall = new_resource.all ? '/All' : ''
      shell_out!("#{dism} /online /enable-feature #{to_array(new_resource.feature_name).map { |feature| "/featurename:#{feature}" }.join(' ')} /norestart #{addsource} #{addall}", returns: [0, 42, 127, 3010])
      # Reload ohai data
      reload_ohai_features_plugin(new_resource.action, new_resource.feature_name)
    end
  end
end

action :remove do
  if installed?
    converge_by("removing Windows feature #{new_resource.feature_name}") do
      shell_out!("#{dism} /online /disable-feature #{to_array(new_resource.feature_name).map { |feature| "/featurename:#{feature}" }.join(' ')} /norestart", returns: [0, 42, 127, 3010])
      # Reload ohai data
      reload_ohai_features_plugin(new_resource.action, new_resource.feature_name)
    end
  end
end

action :delete do
  raise Chef::Exceptions::UnsupportedAction, "#{self} :delete action not support on #{win_version.sku}" unless supports_feature_delete?
  if available?
    converge_by("deleting Windows feature #{new_resource.feature_name} from the image") do
      shell_out!("#{dism} /online /disable-feature #{to_array(new_resource.feature_name).map { |feature| "/featurename:#{feature}" }.join(' ')} /Remove /norestart", returns: [0, 42, 127, 3010])
      # Reload ohai data
      reload_ohai_features_plugin(new_resource.action, new_resource.feature_name)
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook:: windows
# Resource:: certificate
#
# Copyright:: 2015-2017, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include Windows::Helper

property :source, String, name_property: true, required: true
property :pfx_password, String
property :private_key_acl, Array
property :store_name, String, default: 'MY', regex: /^(?:MY|CA|ROOT|TrustedPublisher|TRUSTEDPEOPLE)$/
property :user_store, [true, false], default: false

action :create do
  hash = '$cert.GetCertHashString()'
  code_script = cert_script(true) <<
                within_store_script { |store| store + '.Add($cert)' } <<
                acl_script(hash)

  guard_script = cert_script(false) <<
                 cert_exists_script(hash)

  converge_by("adding certificate #{new_resource.source} into #{new_resource.store_name} to #{cert_location}\\#{new_resource.store_name}") do
    powershell_script new_resource.name do
      guard_interpreter :powershell_script
      convert_boolean_return true
      code code_script
      not_if guard_script
    end
  end
end

# acl_add is a modify-if-exists operation : not idempotent
action :acl_add do
  if ::File.exist?(new_resource.source)
    hash = '$cert.GetCertHashString()'
    code_script = cert_script(false)
    guard_script = cert_script(false)
  else
    # make sure we have no spaces in the hash string
    hash = "\"#{new_resource.source.gsub(/\s/, '')}\""
    code_script = ''
    guard_script = ''
  end
  code_script << acl_script(hash)
  guard_script << cert_exists_script(hash)

  converge_by("setting the acls on #{new_resource.source} in #{cert_location}\\#{new_resource.store_name}") do
    powershell_script new_resource.name do
      guard_interpreter :powershell_script
      convert_boolean_return true
      code code_script
      only_if guard_script
    end
  end
end

action :delete do
  # do we have a hash or a subject?
  # TODO: It's a bit annoying to know the thumbprint of a cert you want to remove when you already
  # have the file.  Support reading the hash directly from the file if provided.
  search = if new_resource.source =~ /^[a-fA-F0-9]{40}$/
             "Thumbprint -eq '#{new_resource.source}'"
           else
             "Subject -like '*#{new_resource.source.sub(/\*/, '`*')}*'" # escape any * in the source
           end
  cert_command = "Get-ChildItem Cert:\\#{cert_location}\\#{new_resource.store_name} | where { $_.#{search} }"

  code_script = within_store_script do |store|
    <<-EOH
foreach ($c in #{cert_command})
{
  #{store}.Remove($c)
}
EOH
  end
  guard_script = "@(#{cert_command}).Count -gt 0\n"
  converge_by("Removing certificate #{new_resource.source} from #{cert_location}\\#{new_resource.store_name}") do
    powershell_script new_resource.name do
      guard_interpreter :powershell_script
      convert_boolean_return true
      code code_script
      only_if guard_script
    end
  end
end

action_class do
  def cert_location
    @location ||= new_resource.user_store ? 'CurrentUser' : 'LocalMachine'
  end

  def cert_script(persist)
    cert_script = '$cert = New-Object System.Security.Cryptography.X509Certificates.X509Certificate2'
    file = win_friendly_path(new_resource.source)
    cert_script << " \"#{file}\""
    if ::File.extname(file.downcase) == '.pfx'
      cert_script << ", \"#{new_resource.pfx_password}\""
      if persist && new_resource.user_store
        cert_script << ', [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::PersistKeySet'
      elsif persist
        cert_script << ', ([System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::PersistKeySet -bor [System.Security.Cryptography.X509Certificates.X509KeyStorageFlags]::MachineKeyset)'
      end
    end
    cert_script << "\n"
  end

  def cert_exists_script(hash)
    <<-EOH
  $hash = #{hash}
  Test-Path "Cert:\\#{cert_location}\\#{new_resource.store_name}\\$hash"
  EOH
  end

  def within_store_script
    inner_script = yield '$store'
    <<-EOH
  $store = New-Object System.Security.Cryptography.X509Certificates.X509Store "#{new_resource.store_name}", ([System.Security.Cryptography.X509Certificates.StoreLocation]::#{cert_location})
  $store.Open([System.Security.Cryptography.X509Certificates.OpenFlags]::ReadWrite)
  #{inner_script}
  $store.Close()
  EOH
  end

  def acl_script(hash)
    return '' if new_resource.private_key_acl.nil? || new_resource.private_key_acl.empty?
    # this PS came from http://blogs.technet.com/b/operationsguy/archive/2010/11/29/provide-access-to-private-keys-commandline-vs-powershell.aspx
    # and from https://msdn.microsoft.com/en-us/library/windows/desktop/bb204778(v=vs.85).aspx
    set_acl_script = <<-EOH
  $hash = #{hash}
  $storeCert = Get-ChildItem "cert:\\#{cert_location}\\#{new_resource.store_name}\\$hash"
  if ($storeCert -eq $null) { throw 'no key exists.' }
  $keyname = $storeCert.PrivateKey.CspKeyContainerInfo.UniqueKeyContainerName
  if ($keyname -eq $null) { throw 'no private key exists.' }
  if ($storeCert.PrivateKey.CspKeyContainerInfo.MachineKeyStore)
  {
    $fullpath = "$Env:ProgramData\\Microsoft\\Crypto\\RSA\\MachineKeys\\$keyname"
  }
  else
  {
    $currentUser = New-Object System.Security.Principal.NTAccount($Env:UserDomain, $Env:UserName)
    $userSID = $currentUser.Translate([System.Security.Principal.SecurityIdentifier]).Value
    $fullpath = "$Env:ProgramData\\Microsoft\\Crypto\\RSA\\$userSID\\$keyname"
  }
  EOH
    new_resource.private_key_acl.each do |name|
      set_acl_script << "$uname='#{name}'; icacls $fullpath /grant $uname`:RX\n"
    end
    set_acl_script
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_dism.rb to tempfile /tmp/chef-rest20170405-7856-b6zaac
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/auto_run.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate.rb to tempfile /tmp/chef-rest20170405-7856-9jy00m
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/feature_dism.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/mingw/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-1lyhp33
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/mingw/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/printer_port.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000004520b08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/http_acl.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000004520bd0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "http_acl.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook:: windows
# Resource:: http_acl
#
# Copyright:: 2015-2017, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include Chef::Mixin::ShellOut
include Windows::Helper

property :url, String, name_property: true, required: true
property :user, String
property :sddl, String
property :exists, [true, false], desired_state: true

# See https://msdn.microsoft.com/en-us/library/windows/desktop/cc307236%28v=vs.85%29.aspx for netsh info

load_current_value do |desired|
  cmd_out = shell_out!("#{locate_sysnative_cmd('netsh.exe')} http show urlacl url=#{desired.url}").stdout
  Chef::Log.debug "netsh reports: #{cmd_out}"

  if cmd_out.include? desired.url
    exists true
    url desired.url
    # Checks first for sddl, because it generates user(s)
    sddl_match = cmd_out.match(/SDDL:\s*(?<sddl>.+)/)
    if sddl_match
      sddl sddl_match['sddl']
    else
      # if no sddl, tries to find a single user
      user_match = cmd_out.match(/User:\s*(?<user>.+)/)
      user user_match['user']
    end
  else
    exists false
  end
end

action :create do
  raise '`user` xor `sddl` can\'t be used together' if new_resource.user && new_resource.sddl
  raise 'When provided user property can\'t be empty' if new_resource.user && new_resource.user.empty?
  raise 'When provided sddl property can\'t be empty' if new_resource.sddl && new_resource.sddl.empty?

  if current_resource.exists
    sddl_changed = (
      new_resource.sddl &&
      current_resource.sddl &&
      current_resource.sddl.casecmp(new_resource.sddl) != 0
    )
    user_changed = (
      new_resource.user &&
      current_resource.user &&
      current_resource.user.casecmp(new_resource.user) != 0
    )

    if sddl_changed || user_changed
      converge_by("Changing #{new_resource.url}") do
        delete_acl
        apply_acl
      end
    else
      Chef::Log.debug("#{new_resource.url} already set - nothing to do")
    end
  else
    converge_by("Setting #{new_resource.url}") do
      apply_acl
    end
  end
end

action :delete do
  if current_resource.exists
    converge_by("Deleting #{new_resource.url}") do
      delete_acl
    end
  else
    Chef::Log.debug("#{new_resource.url} does not exist - nothing to do")
  end
end

action_class do
  def netsh_command
    locate_sysnative_cmd('netsh.exe')
  end

  def apply_acl
    if current_resource.sddl
      shell_out!("#{netsh_command} http add urlacl url=#{new_resource.url} sddl=\"#{new_resource.sddl}\"")
    else
      shell_out!("#{netsh_command} http add urlacl url=#{new_resource.url} user=\"#{new_resource.user}\"")
    end
  end

  def delete_acl
    shell_out!("#{netsh_command} http delete urlacl url=#{new_resource.url}")
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/http_acl.rb to tempfile /tmp/chef-rest20170405-7856-1n6cnm8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/http_acl.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/share.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003313dc0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/share.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000003313fa0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "share.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000045bc918
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/resources/feature_servermanagercmd.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000045bc990>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "feature_servermanagercmd.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000046b37e0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/auto_run.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000046b3830>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "auto_run.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/certificate.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/printer.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000033c86d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/printer.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000033c8748>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "printer.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug Ireton (<doug.ireton@nordstrom.com>)
# Cookbook:: windows
# Resource:: printer
#
# Copyright:: 2012-2017, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# See here for more info:
# http://msdn.microsoft.com/en-us/library/windows/desktop/aa394492(v=vs.85).aspx

require 'resolv'

attribute :device_id, String, name_attribute: true, required: true
attribute :comment, String
attribute :default, [TrueClass, FalseClass], default: false
attribute :driver_name, String, required: true
attribute :location, String
attribute :shared, [TrueClass, FalseClass], default: false
attribute :share_name, String
attribute :ipv4_address, String, regex: Resolv::IPv4::Regex
property :exists, [TrueClass, FalseClass], desired_state: true

PRINTERS_REG_KEY = 'HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Printers\\'.freeze unless defined?(PRINTERS_REG_KEY)

def printer_exists?(name)
  printer_reg_key = PRINTERS_REG_KEY + name
  Chef::Log.debug "Checking to see if this reg key exists: '#{printer_reg_key}'"
  Registry.key_exists?(printer_reg_key)
end

load_current_value do |desired|
  name desired.name
  exists printer_exists?(desired.name)
  # TODO: Set @current_resource printer properties from registry
end

action :create do
  if @current_resource.exists
    Chef::Log.info "#{@new_resource} already exists - nothing to do."
  else
    converge_by("Create #{@new_resource}") do
      create_printer
    end
  end
end

action :delete do
  if @current_resource.exists
    converge_by("Delete #{@new_resource}") do
      delete_printer
    end
  else
    Chef::Log.info "#{@current_resource} doesn't exist - can't delete."
  end
end

action_class do
  def create_printer
    # Create the printer port first
    windows_printer_port new_resource.ipv4_address do
    end

    port_name = "IP_#{new_resource.ipv4_address}"

    powershell_script "Creating printer: #{new_resource.name}" do
      code <<-EOH

        Set-WmiInstance -class Win32_Printer `
          -EnableAllPrivileges `
          -Argument @{ DeviceID   = "#{new_resource.device_id}";
                      Comment    = "#{new_resource.comment}";
                      Default    = "$#{new_resource.default}";
                      DriverName = "#{new_resource.driver_name}";
                      Location   = "#{new_resource.location}";
                      PortName   = "#{port_name}";
                      Shared     = "$#{new_resource.shared}";
                      ShareName  = "#{new_resource.share_name}";
                    }
      EOH
    end
  end

  def delete_printer
    powershell_script "Deleting printer: #{new_resource.name}" do
      code <<-EOH
        $printer = Get-WMIObject -class Win32_Printer -EnableAllPrivileges -Filter "name = '#{new_resource.name}'"
        $printer.Delete()
      EOH
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer.rb to tempfile /tmp/chef-rest20170405-7856-1qqcrwm
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/printer.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# -*- coding: utf-8 -*-
#
# Author:: Sölvi Páll Ásgeirsson (<solvip@gmail.com>), Richard Lavey (richard.lavey@calastone.com)
# Cookbook:: windows
# Resource:: share
#
# Copyright:: 2014-2017, Sölvi Páll Ásgeirsson.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :share_name, String, name_property: true
property :path, String
property :description, String, default: ''
property :full_users, Array, default: []
property :change_users, Array, default: []
property :read_users, Array, default: []

include Windows::Helper
include Chef::Mixin::PowershellOut

require 'win32ole' if RUBY_PLATFORM =~ /mswin|mingw32|windows/

ACCESS_FULL = 2_032_127
ACCESS_CHANGE = 1_245_631
ACCESS_READ = 1_179_817

action :create do
  raise 'No path property set' unless new_resource.path

  if different_path?
    unless current_resource.path.nil? || current_resource.path.empty?
      converge_by('Removing previous share') do
        delete_share
      end
    end
    converge_by("Creating share #{current_resource.share_name}") do
      create_share
    end
  end

  if different_members?(:full_users) ||
     different_members?(:change_users) ||
     different_members?(:read_users) ||
     different_description?
    converge_by("Setting permissions and description for #{new_resource.share_name}") do
      set_share_permissions
    end
  end
end

action :delete do
  if !current_resource.path.nil? && !current_resource.path.empty?
    converge_by("Deleting #{current_resource.share_name}") do
      delete_share
    end
  else
    Chef::Log.debug("#{current_resource.share_name} does not exist - nothing to do")
  end
end

load_current_value do |desired|
  wmi = WIN32OLE.connect('winmgmts://')
  shares = wmi.ExecQuery("SELECT * FROM Win32_Share WHERE name = '#{desired.share_name}'")
  existing_share = shares.Count == 0 ? nil : shares.ItemIndex(0)

  description ''
  unless existing_share.nil?
    path existing_share.Path
    description existing_share.Description
  end

  perms = share_permissions name
  unless perms.nil?
    full_users perms[:full_users]
    change_users perms[:change_users]
    read_users perms[:read_users]
  end
end

def share_permissions(name)
  wmi = WIN32OLE.connect('winmgmts://')
  shares = wmi.ExecQuery("SELECT * FROM Win32_LogicalShareSecuritySetting WHERE name = '#{name}'")

  # The security descriptor is an output parameter
  sd = nil
  begin
    shares.ItemIndex(0).GetSecurityDescriptor(sd)
    sd = WIN32OLE::ARGV[0]
  rescue WIN32OLERuntimeError
    Chef::Log.warn('Failed to retrieve any security information about the share.')
  end

  read = []
  change = []
  full = []

  unless sd.nil?
    sd.DACL.each do |dacl|
      trustee = "#{dacl.Trustee.Domain}\\#{dacl.Trustee.Name}".downcase
      case dacl.AccessMask
      when ACCESS_FULL
        full.push(trustee)
      when ACCESS_CHANGE
        change.push(trustee)
      when ACCESS_READ
        read.push(trustee)
      else
        Chef::Log.warn "Unknown access mask #{dacl.AccessMask} for user #{trustee}. This will be lost if permissions are updated"
      end
    end
  end

  {
    full_users: full,
    change_users: change,
    read_users: read,
  }
end

action_class do
  def description_exists?(resource)
    !resource.description.nil?
  end

  def different_description?
    if description_exists?(new_resource) && description_exists?(current_resource)
      new_resource.description.casecmp(current_resource.description) != 0
    else
      description_exists?(new_resource) || description_exists?(current_resource)
    end
  end

  def different_path?
    return true if current_resource.path.nil?
    win_friendly_path(new_resource.path).casecmp(win_friendly_path(current_resource.path)) != 0
  end

  def different_members?(permission_type)
    !(current_resource.send(permission_type.to_sym) - new_resource.send(permission_type.to_sym).map(&:downcase)).empty? &&
      !(new_resource.send(permission_type.to_sym).map(&:downcase) - current_resource.send(permission_type.to_sym)).empty?
  end

  def find_share_by_name(name)
    wmi = WIN32OLE.connect('winmgmts://')
    shares = wmi.ExecQuery("SELECT * FROM Win32_Share WHERE name = '#{name}'")
    shares.Count == 0 ? nil : shares.ItemIndex(0)
  end

  def delete_share
    find_share_by_name(new_resource.share_name).delete
  end

  def create_share
    raise "#{new_resource.path} is missing or not a directory" unless ::File.directory? new_resource.path
    new_share_script = <<-EOH
      $share = [wmiclass]"\\\\#{ENV['COMPUTERNAME']}\\root\\CimV2:Win32_Share"
      $result=$share.Create('#{new_resource.path}',
                            '#{new_resource.share_name}',
                            0,
                            16777216,
                            '#{new_resource.description}',
                            $null,
                            $null)
      exit $result.returnValue
    EOH
    r = powershell_out new_share_script
    message = case r.exitstatus
              when 2
                '2 : Access Denied'
              when 8
                '8 : Unknown Failure'
              when 9
                '9 : Invalid Name'
              when 10
                '10 : Invalid Level'
              when 21
                '21 : Invalid Parameter'
              when 22
                '22 : Duplicate Share'
              when 23
                '23 : Redirected Path'
              when 24
                '24 : Unknown Device or Directory'
              when 25
                '25 : Net Name Not Found'
              else
                r.exitstatus.to_s
              end

    raise "Could not create share.  Win32_Share.create returned #{message}" if r.error?
  end

  # set_share_permissions - Enforce the share permissions as dictated by the resource attributes
  def set_share_permissions
    share_permissions_script = <<-EOH
      Function New-SecurityDescriptor
      {
        param (
          [array]$ACEs
        )
        #Create SeCDesc object
        $SecDesc = ([WMIClass] "\\\\$env:ComputerName\\root\\cimv2:Win32_SecurityDescriptor").CreateInstance()

        foreach ($ACE in $ACEs )
        {
          $SecDesc.DACL += $ACE.psobject.baseobject
        }

        #Return the security Descriptor
        return $SecDesc
      }

      Function New-ACE
      {
        param  (
          [string] $Name,
          [string] $Domain,
          [string] $Permission = "Read"
        )
        #Create the Trusteee Object
        $Trustee = ([WMIClass] "\\\\$env:computername\\root\\cimv2:Win32_Trustee").CreateInstance()
        $account = get-wmiobject Win32_Account -filter "Name like '$Name' and Domain like '$Domain'"
        $accountSID = [WMI] "\\\\$env:ComputerName\\root\\cimv2:Win32_SID.SID='$($account.sid)'"

        $Trustee.Domain = $Domain
        $Trustee.Name = $Name
        $Trustee.SID = $accountSID.BinaryRepresentation

        #Create ACE (Access Control List) object.
        $ACE = ([WMIClass] "\\\\$env:ComputerName\\root\\cimv2:Win32_ACE").CreateInstance()
        switch ($Permission)
        {
          "Read" 		 { $ACE.AccessMask = 1179817 }
          "Change"  {	$ACE.AccessMask = 1245631 }
          "Full"		   { $ACE.AccessMask = 2032127 }
          default { throw "$Permission is not a supported permission value. Possible values are 'Read','Change','Full'" }
        }

        $ACE.AceFlags = 3
        $ACE.AceType = 0
        $ACE.Trustee = $Trustee

        $ACE
      }

      $dacl_array = @()

    EOH
    new_resource.full_users.each do |user|
      share_permissions_script += user_to_ace(user, 'Full')
    end

    new_resource.change_users.each do |user|
      share_permissions_script += user_to_ace(user, 'Change')
    end

    new_resource.read_users.each do |user|
      share_permissions_script += user_to_ace(user, 'Read')
    end

    share_permissions_script += <<-EOH

      $dacl = New-SecurityDescriptor -Aces $dacl_array

      $share = get-wmiobject win32_share -filter 'Name like "#{new_resource.share_name}"'
      $return = $share.SetShareInfo($null, '#{new_resource.description}', $dacl)
      exit $return.returnValue
    EOH
    r = powershell_out(share_permissions_script)
    raise "Could not set share permissions.  Win32_Share.SedtShareInfo returned #{r.exitstatus}" if r.error?
  end

  def user_to_ace(fully_qualified_user_name, access)
    domain, user = fully_qualified_user_name.split('\\')
    unless domain && user
      raise "Invalid user entry #{fully_qualified_user_name}.  The user names must be specified as 'DOMAIN\\user'"
    end
    "\n$dacl_array += new-ace -Name '#{user}' -domain '#{domain}' -permission '#{access}'"
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Greg Zapp (<greg.zapp@gmail.com>)
# Cookbook:: windows
# Provider:: feature_powershell
#

property :feature_name, [Array, String], name_attribute: true
property :source, String
property :all, [true, false], default: false

include Chef::Mixin::PowershellOut
include Windows::Helper

action_class do
  def install_feature_cmdlet
    node['os_version'].to_f < 6.2 ? 'Import-Module ServerManager; Add-WindowsFeature' : 'Install-WindowsFeature'
  end

  def remove_feature_cmdlet
    node['os_version'].to_f < 6.2 ? 'Import-Module ServerManager; Remove-WindowsFeature' : 'Uninstall-WindowsFeature'
  end

  def installed?
    @installed ||= begin
      cmd = powershell_out("(Get-WindowsFeature #{to_array(new_resource.feature_name).join(',')} | ?{$_.InstallState -ne \'Installed\'}).count")
      cmd.stderr.empty? && cmd.stdout.chomp.to_i == 0
    end
  end

  def available?
    @available ||= begin
      cmd = powershell_out("(Get-WindowsFeature #{to_array(new_resource.feature_name).join(',')} | ?{$_.InstallState -ne \'Removed\'}).count")
      cmd.stderr.empty? && cmd.stdout.chomp.to_i > 0
    end
  end
end

action :install do
  Chef::Log.warn("Requested feature #{new_resource.feature_name} is not available on this system.") unless available?
  unless !available? || installed?
    converge_by("install Windows feature #{new_resource.feature_name}") do
      addsource = new_resource.source ? "-Source \"#{new_resource.source}\"" : ''
      addall = new_resource.all ? '-IncludeAllSubFeature' : ''
      cmd = if node['os_version'].to_f < 6.2
              powershell_out!("#{install_feature_cmdlet} #{to_array(new_resource.feature_name).join(',')} #{addall}")
            else
              powershell_out!("#{install_feature_cmdlet} #{to_array(new_resource.feature_name).join(',')} #{addsource} #{addall}")
            end
      Chef::Log.info(cmd.stdout)
    end
  end
end

action :remove do
  if installed?
    converge_by("remove Windows feature #{new_resource.feature_name}") do
      cmd = powershell_out!("#{remove_feature_cmdlet} #{to_array(new_resource.feature_name).join(',')}")
      Chef::Log.info(cmd.stdout)
    end
  end
end

action :delete do
  if available?
    converge_by("delete Windows feature #{new_resource.feature_name} from the image") do
      cmd = powershell_out!("Uninstall-WindowsFeature #{to_array(new_resource.feature_name).join(',')} -Remove")
      Chef::Log.info(cmd.stdout)
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_powershell.rb to tempfile /tmp/chef-rest20170405-7856-bib8hv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/feature_powershell.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/zipfile.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031c0130
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/zipfile.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031c0220>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "zipfile.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Provider:: feature_servermanagercmd
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :feature_name, [Array, String], name_attribute: true
property :source, String
property :all, [true, false], default: false

include Chef::Mixin::ShellOut
include Windows::Helper

# Exit codes are listed at http://technet.microsoft.com/en-us/library/cc749128(v=ws.10).aspx

action_class do
  def check_reboot(result, feature)
    if result.exitstatus == 3010 # successful, but needs reboot
      node.run_state['reboot_requested'] = true
      Chef::Log.warn("Require reboot to install #{feature}")
    elsif result.exitstatus == 1001 # failure, but needs reboot before we can do anything else
      node.run_state['reboot_requested'] = true
      Chef::Log.warn("Failed installing #{feature} and need to reboot")
    end
    result.error! # throw for any other bad results. The above results will also get raised, and should cause a reboot via the handler.
  end

  def installed?
    @installed ||= begin
      cmd = shell_out("#{servermanagercmd} -query", returns: [0, 42, 127, 1003])
      cmd.stderr.empty? && (cmd.stdout =~ /^\s*?\[X\]\s.+?\s\[#{new_resource.feature_name}\]\s*$/i)
    end
  end

  # account for File System Redirector
  # http://msdn.microsoft.com/en-us/library/aa384187(v=vs.85).aspx
  def servermanagercmd
    @servermanagercmd ||= begin
      locate_sysnative_cmd('servermanagercmd.exe')
    end
  end
end

action :install do
  unless installed?
    converge_by("install Windows feature #{new_resource.feature_name}") do
      check_reboot(shell_out("#{servermanagercmd} -install #{to_array(new_resource.feature_name).join(' ')}", returns: [0, 42, 127, 1003, 3010]), new_resource.feature_name)
    end
  end
end

action :remove do
  if installed?
    converge_by("removing Windows feature #{new_resource.feature_name}") do
      check_reboot(shell_out("#{servermanagercmd} -remove #{to_array(new_resource.feature_name).join(' ')}", returns: [0, 42, 127, 1003, 3010]), new_resource.feature_name)
    end
  end
end

action :delete do
  Chef::Log.warn('servermanagercmd does not support removing a feature from the image.')
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook:: windows
# Resource:: auto_run
#
# Copyright:: 2011-2017, Business Intelligence Associates, Inc.
# Copyright:: 2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :program, String
property :name, String, name_property: true
property :args, String

action :create do
  registry_key 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run' do
    values [{
      name: new_resource.name,
      type: :string,
      data: "\"#{new_resource.program}\" #{new_resource.args}",
    }]
    action :create
  end
end

action :remove do
  registry_key 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run' do
    values [{
      name: new_resource.name,
      type: :string,
      data: '',
    }]
    action :delete
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/auto_run.rb to tempfile /tmp/chef-rest20170405-7856-31qioi
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/auto_run.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/feature_servermanagercmd.rb to tempfile /tmp/chef-rest20170405-7856-1kkh9l8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/shortcut.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/share.rb to tempfile /tmp/chef-rest20170405-7856-ce8ikx
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/feature_servermanagercmd.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/task.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/share.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000339f500
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/printer_port.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000339f640>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "printer_port.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug Ireton (<doug.ireton@nordstrom.com>)
# Cookbook:: windows
# Resource:: printer_port
#
# Copyright:: 2012-2017, Nordstrom, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# See here for more info:
# http://msdn.microsoft.com/en-us/library/windows/desktop/aa394492(v=vs.85).aspx

require 'resolv'

property :ipv4_address, String, name_attribute: true, required: true, regex: Resolv::IPv4::Regex
property :port_name, String
property :port_number, Integer, default: 9100
property :port_description, String
property :snmp_enabled, [TrueClass, FalseClass], default: false
property :port_protocol, Integer, default: 1, equal_to: [1, 2]
property :exists, [TrueClass, FalseClass], desired_state: true

PORTS_REG_KEY = 'HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Print\Monitors\Standard TCP/IP Port\Ports\\'.freeze unless defined?(PORTS_REG_KEY)

def port_exists?(name)
  port_reg_key = PORTS_REG_KEY + name

  Chef::Log.debug "Checking to see if this reg key exists: '#{port_reg_key}'"
  Registry.key_exists?(port_reg_key)
end

load_current_value do |desired|
  name desired.name
  ipv4_address desired.ipv4_address
  port_name desired.port_name || "IP_#{@new_resource.ipv4_address}"
  exists port_exists?(desired.port_name)
  # TODO: Set @current_resource port properties from registry
end

action :create do
  if current_resource.exists
    Chef::Log.info "#{@new_resource} already exists - nothing to do."
  else
    converge_by("Create #{@new_resource}") do
      create_printer_port
    end
  end
end

action :delete do
  if current_resource.exists
    converge_by("Delete #{@new_resource}") do
      delete_printer_port
    end
  else
    Chef::Log.info "#{@current_resource} doesn't exist - can't delete."
  end
end

action_class do
  def create_printer_port
    port_name = new_resource.port_name || "IP_#{new_resource.ipv4_address}"

    # create the printer port using PowerShell
    powershell_script "Creating printer port #{new_resource.port_name}" do
      code <<-EOH

        Set-WmiInstance -class Win32_TCPIPPrinterPort `
          -EnableAllPrivileges `
          -Argument @{ HostAddress = "#{new_resource.ipv4_address}";
                      Name        = "#{port_name}";
                      Description = "#{new_resource.port_description}";
                      PortNumber  = "#{new_resource.port_number}";
                      Protocol    = "#{new_resource.port_protocol}";
                      SNMPEnabled = "$#{new_resource.snmp_enabled}";
                    }
      EOH
    end
  end

  def delete_printer_port
    port_name = new_resource.port_name || "IP_#{new_resource.ipv4_address}"

    powershell_script "Deleting printer port: #{new_resource.port_name}" do
      code <<-EOH
        $port = Get-WMIObject -class Win32_TCPIPPrinterPort -EnableAllPrivileges -Filter "name = '#{port_name}'"
        $port.Delete()
      EOH
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Richard Lavey (richard.lavey@calastone.com)
# Cookbook:: windows
# Resource:: certificate_binding
#
# Copyright:: 2015-2017, Calastone Ltd.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

include Chef::Mixin::ShellOut
include Chef::Mixin::PowershellOut
include Windows::Helper

property :cert_name, String, name_property: true, required: true
property :name_kind, Symbol, equal_to: [:hash, :subject], default: :subject
property :address, String, default: '0.0.0.0'
property :port, Integer, default: 443
property :app_id, String, default: '{4dc3e181-e14b-4a21-b022-59fc669b0914}'
property :store_name, String, default: 'MY', regex: /^(?:MY|CA|ROOT)$/
property :exists, [true, false], desired_state: true

load_current_value do |desired|
  cmd = shell_out("#{locate_sysnative_cmd('netsh.exe')} http show sslcert ipport=#{desired.address}:#{desired.port}")
  Chef::Log.debug "netsh reports: #{cmd.stdout}"

  address desired.address
  port desired.port
  store_name desired.store_name
  app_id desired.app_id

  if cmd.exitstatus == 0
    m = cmd.stdout.scan(/Certificate Hash\s+:\s?([A-Fa-f0-9]{40})/)
    raise "Failed to extract hash from command output #{cmd.stdout}" if m.empty?
    cert_name m[0][0]
    name_kind :hash
    exists true
  else
    exists false
  end
end

action :create do
  hash = new_resource.name_kind == :subject ? hash_from_subject : new_resource.cert_name

  if current_resource.exists
    needs_change = (hash.casecmp(current_resource.cert_name) != 0)

    if needs_change
      converge_by("Changing #{current_resource.address}:#{current_resource.port}") do
        delete_binding
        add_binding hash
      end
    else
      Chef::Log.debug("#{new_resource.address}:#{new_resource.port} already bound to #{hash} - nothing to do")
    end
  else
    converge_by("Binding #{new_resource.address}:#{new_resource.port}") do
      add_binding hash
    end
  end
end

action :delete do
  if current_resource.exists
    converge_by("Deleting #{current_resource.address}:#{current_resource.port}") do
      delete_binding
    end
  else
    Chef::Log.debug("#{current_resource.address}:#{current_resource.port} not bound - nothing to do")
  end
end

action_class do
  def netsh_command
    locate_sysnative_cmd('netsh.exe')
  end

  def add_binding(hash)
    cmd = "#{netsh_command} http add sslcert"
    cmd << " ipport=#{current_resource.address}:#{current_resource.port}"
    cmd << " certhash=#{hash}"
    cmd << " appid=#{current_resource.app_id}"
    cmd << " certstorename=#{current_resource.store_name}"
    check_hash hash

    shell_out!(cmd)
  end

  def delete_binding
    shell_out!("#{netsh_command} http delete sslcert ipport=#{current_resource.address}:#{current_resource.port}")
  end

  def check_hash(hash)
    p = powershell_out!("Test-Path \"cert:\\LocalMachine\\#{current_resource.store_name}\\#{hash}\"")

    unless p.stderr.empty? && p.stdout =~ /True/i
      raise "A Cert with hash of #{hash} doesn't exist in keystore LocalMachine\\#{current_resource.store_name}"
    end
    nil
  end

  def hash_from_subject
    # escape wildcard subject name (*.acme.com)
    subject = new_resource.cert_name.sub(/\*/, '`*')
    ps_script = "& { gci cert:\\localmachine\\#{new_resource.store_name} | where { $_.subject -like '*#{subject}*' } | select -first 1 -expandproperty Thumbprint }"

    Chef::Log.debug "Running PS script #{ps_script}"
    p = powershell_out!(ps_script)

    raise "#{ps_script} failed with #{p.stderr}" if !p.stderr.nil? && !p.stderr.empty?
    raise "Couldn't find thumbprint for subject #{new_resource.cert_name}" if p.stdout.nil? || p.stdout.empty?

    # seem to get a UTF-8 string with BOM returned sometimes! Strip any such BOM
    hash = p.stdout.strip
    hash[0].ord == 239 ? hash.force_encoding('UTF-8').delete!("\xEF\xBB\xBF".force_encoding('UTF-8')) : hash
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/printer_port.rb to tempfile /tmp/chef-rest20170405-7856-1ws8sn1
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/certificate_binding.rb to tempfile /tmp/chef-rest20170405-7856-1ww8acb
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/path.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/certificate_binding.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern (<dougm@vmware.com>)
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Resource:: zipfile
#
# Copyright:: 2010-2017, VMware, Inc.
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :path, String, name_property: true
property :source, String
property :overwrite, [true, false], default: false
property :checksum, String

include Windows::Helper
require 'find'

action :unzip do
  ensure_rubyzip_gem_installed
  Chef::Log.debug("unzip #{new_resource.source} => #{new_resource.path} (overwrite=#{new_resource.overwrite})")

  cache_file_path = if new_resource.source =~ %r{^(file|ftp|http|https):\/\/} # http://rubular.com/r/DGoIWjLfGI
                      uri = as_uri(source)
                      local_cache_path = "#{Chef::Config[:file_cache_path]}/#{::File.basename(::URI.unescape(uri.path))}"
                      Chef::Log.debug("Caching a copy of file #{new_resource.source} at #{cache_file_path}")

                      remote_file local_cache_path do
                        source new_resource.source
                        backup false
                        checksum new_resource.checksum unless new_resource.checksum.nil?
                      end

                      local_cache_path
                    else
                      new_resource.source
                    end

  cache_file_path = win_friendly_path(cache_file_path)

  converge_by("unzip #{new_resource.source}") do
    ruby_block 'Unzipping' do
      block do
        Zip::File.open(cache_file_path) do |zip|
          zip.each do |entry|
            path = ::File.join(new_resource.path, entry.name)
            FileUtils.mkdir_p(::File.dirname(path))
            if new_resource.overwrite && ::File.exist?(path) && !::File.directory?(path)
              FileUtils.rm(path)
            end
            zip.extract(entry, path) unless ::File.exist?(path)
          end
        end
      end
      action :run
    end
  end
end

action :zip do
  ensure_rubyzip_gem_installed
  # sanitize paths for windows.
  new_resource.source.downcase.gsub!(::File::SEPARATOR, ::File::ALT_SEPARATOR)
  new_resource.path.downcase.gsub!(::File::SEPARATOR, ::File::ALT_SEPARATOR)
  Chef::Log.debug("zip #{new_resource.source} => #{new_resource.path} (overwrite=#{new_resource.overwrite})")

  if new_resource.overwrite == false && ::File.exist?(new_resource.path)
    Chef::Log.info("file #{new_resource.path} already exists and overwrite is set to false, exiting")
  else
    # delete the archive if it already exists, because we are recreating it.
    if ::File.exist?(new_resource.path)
      converge_by("delete existing file at #{new_resource.path}") do
        ::File.unlink(new_resource.path)
      end
    end

    # only supporting compression of a single directory (recursively).
    if ::File.directory?(new_resource.source)
      converge_by("zipping #{new_resource.source} to #{new_resource.path}") do
        z = Zip::File.new(new_resource.path, true)
        unless new_resource.source =~ /::File::ALT_SEPARATOR$/
          new_resource.source << ::File::ALT_SEPARATOR
        end
        Find.find(new_resource.source) do |f|
          f.downcase.gsub!(::File::SEPARATOR, ::File::ALT_SEPARATOR)
          # don't add root directory to the zipfile.
          next if f == new_resource.source
          # strip the root directory from the filename before adding it to the zipfile.
          zip_fname = f.sub(new_resource.source, '')
          Chef::Log.debug("adding #{zip_fname} to archive, sourcefile is: #{f}")
          z.add(zip_fname, f)
        end
        z.close
      end
    else
      Chef::Log.info("Single directory must be specified for compression, and #{new_resource.source} does not meet that criteria.")
    end
  end
end

action_class do
  def ensure_rubyzip_gem_installed
    require 'zip'
  rescue LoadError
    Chef::Log.info("Missing gem 'rubyzip'...installing now.")
    chef_gem 'rubyzip' do
      version node['windows']['rubyzipversion']
      action :install
      compile_time true
    end
    require 'zip'
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000003256658
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/shortcut.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000032566f8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "shortcut.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/zipfile.rb to tempfile /tmp/chef-rest20170405-7856-1ozu9hy
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/recipes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/printer_port.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/zipfile.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000030b3b20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/matchers.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000030b3bc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "matchers.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/resources/pagefile.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000342e160
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/path.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000342e818>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "path.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook:: windows
# Resource:: path
#
# Copyright:: 2011-2017, Business Intelligence Associates, Inc
# Copyright:: 2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :path, String, name_property: true

include Windows::Helper

action :add do
  env 'path' do
    action :modify
    delim ::File::PATH_SEPARATOR
    value new_resource.path.tr('/', '\\')
    notifies :run, "ruby_block[fix ruby ENV['PATH']]", :immediately
  end

  # The windows Env provider does not correctly expand variables in
  # the PATH environment variable. Ruby expects these to be expanded.
  # This is a temporary fix for that.
  #
  # Follow at https://github.com/chef/chef/pull/1876
  #
  ruby_block "fix ruby ENV['PATH']" do
    block do
      ENV['PATH'] = expand_env_vars(ENV['PATH'])
    end
    action :nothing
  end
end

action :remove do
  env 'path' do
    action :delete
    delim ::File::PATH_SEPARATOR
    value new_resource.path.tr('/', '\\')
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/path.rb to tempfile /tmp/chef-rest20170405-7856-pfi5mj
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/path.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/windows_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002daebf0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/windows_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002daec68>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "windows_helper.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/version.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/version_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002ee6ea0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/version_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002ee6ef0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "version_helper.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000303e208
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000303e280>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "powershell_helper.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000034c72c0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/pagefile.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000034c7338>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "pagefile.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Kevin Moser (<kevin.moser@nordstrom.com>)
# Cookbook:: windows
# Resource:: pagefile
#
# Copyright:: 2012-2017, Nordstrom, Inc.
# Copyright:: 2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :name, String, name_property: true
property :system_managed, [true, false]
property :automatic_managed, [true, false], default: false
property :initial_size, Integer
property :maximum_size, Integer

include Chef::Mixin::ShellOut
include Windows::Helper

action :set do
  pagefile = new_resource.name
  initial_size = new_resource.initial_size
  maximum_size = new_resource.maximum_size
  system_managed = new_resource.system_managed
  automatic_managed = new_resource.automatic_managed

  if automatic_managed
    set_automatic_managed unless automatic_managed?
  else
    unset_automatic_managed if automatic_managed?

    # Check that the resource is not just trying to unset automatic managed, if it is do nothing more
    if (initial_size && maximum_size) || system_managed
      validate_name
      create(pagefile) unless exists?(pagefile)

      if system_managed
        set_system_managed(pagefile) unless max_and_min_set?(pagefile, 0, 0)
      else
        unless max_and_min_set?(pagefile, initial_size, maximum_size)
          set_custom_size(pagefile, initial_size, maximum_size)
        end
      end
    end
  end
end

action :delete do
  validate_name
  pagefile = new_resource.name
  delete(pagefile) if exists?(pagefile)
end

action_class do
  def validate_name
    return if /^.:.*.sys/ =~ new_resource.name
    raise "#{new_resource.name} does not match the format DRIVE:\\path\\file.sys for pagefiles. Example: C:\\pagefile.sys"
  end

  def exists?(pagefile)
    @exists ||= begin
      Chef::Log.debug("Checking if #{pagefile} exists")
      cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" list /format:list", returns: [0])
      cmd.stderr.empty? && (cmd.stdout =~ /SettingID=#{get_setting_id(pagefile)}/i)
    end
  end

  def max_and_min_set?(pagefile, min, max)
    @max_and_min_set ||= begin
      Chef::Log.debug("Checking if #{pagefile} min: #{min} and max #{max} are set")
      cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" list /format:list", returns: [0])
      cmd.stderr.empty? && (cmd.stdout =~ /InitialSize=#{min}/i) && (cmd.stdout =~ /MaximumSize=#{max}/i)
    end
  end

  def create(pagefile)
    converge_by("create pagefile #{pagefile}") do
      cmd = shell_out("#{wmic} pagefileset create name=\"#{win_friendly_path(pagefile)}\"")
      check_for_errors(cmd.stderr)
    end
  end

  def delete(pagefile)
    converge_by("remove pagefile #{pagefile}") do
      cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" delete")
      check_for_errors(cmd.stderr)
    end
  end

  def automatic_managed?
    @automatic_managed ||= begin
      Chef::Log.debug('Checking if pagefiles are automatically managed')
      cmd = shell_out("#{wmic} computersystem where name=\"%computername%\" get AutomaticManagedPagefile /format:list")
      cmd.stderr.empty? && (cmd.stdout =~ /AutomaticManagedPagefile=TRUE/i)
    end
  end

  def set_automatic_managed
    converge_by('set pagefile to Automatic Managed') do
      cmd = shell_out("#{wmic} computersystem where name=\"%computername%\" set AutomaticManagedPagefile=True")
      check_for_errors(cmd.stderr)
    end
  end

  def unset_automatic_managed
    converge_by('set pagefile to User Managed') do
      cmd = shell_out("#{wmic} computersystem where name=\"%computername%\" set AutomaticManagedPagefile=False")
      check_for_errors(cmd.stderr)
    end
  end

  def set_custom_size(pagefile, min, max)
    converge_by("set #{pagefile} to InitialSize=#{min} & MaximumSize=#{max}") do
      cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" set InitialSize=#{min},MaximumSize=#{max}", returns: [0])
      check_for_errors(cmd.stderr)
    end
  end

  def set_system_managed(pagefile) # rubocop: disable Style/AccessorMethodName
    converge_by("set #{pagefile} to System Managed") do
      cmd = shell_out("#{wmic} pagefileset where SettingID=\"#{get_setting_id(pagefile)}\" set InitialSize=0,MaximumSize=0", returns: [0])
      check_for_errors(cmd.stderr)
    end
  end

  def get_setting_id(pagefile)
    pagefile = win_friendly_path(pagefile)
    pagefile = pagefile.split('\\')
    "#{pagefile[1]} @ #{pagefile[0]}"
  end

  def check_for_errors(stderr)
    Chef::Log.fatal(stderr) unless stderr.empty?
  end

  def wmic
    @wmic ||= begin
      locate_sysnative_cmd('wmic.exe')
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/pagefile.rb to tempfile /tmp/chef-rest20170405-7856-7urpq
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Library:: helper
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

require 'uri'
require 'Win32API' if Chef::Platform.windows?
require 'chef/exceptions'

module Windows
  module Helper
    AUTO_RUN_KEY = 'HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run'.freeze unless defined?(AUTO_RUN_KEY)
    ENV_KEY = 'HKLM\SYSTEM\CurrentControlSet\Control\Session Manager\Environment'.freeze unless defined?(ENV_KEY)
    ExpandEnvironmentStrings = Win32API.new('kernel32', 'ExpandEnvironmentStrings', %w(P P L), 'L') if Chef::Platform.windows? && !defined?(ExpandEnvironmentStrings)

    # returns windows friendly version of the provided path,
    # ensures backslashes are used everywhere
    def win_friendly_path(path)
      path.gsub(::File::SEPARATOR, ::File::ALT_SEPARATOR || '\\') if path
    end

    # account for Window's wacky File System Redirector
    # http://msdn.microsoft.com/en-us/library/aa384187(v=vs.85).aspx
    # especially important for 32-bit processes (like Ruby) on a
    # 64-bit instance of Windows.
    def locate_sysnative_cmd(cmd)
      if ::File.exist?("#{ENV['WINDIR']}\\sysnative\\#{cmd}")
        "#{ENV['WINDIR']}\\sysnative\\#{cmd}"
      elsif ::File.exist?("#{ENV['WINDIR']}\\system32\\#{cmd}")
        "#{ENV['WINDIR']}\\system32\\#{cmd}"
      else
        cmd
      end
    end

    # Create a feature provider dependent value object.
    # mainly created becasue Windows Feature names are
    # different based on whether dism.exe or servicemanagercmd.exe
    # is used for installation
    def value_for_feature_provider(provider_hash)
      p = Chef::Platform.find_provider_for_node(node, :windows_feature)
      key = p.to_s.downcase.split('::').last
      provider_hash[key] || provider_hash[key.to_sym]
    end

    # singleton instance of the Windows Version checker
    def win_version
      @win_version ||= Windows::Version.new
    end

    # Helper function to properly parse a URI
    def as_uri(source)
      URI.parse(source)
    rescue URI::InvalidURIError
      Chef::Log.warn("#{source} was an invalid URI. Trying to escape invalid characters")
      URI.parse(URI.escape(source))
    end

    # if a file is local it returns a windows friendly path version
    # if a file is remote it caches it locally
    def cached_file(source, checksum = nil, windows_path = true)
      @installer_file_path ||= begin

        if source =~ %r{^(file|ftp|http|https):\/\/}
          uri = as_uri(source)
          cache_file_path = "#{Chef::Config[:file_cache_path]}/#{::File.basename(::URI.unescape(uri.path))}"
          Chef::Log.debug("Caching a copy of file #{source} at #{cache_file_path}")
          remote_file cache_file_path do
            source source
            backup false
            checksum checksum unless checksum.nil?
          end.run_action(:create)
        else
          cache_file_path = source
        end

        windows_path ? win_friendly_path(cache_file_path) : cache_file_path
      end
    end

    # Expands the environment variables
    def expand_env_vars(path)
      # We pick 32k because that is the largest it could be:
      # http://msdn.microsoft.com/en-us/library/windows/desktop/ms724265%28v=vs.85%29.aspx
      buf = 0.chr * 32 * 1024 # 32k
      if ExpandEnvironmentStrings.call(path.dup, buf, buf.length) == 0
        raise Chef::Exceptions::Win32APIError, 'Failed calling ExpandEnvironmentStrings (received 0)'
      end
      buf.strip
    end

    def is_package_installed?(package_name) # rubocop:disable Style/PredicateName
      installed_packages.include?(package_name)
    end

    def installed_packages
      @installed_packages || begin
        installed_packages = {}
        # Computer\HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_LOCAL_MACHINE)) # rescue nil
        # 64-bit registry view
        # Computer\HKEY_LOCAL_MACHINE\Software\Wow6464Node\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_LOCAL_MACHINE, (::Win32::Registry::Constants::KEY_READ | 0x0100))) # rescue nil
        # 32-bit registry view
        # Computer\HKEY_LOCAL_MACHINE\Software\Wow6432Node\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_LOCAL_MACHINE, (::Win32::Registry::Constants::KEY_READ | 0x0200))) # rescue nil
        # Computer\HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Uninstall
        installed_packages.merge!(extract_installed_packages_from_key(::Win32::Registry::HKEY_CURRENT_USER)) # rescue nil
        installed_packages
      end
    end

    # Returns an array
    def to_array(var)
      var = var.is_a?(Array) ? var : [var]
      var.reject(&:nil?)
    end

    private

    def extract_installed_packages_from_key(hkey = ::Win32::Registry::HKEY_LOCAL_MACHINE, desired = ::Win32::Registry::Constants::KEY_READ)
      uninstall_subkey = 'Software\Microsoft\Windows\CurrentVersion\Uninstall'
      packages = {}
      begin
        ::Win32::Registry.open(hkey, uninstall_subkey, desired) do |reg|
          reg.each_key do |key, _wtime|
            begin
              k = reg.open(key, desired)
              display_name = begin
                               k['DisplayName']
                             rescue
                               nil
                             end
              version = begin
                          k['DisplayVersion']
                        rescue
                          'NO VERSION'
                        end
              uninstall_string = begin
                                   k['UninstallString']
                                 rescue
                                   nil
                                 end
              if display_name
                packages[display_name] = { name: display_name,
                                           version: version,
                                           uninstall_string: uninstall_string }
              end
            rescue ::Win32::Registry::Error
            end
          end
        end
      rescue ::Win32::Registry::Error
      end
      packages
    end
  end
end

Chef::Recipe.send(:include, Windows::Helper)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000030e4a40
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/recipes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000030e4ae0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "recipes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Recipe:: default
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

Chef::Log.warn('The windows::default recipe has been deprecated. The gems previously installed in this recipe ship in the Chef MSI.')
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/recipes/default.rb to tempfile /tmp/chef-rest20170405-7856-1y6n012
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/recipes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/recipes
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_helper.rb to tempfile /tmp/chef-rest20170405-7856-17mwq32
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Cookbook:: windows
# Library:: version_helper
# Author:: Baptiste Courtois (<b.courtois@criteo.com>)
#
# Copyright:: 2015-2017, Criteo
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
module Windows
  # Module based on windows ohai kernel.cs_info providing version helpers
  module VersionHelper
    # Module referencing CORE SKU contants from product type
    # see. https://msdn.microsoft.com/windows/desktop/ms724358#PRODUCT_DATACENTER_SERVER_CORE
    # n.b. Prefix - PRODUCT_ - and suffix - _CORE- have been removed
    module CoreSKU
      # Server Datacenter Core
      DATACENTER_SERVER   = 0x0C unless constants.include?(:DATACENTER_SERVER)
      # Server Datacenter without Hyper-V Core
      DATACENTER_SERVER_V = 0x27 unless constants.include?(:DATACENTER_SERVER_V)
      # Server Enterprise Core
      ENTERPRISE_SERVER   = 0x0E unless constants.include?(:ENTERPRISE_SERVER)
      # Server Enterprise without Hyper-V Core
      ENTERPRISE_SERVER_V = 0x29 unless constants.include?(:ENTERPRISE_SERVER_V)
      # Server Standard Core
      STANDARD_SERVER     = 0x0D unless constants.include?(:STANDARD_SERVER)
      # Server Standard without Hyper-V Core
      STANDARD_SERVER_V   = 0x28 unless constants.include?(:STANDARD_SERVER_V)
    end

    # Module referencing product type contants
    # see. https://msdn.microsoft.com/windows/desktop/ms724833#VER_NT_SERVER
    # n.b. Prefix - VER_NT_ - has been removed
    module ProductType
      WORKSTATION         = 0x1 unless constants.include?(:WORKSTATION)
      DOMAIN_CONTROLLER   = 0x2 unless constants.include?(:DOMAIN_CONTROLLER)
      SERVER              = 0x3 unless constants.include?(:SERVER)
    end

    # Determines whether current node is running a windows Core version
    def self.core_version?(node)
      validate_platform node

      CoreSKU.constants.any? { |c| CoreSKU.const_get(c) == node['kernel']['os_info']['operating_system_sku'] }
    end

    # Determines whether current node is a workstation version
    def self.workstation_version?(node)
      validate_platform node
      node['kernel']['os_info']['product_type'] == ProductType::WORKSTATION
    end

    # Determines whether current node is a server version
    def self.server_version?(node)
      !workstation_version?(node)
    end

    # Determines NT version of the current node
    def self.nt_version(node)
      validate_platform node

      node['platform_version'].to_f
    end

    def self.validate_platform(node)
      raise 'Windows helper are only supported on windows platform!' if node['platform'] != 'windows'
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version_helper.rb to tempfile /tmp/chef-rest20170405-7856-ngd9hl
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/version_helper.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/libraries
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/windows_helper.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002f0fb20
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/version.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002f0fb98>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "version.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Library:: version
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if RUBY_PLATFORM =~ /mswin|mingw32|windows/
  require_relative 'wmi_helper'
  require 'Win32API'
end

module Windows
  class Version
    # http://msdn.microsoft.com/en-us/library/ms724833(v=vs.85).aspx

    # Suite Masks
    # Microsoft BackOffice components are installed.
    VER_SUITE_BACKOFFICE = 0x00000004 unless defined?(VER_SUITE_BACKOFFICE)
    # Windows Server 2003, Web Edition is installed.
    VER_SUITE_BLADE = 0x00000400 unless defined?(VER_SUITE_BLADE)
    # Windows Server 2003, Compute Cluster Edition is installed.
    VER_SUITE_COMPUTE_SERVER = 0x00004000 unless defined?(VER_SUITE_COMPUTE_SERVER)
    # Windows Server 2008 Datacenter, Windows Server 2003, Datacenter Edition, or Windows 2000 Datacenter Server is installed.
    VER_SUITE_DATACENTER = 0x00000080 unless defined?(VER_SUITE_DATACENTER)
    # Windows Server 2008 Enterprise, Windows Server 2003, Enterprise Edition, or Windows 2000 Advanced Server is installed. Refer to the Remarks section for more information about this bit flag.
    VER_SUITE_ENTERPRISE = 0x00000002 unless defined?(VER_SUITE_ENTERPRISE)
    # Windows XP Embedded is installed.
    VER_SUITE_EMBEDDEDNT = 0x00000040 unless defined?(VER_SUITE_EMBEDDEDNT)
    # Windows Vista Home Premium, Windows Vista Home Basic, or Windows XP Home Edition is installed.
    VER_SUITE_PERSONAL = 0x00000200 unless defined?(VER_SUITE_PERSONAL)
    # Remote Desktop is supported, but only one interactive session is supported. This value is set unless the system is running in application server mode.
    VER_SUITE_SINGLEUSERTS = 0x00000100 unless defined?(VER_SUITE_SINGLEUSERTS)
    # Microsoft Small Business Server was once installed on the system, but may have been upgraded to another version of Windows. Refer to the Remarks section for more information about this bit flag.
    VER_SUITE_SMALLBUSINESS = 0x00000001 unless defined?(VER_SUITE_SMALLBUSINESS)
    # Microsoft Small Business Server is installed with the restrictive client license in force. Refer to the Remarks section for more information about this bit flag.
    VER_SUITE_SMALLBUSINESS_RESTRICTED = 0x00000020 unless defined?(VER_SUITE_SMALLBUSINESS_RESTRICTED)
    # Windows Storage Server 2003 R2 or Windows Storage Server 2003is installed.
    VER_SUITE_STORAGE_SERVER = 0x00002000 unless defined?(VER_SUITE_STORAGE_SERVER)
    # Terminal Services is installed. This value is always set.
    # If VER_SUITE_TERMINAL is set but VER_SUITE_SINGLEUSERTS is not set, the system is running in application server mode.
    VER_SUITE_TERMINAL = 0x00000010 unless defined?(VER_SUITE_TERMINAL)
    # Windows Home Server is installed.
    VER_SUITE_WH_SERVER = 0x00008000 unless defined?(VER_SUITE_WH_SERVER)

    # Product Type
    # The system is a domain controller and the operating system is Windows Server 2012, Windows Server 2008 R2, Windows Server 2008, Windows Server 2003, or Windows 2000 Server.
    VER_NT_DOMAIN_CONTROLLER = 0x0000002 unless defined?(VER_NT_DOMAIN_CONTROLLER)
    # The operating system is Windows Server 2012, Windows Server 2008 R2, Windows Server 2008, Windows Server 2003, or Windows 2000 Server.
    # Note that a server that is also a domain controller is reported as VER_NT_DOMAIN_CONTROLLER, not VER_NT_SERVER.
    VER_NT_SERVER = 0x0000003 unless defined?(VER_NT_SERVER)
    # The operating system is Windows 7, Windows Vista, Windows XP Professional, Windows XP Home Edition, or Windows 2000 Professional.
    VER_NT_WORKSTATION = 0x0000001 unless defined?(VER_NT_WORKSTATION)

    # GetSystemMetrics
    # The build number if the system is Windows Server 2003 R2; otherwise, 0.
    SM_SERVERR2 = 89 unless defined?(SM_SERVERR2)

    # http://msdn.microsoft.com/en-us/library/ms724358(v=vs.85).aspx
    SKU = {
      0x00000006 => { ms_const: 'PRODUCT_BUSINESS', name: 'Business' },
      0x00000010 => { ms_const: 'PRODUCT_BUSINESS_N', name: 'Business N' },
      0x00000012 => { ms_const: 'PRODUCT_CLUSTER_SERVER', name: 'HPC Edition' },
      0x00000008 => { ms_const: 'PRODUCT_DATACENTER_SERVER', name: 'Server Datacenter (full installation)' },
      0x0000000C => { ms_const: 'PRODUCT_DATACENTER_SERVER_CORE', name: 'Server Datacenter (core installation)' },
      0x00000027 => { ms_const: 'PRODUCT_DATACENTER_SERVER_CORE_V', name: 'Server Datacenter without Hyper-V (core installation)' },
      0x00000025 => { ms_const: 'PRODUCT_DATACENTER_SERVER_V', name: 'Server Datacenter without Hyper-V (full installation)' },
      0x00000004 => { ms_const: 'PRODUCT_ENTERPRISE', name: 'Enterprise' },
      0x00000046 => { ms_const: 'PRODUCT_ENTERPRISE_E', name: 'Not supported' },
      0x0000001B => { ms_const: 'PRODUCT_ENTERPRISE_N', name: 'Enterprise N' },
      0x0000000A => { ms_const: 'PRODUCT_ENTERPRISE_SERVER', name: 'Server Enterprise (full installation)' },
      0x0000000E => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_CORE', name: 'Server Enterprise (core installation)' },
      0x00000029 => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_CORE_V', name: 'Server Enterprise without Hyper-V (core installation)' },
      0x0000000F => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_IA64', name: 'Server Enterprise for Itanium-based Systems' },
      0x00000026 => { ms_const: 'PRODUCT_ENTERPRISE_SERVER_V', name: 'Server Enterprise without Hyper-V (full installation)' },
      0x00000002 => { ms_const: 'PRODUCT_HOME_BASIC', name: 'Home Basic' },
      0x00000043 => { ms_const: 'PRODUCT_HOME_BASIC_E', name: 'Not supported' },
      0x00000005 => { ms_const: 'PRODUCT_HOME_BASIC_N', name: 'Home Basic N' },
      0x00000003 => { ms_const: 'PRODUCT_HOME_PREMIUM', name: 'Home Premium' },
      0x00000044 => { ms_const: 'PRODUCT_HOME_PREMIUM_E', name: 'Not supported' },
      0x0000001A => { ms_const: 'PRODUCT_HOME_PREMIUM_N', name: 'Home Premium N' },
      0x0000002A => { ms_const: 'PRODUCT_HYPERV', name: 'Microsoft Hyper-V Server' },
      0x0000001E => { ms_const: 'PRODUCT_MEDIUMBUSINESS_SERVER_MANAGEMENT', name: 'Windows Essential Business Server Management Server' },
      0x00000020 => { ms_const: 'PRODUCT_MEDIUMBUSINESS_SERVER_MESSAGING', name: 'Windows Essential Business Server Messaging Server' },
      0x0000001F => { ms_const: 'PRODUCT_MEDIUMBUSINESS_SERVER_SECURITY', name: 'Windows Essential Business Server Security Server' },
      0x00000030 => { ms_const: 'PRODUCT_PROFESSIONAL', name: 'Professional' },
      0x00000045 => { ms_const: 'PRODUCT_PROFESSIONAL_E', name: 'Not supported' },
      0x00000031 => { ms_const: 'PRODUCT_PROFESSIONAL_N', name: 'Professional N' },
      0x00000067 => { ms_const: 'PRODUCT_PROFESSIONAL_WMC', name: 'Professional with Media Center' },
      0x00000018 => { ms_const: 'PRODUCT_SERVER_FOR_SMALLBUSINESS', name: 'Windows Server 2008 for Windows Essential Server Solutions' },
      0x00000023 => { ms_const: 'PRODUCT_SERVER_FOR_SMALLBUSINESS_V', name: 'Windows Server 2008 without Hyper-V for Windows Essential Server Solutions' },
      0x00000021 => { ms_const: 'PRODUCT_SERVER_FOUNDATION', name: 'Server Foundation' },
      0x00000022 => { ms_const: 'PRODUCT_HOME_PREMIUM_SERVER', name: 'Windows Home Server 2011' },
      0x00000032 => { ms_const: 'PRODUCT_SB_SOLUTION_SERVER', name: 'Windows Small Business Server 2011 Essentials' },
      0x00000013 => { ms_const: 'PRODUCT_HOME_SERVER', name: 'Windows Storage Server 2008 R2 Essentials' },
      0x00000009 => { ms_const: 'PRODUCT_SMALLBUSINESS_SERVER', name: 'Windows Small Business Server' },
      0x00000038 => { ms_const: 'PRODUCT_SOLUTION_EMBEDDEDSERVER', name: 'Windows MultiPoint Server' },
      0x00000007 => { ms_const: 'PRODUCT_STANDARD_SERVER', name: 'Server Standard (full installation)' },
      0x0000000D => { ms_const: 'PRODUCT_STANDARD_SERVER_CORE', name: 'Server Standard (core installation)' },
      0x00000028 => { ms_const: 'PRODUCT_STANDARD_SERVER_CORE_V', name: 'Server Standard without Hyper-V (core installation)' },
      0x00000024 => { ms_const: 'PRODUCT_STANDARD_SERVER_V', name: 'Server Standard without Hyper-V (full installation)' },
      0x0000000B => { ms_const: 'PRODUCT_STARTER', name: 'Starter' },
      0x00000042 => { ms_const: 'PRODUCT_STARTER_E', name: 'Not supported' },
      0x0000002F => { ms_const: 'PRODUCT_STARTER_N', name: 'Starter N' },
      0x00000017 => { ms_const: 'PRODUCT_STORAGE_ENTERPRISE_SERVER', name: 'Storage Server Enterprise' },
      0x00000014 => { ms_const: 'PRODUCT_STORAGE_EXPRESS_SERVER', name: 'Storage Server Express' },
      0x00000015 => { ms_const: 'PRODUCT_STORAGE_STANDARD_SERVER', name: 'Storage Server Standard' },
      0x00000016 => { ms_const: 'PRODUCT_STORAGE_WORKGROUP_SERVER', name: 'Storage Server Workgroup' },
      0x00000000 => { ms_const: 'PRODUCT_UNDEFINED', name: 'An unknown product' },
      0x00000001 => { ms_const: 'PRODUCT_ULTIMATE', name: 'Ultimate' },
      0x00000047 => { ms_const: 'PRODUCT_ULTIMATE_E', name: 'Not supported' },
      0x0000001C => { ms_const: 'PRODUCT_ULTIMATE_N', name: 'Ultimate N' },
      0x00000011 => { ms_const: 'PRODUCT_WEB_SERVER', name: 'Web Server (full installation)' },
      0x0000001D => { ms_const: 'PRODUCT_WEB_SERVER_CORE', name: 'Web Server (core installation)' },
    }.freeze unless defined?(SKU)

    attr_reader :major_version, :minor_version, :build_number, :service_pack_major_version, :service_pack_minor_version
    attr_reader :version, :product_type, :product_suite, :sku

    def initialize
      unless RUBY_PLATFORM =~ /mswin|mingw32|windows/
        raise NotImplementedError, 'only valid on Windows platform'
      end
      @version, @product_type, @product_suite, @sku, @service_pack_major_version, @service_pack_minor_version = get_os_info
      @major_version, @minor_version, @build_number = version.split('.').map(&:to_i)
    end

    WIN_VERSIONS = {
      'Windows Server 2012 R2' => { major: 6, minor: 3, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows 8' => { major: 6, minor: 2, callable: -> { @product_type == VER_NT_WORKSTATION } },
      'Windows Server 2012' => { major: 6, minor: 2, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows 7' => { major: 6, minor: 1, callable: -> { @product_type == VER_NT_WORKSTATION } },
      'Windows Server 2008 R2' => { major: 6, minor: 1, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows Server 2008' => { major: 6, minor: 0, callable: -> { @product_type != VER_NT_WORKSTATION } },
      'Windows Vista' => { major: 6, minor: 0, callable: -> { @product_type == VER_NT_WORKSTATION } },
      'Windows Server 2003 R2' => { major: 5, minor: 2, callable: -> { Win32API.new('user32', 'GetSystemMetrics', 'I', 'I').call(SM_SERVERR2) != 0 } },
      'Windows Home Server' => { major: 5, minor: 2, callable: -> { (@product_suite & VER_SUITE_WH_SERVER) == VER_SUITE_WH_SERVER } },
      'Windows Server 2003' => { major: 5, minor: 2, callable: -> { Win32API.new('user32', 'GetSystemMetrics', 'I', 'I').call(SM_SERVERR2) == 0 } },
      'Windows XP' => { major: 5, minor: 1 },
      'Windows 2000' => { major: 5, minor: 0 },
    }.freeze unless defined?(WIN_VERSIONS)

    marketing_names = []

    # General Windows checks
    WIN_VERSIONS.each do |k, v|
      method_name = "#{k.gsub(/\s/, '_').downcase}?"
      define_method(method_name) do
        (@major_version == v[:major]) &&
          (@minor_version == v[:minor]) &&
          (v[:callable] ? v[:callable].call : true)
      end
      marketing_names << [k, method_name]
    end

    define_method(:marketing_name) do
      marketing_names.each do |mn|
        break mn[0] if send(mn[1])
      end
    end

    # Server Type checks
    %w( core full datacenter ).each do |m|
      define_method("server_#{m}?") do
        if @sku
          !(SKU[@sku][:name] =~ /#{m}/i).nil?
        else
          false
        end
      end
    end

    private

    # Win32API call to GetSystemMetrics(SM_SERVERR2)
    # returns: The build number if the system is Windows Server 2003 R2; otherwise, 0.
    def sm_serverr2
      @sm_serverr2 ||= Win32API.new('user32', 'GetSystemMetrics', 'I', 'I').call(SM_SERVERR2)
    end

    # query WMI Win32_OperatingSystem for required OS info
    def get_os_info
      cols = %w( Version ProductType OSProductSuite OperatingSystemSKU ServicePackMajorVersion ServicePackMinorVersion )
      os_info = execute_wmi_query('select * from Win32_OperatingSystem').each.next
      cols.map do |c|
        begin
          wmi_object_property(os_info, c)
        rescue # OperatingSystemSKU doesn't exist in all versions of Windows
          nil
        end
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Library:: helper
#
# Copyright:: 2011-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

require 'chef/mixin/shell_out'

module Powershell
  module Helper
    include Chef::Mixin::ShellOut

    def powershell_installed?
      !powershell_version.nil?
    end

    def interpreter
      # force 64-bit powershell from 32-bit ruby process
      if ::File.exist?("#{ENV['WINDIR']}\\sysnative\\WindowsPowershell\\v1.0\\powershell.exe")
        "#{ENV['WINDIR']}\\sysnative\\WindowsPowershell\\v1.0\\powershell.exe"
      elsif ::File.exist?("#{ENV['WINDIR']}\\system32\\WindowsPowershell\\v1.0\\powershell.exe")
        "#{ENV['WINDIR']}\\system32\\WindowsPowershell\\v1.0\\powershell.exe"
      else
        'powershell.exe'
      end
    end

    def powershell_version
      cmd = shell_out("#{interpreter} -InputFormat none -Command \"& echo $PSVersionTable.psversion.major\"")
      if cmd.stdout.empty? # PowerShell 1.0 doesn't have a $PSVersionTable
        1
      else
        Regexp.last_match(1).to_i if cmd.stdout =~ /^(\d+)/
      end
    rescue Errno::ENOENT
      nil
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/version.rb to tempfile /tmp/chef-rest20170405-7856-1ok76g9
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/powershell_helper.rb to tempfile /tmp/chef-rest20170405-7856-6wd212
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/powershell_helper.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/pagefile.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000031e72a8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/resources/task.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000031e7370>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "resources",
   "task.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/version.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000262bef0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002630158>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "windows_privileged.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/registry_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002f8c788
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>
    "/file_store/repo/cookbooks/windows/libraries/registry_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000002f8c828>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "registry_helper.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern (<dougm@vmware.com>)
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook:: windows
# Provider:: registry
#
# Copyright:: 2010-2017, VMware, Inc.
# Copyright:: 2011-2017, Chef Software, Inc.
# Copyright:: 2011-2017, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if RUBY_PLATFORM =~ /mswin|mingw32|windows/
  require 'win32/registry'
  require_relative 'wmi_helper'
end

module Windows
  module RegistryHelper
    @@native_registry_constant = if ENV['PROCESSOR_ARCHITECTURE'] == 'AMD64' ||
                                    ENV['PROCESSOR_ARCHITEW6432'] == 'AMD64'
                                   0x0100
                                 else
                                   0x0200
                                 end

    def get_hive_name(path)
      Chef::Log.debug('Resolving registry shortcuts to full names')

      reg_path = path.split('\\')
      hive_name = reg_path.shift

      hkey = {
        'HKLM' => 'HKEY_LOCAL_MACHINE',
        'HKCU' => 'HKEY_CURRENT_USER',
        'HKU'  => 'HKEY_USERS',
      }[hive_name] || hive_name

      Chef::Log.debug("Hive resolved to #{hkey}")
      hkey
    end

    def get_hive(path)
      Chef::Log.debug("Getting hive for #{path}")
      reg_path = path.split('\\')
      hive_name = reg_path.shift

      hkey = get_hive_name(path)

      hive = {
        'HKEY_LOCAL_MACHINE' => ::Win32::Registry::HKEY_LOCAL_MACHINE,
        'HKEY_USERS' => ::Win32::Registry::HKEY_USERS,
        'HKEY_CURRENT_USER' => ::Win32::Registry::HKEY_CURRENT_USER,
      }[hkey]

      unless hive
        Chef::Application.fatal!("Unsupported registry hive '#{hive_name}'")
      end

      Chef::Log.debug("Registry hive resolved to #{hkey}")
      hive
    end

    def unload_hive(path)
      hive = get_hive(path)
      if hive == ::Win32::Registry::HKEY_USERS
        reg_path = path.split('\\')
        priv = Chef::WindowsPrivileged.new
        begin
          priv.reg_unload_key(reg_path[1])
        rescue
        end
      end
    end

    def set_value(mode, path, values, type = nil)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key_name = reg_path.join('\\')

      Chef::Log.debug("Creating #{path}")

      create_key(path) unless key_exists?(path, true)

      hive.send(mode, key_name, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        changed_something = false
        values.each do |k, val|
          key = k.to_s # wtf. avoid "can't modify frozen string" in win32/registry.rb
          cur_val = nil
          begin
            cur_val = reg[key]
          rescue
            # subkey does not exist (ok)
          end

          next unless cur_val != val

          Chef::Log.debug("setting #{key}=#{val}")

          type = :string if type.nil?

          reg_type = {
            binary: ::Win32::Registry::REG_BINARY,
            string: ::Win32::Registry::REG_SZ,
            multi_string: ::Win32::Registry::REG_MULTI_SZ,
            expand_string: ::Win32::Registry::REG_EXPAND_SZ,
            dword: ::Win32::Registry::REG_DWORD,
            dword_big_endian: ::Win32::Registry::REG_DWORD_BIG_ENDIAN,
            qword: ::Win32::Registry::REG_QWORD,
          }[type]

          reg.write(key, reg_type, val)

          ensure_hive_unloaded(hive_loaded)

          changed_something = true
        end
        return changed_something
      end
      false
    end

    def get_value(path, value)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')

      hive.open(key, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        begin
          return reg[value]
        rescue
          return nil
        ensure
          ensure_hive_unloaded(hive_loaded)
        end
      end
    end

    def get_values(path)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')
      hive.open(key, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        values = []
        begin
          reg.each_value do |name, type, data|
            values << [name, type, data]
          end
        rescue
        ensure
          ensure_hive_unloaded(hive_loaded)
        end
        values
      end
    end

    def delete_value(path, values)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')
      Chef::Log.debug("Deleting values in #{path}")
      hive.open(key, ::Win32::Registry::KEY_ALL_ACCESS | @@native_registry_constant) do |reg|
        values.each_key do |key|
          name = key.to_s
          # Ensure delete operation is idempotent.
          if value_exists?(path, key)
            Chef::Log.debug("Deleting value #{name} in #{path}")
            reg.delete_value(name)
          else
            Chef::Log.debug("Value #{name} in #{path} does not exist, skipping.")
          end
        end
      end
    end

    def create_key(path)
      hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
      key = reg_path.join('\\')
      Chef::Log.debug("Creating registry key #{path}")
      hive.create(key)
    end

    def value_exists?(path, value)
      if key_exists?(path, true)

        hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
        key = reg_path.join('\\')

        Chef::Log.debug("Attempting to open #{key}")
        Chef::Log.debug("Native Constant #{@@native_registry_constant}")
        Chef::Log.debug("Hive #{hive}")

        hive.open(key, ::Win32::Registry::KEY_READ | @@native_registry_constant) do |reg|
          begin
            rtn_value = reg[value]
            return true
          rescue
            return false
          ensure
            ensure_hive_unloaded(hive_loaded)
          end
        end

      end
      false
    end

    # TODO: Does not load user registry...
    def key_exists?(path, load_hive = false)
      if load_hive
        hive, reg_path, hive_name, root_key, hive_loaded = get_reg_path_info(path)
        key = reg_path.join('\\')
      else
        hive = get_hive(path)
        reg_path = path.split('\\')
        hive_name = reg_path.shift
        root_key = reg_path[0]
        key = reg_path.join('\\')
        hive_loaded = false
      end

      begin
        hive.open(key, ::Win32::Registry::Constants::KEY_READ | @@native_registry_constant)
        return true
      rescue
        return false
      ensure
        ensure_hive_unloaded(hive_loaded)
      end
    end

    def get_user_hive_location(sid)
      reg_key = "HKLM\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\ProfileList\\#{sid}"
      Chef::Log.debug("Looking for profile at #{reg_key}")
      if key_exists?(reg_key)
        return get_value(reg_key, 'ProfileImagePath')
      else
        return nil
      end
    end

    def resolve_user_to_sid(username)
      user_query = execute_wmi_query("select * from Win32_UserAccount where Name='#{username}'")
      sid = nil

      user_query.each do |user|
        sid = wmi_object_property(user, 'sid')
        break
      end

      Chef::Log.debug("Resolved user SID to #{sid}")
      return sid
    rescue
      return nil
    end

    def hive_loaded?(path)
      hive = get_hive(path)
      reg_path = path.split('\\')
      hive_name = reg_path.shift
      user_hive = path[0]

      if user_hive?(hive)
        return key_exists?("#{hive_name}\\#{user_hive}")
      else
        return true
      end
    end

    def user_hive?(hive)
      hive == ::Win32::Registry::HKEY_USERS
    end

    def get_reg_path_info(path)
      hive = get_hive(path)
      reg_path = path.split('\\')
      hive_name = reg_path.shift
      root_key = reg_path[0]
      hive_loaded = false

      if user_hive?(hive) && !key_exists?("#{hive_name}\\#{root_key}")
        reg_path, hive_loaded = load_user_hive(hive, reg_path, root_key)
        root_key = reg_path[0]
        Chef::Log.debug("Resolved user (#{path}) to (#{reg_path.join('/')})")
      end

      [hive, reg_path, hive_name, root_key, hive_loaded]
    end

    def load_user_hive(hive, reg_path, user_hive)
      Chef::Log.debug("Reg Path #{reg_path}")
      # See if the hive is loaded. Logged in users will have a key that is named their SID
      # if the user has specified the a path by SID and the user is logged in, this function
      # should not be executed.
      if user_hive?(hive) && !key_exists?("HKU\\#{user_hive}")
        Chef::Log.debug('The user is not logged in and has not been specified by SID')
        sid = resolve_user_to_sid(user_hive)
        Chef::Log.debug("User SID resolved to (#{sid})")
        # Now that the user has been resolved to a SID, check and see if the hive exists.
        # If this exists by SID, the user is logged in and we should use that key.
        # TODO: Replace the username with the sid and send it back because the username
        # does not exist as the key location.
        load_reg = false
        if key_exists?("HKU\\#{sid}")
          reg_path[0] = sid # use the active profile (user is logged on)
          Chef::Log.debug("HKEY_USERS Mapped: #{user_hive} -> #{sid}")
        else
          Chef::Log.debug('User is not logged in')
          load_reg = true
        end

        # The user is not logged in, so we should load the registry from disk
        if load_reg
          profile_path = get_user_hive_location(sid)
          unless profile_path.nil?
            ntuser_dat = "#{profile_path}\\NTUSER.DAT"
            if ::File.exist?(ntuser_dat)
              priv = Chef::WindowsPrivileged.new
              if priv.reg_load_key(sid, ntuser_dat)
                Chef::Log.debug("RegLoadKey(#{sid}, #{user_hive}, #{ntuser_dat})")
                reg_path[0] = sid
              else
                Chef::Log.debug("Failed RegLoadKey(#{sid}, #{user_hive}, #{ntuser_dat})")
              end
            end
          end
        end
      end

      [reg_path, load_reg]
    end

    private

    def ensure_hive_unloaded(hive_loaded = false)
      if hive_loaded
        Chef::Log.debug('Hive was loaded, we really should unload it')
        unload_hive(path)
      end
    end
  end
end

module Registry
  module_function

  extend Windows::RegistryHelper
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/registry_helper.rb to tempfile /tmp/chef-rest20170405-7856-hcl4px
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/registry_helper.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/MAINTAINERS.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000001e7b548
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/MAINTAINERS.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000001e7b638>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "MAINTAINERS.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/.foodcritic
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000024fbf08
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000024fbf80>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "libraries",
   "wmi_helper.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern <dougm@vmware.com>
# Author:: Paul Morton (<pmorton@biaprotect.com>)
# Cookbook:: windows
# Library:: windows_privileged
#
# Copyright:: 2010-2017, VMware, Inc.
# Copyright:: 2011-2017, Business Intelligence Associates, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# helpers for Windows API calls that require privilege adjustments
class Chef
  class WindowsPrivileged
    # File -> Load Hive... in regedit.exe
    def reg_load_key(name, file)
      load_deps

      run(SE_BACKUP_NAME, SE_RESTORE_NAME) do
        rc = RegLoadKey(HKEY_USERS, name.to_s, file)
        if rc == ERROR_SUCCESS
          return true
        elsif rc == ERROR_SHARING_VIOLATION
          return false
        else
          raise get_last_error(rc)
        end
      end
    end

    # File -> Unload Hive... in regedit.exe
    def reg_unload_key(name)
      load_deps

      run(SE_BACKUP_NAME, SE_RESTORE_NAME) do
        rc = RegUnLoadKey(HKEY_USERS, name.to_s)
        raise get_last_error(rc) if rc != ERROR_SUCCESS
      end
    end

    def run(*privileges)
      load_deps

      token = [0].pack('L')

      unless OpenProcessToken(GetCurrentProcess(), TOKEN_ADJUST_PRIVILEGES | TOKEN_QUERY, token)
        raise get_last_error
      end
      token = token.unpack('L')[0]

      privileges.each do |name|
        unless adjust_privilege(token, name, SE_PRIVILEGE_ENABLED)
          raise get_last_error
        end
      end

      begin
        yield
      ensure # disable privs
        privileges.each do |name|
          adjust_privilege(token, name, 0)
        end
      end
    end

    def adjust_privilege(token, priv, attr = 0)
      load_deps

      luid = [0, 0].pack('Ll')
      if LookupPrivilegeValue(nil, priv, luid)
        new_state = [1, luid.unpack('Ll'), attr].flatten.pack('LLlL')
        AdjustTokenPrivileges(token, 0, new_state, new_state.size, 0, 0)
      end
    end

    private

    def load_deps
      if RUBY_PLATFORM =~ /mswin|mingw32|windows/
        require 'windows/error'
        require 'windows/registry'
        require 'windows/process'
        require 'windows/security'

        include Windows::Error
        include Windows::Registry
        include Windows::Process
        include Windows::Security
      end
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/README.md
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Doug MacEachern <dougm@vmware.com>
# Cookbook:: windows
# Resource:: shortcut
#
# Copyright:: 2010-2017, VMware, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

property :name, String
property :target, String
property :arguments, String
property :description, String
property :cwd, String
property :iconlocation, String

load_current_value do |desired|
  require 'win32ole' if RUBY_PLATFORM =~ /mswin|mingw32|windows/

  link = WIN32OLE.new('WScript.Shell').CreateShortcut(desired.name)
  name desired.name
  target(link.TargetPath)
  arguments(link.Arguments)
  description(link.Description)
  cwd(link.WorkingDirectory)
  iconlocation(link.IconLocation)
end

action :create do
  converge_if_changed do
    converge_by "creating shortcut #{new_resource.name}" do
      link = WIN32OLE.new('WScript.Shell').CreateShortcut(new_resource.name)
      link.TargetPath = new_resource.target unless new_resource.target.nil?
      link.Arguments = new_resource.arguments unless new_resource.arguments.nil?
      link.Description = new_resource.description unless new_resource.description.nil?
      link.WorkingDirectory = new_resource.cwd unless new_resource.cwd.nil?
      link.IconLocation = new_resource.iconlocation unless new_resource.iconlocation.nil?
      # ignoring: WindowStyle, Hotkey
      link.Save
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/shortcut.rb to tempfile /tmp/chef-rest20170405-7856-k9iosd
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/shortcut.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/CONTRIBUTING.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000515e078
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/CONTRIBUTING.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000515e0f0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "CONTRIBUTING.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
Please refer to
https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/CONTRIBUTING.md to tempfile /tmp/chef-rest20170405-7856-s3khin
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/CONTRIBUTING.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
<!-- This is a generated file. Please do not edit directly -->

# Maintainers

This file lists how this cookbook project is maintained. When making changes to the system, this file tells you who needs to review your patch - you need a review from an existing maintainer for the cookbook to provide a :+1: on your pull request. Additionally, you need to not receive a veto from a Lieutenant or the Project Lead.

Check out [How Cookbooks are Maintained](https://github.com/chef-cookbooks/community_cookbook_documentation/blob/master/CONTRIBUTING.MD) for details on the process and how to become a maintainer or the project lead.

# Project Maintainer
* [Adam Edwards](https://github.com/adamedx)

# Maintainers
* [Adam Edwards](https://github.com/adamedx)
* [Kartik Null Cating-Subramanian](https://github.com/ksubrama)
* [Steven Murawski](https://github.com/smurawski)
* [Matt Wrock](https://github.com/mwrock)
* [Jay Mundrawala](https://github.com/jaym)
* [Claire McQuin](https://github.com/mcquin)
* [Salim Alam](https://github.com/chefsalim)
* [Tim Smith](https://github.com/tas50)
* [Jennifer Davis](https://github.com/sigje)
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Adam Edwards (<adamed@chef.io>)
#
# Copyright:: 2014-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

if RUBY_PLATFORM =~ /mswin|mingw32|windows/
  require 'win32ole'

  def execute_wmi_query(wmi_query)
    wmi = ::WIN32OLE.connect('winmgmts://')
    result = wmi.ExecQuery(wmi_query)
    return nil unless result.each.count > 0
    result
  end

  def wmi_object_property(wmi_object, wmi_property)
    wmi_object.send(wmi_property)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/MAINTAINERS.md to tempfile /tmp/chef-rest20170405-7856-o2t7wv
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/MAINTAINERS.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Paul Mooring (<paul@chef.io>)
# Cookbook:: windows
# Resource:: task
#
# Copyright:: 2012-2017, Chef Software, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

# Passwords can't be loaded for existing tasks, making :modify both confusing
# and not very useful

require 'chef/mixin/shell_out'
require 'rexml/document'

include Chef::Mixin::ShellOut

property :task_name, String, name_property: true, regex: [/\A[^\/\:\*\?\<\>\|]+\z/]
property :command, String
property :cwd, String
property :user, String, default: 'SYSTEM'
property :password, String
property :run_level, equal_to: [:highest, :limited], default: :limited
property :force, [true, false], default: false
property :interactive_enabled, [true, false], default: false
property :frequency_modifier, [Integer, String], default: 1
property :frequency, equal_to: [:minute,
                                :hourly,
                                :daily,
                                :weekly,
                                :monthly,
                                :once,
                                :on_logon,
                                :onstart,
                                :on_idle], default: :hourly
property :start_day, String
property :start_time, String
property :day, [String, Integer]
property :months, String
property :idle_time, Integer
property :exists, [true, false], desired_state: true
property :status, Symbol, desired_state: true
property :enabled, [true, false], desired_state: true

def load_task_hash(task_name)
  Chef::Log.debug 'Looking for existing tasks'

  # we use shell_out here instead of shell_out! because a failure implies that the task does not exist
  output = shell_out("schtasks /Query /FO LIST /V /TN \"#{task_name}\"").stdout
  if output.empty?
    task = false
  else
    task = {}

    output.split("\n").map! { |line| line.split(':', 2).map!(&:strip) }.each do |field|
      if field.is_a?(Array) && field[0].respond_to?(:to_sym)
        task[field[0].gsub(/\s+/, '').to_sym] = field[1]
      end
    end
  end

  task
end

load_current_value do |desired|
  pathed_task_name = desired.task_name.start_with?('\\') ? desired.task_name : "\\#{desired.task_name}"

  task_hash = load_task_hash pathed_task_name

  task_name pathed_task_name
  if task_hash.respond_to?(:[]) && task_hash[:TaskName] == pathed_task_name
    exists true
    status :running if task_hash[:Status] == 'Running'
    enabled task_hash[:ScheduledTaskState] == 'Enabled' ? true : false
    cwd task_hash[:StartIn] unless task_hash[:StartIn] == 'N/A'
    command task_hash[:TaskToRun]
    user task_hash[:RunAsUser]
  else
    exists false
  end
end

action :create do
  if current_resource.exists && !(task_need_update? || new_resource.force)
    Chef::Log.info "#{new_resource} task already exists - nothing to do"
  else
    converge_by("creating a new scheduled task #{new_resource.task_name}") do
      validate_user_and_password
      validate_interactive_setting
      validate_create_frequency_modifier
      validate_create_day
      validate_create_months
      validate_idle_time

      options = {}
      options['F'] = '' if new_resource.force || task_need_update?
      options['SC'] = schedule
      options['MO'] = new_resource.frequency_modifier if frequency_modifier_allowed
      options['I']  = new_resource.idle_time unless new_resource.idle_time.nil?
      options['SD'] = new_resource.start_day unless new_resource.start_day.nil?
      options['ST'] = new_resource.start_time unless new_resource.start_time.nil?
      options['TR'] = new_resource.command
      options['RU'] = new_resource.user
      options['RP'] = new_resource.password if use_password?
      options['RL'] = 'HIGHEST' if new_resource.run_level == :highest
      options['IT'] = '' if new_resource.interactive_enabled
      options['D'] = new_resource.day if new_resource.day
      options['M'] = new_resource.months unless new_resource.months.nil?

      run_schtasks 'CREATE', options
      cwd(new_resource.cwd) if new_resource.cwd
    end
  end
end

action :run do
  if current_resource.exists
    if current_resource.status == :running
      Chef::Log.info "#{new_resource} task is currently running, skipping run"
    else
      converge_by("running scheduled task #{new_resource.task_name}") do
        run_schtasks 'RUN'
        new_resource.updated_by_last_action true
      end
    end
  else
    Chef::Log.debug "#{new_resource} task doesn't exists - nothing to do"
  end
end

action :change do
  if current_resource.exists
    converge_by("changing scheduled task #{new_resource.task_name}") do
      validate_user_and_password
      validate_interactive_setting

      options = {}
      options['TR'] = new_resource.command if new_resource.command
      options['RU'] = new_resource.user if new_resource.user
      options['RP'] = new_resource.password if new_resource.password
      options['SD'] = new_resource.start_day unless new_resource.start_day.nil?
      options['ST'] = new_resource.start_time unless new_resource.start_time.nil?
      options['IT'] = '' if new_resource.interactive_enabled

      run_schtasks 'CHANGE', options
      cwd(new_resource.cwd) if new_resource.cwd != current_resource.cwd
    end
  else
    Chef::Log.debug "#{new_resource} task doesn't exists - nothing to do"
  end
end

action :delete do
  if current_resource.exists
    converge_by("deleting scheduled task #{new_resource.task_name}") do
      # always need to force deletion
      run_schtasks 'DELETE', 'F' => ''
    end
  else
    Chef::Log.debug "#{new_resource} task doesn't exists - nothing to do"
  end
end

action :end do
  if current_resource.exists
    if current_resource.status != :running
      Chef::Log.debug "#{new_resource} is not running - nothing to do"
    else
      converge_by("stopping scheduled task #{new_resource.task_name}") do
        run_schtasks 'END'
      end
    end
  else
    Chef::Log.fatal "#{new_resource} task doesn't exist - nothing to do"
    raise Errno::ENOENT, "#{new_resource}: task does not exist, cannot end"
  end
end

action :enable do
  if current_resource.exists
    if current_resource.enabled
      Chef::Log.debug "#{new_resource} already enabled - nothing to do"
    else
      converge_by("enabling scheduled task #{new_resource.task_name}") do
        run_schtasks 'CHANGE', 'ENABLE' => ''
      end
    end
  else
    Chef::Log.fatal "#{new_resource} task doesn't exist - nothing to do"
    raise Errno::ENOENT, "#{new_resource}: task does not exist, cannot enable"
  end
end

action :disable do
  if current_resource.exists
    if current_resource.enabled
      converge_by("disabling scheduled task #{new_resource.task_name}") do
        run_schtasks 'CHANGE', 'DISABLE' => ''
      end
    else
      Chef::Log.debug "#{new_resource} already disabled - nothing to do"
    end
  else
    Chef::Log.debug "#{new_resource} task doesn't exist - nothing to do"
  end
end

action_class do
  # rubocop:disable Style/StringLiteralsInInterpolation
  def run_schtasks(task_action, options = {})
    cmd = "schtasks /#{task_action} /TN \"#{new_resource.task_name}\" "
    options.keys.each do |option|
      cmd += "/#{option} "
      cmd += "\"#{options[option].to_s.gsub('"', "\\\"")}\" " unless options[option] == ''
    end
    Chef::Log.debug('running: ')
    Chef::Log.debug("    #{cmd}")
    shell_out!(cmd, returns: [0])
  end
  # rubocop:enable Style/StringLiteralsInInterpolation

  def task_need_update?
    # gsub needed as schtasks converts single quotes to double quotes on creation
    current_resource.command != new_resource.command.tr("'", '"') ||
      current_resource.user != new_resource.user
  end

  def cwd(folder)
    Chef::Log.debug 'looking for existing tasks'

    # we use shell_out here instead of shell_out! because a failure implies that the task does not exist
    xml_cmd = shell_out("schtasks /Query /TN \"#{new_resource.task_name}\" /XML")

    return if xml_cmd.exitstatus != 0

    doc = REXML::Document.new(xml_cmd.stdout)

    Chef::Log.debug 'Removing former CWD if any'
    doc.root.elements.delete('Actions/Exec/WorkingDirectory')

    unless folder.nil?
      Chef::Log.debug 'Setting CWD as #folder'
      cwd_element = REXML::Element.new('WorkingDirectory')
      cwd_element.add_text(folder)
      exec_element = doc.root.elements['Actions/Exec']
      exec_element.add_element(cwd_element)
    end

    temp_task_file = ::File.join(ENV['TEMP'], 'windows_task.xml')
    begin
      ::File.open(temp_task_file, 'w:UTF-16LE') do |f|
        doc.write(f)
      end

      options = {}
      options['RU'] = new_resource.user if new_resource.user
      options['RP'] = new_resource.password if new_resource.password
      options['IT'] = '' if new_resource.interactive_enabled
      options['XML'] = temp_task_file

      run_schtasks('DELETE', 'F' => '')
      run_schtasks('CREATE', options)
    ensure
      ::File.delete(temp_task_file)
    end
  end

  SYSTEM_USERS = ['NT AUTHORITY\SYSTEM', 'SYSTEM', 'NT AUTHORITY\LOCALSERVICE', 'NT AUTHORITY\NETWORKSERVICE'].freeze

  def validate_user_and_password
    return unless new_resource.user && use_password?
    return unless new_resource.password.nil?
    Chef::Log.fatal "#{new_resource.task_name}: Can't specify a non-system user without a password!"
  end

  def validate_interactive_setting
    return unless new_resource.interactive_enabled && new_resource.password.nil?
    Chef::Log.fatal "#{new_resource} did not provide a password when attempting to set interactive/non-interactive."
  end

  def validate_create_day
    return unless new_resource.day
    unless [:weekly, :monthly].include?(new_resource.frequency)
      raise 'day attribute is only valid for tasks that run weekly or monthly'
    end
    return unless new_resource.day.is_a?(String) && new_resource.day.to_i.to_s != new_resource.day
    days = new_resource.day.split(',')
    days.each do |day|
      unless ['mon', 'tue', 'wed', 'thu', 'fri', 'sat', 'sun', '*'].include?(day.strip.downcase)
        raise 'day attribute invalid.  Only valid values are: MON, TUE, WED, THU, FRI, SAT, SUN and *.  Multiple values must be separated by a comma.'
      end
    end
  end

  def validate_create_months
    return unless new_resource.months
    unless [:monthly].include?(new_resource.frequency)
      raise 'months attribute is only valid for tasks that run monthly'
    end
    return unless new_resource.months.is_a? String
    months = new_resource.months.split(',')
    months.each do |month|
      unless ['JAN', 'FEB', 'MAR', 'APR', 'MAY', 'JUN', 'JUL', 'AUG', 'SEP', 'OCT', 'NOV', 'DEC', '*'].include?(month.strip.upcase)
        raise 'months attribute invalid. Only valid values are: JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC and *. Multiple values must be separated by a comma.'
      end
    end
  end

  def validate_idle_time
    return unless new_resource.frequency == :on_idle
    return if new_resource.idle_time.to_i > 0 && new_resource.idle_time.to_i <= 999
    raise "idle_time value #{new_resource.idle_time} is invalid.  Valid values for :on_idle frequency are 1 - 999."
  end

  def validate_create_frequency_modifier
    # Currently is handled in create action 'frequency_modifier_allowed' line. Does not allow for frequency_modifier for once,onstart,onlogon,onidle
    # Note that 'OnEvent' is not a supported frequency.
    return if new_resource.frequency.nil? || new_resource.frequency_modifier.nil?
    case new_resource.frequency
    when :minute
      unless new_resource.frequency_modifier.to_i > 0 && new_resource.frequency_modifier.to_i <= 1439
        raise "frequency_modifier value #{new_resource.frequency_modifier} is invalid.  Valid values for :minute frequency are 1 - 1439."
      end
    when :hourly
      unless new_resource.frequency_modifier.to_i > 0 && new_resource.frequency_modifier.to_i <= 23
        raise "frequency_modifier value #{new_resource.frequency_modifier} is invalid.  Valid values for :hourly frequency are 1 - 23."
      end
    when :daily
      unless new_resource.frequency_modifier.to_i > 0 && new_resource.frequency_modifier.to_i <= 365
        raise "frequency_modifier value #{new_resource.frequency_modifier} is invalid.  Valid values for :daily frequency are 1 - 365."
      end
    when :weekly
      unless new_resource.frequency_modifier.to_i > 0 && new_resource.frequency_modifier.to_i <= 52
        raise "frequency_modifier value #{new_resource.frequency_modifier} is invalid.  Valid values for :weekly frequency are 1 - 52."
      end
    when :monthly
      unless ('1'..'12').to_a.push('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY').include?(new_resource.frequency_modifier.to_s.upcase)
        raise "frequency_modifier value #{new_resource.frequency_modifier} is invalid.  Valid values for :monthly frequency are 1 - 12, 'FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY'."
      end
    end
  end

  def use_password?
    @use_password ||= !SYSTEM_USERS.include?(new_resource.user.upcase)
  end

  def schedule
    case new_resource.frequency
    when :on_logon
      'ONLOGON'
    when :on_idle
      'ONIDLE'
    else
      new_resource.frequency
    end
  end

  def frequency_modifier_allowed
    case new_resource.frequency
    when :minute, :hourly, :daily, :weekly
      true
    when :monthly
      new_resource.months.nil? || %w(FIRST SECOND THIRD FOURTH LAST LASTDAY).include?(new_resource.frequency_modifier)
    else
      false
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/resources/task.rb to tempfile /tmp/chef-rest20170405-7856-163auh8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/resources/task.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/wmi_helper.rb to tempfile /tmp/chef-rest20170405-7856-9mknzf
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/wmi_helper.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/windows_privileged.rb to tempfile /tmp/chef-rest20170405-7856-1bkmvp8
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/windows_privileged.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000024fe230
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/.foodcritic",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000024fe280>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   ".foodcritic"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
~FC059
~FC016
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/metadata.json
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/.foodcritic to tempfile /tmp/chef-rest20170405-7856-1ejifwu
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/.foodcritic in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/files/dism_features.rb
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x0000000250fa30
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/files/dism_features.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x0000000250fbc0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "files",
   "dism_features.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: GET /organizations/chef/file_store/repo/cookbooks/windows/CHANGELOG.md
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000005256480
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/CHANGELOG.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000052564d0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "CHANGELOG.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# windows Cookbook CHANGELOG

This file is used to list changes made in each version of the windows cookbook.

## 3.0.4 (2017-03-29)

- restoring the `cached_file` helper as downstream cookbooks use it.

## 3.0.3 (2017-03-28)

- Correct a typo in a Log message

## 3.0.2 (2017-03-21)

- Fix `windows_zipfile` resource to properly download and cache the zip archives

## 3.0.1 (2017-03-17)

- Fix `windows_share` to be fully idempotent.  Fixes #447

## 3.0.0 (2017-03-15)

**Warning** This release includes multiple breaking changes as we refactored all existing resources and resolved many longstanding bugs. We highly recommend exercising caution and fully testing this new version before rolling it out to a production environment.

### Breaking changes

- This cookbook now requires Chef 12.6 or later and we highly recommend even more recent Chef 12 releases as they resolve critical Windows bugs and include new Windows specific functionality.
- The windows_package resource has been removed as it is built into chef-client 12.6+ and the built in version is faster / more robust.
- The powershell out helper has been removed as it is now included in chef-client 12.6+
- The default recipe no longer installs the various Windows rubygems required for non-omnibus chef-client installs. This was a leftover from Chef 10 and is no longer necessary, or desired, as we ship these gems in every Windows chef release.
- windows_feature has been heavily refactored and in doing so the method used to control the underlying providers has changed. You can no longer specify which windows_feature provider to use by setting `node['windows']['feature_provider']` or by setting the `provider` property on the resource itself. Instead you must set `install_method` to specify the correct underlying installation method. You can also now reference the resources directly by using `windows_feature_servermanagercmd`, `windows_feature_powershell` or `windows_feature_dism` instead of `windows_feature`

- Windows_font's `file` property has been renamed to `name` to avoid collisions with the Chef file resource.

### Other Changes

- All LWRPs in this cookbook have been refactored to be custom resources
- windows_path, windows_shortcut, and windows_zipfile have been updated to be idempotent with support for why-run mode and proper notification when the resources actually update
- windows_pagefile now validates the name of the pagefile to avoid cryptic error messages
- A new `share` resource has been added for setting up Windows shares
- TrustedPeople certificate store has been added to the list of allowed store_names in the certificate resources
- version helper constant definitions has been improved
- A new `all` property has been added to the Windows feature resource to install all dependent features. See the windows feature test recipe for usage examples.
- Windows feature now accepts an array of features, which greatly speeds up feature installs and simplifies recipe code
- The path resource now accepts paths with either forward slashes or backslashes and correctly adds the path using Windows style backslash.
- The powershell provider for windows_feature resource has been fixed to properly import ServerManager in the :remove action
- Testing has been switched from a Rakefile to the new Delivery local mode
- Several issues with testing the resources on non-Windows hosts in ChefSpec have been resolved
- A new `source` property has been added to the windows_feature_powershell resource
- Additional test suites have been added to Test Kitchen to cover all resources and those test suites are now being executed in AppVeyer on every PR
- Travis CI testing has been removed and all testing is being performed in AppVeyer

## 2.1.1 (2016-11-23)

- Make sure the ohai plugin is available when installing features

## 2.1.0 (2016-11-22)

- Reduce expensive executions of dism in windows_feature by using a new Ohai plugin
- Add guard around chef_version metadata for Opsworks and older Chef 12 clients
- Update the rakefile to the latest
- Add deprecation dates for the windows_package and powershell functionality that has been moved to core Chef. These will be removed 4/17 when we release Chef 13
- Provide helper method to get windows version info
- Allow defining http acl using SDDL

## 2.0.2 (2016-09-07)

- Added the powershell_out mixin back to allow for Chef 12.1-12.3 compatibility
- Set the dependency back to Chef 12.1

## 2.0.1 (2016-09-07)

- Clarify the platforms we support in the readme
- Require Chef 12.4 which included powershell_out

## 2.0.0 (2016-09-07)

This cookbook now requires Chef 12.1+. Resources (lwrps) that have been moved into the chef-client have been removed from this cookbook. While the functionality in the chef-client is similar, and in many cases improved, the names and properties have changed in some cases. Make sure to check <https://docs.chef.io/resources.html> for full documentation on each of these resources, and as usual carefully test your cookbooks before upgrading to this new release.

### Removed resources and helpers:

- windows_reboot provider
- windows_batch provider
- windows_registry provider
- Powershell out for only_if / not_if statements
- Windows Architecture Helper
- Reboot handler and the dependency on the chef_handler cookbook

#### Changes resource behavior

- For Chef clients 12.6 and later the windows_package provider will no longer be used as windows_package logic is now included in Chef. Chef 12.1 - 12.5.1 clients will continue to default to the windows_package provider in this cookbook for full compatibility.

#### Additional changes

- Updated and expanded testing
- Fixed the windows_feature powershell provider to run on Windows 2008 / 2008 R2
- Added TrustedPublisher as a valid cert store_name
- Updated the certificate_binding resource to respect the app_id property
- Added why-run support to the auto_run resource

## 1.44.3 (2016-08-16)

- Remove support for ChefSpec <4.1 in the matchers
- Add missing Chefspec matchers

## 1.44.2 (2016-08-15)

- Add missing windows_font matcher
- Add chef_version to the metadata
- Switch from Rubocop to Cookstyle and use our improved Rakefile
- Remove test deps from the Gemfile that are in ChefDK

## v1.44.1

- [PR 375](https://github.com/chef-cookbooks/windows/pull/375) - Fix comparison of string to number in platform_version
- [PR 376](https://github.com/chef-cookbooks/windows/pull/376) - Switch to cookstyle, update gem deps and other minor stuff
- [PR 377](https://github.com/chef-cookbooks/windows/pull/377) - add test and check for feature installation through powershell

## v1.44.0

- [PR 372](https://github.com/chef-cookbooks/windows/pull/372) - Support Server 2008 for feature installs via PowerShell

## v1.43.0

- [PR 369](https://github.com/chef-cookbooks/windows/pull/369) - Add a enable_windows_task matcher

## v1.42.0

- [PR 365](https://github.com/chef-cookbooks/windows/pull/365) - Escape command quotes when passing to schtasks

## v1.41.0

- [PR 364](https://github.com/chef-cookbooks/windows/pull/364) - Configurable font source

## v1.40.0

- [PR 357](https://github.com/chef-cookbooks/windows/pull/357) - Fixes for schtasks
- [PR 359](https://github.com/chef-cookbooks/windows/pull/359) - take bundler out of the appveyor build
- [PR 356](https://github.com/chef-cookbooks/windows/pull/356) - Misc fixes and updates
- [PR 355](https://github.com/chef-cookbooks/windows/pull/355) - bump and pin rubocop, fix broken cop
- [PR 348](https://github.com/chef-cookbooks/windows/pull/348) - Make notify work for `windows_task`

## v1.39.2

- [PR 329](https://github.com/chef-cookbooks/windows/pull/329) - Silence `compile_time` warning for `chef_gem`
- [PR 338](https://github.com/chef-cookbooks/windows/pull/338) - ChefSpec matchers for `windows_certificate`
- [PR 341](https://github.com/chef-cookbooks/windows/pull/341) - Updated rubocop and FoodCritic compliance
- [PR 336](https://github.com/chef-cookbooks/windows/pull/336) - Fixed where clause compliance with PS v1/v2

## v1.39.1

- [PR 325](https://github.com/chef-cookbooks/windows/pull/325) - Raise an error if a bogus feature is given to the powershell `windows_feature` provider
- [PR 326](https://github.com/chef-cookbooks/windows/pull/326) - Fix `windows_font` and copy the font file before installation

## v1.39.0

- [PR 305](https://github.com/chef-cookbooks/windows/pull/305) - Added `months` attribute to `windows_task` and allow `frequency_modifier` to accept values 'FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', and 'LASTDAY' for monthly frequency
- [PR 310](https://github.com/chef-cookbooks/windows/pull/310) - Fix `windows_task` breaks when there is a space in the user name
- [PR 314](https://github.com/chef-cookbooks/windows/pull/314) - fixes reboot handling on some chef versions below 11.12
- [PR 317](https://github.com/chef-cookbooks/windows/pull/317) - Adds a `disable_windows_task` matcher
- [PR 311](https://github.com/chef-cookbooks/windows/pull/311) - Implements the `cwd` attribute of `windows_task`
- [PR 318](https://github.com/chef-cookbooks/windows/pull/318) - Use dsl instead of manual resource instanciation
- [PR 303](https://github.com/chef-cookbooks/windows/pull/303) - Fix `http_acl` idempotency when user name contains a space
- [PR 257](https://github.com/chef-cookbooks/windows/pull/257) - Speed up windows_feature dism provider
- [PR 319](https://github.com/chef-cookbooks/windows/pull/319) - Add a `.kitchen.cloud.yml` for kitchen testing on Azure
- [PR 315](https://github.com/chef-cookbooks/windows/pull/315) - Deprecate `windows_package` and forward to `Chef::Provider::Package::Windows` when running 12.6 or higher

## v1.38.4

- [PR 295](https://github.com/chef-cookbooks/windows/pull/295) - Escape `http_acl` username
- [PR 293](https://github.com/chef-cookbooks/windows/pull/293) - Separating assignments to `code_script` and `guard_script` as they should be different scripts and not hold the same reference
- [Issue 298](https://github.com/chef-cookbooks/windows/issues/298) - `windows_certificate_binding` is ignoring `store_name` attribute and always saving to `MY`
- [Issue 296](https://github.com/chef-cookbooks/windows/pull/302) - Fixes `windows_certificate` idempotentcy on chef 11 clients

## v1.38.3

- Make `windows_task` resource idempotent (double quotes need to be single when comparing)
- [Issue 245](https://github.com/chef-cookbooks/windows/issues/256) - Fix `No resource, method, or local variable named`password' for `Chef::Provider::WindowsTask'` when `interactive_enabled` is `true`

## v1.38.2

- Lazy-load windows-pr gem library files. Chef 12.5 no longer includes the windows-pr gem. Earlier versions of this cookbook will not compile on Chef 12.5.

## v1.38.1 (2015-07-28)

- Publishing without extended metadata

## v1.38.0 (2015-07-27)

- Do not set new_resource.password to nil, Fixes #219, Fixes #220
- Add `windows_certificate` resource #212
- Add `windows_http_acl` resource #214

## v1.37.0 (2015-05-14)

- fix `windows_package` `Chef.set_resource_priority_array` warning
- update `windows_task` to support tasks in folders
- fix `windows_task` delete action
- replace `windows_task` name attribute with 'task_name'
- add :end action to 'windows_task'
- Tasks created with the `windows_task` resource default to the SYSTEM account
- The force attribute for `windows_task` makes the :create action update the definition.
- `windows_task` :create action will force an update of the task if the user or command differs from the currently configured setting.
- add default provider for `windows_feature`
- add a helper to make sure `WindowsRebootHandler` works in ChefSpec
- added a source and issues url to the metadata for Supermarket
- updated the Gemfile and .kitchen.yml to reflect the latest test-kitchen windows guest support
- started tests using the kitchen-pester verifier

## v1.36.6 (2014-12-18)

- reverting all chef_gem compile_time work

## v1.36.5 (2014-12-18)

- Fix zipfile provider

## v1.36.4 (2014-12-18)

- Fix Chef chef_gem with Chef::Resource::ChefGem.method_defined?(:compile_time)

## v1.36.3 (2014-12-18)

- Fix Chef chef_gem below 12.1.0

## v1.36.2 (2014-12-17)

- Being explicit about usage of the chef_gem's compile_time property.
- Eliminating future deprecation warnings in Chef 12.1.0

## v1.36.1 (2014-12-17)

- [PR 160](https://github.com/chef-cookbooks/windows/pull/160) - Fix Chef 11.10 / versions without windows_package in core

## v1.36.0 (2014-12-16)

- [PR 145](https://github.com/chef-cookbooks/windows/pull/145) - do not fail on non-existant task
- [PR 144](https://github.com/chef-cookbooks/windows/pull/144) - Add a zip example to the README
- [PR 110](https://github.com/chef-cookbooks/windows/pull/110) - More zip documentation
- [PR 148](https://github.com/chef-cookbooks/windows/pull/148) - Add an LWRP for font installation
- [PR 151](https://github.com/chef-cookbooks/windows/pull/151) - Fix windows_package on Chef 12, add integration tests
- [PR 129](https://github.com/chef-cookbooks/windows/pull/129) - Add enable/disable actions to task LWRP
- [PR 115](https://github.com/chef-cookbooks/windows/pull/115) - require Chef::Mixin::PowershellOut before using it
- [PR 88](https://github.com/chef-cookbooks/windows/pull/88) - Code 1003 from servermanagercmd.exe is valid

## v1.34.8 (2014-10-31)

- [Issue 137](https://github.com/chef-cookbooks/windows/issues/137) - windows_path resource breaks with ruby 2.x

## v1.34.6 (2014-09-22)

- [Chef-2009](https://github.com/chef/chef/issues/2009) - Patch to work around a regression in [Chef](https://github.com/chef/chef)

## v1.34.2 (2014-08-12)

- [Issue 99](https://github.com/chef-cookbooks/windows/issues/99) - Remove rubygems / Internet wmi-lite dependency (PR #108)

## v1.34.0 (2014-08-04)

- [Issue 99](https://github.com/chef-cookbooks/windows/issues/99) - Use wmi-lite to fix Chef 11.14.2 break in rdp-ruby-wmi dependency

## v1.32.1 (2014-07-15)

- Fixes broken cookbook release

## v1.32.0 (2014-07-11)

- Add ChefSpec resource methods to allow notification testing (@sneal)
- Add use_inline_resources to providers (@micgo)
- [COOK-4728] - Allow reboot handler to be used as an exception handler
- [COOK-4620] - Ensure win_friendly_path doesn't error out when ALT_SEPARATOR is nil

## v1.31.0 (2014-05-07)

- [COOK-2934] - Add windows_feature support for 2 new DISM attributes: all, source

## v1.30.2 (2014-04-02)

- [COOK-4414] - Adding ChefSpec matchers

## v1.30.0 (2014-02-14)

- [COOK-3715] - Unable to create a startup task with no login
- [COOK-4188] - Add powershell_version method to return Powershell version

## v1.12.8 (2014-01-21)

- [COOK-3988] Don't unescape URI before constructing it.

## v1.12.6 (2014-01-03)

- [COOK-4168] Circular dep on powershell - moving powershell libraries into windows. removing dependency on powershell

## v1.12.4

Fixing depend/depends typo in metadata.rb

## v1.12.2

### Bug

- **[COOK-4110](https://tickets.chef.io/browse/COOK-4110)** - feature_servermanager installed? method regex bug

## v1.12.0

### Bug

- **[COOK-3793](https://tickets.chef.io/browse/COOK-3793)** - parens inside parens of README.md don't render

### New Feature

- **[COOK-3714](https://tickets.chef.io/browse/COOK-3714)** - Powershell features provider and delete support.

## v1.11.0

### Improvement

- **[COOK-3724](https://tickets.chef.io/browse/COOK-3724)** - Rrecommend built-in resources over cookbook resources
- **[COOK-3515](https://tickets.chef.io/browse/COOK-3515)** - Remove unprofessional comment from library
- **[COOK-3455](https://tickets.chef.io/browse/COOK-3455)** - Add Windows Server 2012R2 to windows cookbook version helper

### Bug

- **[COOK-3542](https://tickets.chef.io/browse/COOK-3542)** - Fix an issue where `windows_zipfile` fails with LoadError
- **[COOK-3447](https://tickets.chef.io/browse/COOK-3447)** - Allow Overriding Of The Default Reboot Timeout In windows_reboot_handler
- **[COOK-3382](https://tickets.chef.io/browse/COOK-3382)** - Allow windows_task to create `on_logon` tasks
- **[COOK-2098](https://tickets.chef.io/browse/COOK-2098)** - Fix and issue where the `windows_reboot` handler is ignoring the reboot time

### New Feature

- **[COOK-3458](https://tickets.chef.io/browse/COOK-3458)** - Add support for `start_date` and `start_time` in `windows_task`

## v1.10.0

### Improvement

- [COOK-3126]: `windows_task` should support the on start frequency
- [COOK-3127]: Support the force option on task create and delete

## v1.9.0

### Bug

- [COOK-2899]: windows_feature fails when a feature install requires a reboot
- [COOK-2914]: Foodcritic failures in Cookbooks
- [COOK-2983]: windows cookbook has foodcritic failures

### Improvement

- [COOK-2686]: Add Windows Server 2012 to version.rb so other depending chef scripts can detect Windows Server 2012

## v1.8.10

When using Windows qualified filepaths (C:/foo), the #absolute? method for URI returns true, because "C" is the scheme.

This change checks that the URI is http or https scheme, so it can be passed off to remote_file appropriately.

- [COOK-2729] - allow only http, https URI schemes

## v1.8.8

- [COOK-2729] - helper should use URI rather than regex and bare string

## v1.8.6

- [COOK-968] - `windows_package` provider should gracefully handle paths with spaces
- [COOK-222] - `windows_task` resource does not declare :change action
- [COOK-241] - Windows cookbook should check for redefined constants
- [COOK-248] - Windows package install type is case sensitive

## v1.8.4

- [COOK-2336] - MSI That requires reboot returns with RC 3010 and causes chef run failure
- [COOK-2368] - `version` attribute of the `windows_package` provider should be documented

## v1.8.2

**Important**: Use powershell in nodes expanded run lists to ensure powershell is downloaded, as powershell has a dependency on this cookbook; v1.8.0 created a circular dependency.

- [COOK-2301] - windows 1.8.0 has circular dependency on powershell

## v1.8.0

- [COOK-2126] - Add checksum attribute to `windows_zipfile`
- [COOK-2142] - Add printer and `printer_port` LWRPs
- [COOK-2149] - Chef::Log.debug Windows Package command line
- [COOK-2155] -`windows_package` does not send checksum to `cached_file` in `installer_type`

## v1.7.0

- [COOK-1745] - allow for newer versions of rubyzip

## v1.6.0

- [COOK-2048] - undefined method for Falseclass on task :change when action is :nothing (and task doesn't exist)
- [COOK-2049] - Add `windows_pagefile` resource

## v1.5.0

- [COOK-1251] - Fix LWRP "NotImplementedError"
- [COOK-1921] - Task LWRP will return true for resource exists when no other scheduled tasks exist
- [COOK-1932] - Include :change functionality to windows task lwrp

## v1.4.0:

- [COOK-1571] - `windows_package` resource (with msi provider) does not accept spaces in filename
- [COOK-1581] - Windows cookbook needs a scheduled tasks LWRP
- [COOK-1584] - `windows_registry` should support all registry types

## v1.3.4

- [COOK-1173] - `windows_registry` throws Win32::Registry::Error for action :remove on a nonexistent key
- [COOK-1182] - windows package sets start window title instead of quoting a path
- [COOK-1476] - zipfile lwrp should support :zip action
- [COOK-1485] - package resource fails to perform install correctly when "source" contains quote
- [COOK-1519] - add action :remove for path lwrp

## v1.3.2

- [COOK-1033] - remove the `libraries/ruby_19_patches.rb` file which causes havoc on non-Windows systems.
- [COOK-811] - add a timeout parameter attribute for `windows_package`

## v1.3.0

- [COOK-1323] - Update for changes in Chef 0.10.10.

  - Setting file mode doesn't make sense on Windows (package provider
  - and `reboot_handler` recipe)
  - Prefix ::Win32 to avoid namespace collision with Chef::Win32
  - (`registry_helper` library)
  - Use chef_gem instead of gem_package so gems get installed correctly under the Ruby environment Chef runs in (reboot_handler recipe, zipfile provider)

## v1.2.12

- [COOK-1037] - specify version for rubyzip gem
- [COOK-1007] - `windows_feature` does not work to remove features with dism
- [COOK-667] - shortcut resource + provider for Windows platforms

## v1.2.10

- [COOK-939] - add `type` parameter to `windows_registry` to allow binary registry keys.
- [COOK-940] - refactor logic so multiple values get created.

## v1.2.8

- FIX: Older Windows (Windows Server 2003) sometimes return 127 on successful forked commands
- FIX: `windows_package`, ensure we pass the WOW* registry redirection flags into reg.open

## v1.2.6

- patch to fix [CHEF-2684], Open4 is named Open3 in Ruby 1.9
- Ruby 1.9's Open3 returns 0 and 42 for successful commands
- retry keyword can only be used in a rescue block in Ruby 1.9

## v1.2.4

- `windows_package` - catch Win32::Registry::Error that pops up when searching certain keys

## v1.2.2

- combined numerous helper libarires for easier sharing across libaries/LWRPs
- renamed Chef::Provider::WindowsFeature::Base file to the more descriptive `feature_base.rb`
- refactored `windows_path` LWRP

  - :add action should MODIFY the the underlying ENV variable (vs CREATE)
  - deleted greedy :remove action until it could be made more idempotent

- added a `windows_batch` resource/provider for running batch scripts remotely

## v1.2.0

- [COOK-745] gracefully handle required server restarts on Windows platform

  - WindowsRebootHandler for requested and pending reboots
  - `windows_reboot` LWRP for requesting (receiving notifies) reboots
  - `reboot_handler` recipe for enabling WindowsRebootHandler as a report handler

- [COOK-714] Correct initialize misspelling

- RegistryHelper - new `get_values` method which returns all values for a particular key.

## v1.0.8

- [COOK-719] resource/provider for managing windows features
- [COOK-717] remove `windows_env_vars` resource as env resource exists in core chef
- new `Windows::Version` helper class
- refactored `Windows::Helper` mixin

## v1.0.6

- added `force_modify` action to `windows_registry` resource
- add `win_friendly_path` helper
- re-purpose default recipe to install useful supporting windows related gems

## v1.0.4

- [COOK-700] new resources and improvements to the `windows_registry` provider (thanks Paul Morton!)

  - Open the registry in the bitednes of the OS
  - Provide convenience methods to check if keys and values exit
  - Provide convenience method for reading registry values
  - NEW - `windows_auto_run` resource/provider
  - NEW - `windows_env_vars` resource/provider
  - NEW - `windows_path` resource/provider

- re-write of the `windows_package` logic for determining current installed packages

- new checksum attribute for `windows_package` resource...useful for remote packages

## v1.0.2

- [COOK-647] account for Wow6432Node registry redirecter
- [COOK-656] begin/rescue on win32/registry

## v1.0.0

- [COOK-612] initial release
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
if defined?(ChefSpec)

  ChefSpec.define_matcher :windows_auto_run
  ChefSpec.define_matcher :windows_certificate
  ChefSpec.define_matcher :windows_certificate_binding
  ChefSpec.define_matcher :windows_feature
  ChefSpec.define_matcher :windows_feature_dism
  ChefSpec.define_matcher :windows_feature_servermanagercmd
  ChefSpec.define_matcher :windows_feature_powershell
  ChefSpec.define_matcher :windows_font
  ChefSpec.define_matcher :windows_http_acl
  ChefSpec.define_matcher :windows_pagefile
  ChefSpec.define_matcher :windows_path
  ChefSpec.define_matcher :windows_printer
  ChefSpec.define_matcher :windows_printer_port
  ChefSpec.define_matcher :windows_share
  ChefSpec.define_matcher :windows_shortcut
  ChefSpec.define_matcher :windows_task
  ChefSpec.define_matcher :windows_zipfile

  #
  # Assert that a +windows_certificate+ resource exists in the Chef run with the
  # action +:create+. Given a Chef Recipe that creates 'c:\test\mycert.pfx' as a
  # +windows_certificate+:
  #
  #     windows_certificate 'c:\test\mycert.pfx' do
  #       action :create
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_certificate+ resource with ChefSpec.
  #
  # @example Assert that a +windows_certificate+ was created
  #   expect(chef_run).to create_windows_certificate('c:\test\mycert.pfx')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def create_windows_certificate(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate, :create, resource_name)
  end

  #
  # Assert that a +windows_certificate+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes "me.acme.com" as a
  # +windows_certificate+:
  #
  #     windows_certificate 'me.acme.com' do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_certificate+ resource with ChefSpec.
  #
  # @example Assert that a +windows_certificate+ was _not_ deleted
  #   expect(chef_run).to_not delete_windows_certificate('me.acme.com')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_certificate(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate, :delete, resource_name)
  end

  #
  # Assert that a +windows_certificate+ resource exists in the Chef run with the
  # action +:acl_add+. Given a Chef Recipe that adds a private key acl to "me.acme.com" as a
  # +windows_certificate+:
  #
  #     windows_certificate 'me.acme.com' do
  #       private_key_acl ['acme\fred', 'pc\jane']
  #       action :acl_add
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_certificate+ resource with ChefSpec.
  #
  # @example Assert that a +windows_certificate+ was _not_ removed
  #   expect(chef_run).to add_acl_to_windows_certificate('me.acme.com').with(private_key_acl: ['acme\fred', 'pc\jane'])
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def add_acl_to_windows_certificate(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate, :acl_add, resource_name)
  end

  #
  # Assert that a +windows_feature+ resource exists in the Chef run with the
  # action +:install+. Given a Chef Recipe that installs "NetFX3" as a
  # +windows_feature+:
  #
  #     windows_feature 'NetFX3' do
  #       action :install
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_feature+ resource with ChefSpec.
  #
  # @example Assert that a +windows_feature+ was installed
  #   expect(chef_run).to install_windows_feature('NetFX3')
  #
  # @example Assert that a +windows_feature+ was _not_ installed
  #   expect(chef_run).to_not install_windows_feature('NetFX3')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def install_windows_feature(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature, :install, resource_name)
  end

  def install_windows_feature_servermanagercmd(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_servermanagercmd, :install, resource_name)
  end

  def install_windows_feature_dism(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_dism, :install, resource_name)
  end

  def install_windows_feature_powershell(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_powershell, :install, resource_name)
  end

  #
  # Assert that a +windows_feature+ resource exists in the Chef run with the
  # action +:remove+. Given a Chef Recipe that removes "NetFX3" as a
  # +windows_feature+:
  #
  #     windows_feature 'NetFX3' do
  #       action :remove
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_feature+ resource with ChefSpec.
  #
  # @example Assert that a +windows_feature+ was removed
  #   expect(chef_run).to remove_windows_feature('NetFX3')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def remove_windows_feature(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature, :remove, resource_name)
  end

  def remove_windows_feature_servermanagercmd(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_servermanagercmd, :remove, resource_name)
  end

  def remove_windows_feature_dism(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_dism, :remove, resource_name)
  end

  def remove_windows_feature_powershell(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_powershell, :remove, resource_name)
  end

  #
  # Assert that a +windows_feature+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes "NetFX3" as a
  # +windows_feature+:
  #
  #     windows_feature 'NetFX3' do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_feature+ resource with ChefSpec.
  #
  # @example Assert that a +windows_feature+ was deleted
  #   expect(chef_run).to delete_windows_feature('NetFX3')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_feature(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature, :delete, resource_name)
  end

  def delete_windows_feature_dism(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_dism, :delete, resource_name)
  end

  def delete_windows_feature_powershell(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_feature_powershell, :delete, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:create+. Given a Chef Recipe that creates "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       command 'mybatch.bat'
  #       action :create
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was created
  #   expect(chef_run).to create_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def create_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :create, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:disable+. Given a Chef Recipe that creates "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :disable
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was disabled
  #   expect(chef_run).to disable_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def disable_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :disable, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:enable+. Given a Chef Recipe that creates "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :enable
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was enabled
  #   expect(chef_run).to enable_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def enable_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :enable, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was deleted
  #   expect(chef_run).to delete_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :delete, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:run+. Given a Chef Recipe that runs "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :run
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was run
  #   expect(chef_run).to run_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def run_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :run, resource_name)
  end

  #
  # Assert that a +windows_task+ resource exists in the Chef run with the
  # action +:change+. Given a Chef Recipe that changes "mytask" as a
  # +windows_task+:
  #
  #     windows_task 'mytask' do
  #       action :change
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_task+ resource with ChefSpec.
  #
  # @example Assert that a +windows_task+ was changed
  #   expect(chef_run).to change_windows_task('mytask')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def change_windows_task(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_task, :change, resource_name)
  end

  #
  # Assert that a +windows_path+ resource exists in the Chef run with the
  # action +:add+. Given a Chef Recipe that adds "C:\7-Zip" to the Windows
  # PATH env var
  #
  #     windows_path 'C:\7-Zip' do
  #       action :add
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_path+ resource with ChefSpec.
  #
  # @example Assert that a +windows_path+ was added
  #   expect(chef_run).to add_windows_path('C:\7-Zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def add_windows_path(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_path, :add, resource_name)
  end

  #
  # Assert that a +windows_path+ resource exists in the Chef run with the
  # action +:remove+. Given a Chef Recipe that removes "C:\7-Zip" from the
  # Windows PATH env var
  #
  #     windows_path 'C:\7-Zip' do
  #       action :remove
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_path+ resource with ChefSpec.
  #
  # @example Assert that a +windows_path+ was removed
  #   expect(chef_run).to remove_windows_path('C:\7-Zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def remove_windows_path(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_path, :remove, resource_name)
  end

  #
  # Assert that a +windows_pagefile+ resource exists in the Chef run with the
  # action +:set+. Given a Chef Recipe that sets a pagefile
  #
  #     windows_pagefile "pagefile" do
  #       system_managed true
  #       initial_size 1024
  #       maximum_size 4096
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_pagefile+ resource with ChefSpec.
  #
  # @example Assert that a +windows_pagefile+ was set
  #   expect(chef_run).to set_windows_pagefile('pagefile').with(
  #     initial_size: 1024)
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def set_windows_pagefile(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_pagefile, :set, resource_name)
  end

  #
  # Assert that a +windows_zipfile+ resource exists in the Chef run with the
  # action +:unzip+. Given a Chef Recipe that extracts "SysinternalsSuite.zip"
  # to c:/bin
  #
  #     windows_zipfile "c:/bin" do
  #       source "http://download.sysinternals.com/Files/SysinternalsSuite.zip"
  #       action :unzip
  #       not_if {::File.exists?("c:/bin/PsExec.exe")}
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_zipfile+ resource with ChefSpec.
  #
  # @example Assert that a +windows_zipfile+ was unzipped
  #   expect(chef_run).to unzip_windows_zipfile_to('c:/bin')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def unzip_windows_zipfile_to(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_zipfile, :unzip, resource_name)
  end

  #
  # Assert that a +windows_zipfile+ resource exists in the Chef run with the
  # action +:zip+. Given a Chef Recipe that zips "c:/src"
  # to c:/code.zip
  #
  #     windows_zipfile "c:/code.zip" do
  #       source "c:/src"
  #       action :zip
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_zipfile+ resource with ChefSpec.
  #
  # @example Assert that a +windows_zipfile+ was zipped
  #   expect(chef_run).to zip_windows_zipfile_to('c:/code.zip')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def zip_windows_zipfile_to(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_zipfile, :zip, resource_name)
  end

  #
  # Assert that a +windows_share+ resource exists in the Chef run with the
  # action +:create+. Given a Chef Recipe that shares "c:/src"
  # as Src
  #
  #     windows_share "Src" do
  #       path "c:/src"
  #       action :create
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_share+ resource with ChefSpec.
  #
  # @example Assert that a +windows_share+ was created
  #   expect(chef_run).to create_windows_share('Src')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def create_windows_share(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_share, :create, resource_name)
  end

  #
  # Assert that a +windows_share+ resource exists in the Chef run with the
  # action +:delete+. Given a Chef Recipe that deletes share "c:/src"
  #
  #     windows_share "Src" do
  #       action :delete
  #     end
  #
  # The Examples section demonstrates the different ways to test a
  # +windows_share+ resource with ChefSpec.
  #
  # @example Assert that a +windows_share+ was created
  #   expect(chef_run).to delete_windows_share('Src')
  #
  #
  # @param [String, Regex] resource_name
  #   the name of the resource to match
  #
  # @return [ChefSpec::Matchers::ResourceMatcher]
  #
  def delete_windows_share(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_share, :delete, resource_name)
  end

  # All the other less commonly used LWRPs
  def create_windows_shortcut(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_shortcut, :create, resource_name)
  end

  def create_windows_auto_run(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_auto_run, :create, resource_name)
  end

  def remove_windows_auto_run(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_auto_run, :remove, resource_name)
  end

  def create_windows_printer(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer, :create, resource_name)
  end

  def delete_windows_printer(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer, :delete, resource_name)
  end

  def create_windows_printer_port(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer_port, :create, resource_name)
  end

  def delete_windows_printer_port(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_printer_port, :delete, resource_name)
  end

  def install_windows_font(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_font, :install, resource_name)
  end

  def create_windows_certificate_binding(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate_binding, :create, resource_name)
  end

  def delete_windows_certificate_binding(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_certificate_binding, :delete, resource_name)
  end

  def create_windows_http_acl(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_http_acl, :create, resource_name)
  end

  def delete_windows_http_acl(resource_name)
    ChefSpec::Matchers::ResourceMatcher.new(:windows_http_acl, :delete, resource_name)
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/libraries/matchers.rb to tempfile /tmp/chef-rest20170405-7856-1u2apn6
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/libraries/matchers.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000025906d0
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/attributes/default.rb",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000025907e8>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "attributes",
   "default.rb"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/CHANGELOG.md to tempfile /tmp/chef-rest20170405-7856-1os0h0d
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/CHANGELOG.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Wade Peacock <wade.peacock@visioncritical.com>
# License:: Apache License, Version 2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
## See the License for the specific language governing permissions and
# limitations under the License.
#

Ohai.plugin(:DismFeatures) do
  provides 'dism_features'
  collect_data(:windows) do
    dism_features Mash.new
    # This is for 32-bit ruby/chef client on 64-bit Windows
    # This emulates the locate_sysnative_cmd helper as it is not available
    cmd = 'dism.exe'
    dism = if ::File.exist?("#{ENV['WINDIR']}\\sysnative\\#{cmd}")
             "#{ENV['WINDIR']}\\sysnative\\#{cmd}"
           elsif ::File.exist?("#{ENV['WINDIR']}\\system32\\#{cmd}")
             "#{ENV['WINDIR']}\\system32\\#{cmd}"
           else
             cmd
           end
    # Grab raw feature information from dism command line
    raw_list_of_features = shell_out("#{dism} /Get-Features /Online /Format:Table").stdout
    # Split stdout into an array by windows line ending
    features_list = raw_list_of_features.split("\r\n")
    features_list.each do |feature_details_raw|
      # Skip lines that do not match Enable / Disable
      next unless feature_details_raw =~ /(En|Dis)able/
      # Strip trailing whitespace characters then split on n number of spaces + | +  n number of spaces
      feature_details = feature_details_raw.strip.split(/\s+[|]\s+/)
      # Add to Mash
      dism_features[feature_details.first] = feature_details.last
    end
  end
end
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/files/dism_features.rb to tempfile /tmp/chef-rest20170405-7856-1r9q904
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/files/dism_features.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/files
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x000000052629d8
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/metadata.json",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000005262af0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "metadata.json"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
{"name":"windows","version":"3.0.4","description":"Provides a set of useful Windows-specific primitives.","long_description":"# Windows Cookbook\n\n[![Build status](https://ci.appveyor.com/api/projects/status/9x4uepmm1g4rktie/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks/windows/branch/master) [![Cookbook Version](https://img.shields.io/cookbook/v/windows.svg)](https://supermarket.chef.io/cookbooks/windows)\n\nProvides a set of Windows-specific resources to aid in the creation of cookbooks/recipes targeting the Windows platform.\n\n## Requirements\n\n### Platforms\n\n- Windows 7\n- Windows Server 2008 R2\n- Windows 8, 8.1\n- Windows Server 2012 (R1, R2)\n\n### Chef\n\n- Chef 12.6+\n\n## Resources\n\n### windows_auto_run\n\n#### Actions\n\n- `:create` - Create an item to be run at login\n- `:remove` - Remove an item that was previously setup to run at login\n\n#### Properties\n\n- `name` - Name attribute. The name of the value to be stored in the registry\n- `program` - The program to be run at login\n- `args` - The arguments for the program\n\n#### Examples\n\nRun BGInfo at login\n\n```ruby\nwindows_auto_run 'BGINFO' do\n  program 'C:/Sysinternals/bginfo.exe'\n  args    '\\'C:/Sysinternals/Config.bgi\\' /NOLICPROMPT /TIMER:0'\n  action  :create\nend\n```\n\n### windows_certificate\n\nInstalls a certificate into the Windows certificate store from a file, and grants read-only access to the private key for designated accounts. Due to current limitations in WinRM, installing certificated remotely may not work if the operation requires a user profile. Operations on the local machine store should still work.\n\n#### Actions\n\n- `:create` - creates or updates a certificate.\n- `:delete` - deletes a certificate.\n- `:acl_add` - adds read-only entries to a certificate's private key ACL.\n\n#### Properties\n\n- `source` - name attribute. The source file (for create and acl_add), thumbprint (for delete and acl_add) or subject (for delete).\n- `pfx_password` - the password to access the source if it is a pfx file.\n- `private_key_acl` - array of 'domain\\account' entries to be granted read-only access to the certificate's private key. This is not idempotent.\n- `store_name` - the certificate store to manipulate. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).\n- `user_store` - if false (default) then use the local machine store; if true then use the current user's store.\n\n#### Examples\n\n```ruby\n# Add PFX cert to local machine personal store and grant accounts read-only access to private key\nwindows_certificate \"c:/test/mycert.pfx\" do\n    pfx_password    \"password\"\n    private_key_acl    [\"acme\\fred\", \"pc\\jane\"]\nend\n```\n\n```ruby\n# Add cert to trusted intermediate store\nwindows_certificate \"c:/test/mycert.cer\" do\n    store_name    \"CA\"\nend\n```\n\n```ruby\n# Remove all certificates matching the subject\nwindows_certificate \"me.acme.com\" do\n    action :delete\nend\n```\n\n### windows_certificate_binding\n\nBinds a certificate to an HTTP port in order to enable TLS communication.\n\n#### Actions\n\n- `:create` - creates or updates a binding.\n- `:delete` - deletes a binding.\n\n#### Properties\n\n- `cert_name` - name attribute. The thumbprint(hash) or subject that identifies the certificate to be bound.\n- `name_kind` - indicates the type of cert_name. One of :subject (default) or :hash.\n- `address` - the address to bind against. Default is 0.0.0.0 (all IP addresses).\n- `port` - the port to bind against. Default is 443.\n- `app_id` - the GUID that defines the application that owns the binding. Default is the values used by IIS.\n- `store_name` - the store to locate the certificate in. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).\n\n#### Examples\n\n```ruby\n# Bind the first certificate matching the subject to the default TLS port\nwindows_certificate_binding \"me.acme.com\" do\nend\n```\n\n```ruby\n# Bind a cert from the CA store with the given hash to port 4334\nwindows_certificate_binding \"me.acme.com\" do\n    cert_name    \"d234567890a23f567c901e345bc8901d34567890\"\n    name_kind    :hash\n    store_name    \"CA\"\n    port        4334\nend\n```\n\n### windows_feature\n\n**BREAKING CHANGE - Version 3.0.0**\n\nThis resource has been moved from using LWRPs and multiple providers to using Custom Resources. To maintain functionality, you'll need to change `provider` to `install_method`.\n\nWindows Roles and Features can be thought of as built-in operating system packages that ship with the OS. A server role is a set of software programs that, when they are installed and properly configured, lets a computer perform a specific function for multiple users or other computers within a network. A Role can have multiple Role Services that provide functionality to the Role. Role services are software programs that provide the functionality of a role. Features are software programs that, although they are not directly parts of roles, can support or augment the functionality of one or more roles, or improve the functionality of the server, regardless of which roles are installed. Collectively we refer to all of these attributes as 'features'.\n\nThis resource allows you to manage these 'features' in an unattended, idempotent way.\n\nThere are three methods for the `windows_feature` which map into Microsoft's three major tools for managing roles/features: [Deployment Image Servicing and Management (DISM)](http://msdn.microsoft.com/en-us/library/dd371719%28v=vs.85%29.aspx), [Servermanagercmd](http://technet.microsoft.com/en-us/library/ee344834%28WS.10%29.aspx) (The CLI for Server Manager), and [PowerShell](https://technet.microsoft.com/en-us/library/cc731774(v=ws.11).aspx). As Servermanagercmd is deprecated, Chef will set the default method to `:windows_feature_dism` if `dism.exe` is present on the system being configured. The default method will fall back to `:windows_feature_servermanagercmd`, and then `:windows_feature_powershell`.\n\nFor more information on Roles, Role Services and Features see the [Microsoft TechNet article on the topic](http://technet.microsoft.com/en-us/library/cc754923.aspx). For a complete list of all features that are available on a node type either of the following commands at a command prompt:\n\nFor Dism:\n\n```text\ndism /online /Get-Features\n```\n\nFor ServerManagerCmd:\n\n```text\nservermanagercmd -query\n```\n\nFor PowerShell:\n\n```text\nget-windowsfeature\n```\n\n#### Actions\n\n- `:install` - install a Windows role/feature\n- `:remove` - remove a Windows role/feature\n- `:delete` - remove a Windows role/feature from the image (not supported by ServerManagerCmd)\n\n#### Properties\n\n- `feature_name` - name of the feature/role(s) to install. The same feature may have different names depending on the provider used (ie DHCPServer vs DHCP; DNS-Server-Full-Role vs DNS).\n- `all` - Boolean. Optional. Default: false. DISM and Powershell providers only. Forces all dependencies to be installed.\n- `source` - String. Optional. DISM provider only. Uses local repository for feature install.\n- `install_method` - Symbol. Optional. **REPLACEMENT FOR THE PREVIOUS PROVIDER OPTION** If not supplied, Chef will determine which method to use (in the order of `:windows_feature_dism`, `:windows_feature_servercmd`, `:windows_feature_powershell`)\n\n#### Examples\n\nInstall the DHCP Server feature\n\n```ruby\nwindows_feature 'DHCPServer' do\n  action :install\nend\n```\n\nInstall the .Net 3.5.1 feature on Server 2012 using repository files on DVD and install all dependencies\n\n```ruby\nwindows_feature \"NetFx3\" do\n  action :install\n  all true\n  source \"d:\\sources\\sxs\"\nend\n```\n\nRemove Telnet Server and Client features\n\n```ruby\nwindows_feature ['TelnetServer', 'TelnetClient'] do\n  action :remove\nend\n```\n\nAdd the SMTP Server feature using the PowerShell provider\n\n```ruby\nwindows_feature \"smtp-server\" do\n  action :install\n  all true\n  install_method :windows_feature_powershell\nend\n```\n\nInstall multiple features using one resource with the PowerShell provider\n\n```ruby\nwindows_feature ['Web-Asp-Net45', 'Web-Net-Ext45'] do\n  action :install\n  install_method :windows_feature_powershell\nend\n```\n\n### windows_font\n\nInstalls a font.\n\nFont files should be included in the cookbooks\n\n#### Actions\n\n- `:install` - install a font to the system fonts directory.\n\n#### Properties\n\n- `name` - The file name of the font file name to install. The path defaults to the files/default directory of the cookbook you're calling windows_font from. Defaults to the resource name.\n- `source` - Set an alternate path to the font file.\n\n#### Examples\n\n```ruby\nwindows_font 'Code New Roman.otf'\n```\n\n### windows_http_acl\n\nSets the Access Control List for an http URL to grant non-admin accounts permission to open HTTP endpoints.\n\n#### Actions\n\n- `:create` - creates or updates the ACL for a URL.\n- `:delete` - deletes the ACL from a URL.\n\n#### Properties\n\n- `url` - the name of the url to be created/deleted.\n- `sddl` - the DACL string configuring all permissions to URL. Mandatory for create if user is not provided. Can't be use with `user`.\n- `user` - the name (domain\\user) of the user or group to be granted permission to the URL. Mandatory for create if sddl is not provided. Can't be use with `sddl`. Only one user or group can be granted permission so this replaces any previously defined entry.\n\n#### Examples\n\n```ruby\nwindows_http_acl 'http://+:50051/' do\n    user 'pc\\\\fred'\nend\n```\n\n```ruby\n# Grant access to users \"NT SERVICE\\WinRM\" and \"NT SERVICE\\Wecsvc\" via sddl\nwindows_http_acl 'http://+:5985/' do\n  sddl 'D:(A;;GX;;;S-1-5-80-569256582-2953403351-2909559716-1301513147-412116970)(A;;GX;;;S-1-5-80-4059739203-877974739-1245631912-527174227-2996563517)'\nend\n```\n\n```ruby\nwindows_http_acl 'http://+:50051/' do\n    action :delete\nend\n```\n\n### windows_printer_port\n\nCreate and delete TCP/IPv4 printer ports.\n\n#### Actions\n\n- `:create` - Create a TCIP/IPv4 printer port. This is the default action.\n- `:delete` - Delete a TCIP/IPv4 printer port\n\n#### Properties\n\n- `ipv4_address` - Name attribute. Required. IPv4 address, e.g. '10.0.24.34'\n- `port_name` - Port name. Optional. Defaults to 'IP_' + `ipv4_address`\n- `port_number` - Port number. Optional. Defaults to 9100.\n- `port_description` - Port description. Optional.\n- `snmp_enabled` - Boolean. Optional. Defaults to false.\n- `port_protocol` - Port protocol, 1 (RAW), or 2 (LPR). Optional. Defaults to 1.\n\n#### Examples\n\nCreate a TCP/IP printer port named 'IP_10.4.64.37' with all defaults\n\n```ruby\nwindows_printer_port '10.4.64.37' do\n  action :create\nend\n```\n\nDelete a printer port\n\n```ruby\nwindows_printer_port '10.4.64.37' do\n  action :delete\nend\n```\n\nDelete a port with a custom port_name\n\n```ruby\nwindows_printer_port '10.4.64.38' do\n  port_name 'My awesome port'\n  action :delete\nend\n```\n\nCreate a port with more options\n\n```ruby\nwindows_printer_port '10.4.64.39' do\n  port_name 'My awesome port'\n  snmp_enabled true\n  port_protocol 2\nend\n```\n\n### windows_printer\n\nCreate Windows printer. Note that this doesn't currently install a printer driver. You must already have the driver installed on the system.\n\nThe Windows Printer LWRP will automatically create a TCP/IP printer port for you using the `ipv4_address` property. If you want more granular control over the printer port, just create it using the `windows_printer_port` LWRP before creating the printer.\n\n#### Actions\n\n- `:create` - Create a new printer\n- `:delete` - Delete a new printer\n\n#### Properties\n\n- `device_id` - Name attribute. Required. Printer queue name, e.g. 'HP LJ 5200 in fifth floor copy room'\n- `comment` - Optional string describing the printer queue.\n- `default` - Boolean. Optional. Defaults to false. Note that Windows sets the first printer defined to the default printer regardless of this setting.\n- `driver_name` - String. Required. Exact name of printer driver. Note that the printer driver must already be installed on the node.\n- `location` - Printer location, e.g. 'Fifth floor copy room', or 'US/NYC/Floor42/Room4207'\n- `shared` - Boolean. Defaults to false.\n- `share_name` - Printer share name.\n- `ipv4_address` - Printer IPv4 address, e.g. '10.4.64.23'. You don't have to be able to ping the IP address to set it. Required.\n\nAn error of \"Set-WmiInstance : Generic failure\" is most likely due to the printer driver name not matching or not being installed.\n\n#### Examples\n\nCreate a printer\n\n```ruby\nwindows_printer 'HP LaserJet 5th Floor' do\n  driver_name 'HP LaserJet 4100 Series PCL6'\n  ipv4_address '10.4.64.38'\nend\n```\n\nDelete a printer. Note: this doesn't delete the associated printer port. See `windows_printer_port` above for how to delete the port.\n\n```ruby\nwindows_printer 'HP LaserJet 5th Floor' do\n  action :delete\nend\n```\n\n### windows_share\n\nCreates, modifies and removes Windows shares. All properties are idempotent.\n\n#### Actions\n\n- :create: creates/modifies a share\n- :delete: deletes a share\n\n#### Properties\n\n- share_name: name attribute, the share name.\n- path: path to the directory to be shared. Required when creating. If the share already exists on a different path then it is deleted and re-created.\n- description: description to be applied to the share\n- full_users: array of users which should have \"Full control\" permissions\n- change_users: array of users which should have \"Change\" permissions\n- read_users: array of users which should have \"Read\" permissions\n\n#### Examples\n\n```ruby\nwindows_share \"foo\" do\n  action :create\n  path \"C:\\\\foo\"\n  full_users [\"DOMAIN_A\\\\some_user\", \"DOMAIN_B\\\\some_other_user\"]\n  read_users [\"DOMAIN_C\\\\Domain users\"]\nend\n```\n\n```ruby\nwindows_share \"foo\" do\n  action :delete\nend\n```\n\n### windows_shortcut\n\nCreates and modifies Windows shortcuts.\n\n#### Actions\n\n- `:create` - create or modify a windows shortcut\n\n#### Properties\n\n- `name` - name attribute. The shortcut to create/modify.\n- `target` - what the shortcut links to\n- `arguments` - arguments to pass to the target when the shortcut is executed\n- `description` - description of the shortcut\n- `cwd` - Working directory to use when the target is executed\n- `iconlocation` - Icon to use, in the format of `\"path, index\"` where index is which icon in that file to use (See [WshShortcut.IconLocation](https://msdn.microsoft.com/en-us/library/3s9bx7at.aspx))\n\n#### Examples\n\nAdd a shortcut all users desktop:\n\n```ruby\nrequire 'win32ole'\nall_users_desktop = WIN32OLE.new(\"WScript.Shell\").SpecialFolders(\"AllUsersDesktop\")\n\nwindows_shortcut \"#{all_users_desktop}/Notepad.lnk\" do\n  target \"C:\\\\WINDOWS\\\\notepad.exe\"\n  description \"Launch Notepad\"\n  iconlocation \"C:\\\\windows\\\\notepad.exe, 0\"\nend\n```\n\n#### Library Methods\n\n```ruby\nRegistry.value_exists?('HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run','BGINFO')\nRegistry.key_exists?('HKLM\\SOFTWARE\\Microsoft')\nBgInfo = Registry.get_value('HKLM\\SOFTWARE\\Microsoft\\Windows\\CurrentVersion\\Run','BGINFO')\n```\n\n### windows_path\n\n#### Actions\n\n- `:add` - Add an item to the system path\n- `:remove` - Remove an item from the system path\n\n#### Properties\n\n- `path` - Name attribute. The name of the value to add to the system path\n\n#### Examples\n\nAdd Sysinternals to the system path\n\n```ruby\nwindows_path 'C:\\Sysinternals' do\n  action :add\nend\n```\n\nRemove 7-Zip from the system path\n\n```ruby\nwindows_path 'C:\\7-Zip' do\n  action :remove\nend\n```\n\n### windows_task\n\nCreates, deletes or runs a Windows scheduled task. Requires Windows Server 2008 due to API usage.\n\n#### Actions\n\n- `:create` - creates a task (or updates existing if user or command has changed)\n- `:delete` - deletes a task\n- `:run` - runs a task\n- `:end` - ends a task\n- `:change` - changes the un/pw or command of a task\n- `:enable` - enable a task\n- `:disable` - disable a task\n\n#### Properties\n\n- `task_name` - name attribute, The task name. (\"Task Name\" or \"/Task Name\")\n- `force` - When used with create, will update the task.\n- `command` - The command the task will run.\n- `cwd` - The directory the task will be run from.\n- `user` - The user to run the task as. (defaults to 'SYSTEM')\n- `password` - The user's password. (requires user)\n- `run_level` - Run with `:limited` or `:highest` privileges.\n- `frequency` - Frequency with which to run the task. (default is :hourly. Other valid values include :minute, :hourly, :daily, :weekly, :monthly, :once, :on_logon, :onstart, :on_idle) :once requires start_time\n- `frequency_modifier` - Multiple for frequency. (15 minutes, 2 days). Monthly tasks may also use these values\": ('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY')\n- `start_day` - Specifies the first date on which the task runs. Optional string (MM/DD/YYYY)\n- `start_time` - Specifies the start time to run the task. Optional string (HH:mm)\n- `interactive_enabled` - (Allow task to run interactively or non-interactively. Requires user and password.)\n- `day` - For monthly or weekly tasks, the day(s) on which the task runs. (MON - SUN, *, 1 - 31)\n- `months` - The Months of the year on which the task runs. (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, *). Multiple months should be comma delimited.\n- `idle_time` - For :on_idle frequency, the time (in minutes) without user activity that must pass to trigger the task. (1 - 999)\n\n#### Examples\n\nCreate a `chef-client` task with TaskPath `\\` running every 15 minutes\n\n```ruby\nwindows_task 'chef-client' do\n  user 'Administrator'\n  password '$ecR3t'\n  cwd 'C:\\\\chef\\\\bin'\n  command 'chef-client -L C:\\\\tmp\\\\'\n  run_level :highest\n  frequency :minute\n  frequency_modifier 15\nend\n```\n\nUpdate `chef-client` task with new password and log location\n\n```ruby\nwindows_task 'chef-client' do\n  user 'Administrator'\n  password 'N3wPassW0Rd'\n  cwd 'C:\\\\chef\\\\bin'\n  command 'chef-client -L C:\\\\chef\\\\logs\\\\'\n  action :change\nend\n```\n\nDelete a task named `old task`\n\n```ruby\nwindows_task 'old task' do\n  action :delete\nend\n```\n\nEnable a task named `chef-client`\n\n```ruby\nwindows_task 'chef-client' do\n  action :enable\nend\n```\n\nDisable a task named `ProgramDataUpdater` with TaskPath `\\Microsoft\\Windows\\Application Experience\\`\n\n```ruby\nwindows_task '\\Microsoft\\Windows\\Application Experience\\ProgramDataUpdater' do\n  action :disable\nend\n```\n\n### windows_zipfile\n\nMost version of Windows do not ship with native cli utility for managing compressed files. This resource provides a pure-ruby implementation for managing zip files. Be sure to use the `not_if` or `only_if` meta parameters to guard the resource for idempotence or action will be taken every Chef run.\n\n#### Actions\n\n- `:unzip` - unzip a compressed file\n- `:zip` - zip a directory (recursively)\n\n#### Properties\n\n- `path` - name attribute. The path where files will be (un)zipped to.\n- `source` - source of the zip file (either a URI or local path) for :unzip, or directory to be zipped for :zip.\n- `overwrite` - force an overwrite of the files if they already exist.\n- `checksum` - for :unzip, useful if source is remote, if the local file matches the SHA-256 checksum, Chef will not download it.\n\n#### Examples\n\nUnzip a remote zip file locally\n\n```ruby\nwindows_zipfile 'c:/bin' do\n  source 'http://download.sysinternals.com/Files/SysinternalsSuite.zip'\n  action :unzip\n  not_if {::File.exists?('c:/bin/PsExec.exe')}\nend\n```\n\nUnzip a local zipfile\n\n```ruby\nwindows_zipfile 'c:/the_codez' do\n  source 'c:/foo/baz/the_codez.zip'\n  action :unzip\nend\n```\n\nCreate a local zipfile\n\n```ruby\nwindows_zipfile 'c:/foo/baz/the_codez.zip' do\n  source 'c:/the_codez'\n  action :zip\nend\n```\n\n## Libraries\n\n### WindowsHelper\n\nHelper that allows you to use helpful functions in windows\n\n#### installed_packages\n\nReturns a hash of all DisplayNames installed\n\n```ruby\n# usage in a recipe\n::Chef::Recipe.send(:include, Windows::Helper)\nhash_of_installed_packages = installed_packages\n```\n\n#### is_package_installed?\n\n- `package_name` - The name of the package you want to query to see if it is installed\n- `returns` - true if the package is installed, false if it the package is not installed\n\nDownload a file if a package isn't installed\n\n```ruby\n# usage in a recipe to not download a file if package is already installed\n::Chef::Recipe.send(:include, Windows::Helper)\nis_win_sdk_installed = is_package_installed?('Windows Software Development Kit')\n\nremote_file 'C:\\windows\\temp\\windows_sdk.zip' do\n  source 'http://url_to_download/windows_sdk.zip'\n  action :create_if_missing\n  not_if {is_win_sdk_installed}\nend\n```\n\nDo something if a package is installed\n\n```ruby\n# usage in a provider\ninclude Windows::Helper\nif is_package_installed?('Windows Software Development Kit')\n  # do something if package is installed\nend\n```\n\n### Windows::VersionHelper\n\nHelper that allows you to get information of the windows version running on your node. It leverages windows ohai from kernel.os_info, easy to mock and to use even on linux.\n\n#### core_version?\n\nDetermines whether given node is running on a windows Core.\n\n```ruby\nif ::Windows::VersionHelper.core_version? node\n  fail 'Windows Core is not supported'\nend\n```\n\n#### workstation_version?\n\nDetermines whether given node is a windows workstation version (XP, Vista, 7, 8, 8.1, 10)\n\n```ruby\nif ::Windows::VersionHelper.workstation_version? node\n  fail 'Only server version of windows are supported'\nend\n```\n\n#### server_version?\n\nDetermines whether given node is a windows server version (Server 2003, Server 2008, Server 2012, Server 2016)\n\n```ruby\nif ::Windows::VersionHelper.server_version? node\n  puts 'Server version of windows are cool'\nend\n```\n\n#### nt_version\n\nDetermines NT version of the given node\n\n```ruby\ncase ::Windows::VersionHelper.nt_version node\n  when '6.0' then 'Windows vista or Server 2008'\n  when '6.1' then 'Windows 7 or Server 2008R2'\n  when '6.2' then 'Windows 8 or Server 2012'\n  when '6.3' then 'Windows 8.1 or Server 2012R2'\n  when '10.0' then 'Windows 10'\nend\n```\n\n## Windows ChefSpec Matchers\n\nThe Windows cookbook includes custom [ChefSpec](https://github.com/sethvargo/chefspec) matchers you can use to test your own cookbooks that consume Windows cookbook LWRPs.\n\n### Example Matcher Usage\n\n```ruby\nexpect(chef_run).to install_windows_package('Node.js').with(\n  source: 'http://nodejs.org/dist/v0.10.26/x64/node-v0.10.26-x64.msi')\n```\n\n### Windows Cookbook Matchers\n\n- create_windows_auto_run\n- remove_windows_auto_run\n- create_windows_certificate\n- delete_windows_certificate\n- add_acl_to_windows_certificate\n- create_windows_certificate_binding\n- delete_windows_certificate_binding\n- install_windows_feature\n- install_windows_feature_dism\n- install_windows_feature_servermanagercmd\n- install_windows_feature_powershell\n- remove_windows_feature\n- remove_windows_feature_dism\n- remove_windows_feature_servermanagercmd\n- remove_windows_feature_powershell\n- delete_windows_feature\n- delete_windows_feature_dism\n- delete_windows_feature_powershell\n- install_windows_font\n- create_windows_http_acl\n- delete_windows_http_acl\n- install_windows_package\n- remove_windows_package\n- set_windows_pagefile\n- add_windows_path\n- remove_windows_path\n- create_windows_printer\n- delete_windows_printer\n- create_windows_printer_port\n- delete_windows_printer_port\n- create_windows_shortcut\n- create_windows_shortcut\n- create_windows_task\n- disable_windows_task\n- enable_windows_task\n- delete_windows_task\n- run_windows_task\n- change_windows_task\n- unzip_windows_zipfile_to\n- zip_windows_zipfile_to\n\n## Usage\n\nPlace an explicit dependency on this cookbook (using depends in the cookbook's metadata.rb) from any cookbook where you would like to use the Windows-specific resources/providers that ship with this cookbook.\n\n```ruby\ndepends 'windows'\n```\n\n## License & Authors\n\n- Author:: Seth Chisamore ([schisamo@chef.io](mailto:schisamo@chef.io))\n- Author:: Doug MacEachern ([dougm@vmware.com](mailto:dougm@vmware.com))\n- Author:: Paul Morton ([pmorton@biaprotect.com](mailto:pmorton@biaprotect.com))\n- Author:: Doug Ireton ([doug.ireton@nordstrom.com](mailto:doug.ireton@nordstrom.com))\n\n```text\nCopyright 2011-2016, Chef Software, Inc.\nCopyright 2010, VMware, Inc.\nCopyright 2011, Business Intelligence Associates, Inc\nCopyright 2012, Nordstrom, Inc.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n```\n","maintainer":"Chef Software, Inc.","maintainer_email":"cookbooks@chef.io","license":"Apache-2.0","platforms":{"windows":">= 0.0.0"},"dependencies":{"ohai":">= 4.0.0"},"recommendations":{},"suggestions":{},"conflicting":{},"providing":{},"replacing":{},"attributes":{},"groupings":{},"recipes":{},"source_url":"https://github.com/chef-cookbooks/windows","issues_url":"https://github.com/chef-cookbooks/windows/issues","chef_version":">= 12.6","ohai_version":{}}
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
#
# Author:: Seth Chisamore (<schisamo@chef.io>)
# Cookbook:: windows
# Attribute:: default
#
# Copyright:: 2011-2017, Chef Software, Inc
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

default['windows']['rubyzipversion'] = nil
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/metadata.json to tempfile /tmp/chef-rest20170405-7856-10n6k81
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/attributes/default.rb to tempfile /tmp/chef-rest20170405-7856-11s1187
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: #<ChefZero::RestRequest:0x00000002248888
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"GET",
   "PATH_INFO"=>"/file_store/repo/cookbooks/windows/README.md",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x000000022489a0>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations",
   "chef",
   "file_store",
   "repo",
   "cookbooks",
   "windows",
   "README.md"]>

[2017-04-05T17:47:45+01:00] DEBUG: No chefignore file found at /root/chefignore no files will be ignored
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/attributes/default.rb in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Creating directory /root/.chef/cookbooks/windows/attributes
[2017-04-05T17:47:45+01:00] DEBUG: 
--- RESPONSE (200) ---
# Windows Cookbook

[![Build status](https://ci.appveyor.com/api/projects/status/9x4uepmm1g4rktie/branch/master?svg=true)](https://ci.appveyor.com/project/ChefWindowsCookbooks/windows/branch/master) [![Cookbook Version](https://img.shields.io/cookbook/v/windows.svg)](https://supermarket.chef.io/cookbooks/windows)

Provides a set of Windows-specific resources to aid in the creation of cookbooks/recipes targeting the Windows platform.

## Requirements

### Platforms

- Windows 7
- Windows Server 2008 R2
- Windows 8, 8.1
- Windows Server 2012 (R1, R2)

### Chef

- Chef 12.6+

## Resources

### windows_auto_run

#### Actions

- `:create` - Create an item to be run at login
- `:remove` - Remove an item that was previously setup to run at login

#### Properties

- `name` - Name attribute. The name of the value to be stored in the registry
- `program` - The program to be run at login
- `args` - The arguments for the program

#### Examples

Run BGInfo at login

```ruby
windows_auto_run 'BGINFO' do
  program 'C:/Sysinternals/bginfo.exe'
  args    '\'C:/Sysinternals/Config.bgi\' /NOLICPROMPT /TIMER:0'
  action  :create
end
```

### windows_certificate

Installs a certificate into the Windows certificate store from a file, and grants read-only access to the private key for designated accounts. Due to current limitations in WinRM, installing certificated remotely may not work if the operation requires a user profile. Operations on the local machine store should still work.

#### Actions

- `:create` - creates or updates a certificate.
- `:delete` - deletes a certificate.
- `:acl_add` - adds read-only entries to a certificate's private key ACL.

#### Properties

- `source` - name attribute. The source file (for create and acl_add), thumbprint (for delete and acl_add) or subject (for delete).
- `pfx_password` - the password to access the source if it is a pfx file.
- `private_key_acl` - array of 'domain\account' entries to be granted read-only access to the certificate's private key. This is not idempotent.
- `store_name` - the certificate store to manipulate. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).
- `user_store` - if false (default) then use the local machine store; if true then use the current user's store.

#### Examples

```ruby
# Add PFX cert to local machine personal store and grant accounts read-only access to private key
windows_certificate "c:/test/mycert.pfx" do
    pfx_password    "password"
    private_key_acl    ["acme\fred", "pc\jane"]
end
```

```ruby
# Add cert to trusted intermediate store
windows_certificate "c:/test/mycert.cer" do
    store_name    "CA"
end
```

```ruby
# Remove all certificates matching the subject
windows_certificate "me.acme.com" do
    action :delete
end
```

### windows_certificate_binding

Binds a certificate to an HTTP port in order to enable TLS communication.

#### Actions

- `:create` - creates or updates a binding.
- `:delete` - deletes a binding.

#### Properties

- `cert_name` - name attribute. The thumbprint(hash) or subject that identifies the certificate to be bound.
- `name_kind` - indicates the type of cert_name. One of :subject (default) or :hash.
- `address` - the address to bind against. Default is 0.0.0.0 (all IP addresses).
- `port` - the port to bind against. Default is 443.
- `app_id` - the GUID that defines the application that owns the binding. Default is the values used by IIS.
- `store_name` - the store to locate the certificate in. One of MY (default : personal store), CA (trusted intermediate store) or ROOT (trusted root store).

#### Examples

```ruby
# Bind the first certificate matching the subject to the default TLS port
windows_certificate_binding "me.acme.com" do
end
```

```ruby
# Bind a cert from the CA store with the given hash to port 4334
windows_certificate_binding "me.acme.com" do
    cert_name    "d234567890a23f567c901e345bc8901d34567890"
    name_kind    :hash
    store_name    "CA"
    port        4334
end
```

### windows_feature

**BREAKING CHANGE - Version 3.0.0**

This resource has been moved from using LWRPs and multiple providers to using Custom Resources. To maintain functionality, you'll need to change `provider` to `install_method`.

Windows Roles and Features can be thought of as built-in operating system packages that ship with the OS. A server role is a set of software programs that, when they are installed and properly configured, lets a computer perform a specific function for multiple users or other computers within a network. A Role can have multiple Role Services that provide functionality to the Role. Role services are software programs that provide the functionality of a role. Features are software programs that, although they are not directly parts of roles, can support or augment the functionality of one or more roles, or improve the functionality of the server, regardless of which roles are installed. Collectively we refer to all of these attributes as 'features'.

This resource allows you to manage these 'features' in an unattended, idempotent way.

There are three methods for the `windows_feature` which map into Microsoft's three major tools for managing roles/features: [Deployment Image Servicing and Management (DISM)](http://msdn.microsoft.com/en-us/library/dd371719%28v=vs.85%29.aspx), [Servermanagercmd](http://technet.microsoft.com/en-us/library/ee344834%28WS.10%29.aspx) (The CLI for Server Manager), and [PowerShell](https://technet.microsoft.com/en-us/library/cc731774(v=ws.11).aspx). As Servermanagercmd is deprecated, Chef will set the default method to `:windows_feature_dism` if `dism.exe` is present on the system being configured. The default method will fall back to `:windows_feature_servermanagercmd`, and then `:windows_feature_powershell`.

For more information on Roles, Role Services and Features see the [Microsoft TechNet article on the topic](http://technet.microsoft.com/en-us/library/cc754923.aspx). For a complete list of all features that are available on a node type either of the following commands at a command prompt:

For Dism:

```text
dism /online /Get-Features
```

For ServerManagerCmd:

```text
servermanagercmd -query
```

For PowerShell:

```text
get-windowsfeature
```

#### Actions

- `:install` - install a Windows role/feature
- `:remove` - remove a Windows role/feature
- `:delete` - remove a Windows role/feature from the image (not supported by ServerManagerCmd)

#### Properties

- `feature_name` - name of the feature/role(s) to install. The same feature may have different names depending on the provider used (ie DHCPServer vs DHCP; DNS-Server-Full-Role vs DNS).
- `all` - Boolean. Optional. Default: false. DISM and Powershell providers only. Forces all dependencies to be installed.
- `source` - String. Optional. DISM provider only. Uses local repository for feature install.
- `install_method` - Symbol. Optional. **REPLACEMENT FOR THE PREVIOUS PROVIDER OPTION** If not supplied, Chef will determine which method to use (in the order of `:windows_feature_dism`, `:windows_feature_servercmd`, `:windows_feature_powershell`)

#### Examples

Install the DHCP Server feature

```ruby
windows_feature 'DHCPServer' do
  action :install
end
```

Install the .Net 3.5.1 feature on Server 2012 using repository files on DVD and install all dependencies

```ruby
windows_feature "NetFx3" do
  action :install
  all true
  source "d:\sources\sxs"
end
```

Remove Telnet Server and Client features

```ruby
windows_feature ['TelnetServer', 'TelnetClient'] do
  action :remove
end
```

Add the SMTP Server feature using the PowerShell provider

```ruby
windows_feature "smtp-server" do
  action :install
  all true
  install_method :windows_feature_powershell
end
```

Install multiple features using one resource with the PowerShell provider

```ruby
windows_feature ['Web-Asp-Net45', 'Web-Net-Ext45'] do
  action :install
  install_method :windows_feature_powershell
end
```

### windows_font

Installs a font.

Font files should be included in the cookbooks

#### Actions

- `:install` - install a font to the system fonts directory.

#### Properties

- `name` - The file name of the font file name to install. The path defaults to the files/default directory of the cookbook you're calling windows_font from. Defaults to the resource name.
- `source` - Set an alternate path to the font file.

#### Examples

```ruby
windows_font 'Code New Roman.otf'
```

### windows_http_acl

Sets the Access Control List for an http URL to grant non-admin accounts permission to open HTTP endpoints.

#### Actions

- `:create` - creates or updates the ACL for a URL.
- `:delete` - deletes the ACL from a URL.

#### Properties

- `url` - the name of the url to be created/deleted.
- `sddl` - the DACL string configuring all permissions to URL. Mandatory for create if user is not provided. Can't be use with `user`.
- `user` - the name (domain\user) of the user or group to be granted permission to the URL. Mandatory for create if sddl is not provided. Can't be use with `sddl`. Only one user or group can be granted permission so this replaces any previously defined entry.

#### Examples

```ruby
windows_http_acl 'http://+:50051/' do
    user 'pc\\fred'
end
```

```ruby
# Grant access to users "NT SERVICE\WinRM" and "NT SERVICE\Wecsvc" via sddl
windows_http_acl 'http://+:5985/' do
  sddl 'D:(A;;GX;;;S-1-5-80-569256582-2953403351-2909559716-1301513147-412116970)(A;;GX;;;S-1-5-80-4059739203-877974739-1245631912-527174227-2996563517)'
end
```

```ruby
windows_http_acl 'http://+:50051/' do
    action :delete
end
```

### windows_printer_port

Create and delete TCP/IPv4 printer ports.

#### Actions

- `:create` - Create a TCIP/IPv4 printer port. This is the default action.
- `:delete` - Delete a TCIP/IPv4 printer port

#### Properties

- `ipv4_address` - Name attribute. Required. IPv4 address, e.g. '10.0.24.34'
- `port_name` - Port name. Optional. Defaults to 'IP_' + `ipv4_address`
- `port_number` - Port number. Optional. Defaults to 9100.
- `port_description` - Port description. Optional.
- `snmp_enabled` - Boolean. Optional. Defaults to false.
- `port_protocol` - Port protocol, 1 (RAW), or 2 (LPR). Optional. Defaults to 1.

#### Examples

Create a TCP/IP printer port named 'IP_10.4.64.37' with all defaults

```ruby
windows_printer_port '10.4.64.37' do
  action :create
end
```

Delete a printer port

```ruby
windows_printer_port '10.4.64.37' do
  action :delete
end
```

Delete a port with a custom port_name

```ruby
windows_printer_port '10.4.64.38' do
  port_name 'My awesome port'
  action :delete
end
```

Create a port with more options

```ruby
windows_printer_port '10.4.64.39' do
  port_name 'My awesome port'
  snmp_enabled true
  port_protocol 2
end
```

### windows_printer

Create Windows printer. Note that this doesn't currently install a printer driver. You must already have the driver installed on the system.

The Windows Printer LWRP will automatically create a TCP/IP printer port for you using the `ipv4_address` property. If you want more granular control over the printer port, just create it using the `windows_printer_port` LWRP before creating the printer.

#### Actions

- `:create` - Create a new printer
- `:delete` - Delete a new printer

#### Properties

- `device_id` - Name attribute. Required. Printer queue name, e.g. 'HP LJ 5200 in fifth floor copy room'
- `comment` - Optional string describing the printer queue.
- `default` - Boolean. Optional. Defaults to false. Note that Windows sets the first printer defined to the default printer regardless of this setting.
- `driver_name` - String. Required. Exact name of printer driver. Note that the printer driver must already be installed on the node.
- `location` - Printer location, e.g. 'Fifth floor copy room', or 'US/NYC/Floor42/Room4207'
- `shared` - Boolean. Defaults to false.
- `share_name` - Printer share name.
- `ipv4_address` - Printer IPv4 address, e.g. '10.4.64.23'. You don't have to be able to ping the IP address to set it. Required.

An error of "Set-WmiInstance : Generic failure" is most likely due to the printer driver name not matching or not being installed.

#### Examples

Create a printer

```ruby
windows_printer 'HP LaserJet 5th Floor' do
  driver_name 'HP LaserJet 4100 Series PCL6'
  ipv4_address '10.4.64.38'
end
```

Delete a printer. Note: this doesn't delete the associated printer port. See `windows_printer_port` above for how to delete the port.

```ruby
windows_printer 'HP LaserJet 5th Floor' do
  action :delete
end
```

### windows_share

Creates, modifies and removes Windows shares. All properties are idempotent.

#### Actions

- :create: creates/modifies a share
- :delete: deletes a share

#### Properties

- share_name: name attribute, the share name.
- path: path to the directory to be shared. Required when creating. If the share already exists on a different path then it is deleted and re-created.
- description: description to be applied to the share
- full_users: array of users which should have "Full control" permissions
- change_users: array of users which should have "Change" permissions
- read_users: array of users which should have "Read" permissions

#### Examples

```ruby
windows_share "foo" do
  action :create
  path "C:\\foo"
  full_users ["DOMAIN_A\\some_user", "DOMAIN_B\\some_other_user"]
  read_users ["DOMAIN_C\\Domain users"]
end
```

```ruby
windows_share "foo" do
  action :delete
end
```

### windows_shortcut

Creates and modifies Windows shortcuts.

#### Actions

- `:create` - create or modify a windows shortcut

#### Properties

- `name` - name attribute. The shortcut to create/modify.
- `target` - what the shortcut links to
- `arguments` - arguments to pass to the target when the shortcut is executed
- `description` - description of the shortcut
- `cwd` - Working directory to use when the target is executed
- `iconlocation` - Icon to use, in the format of `"path, index"` where index is which icon in that file to use (See [WshShortcut.IconLocation](https://msdn.microsoft.com/en-us/library/3s9bx7at.aspx))

#### Examples

Add a shortcut all users desktop:

```ruby
require 'win32ole'
all_users_desktop = WIN32OLE.new("WScript.Shell").SpecialFolders("AllUsersDesktop")

windows_shortcut "#{all_users_desktop}/Notepad.lnk" do
  target "C:\\WINDOWS\\notepad.exe"
  description "Launch Notepad"
  iconlocation "C:\\windows\\notepad.exe, 0"
end
```

#### Library Methods

```ruby
Registry.value_exists?('HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run','BGINFO')
Registry.key_exists?('HKLM\SOFTWARE\Microsoft')
BgInfo = Registry.get_value('HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run','BGINFO')
```

### windows_path

#### Actions

- `:add` - Add an item to the system path
- `:remove` - Remove an item from the system path

#### Properties

- `path` - Name attribute. The name of the value to add to the system path

#### Examples

Add Sysinternals to the system path

```ruby
windows_path 'C:\Sysinternals' do
  action :add
end
```

Remove 7-Zip from the system path

```ruby
windows_path 'C:\7-Zip' do
  action :remove
end
```

### windows_task

Creates, deletes or runs a Windows scheduled task. Requires Windows Server 2008 due to API usage.

#### Actions

- `:create` - creates a task (or updates existing if user or command has changed)
- `:delete` - deletes a task
- `:run` - runs a task
- `:end` - ends a task
- `:change` - changes the un/pw or command of a task
- `:enable` - enable a task
- `:disable` - disable a task

#### Properties

- `task_name` - name attribute, The task name. ("Task Name" or "/Task Name")
- `force` - When used with create, will update the task.
- `command` - The command the task will run.
- `cwd` - The directory the task will be run from.
- `user` - The user to run the task as. (defaults to 'SYSTEM')
- `password` - The user's password. (requires user)
- `run_level` - Run with `:limited` or `:highest` privileges.
- `frequency` - Frequency with which to run the task. (default is :hourly. Other valid values include :minute, :hourly, :daily, :weekly, :monthly, :once, :on_logon, :onstart, :on_idle) :once requires start_time
- `frequency_modifier` - Multiple for frequency. (15 minutes, 2 days). Monthly tasks may also use these values": ('FIRST', 'SECOND', 'THIRD', 'FOURTH', 'LAST', 'LASTDAY')
- `start_day` - Specifies the first date on which the task runs. Optional string (MM/DD/YYYY)
- `start_time` - Specifies the start time to run the task. Optional string (HH:mm)
- `interactive_enabled` - (Allow task to run interactively or non-interactively. Requires user and password.)
- `day` - For monthly or weekly tasks, the day(s) on which the task runs. (MON - SUN, *, 1 - 31)
- `months` - The Months of the year on which the task runs. (JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC, *). Multiple months should be comma delimited.
- `idle_time` - For :on_idle frequency, the time (in minutes) without user activity that must pass to trigger the task. (1 - 999)

#### Examples

Create a `chef-client` task with TaskPath `\` running every 15 minutes

```ruby
windows_task 'chef-client' do
  user 'Administrator'
  password '$ecR3t'
  cwd 'C:\\chef\\bin'
  command 'chef-client -L C:\\tmp\\'
  run_level :highest
  frequency :minute
  frequency_modifier 15
end
```

Update `chef-client` task with new password and log location

```ruby
windows_task 'chef-client' do
  user 'Administrator'
  password 'N3wPassW0Rd'
  cwd 'C:\\chef\\bin'
  command 'chef-client -L C:\\chef\\logs\\'
  action :change
end
```

Delete a task named `old task`

```ruby
windows_task 'old task' do
  action :delete
end
```

Enable a task named `chef-client`

```ruby
windows_task 'chef-client' do
  action :enable
end
```

Disable a task named `ProgramDataUpdater` with TaskPath `\Microsoft\Windows\Application Experience\`

```ruby
windows_task '\Microsoft\Windows\Application Experience\ProgramDataUpdater' do
  action :disable
end
```

### windows_zipfile

Most version of Windows do not ship with native cli utility for managing compressed files. This resource provides a pure-ruby implementation for managing zip files. Be sure to use the `not_if` or `only_if` meta parameters to guard the resource for idempotence or action will be taken every Chef run.

#### Actions

- `:unzip` - unzip a compressed file
- `:zip` - zip a directory (recursively)

#### Properties

- `path` - name attribute. The path where files will be (un)zipped to.
- `source` - source of the zip file (either a URI or local path) for :unzip, or directory to be zipped for :zip.
- `overwrite` - force an overwrite of the files if they already exist.
- `checksum` - for :unzip, useful if source is remote, if the local file matches the SHA-256 checksum, Chef will not download it.

#### Examples

Unzip a remote zip file locally

```ruby
windows_zipfile 'c:/bin' do
  source 'http://download.sysinternals.com/Files/SysinternalsSuite.zip'
  action :unzip
  not_if {::File.exists?('c:/bin/PsExec.exe')}
end
```

Unzip a local zipfile

```ruby
windows_zipfile 'c:/the_codez' do
  source 'c:/foo/baz/the_codez.zip'
  action :unzip
end
```

Create a local zipfile

```ruby
windows_zipfile 'c:/foo/baz/the_codez.zip' do
  source 'c:/the_codez'
  action :zip
end
```

## Libraries

### WindowsHelper

Helper that allows you to use helpful functions in windows

#### installed_packages

Returns a hash of all DisplayNames installed

```ruby
# usage in a recipe
::Chef::Recipe.send(:include, Windows::Helper)
hash_of_installed_packages = installed_packages
```

#### is_package_installed?

- `package_name` - The name of the package you want to query to see if it is installed
- `returns` - true if the package is installed, false if it the package is not installed

Download a file if a package isn't installed

```ruby
# usage in a recipe to not download a file if package is already installed
::Chef::Recipe.send(:include, Windows::Helper)
is_win_sdk_installed = is_package_installed?('Windows Software Development Kit')

remote_file 'C:\windows\temp\windows_sdk.zip' do
  source 'http://url_to_download/windows_sdk.zip'
  action :create_if_missing
  not_if {is_win_sdk_installed}
end
```

Do something if a package is installed

```ruby
# usage in a provider
include Windows::Helper
if is_package_installed?('Windows Software Development Kit')
  # do something if package is installed
end
```

### Windows::VersionHelper

Helper that allows you to get information of the windows version running on your node. It leverages windows ohai from kernel.os_info, easy to mock and to use even on linux.

#### core_version?

Determines whether given node is running on a windows Core.

```ruby
if ::Windows::VersionHelper.core_version? node
  fail 'Windows Core is not supported'
end
```

#### workstation_version?

Determines whether given node is a windows workstation version (XP, Vista, 7, 8, 8.1, 10)

```ruby
if ::Windows::VersionHelper.workstation_version? node
  fail 'Only server version of windows are supported'
end
```

#### server_version?

Determines whether given node is a windows server version (Server 2003, Server 2008, Server 2012, Server 2016)

```ruby
if ::Windows::VersionHelper.server_version? node
  puts 'Server version of windows are cool'
end
```

#### nt_version

Determines NT version of the given node

```ruby
case ::Windows::VersionHelper.nt_version node
  when '6.0' then 'Windows vista or Server 2008'
  when '6.1' then 'Windows 7 or Server 2008R2'
  when '6.2' then 'Windows 8 or Server 2012'
  when '6.3' then 'Windows 8.1 or Server 2012R2'
  when '10.0' then 'Windows 10'
end
```

## Windows ChefSpec Matchers

The Windows cookbook includes custom [ChefSpec](https://github.com/sethvargo/chefspec) matchers you can use to test your own cookbooks that consume Windows cookbook LWRPs.

### Example Matcher Usage

```ruby
expect(chef_run).to install_windows_package('Node.js').with(
  source: 'http://nodejs.org/dist/v0.10.26/x64/node-v0.10.26-x64.msi')
```

### Windows Cookbook Matchers

- create_windows_auto_run
- remove_windows_auto_run
- create_windows_certificate
- delete_windows_certificate
- add_acl_to_windows_certificate
- create_windows_certificate_binding
- delete_windows_certificate_binding
- install_windows_feature
- install_windows_feature_dism
- install_windows_feature_servermanagercmd
- install_windows_feature_powershell
- remove_windows_feature
- remove_windows_feature_dism
- remove_windows_feature_servermanagercmd
- remove_windows_feature_powershell
- delete_windows_feature
- delete_windows_feature_dism
- delete_windows_feature_powershell
- install_windows_font
- create_windows_http_acl
- delete_windows_http_acl
- install_windows_package
- remove_windows_package
- set_windows_pagefile
- add_windows_path
- remove_windows_path
- create_windows_printer
- delete_windows_printer
- create_windows_printer_port
- delete_windows_printer_port
- create_windows_shortcut
- create_windows_shortcut
- create_windows_task
- disable_windows_task
- enable_windows_task
- delete_windows_task
- run_windows_task
- change_windows_task
- unzip_windows_zipfile_to
- zip_windows_zipfile_to

## Usage

Place an explicit dependency on this cookbook (using depends in the cookbook's metadata.rb) from any cookbook where you would like to use the Windows-specific resources/providers that ship with this cookbook.

```ruby
depends 'windows'
```

## License & Authors

- Author:: Seth Chisamore ([schisamo@chef.io](mailto:schisamo@chef.io))
- Author:: Doug MacEachern ([dougm@vmware.com](mailto:dougm@vmware.com))
- Author:: Paul Morton ([pmorton@biaprotect.com](mailto:pmorton@biaprotect.com))
- Author:: Doug Ireton ([doug.ireton@nordstrom.com](mailto:doug.ireton@nordstrom.com))

```text
Copyright 2011-2016, Chef Software, Inc.
Copyright 2010, VMware, Inc.
Copyright 2011, Business Intelligence Associates, Inc
Copyright 2012, Nordstrom, Inc.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
```
--- END RESPONSE ---
[2017-04-05T17:47:45+01:00] DEBUG: Streaming download from chefzero://localhost:8889/file_store/repo/cookbooks/windows/README.md to tempfile /tmp/chef-rest20170405-7856-13obzeq
[2017-04-05T17:47:45+01:00] DEBUG: content_encoding = ''               initializing noop stream deflator.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/README.md in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::ValidateContentLength::ContentLengthCounter#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP::StreamHandler calling Chef::HTTP::Decompressor::NoopInflater#handle_chunk
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_stream_complete
[2017-04-05T17:47:45+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_stream_complete
[2017-04-05T17:47:45+01:00] INFO: Storing updated cookbooks/windows/metadata.json in the cache.
[2017-04-05T17:47:45+01:00] DEBUG: Cookbooks to compile: [:ohai, :windows, :seven_zip, :mingw, :"build-essential", :compat_resource, :"yum-epel", :zypper, :chef_nginx, :iptables]
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook ohai's library file: /root/.chef/cookbooks/ohai/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/powershell_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/registry_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/version.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/version_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/windows_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/windows_privileged.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's library file: /root/.chef/cookbooks/windows/libraries/wmi_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook seven_zip's library file: /root/.chef/cookbooks/seven_zip/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook mingw's library file: /root/.chef/cookbooks/mingw/libraries/_helper.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook build-essential's library file: /root/.chef/cookbooks/build-essential/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook compat_resource's library file: /root/.chef/cookbooks/compat_resource/libraries/autoload.rb
[2017-04-05T17:47:45+01:00] DEBUG: NOT LOADING compat_resource based on chef-version 12.16.42 over chef version 12.18.31
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook zypper's library file: /root/.chef/cookbooks/zypper/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook chef_nginx's library file: /root/.chef/cookbooks/chef_nginx/libraries/helpers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook chef_nginx's library file: /root/.chef/cookbooks/chef_nginx/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook iptables's library file: /root/.chef/cookbooks/iptables/libraries/matchers.rb
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook windows's attribute file /root/.chef/cookbooks/windows/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute windows::default
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook seven_zip's attribute file /root/.chef/cookbooks/seven_zip/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute seven_zip::default
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook build-essential's attribute file /root/.chef/cookbooks/build-essential/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute build-essential::default
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::default
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-debuginfo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::epel-debuginfo
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-source.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::epel-source
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-testing-debuginfo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::epel-testing-debuginfo
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-testing-source.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::epel-testing-source
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel-testing.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::epel-testing
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook yum-epel's attribute file /root/.chef/cookbooks/yum-epel/attributes/epel.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute yum-epel::epel
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook zypper's attribute file /root/.chef/cookbooks/zypper/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute zypper::default
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::default
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/auth_request.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::auth_request
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/devel.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::devel
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/echo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::echo
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/geoip.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::geoip
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/headers_more.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::headers_more
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/lua.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::lua
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/naxsi.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::naxsi
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/openssl_source.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::openssl_source
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/pagespeed.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::pagespeed
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/passenger.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::passenger
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/rate_limiting.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::rate_limiting
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::repo
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/set_misc.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::set_misc
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/socketproxy.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::socketproxy
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/source.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::source
[2017-04-05T17:47:45+01:00] DEBUG: I am not loading attribute file chef_nginx::default, because I have already seen it.
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/status.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::status
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/syslog.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::syslog
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook chef_nginx's attribute file /root/.chef/cookbooks/chef_nginx/attributes/upload_progress.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute chef_nginx::upload_progress
[2017-04-05T17:47:45+01:00] DEBUG: Node epplkraw0381t1.budapest.epam.com loading cookbook iptables's attribute file /root/.chef/cookbooks/iptables/attributes/default.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loading Attribute iptables::default
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook ohai's resources from /root/.chef/cookbooks/ohai/resources/hint.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/ohai/resources/hint.rb into resource ohai_hint (Custom resource ohai_hint from cookbook ohai)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook ohai's resources from /root/.chef/cookbooks/ohai/resources/plugin.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/ohai/resources/plugin.rb into resource ohai_plugin (Custom resource ohai_plugin from cookbook ohai)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/auto_run.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/auto_run.rb into resource windows_auto_run (Custom resource windows_auto_run from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/certificate.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/certificate.rb into resource windows_certificate (Custom resource windows_certificate from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/certificate_binding.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/certificate_binding.rb into resource windows_certificate_binding (Custom resource windows_certificate_binding from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/feature.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/feature.rb into resource windows_feature (Custom resource windows_feature from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/feature_dism.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/feature_dism.rb into resource windows_feature_dism (Custom resource windows_feature_dism from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/feature_powershell.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/feature_powershell.rb into resource windows_feature_powershell (Custom resource windows_feature_powershell from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/feature_servermanagercmd.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/feature_servermanagercmd.rb into resource windows_feature_servermanagercmd (Custom resource windows_feature_servermanagercmd from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/font.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/font.rb into resource windows_font (Custom resource windows_font from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/http_acl.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/http_acl.rb into resource windows_http_acl (Custom resource windows_http_acl from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/pagefile.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/pagefile.rb into resource windows_pagefile (Custom resource windows_pagefile from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/path.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/path.rb into resource windows_path (Custom resource windows_path from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/printer.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/printer.rb into resource windows_printer (Custom resource windows_printer from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/printer_port.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/printer_port.rb into resource windows_printer_port (Custom resource windows_printer_port from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/share.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/share.rb into resource windows_share (Custom resource windows_share from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/shortcut.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/shortcut.rb into resource windows_shortcut (Custom resource windows_shortcut from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/task.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/task.rb into resource windows_task (Custom resource windows_task from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook windows's resources from /root/.chef/cookbooks/windows/resources/zipfile.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/windows/resources/zipfile.rb into resource windows_zipfile (Custom resource windows_zipfile from cookbook windows)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook seven_zip's providers from /root/.chef/cookbooks/seven_zip/providers/archive.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/seven_zip/providers/archive.rb into provider seven_zip_archive (LWRP provider seven_zip_archive from cookbook seven_zip)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook seven_zip's resources from /root/.chef/cookbooks/seven_zip/resources/archive.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/seven_zip/resources/archive.rb into resource seven_zip_archive (Custom resource seven_zip_archive from cookbook seven_zip)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook mingw's resources from /root/.chef/cookbooks/mingw/resources/get.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/mingw/resources/get.rb into resource mingw_get (Custom resource mingw_get from cookbook mingw)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook mingw's resources from /root/.chef/cookbooks/mingw/resources/msys2_package.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/mingw/resources/msys2_package.rb into resource mingw_msys2_package (Custom resource mingw_msys2_package from cookbook mingw)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook mingw's resources from /root/.chef/cookbooks/mingw/resources/tdm_gcc.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/mingw/resources/tdm_gcc.rb into resource mingw_tdm_gcc (Custom resource mingw_tdm_gcc from cookbook mingw)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook build-essential's resources from /root/.chef/cookbooks/build-essential/resources/build_essential.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/build-essential/resources/build_essential.rb into resource build_essential_build_essential (Custom resource build_essential_build_essential from cookbook build-essential)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook build-essential's resources from /root/.chef/cookbooks/build-essential/resources/xcode_command_line_tools.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/build-essential/resources/xcode_command_line_tools.rb into resource build_essential_xcode_command_line_tools (Custom resource build_essential_xcode_command_line_tools from cookbook build-essential)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook zypper's providers from /root/.chef/cookbooks/zypper/providers/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/zypper/providers/repo.rb into provider zypper_repo (LWRP provider zypper_repo from cookbook zypper)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook zypper's resources from /root/.chef/cookbooks/zypper/resources/repo.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/zypper/resources/repo.rb into resource zypper_repo (Custom resource zypper_repo from cookbook zypper)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook chef_nginx's resources from /root/.chef/cookbooks/chef_nginx/resources/site.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/chef_nginx/resources/site.rb into resource chef_nginx_site (Custom resource chef_nginx_site from cookbook chef_nginx)
[2017-04-05T17:47:45+01:00] DEBUG: Loading cookbook iptables's resources from /root/.chef/cookbooks/iptables/resources/rule.rb
[2017-04-05T17:47:45+01:00] DEBUG: Loaded contents of /root/.chef/cookbooks/iptables/resources/rule.rb into resource iptables_rule (Custom resource iptables_rule from cookbook iptables)
[2017-04-05T17:47:45+01:00] DEBUG: Loading recipe chef_nginx::default via include_recipe
[2017-04-05T17:47:45+01:00] DEBUG: Found recipe default in cookbook chef_nginx
[2017-04-05T17:47:45+01:00] DEBUG: Loading recipe chef_nginx::package via include_recipe
[2017-04-05T17:47:45+01:00] DEBUG: Found recipe package in cookbook chef_nginx
[2017-04-05T17:47:45+01:00] DEBUG: Loading recipe chef_nginx::ohai_plugin via include_recipe
[2017-04-05T17:47:45+01:00] DEBUG: Found recipe ohai_plugin in cookbook chef_nginx
[2017-04-05T17:47:45+01:00] DEBUG: Resources for generic ohai resource enabled on node include: [Chef::Resource::Ohai]
[2017-04-05T17:47:45+01:00] DEBUG: Resource for ohai is Chef::Resource::Ohai
[2017-04-05T17:47:45+01:00] DEBUG: Resources for generic ohai_plugin resource enabled on node include: [Custom resource ohai_plugin from cookbook ohai]
[2017-04-05T17:47:45+01:00] DEBUG: Resource for ohai_plugin is Custom resource ohai_plugin from cookbook ohai
[2017-04-05T17:47:45+01:00] INFO: Processing ohai_plugin[nginx] action create (chef_nginx::ohai_plugin line 29)
[2017-04-05T17:47:45+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:45+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:45+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:45+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:45+01:00] WARN: The Ohai plugin_path does not include /root/.chef/ohai/plugins. Ohai will reload on each chef-client run in order to add this directory to the path unless you modify your client.rb configuration to add this directory to plugin_path. The plugin_path can be set via the chef-client::config recipe. See 'Ohai Settings' at https://docs.chef.io/config_rb_client.html#ohai-settings for more details.
[2017-04-05T17:47:45+01:00] WARN: Adding /root/.chef/ohai/plugins to the Ohai plugin path for this chef-client run only
[2017-04-05T17:47:45+01:00] DEBUG: Resources for generic ohai resource enabled on node include: [Chef::Resource::Ohai]
[2017-04-05T17:47:45+01:00] DEBUG: Resource for ohai is Chef::Resource::Ohai
[2017-04-05T17:47:45+01:00] INFO: Processing directory[/root/.chef/ohai/plugins] action create (/root/.chef/cookbooks/ohai/resources/plugin.rb line 80)
[2017-04-05T17:47:45+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:47:45+01:00] DEBUG: Provider for action create on resource directory[/root/.chef/ohai/plugins] is Chef::Provider::Directory
[2017-04-05T17:47:45+01:00] INFO: directory[/root/.chef/ohai/plugins] created directory /root/.chef/ohai/plugins
[2017-04-05T17:47:45+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:47:45+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:47:45+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:47:46+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:47:46+01:00] INFO: Processing template[/root/.chef/ohai/plugins/nginx.rb] action create (/root/.chef/cookbooks/ohai/resources/plugin.rb line 93)
[2017-04-05T17:47:46+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:47:46+01:00] DEBUG: Provider for action create on resource template[/root/.chef/ohai/plugins/nginx.rb] is Chef::Provider::Template
[2017-04-05T17:47:46+01:00] DEBUG: Not fetching cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb, as the cache is up to date.
[2017-04-05T17:47:46+01:00] DEBUG: Current checksum: 0d7028b99bea2508b52ae30f3f72ab4b; manifest checksum: 0d7028b99bea2508b52ae30f3f72ab4b)
[2017-04-05T17:47:46+01:00] DEBUG: Touching /root/.chef/ohai/plugins/nginx.rb to create it
[2017-04-05T17:47:46+01:00] INFO: template[/root/.chef/ohai/plugins/nginx.rb] created file /root/.chef/ohai/plugins/nginx.rb
[2017-04-05T17:47:46+01:00] DEBUG: calculating checksum of /root/.chef/ohai/plugins/.chef-nginx20170405-7856-1ei0aqd.rb to compare with 
[2017-04-05T17:47:46+01:00] DEBUG: Running: diff -u /root/.chef/ohai/plugins/nginx.rb /root/.chef/ohai/plugins/.chef-nginx20170405-7856-1ei0aqd.rb
[2017-04-05T17:47:46+01:00] DEBUG: Reading modes from /root/.chef/ohai/plugins/nginx.rb file
[2017-04-05T17:47:46+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /root/.chef/ohai/plugins/.chef-nginx20170405-7856-1ei0aqd.rb
[2017-04-05T17:47:46+01:00] DEBUG: Moving temporary file /root/.chef/ohai/plugins/.chef-nginx20170405-7856-1ei0aqd.rb into place at /root/.chef/ohai/plugins/nginx.rb
[2017-04-05T17:47:46+01:00] INFO: template[/root/.chef/ohai/plugins/nginx.rb] updated file contents /root/.chef/ohai/plugins/nginx.rb
[2017-04-05T17:47:46+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:47:46+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:47:46+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:47:46+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:47:46+01:00] INFO: template[/root/.chef/ohai/plugins/nginx.rb] sending reload action to ohai[nginx] (immediate)
[2017-04-05T17:47:46+01:00] INFO: Processing ohai[nginx] action reload (/root/.chef/cookbooks/ohai/resources/plugin.rb line 110)
[2017-04-05T17:47:46+01:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]
[2017-04-05T17:47:46+01:00] DEBUG: Provider for action reload on resource ohai[nginx] is Chef::Provider::Ohai
[2017-04-05T17:47:46+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins", "/root/.chef/ohai/plugins"], :disabled_plugins=>[], :plugin=>{:shard_seed=>{}}, :hints_path=>["/etc/chef/ohai/hints"], :node_name=>"epplkraw0381t1.budapest.epam.com", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2017-04-05T17:47:46+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins", "/root/.chef/ohai/plugins"], :disabled_plugins=>[], :plugin=>{:shard_seed=>{}}, :hints_path=>["/etc/chef/ohai/hints"], :node_name=>"epplkraw0381t1.budapest.epam.com", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2017-04-05T17:47:46+01:00] DEBUG: Searching for Ohai plugins in /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins
[2017-04-05T17:47:46+01:00] DEBUG: Searching for Ohai plugins in /root/.chef/ohai/plugins
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/lua.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ssh_host_key.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/python.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/joyent.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/os.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sysconf.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/go.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/eucalyptus.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network_route.rb
[2017-04-05T17:47:46+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/vmware.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/os.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/drivers.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/fips.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/chef.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/php.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/passwd.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/timezone.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/root_group.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ruby.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/keys.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/scala.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/dmi.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/zpools.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai_time.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/groovy.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualbox.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/nodejs.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openstack.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rackspace.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/haskell.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/uptime.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/os.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/softlayer.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ec2.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ps.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud_v2.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/packages.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/c.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/azure.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/mono.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/perl.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shells.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/kernel.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/uptime.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/os.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/kernel.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/elixir.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ip_scopes.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/gce.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/erlang.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/digital_ocean.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/machineid.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/lsb.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/block_device.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/fips.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/hostnamectl.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/mdadm.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/sessions.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem2.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linode.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network_listeners.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/init_package.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/network.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/system_profiler.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/memory.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/cpu.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/virtualization.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/platform.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem2.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/hardware.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/command.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rust.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/java.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/languages.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/hostname.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/powershell.rb
[2017-04-05T17:47:46+01:00] DEBUG: Loading plugin at /root/.chef/ohai/plugins/nginx.rb
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: default route table is 'main'
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran 'ip addr' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran 'ip -d -s link' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran 'ip -f inet neigh show' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet route show table main' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing 10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing 169.254.0.0/16 dev eth0  scope link  metric 1002
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing default via 10.0.2.2 dev eth0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: default_interface set to eth0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: default_gateway set to 10.0.2.2
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran 'ip -f inet6 neigh show' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet6 route show table main' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable ::/96 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable ::ffff:0.0.0.0/96 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:a00::/24 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:7f00::/24 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:a9fe::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:ac10::/28 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:c0a8::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:e000::/19 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing unreachable 3ffe:ffff::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing fe80::/64 dev eth0  proto kernel  metric 256  mtu 1500
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Unable to determine 'default_inet6_interface' as no default routes were found for that interface family
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth0' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: Settings for eth0:
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported ports: [ TP ]
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        1000baseT/Full 
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported pause frame use: No
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        1000baseT/Full 
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised pause frame use: No
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Speed: 1000Mb/s
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Duplex: Full
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Port: Twisted Pair
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	PHYAD: 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Transceiver: internal
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Auto-negotiation: on
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	MDI-X: off (auto)
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supports Wake-on: umbg
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Wake-on: d
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 			       drv probe link
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Link detected: yes
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth0' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: Parsing ethtool output: Ring parameters for eth0:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: [inet] Using default interface eth0 and default gateway 10.0.2.2 to set the default ip to 10.0.2.15
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Network: [inet6] no default interface, picking the first ipaddress
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Lua: ran 'lua -v' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Python: ran 'python -c "import sys; print (sys.version)"' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Go: ran 'go version' and failed #<Errno::ENOENT: No such file or directory - go>
[2017-04-05T17:47:46+01:00] DEBUG: Go plugin: Could not shell_out "go version". Skipping plugin
[2017-04-05T17:47:46+01:00] DEBUG: Plugin PHP: ran 'php -v' and failed #<Errno::ENOENT: No such file or directory - php>
[2017-04-05T17:47:46+01:00] DEBUG: Php plugin: Could not shell_out "php -v". Skipping plugin
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %Q(platform=#{RUBY_PLATFORM},version=#{RUBY_VERSION},release_date=#{RUBY_RELEASE_DATE},target=#{RbConfig::CONFIG['target']},target_cpu=#{RbConfig::CONFIG['target_cpu']},target_vendor=#{RbConfig::CONFIG['target_vendor']},target_os=#{RbConfig::CONFIG['target_os']},host=#{RbConfig::CONFIG['host']},host_cpu=#{RbConfig::CONFIG['host_cpu']},host_os=#{RbConfig::CONFIG['host_os']},host_vendor=#{RbConfig::CONFIG['host_vendor']},bin_dir=#{RbConfig::CONFIG['bindir']},ruby_bin=#{::File.join(RbConfig::CONFIG['bindir'], RbConfig::CONFIG['ruby_install_name'])},)"' and returned 0
[2017-04-05T17:47:46+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; require 'rubygems'; puts ::Gem.default_exec_format % 'gem'"' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %x{/opt/chefdk/embedded/bin/ruby /opt/chefdk/embedded/bin/gem env gemdir}.chomp!"' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Scala: ran 'scala -version' and failed #<Errno::ENOENT: No such file or directory - scala>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Scala: Could not shell_out "scala -version". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Scala: ran 'sbt --version' and failed #<Errno::ENOENT: No such file or directory - sbt>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Scala: Could not shell_out "sbt --version". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Groovy: ran 'groovy -v' and failed #<Errno::ENOENT: No such file or directory - groovy>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Groovy: Could not shell_out "groovy -v". Skipping plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Nodejs: ran 'node -v' and failed #<Errno::ENOENT: No such file or directory - node>
[2017-04-05T17:47:47+01:00] DEBUG: Nodejs plugin: Could not shell_out "node -v". Skipping plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: ran 'ghc --version' and failed #<Errno::ENOENT: No such file or directory - ghc>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: Could not shell_out "ghc --version". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: ran 'ghci --version' and failed #<Errno::ENOENT: No such file or directory - ghci>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: Could not shell_out "ghci --version". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: ran 'cabal --version' and failed #<Errno::ENOENT: No such file or directory - cabal>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: Could not shell_out "cabal --version". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: ran 'stack --version' and failed #<Errno::ENOENT: No such file or directory - stack>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Haskell: Could not shell_out "stack --version". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin C: ran 'gcc -v' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin C: ran '/lib/libc.so.6' and failed #<Errno::ENOENT: No such file or directory - /lib/libc.so.6>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin C: '/lib/libc.so.6' binary could not be found. Skipping data.
[2017-04-05T17:47:47+01:00] DEBUG: Plugin C: ran '/lib64/libc.so.6' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin C: ran 'cc -V -flags' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Mono: ran 'mono -V' and failed #<Errno::ENOENT: No such file or directory - mono>
[2017-04-05T17:47:47+01:00] DEBUG: Mono plugin: Could not shell_out "mono -V". Skipping plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Perl: ran 'perl -V:version -V:archname' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Elixir: ran 'elixir -v' and failed #<Errno::ENOENT: No such file or directory - elixir>
[2017-04-05T17:47:47+01:00] DEBUG: Elixir plugin: Could not shell_out "elixir -v". Skipping plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Erlang: ran 'erl -eval '{ok, Ver} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), Vsn = binary:bin_to_list(Ver, {0, byte_size(Ver) - 1}), io:format("~s,~s,~s", [Vsn, erlang:system_info(version), erlang:system_info(nif_version)]), halt().' -noshell' and returned 127
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Erlang: ran 'erl +V' and failed #<Errno::ENOENT: No such file or directory - erl>
[2017-04-05T17:47:47+01:00] DEBUG: Erlang plugin: Could not shell_out "erl +V". Skipping data
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Rust: ran 'rustc --version' and failed #<Errno::ENOENT: No such file or directory - rustc>
[2017-04-05T17:47:47+01:00] DEBUG: Rust plugin: Could not shell_out "rustc --version". Skipping plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Java: ran 'java -mx64m -version' and failed #<Errno::ENOENT: No such file or directory - java>
[2017-04-05T17:47:47+01:00] DEBUG: Java plugin: Could not shell_out "java -mx64m -version". Skipping plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Powershell: No data to collect. Skipping...
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'uname -s' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'uname -r' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'uname -v' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'uname -m' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'uname -p' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'uname -o' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Kernel: ran 'env lsmod' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Skipping LSB, cannot find /etc/lsb-release or /usr/bin/lsb_release
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Virtualization: /proc/modules contains vboxguest. Detecting as vbox guest
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Virtualization: did not find nova
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Virtualization: did not find lxc-version
[2017-04-05T17:47:47+01:00] DEBUG: Plugin DMI: ran 'dmidecode' and failed #<Errno::ENOENT: No such file or directory - dmidecode>
[2017-04-05T17:47:47+01:00] DEBUG: Plugin DMI threw #<Ohai::Exceptions::Exec: No such file or directory - dmidecode>
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/mixin/command.rb:43:in `rescue in shell_out'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/mixin/command.rb:37:in `shell_out'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb:47:in `block (2 levels) in <main>'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:90:in `instance_eval'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:90:in `run_plugin'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:100:in `run'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:184:in `safe_run'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:43:in `run_plugin'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:98:in `block in run_plugins'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `run_plugins'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:75:in `all_plugins'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:44:in `block (2 levels) in <class:Ohai>'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/why_run.rb:52:in `add_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:176:in `converge_by'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:37:in `block in <class:Ohai>'
[2017-04-05T17:47:47+01:00] DEBUG: (eval):2:in `block in action_reload'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `instance_eval'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `compile_and_converge_action'
[2017-04-05T17:47:47+01:00] DEBUG: (eval):2:in `action_reload'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:69:in `run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:77:in `block in run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:75:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:75:in `run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block (2 levels) in converge'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block in converge'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `execute_each_resource'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:96:in `converge'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:362:in `compile_and_converge_action'
[2017-04-05T17:47:47+01:00] DEBUG: (eval):2:in `action_create'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:47+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:131:in `block in after_created'
[2017-04-05T17:47:47+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `after_created'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_builder.rb:92:in `build'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:291:in `build_resource'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:248:in `declare_resource'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/resources.rb:40:in `ohai_plugin'
[2017-04-05T17:47:47+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/ohai_plugin.rb:29:in `from_file'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/package.rb:21:in `from_file'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/default.rb:22:in `from_file'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:141:in `block in compile_recipes'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `each'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `compile_recipes'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:75:in `compile'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:187:in `load'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/policy_builder/expand_node_object.rb:97:in `setup_run_context'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `setup_run_context'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:511:in `setup_run_context'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:281:in `run'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:295:in `block in fork_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:248:in `block in run_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:236:in `run_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `loop'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:434:in `run_application'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:59:in `run'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/solo.rb:226:in `run'
[2017-04-05T17:47:47+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/bin/chef-solo:25:in `<top (required)>'
[2017-04-05T17:47:47+01:00] DEBUG: /usr/bin/chef-solo:57:in `load'
[2017-04-05T17:47:47+01:00] DEBUG: /usr/bin/chef-solo:57:in `<main>'
[2017-04-05T17:47:47+01:00] DEBUG: Could not load sigar gem. Skipping NetworkListeners plugin
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Sysconf: found getconf at /usr/bin/getconf
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Sysconf: ran '/usr/bin/getconf -a' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint eucalyptus.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Eucalyptus: has_euca_mac? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Eucalyptus: looks_like_euca? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Filesystem: ran 'df -P' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Filesystem: ran 'df -iP' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Filesystem: ran 'mount' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,FSTYPE' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,UUID' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,LABEL' and returned 0
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Drivers: No data to collect. Skipping...
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint ec2.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin EC2: has_ec2_xen_uuid? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin EC2: has_ec2_dmi? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin EC2: has_amazon_org? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin EC2: looks_like_ec2? == false
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint gce.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Mixin GCE: can_metadata_connect? failed setting up socket: getaddrinfo: Name or service not known
[2017-04-05T17:47:47+01:00] DEBUG: Plugin GCE: looks_like_gce? == false
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint rackspace.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Rackspace: ran 'xenstore-read vm-data/provider_data/provider' and failed #<Errno::ENOENT: No such file or directory - xenstore-read>
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint linode.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Linode: looks_like_linode? == false
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint openstack.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Openstack: openstack hint not present
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Openstack: has_openstack_dmi? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Openstack: Node does not appear to be an Openstack node
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint azure.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Azure: No hints present for azure and doesn't appear to be azure.
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint digital_ocean.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Digitalocean: No hints present for and doesn't look like digitalocean
[2017-04-05T17:47:47+01:00] DEBUG: Did not find hint softlayer.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Softlayer: looks_like_softlayer? == false
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Zpools: No data to collect. Skipping...
[2017-04-05T17:47:47+01:00] DEBUG: Plugin Virtualbox: ran 'VBoxControl guestproperty enumerate' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Packages: ran 'rpm -qa --qf '%{NAME}\t%|EPOCH?{%{EPOCH}}:{0}|\t%{VERSION}\t%{RELEASE}\t%{INSTALLTIME}\t%{ARCH}\n'' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Hostname: ran 'hostname -s' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Hostname: ran 'hostname' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Hostname: ran 'hostname --fqdn' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin ShardSeed threw #<NoMethodError: undefined method `[]' for nil:NilClass>
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:27:in `block in get_dmi_property'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:26:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:26:in `get_dmi_property'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:74:in `block (3 levels) in <main>'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:53:in `block in create_seed'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:42:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:42:in `create_seed'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:71:in `block (2 levels) in <main>'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:88:in `instance_eval'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:88:in `run_plugin'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:100:in `run'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:184:in `safe_run'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:43:in `run_plugin'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:98:in `block in run_plugins'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `run_plugins'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:75:in `all_plugins'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:44:in `block (2 levels) in <class:Ohai>'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/why_run.rb:52:in `add_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:176:in `converge_by'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:37:in `block in <class:Ohai>'
[2017-04-05T17:47:48+01:00] DEBUG: (eval):2:in `block in action_reload'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `instance_eval'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `compile_and_converge_action'
[2017-04-05T17:47:48+01:00] DEBUG: (eval):2:in `action_reload'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:69:in `run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:77:in `block in run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:75:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:75:in `run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block (2 levels) in converge'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block in converge'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `execute_each_resource'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:96:in `converge'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:362:in `compile_and_converge_action'
[2017-04-05T17:47:48+01:00] DEBUG: (eval):2:in `action_create'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:48+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:131:in `block in after_created'
[2017-04-05T17:47:48+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `after_created'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_builder.rb:92:in `build'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:291:in `build_resource'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:248:in `declare_resource'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/resources.rb:40:in `ohai_plugin'
[2017-04-05T17:47:48+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/ohai_plugin.rb:29:in `from_file'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/package.rb:21:in `from_file'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/default.rb:22:in `from_file'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:141:in `block in compile_recipes'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `each'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `compile_recipes'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:75:in `compile'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:187:in `load'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/policy_builder/expand_node_object.rb:97:in `setup_run_context'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `setup_run_context'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:511:in `setup_run_context'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:281:in `run'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:295:in `block in fork_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:248:in `block in run_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:236:in `run_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `loop'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:434:in `run_application'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:59:in `run'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/solo.rb:226:in `run'
[2017-04-05T17:47:48+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/bin/chef-solo:25:in `<top (required)>'
[2017-04-05T17:47:48+01:00] DEBUG: /usr/bin/chef-solo:57:in `load'
[2017-04-05T17:47:48+01:00] DEBUG: /usr/bin/chef-solo:57:in `<main>'
[2017-04-05T17:47:48+01:00] DEBUG: Plugin IpScopes: cannot load gem, plugin disabled: cannot load such file -- ipaddr_extensions
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Hostnamectl: did not find hostnamectl
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Sessions: did not find loginctl
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Sessions: Could not find loginctl. Skipping plugin.
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Filesystem2: ran 'df -P' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Filesystem2: ran 'df -iP' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Filesystem2: ran 'mount' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Filesystem2: ran 'lsblk -n -P -o NAME,UUID,LABEL,FSTYPE' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin SystemProfile: No data to collect. Skipping...
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Hardware: No data to collect. Skipping...
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Nginx: ran '/usr/sbin/nginx -V' and failed #<Errno::ENOENT: No such file or directory - /usr/sbin/nginx>
[2017-04-05T17:47:48+01:00] DEBUG: Nginx plugin: Could not shell_out "/usr/sbin/nginx -V"
[2017-04-05T17:47:48+01:00] INFO: ohai[nginx] reloaded
[2017-04-05T17:47:48+01:00] INFO: Processing ohai[nginx] action reload (/root/.chef/cookbooks/ohai/resources/plugin.rb line 110)
[2017-04-05T17:47:48+01:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]
[2017-04-05T17:47:48+01:00] DEBUG: Provider for action reload on resource ohai[nginx] is Chef::Provider::Ohai
[2017-04-05T17:47:48+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins", "/root/.chef/ohai/plugins"], :disabled_plugins=>[], :plugin=>{:shard_seed=>{}}, :hints_path=>["/etc/chef/ohai/hints"], :node_name=>"epplkraw0381t1.budapest.epam.com", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2017-04-05T17:47:48+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins", "/root/.chef/ohai/plugins"], :disabled_plugins=>[], :plugin=>{:shard_seed=>{}}, :hints_path=>["/etc/chef/ohai/hints"], :node_name=>"epplkraw0381t1.budapest.epam.com", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2017-04-05T17:47:48+01:00] DEBUG: Searching for Ohai plugins in /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins
[2017-04-05T17:47:48+01:00] DEBUG: Searching for Ohai plugins in /root/.chef/ohai/plugins
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/lua.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ssh_host_key.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/python.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/joyent.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/os.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sysconf.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/go.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/eucalyptus.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network_route.rb
[2017-04-05T17:47:48+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/vmware.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/os.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/drivers.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/fips.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/chef.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/php.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/passwd.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/timezone.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/root_group.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ruby.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/keys.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/scala.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/dmi.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/zpools.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai_time.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/groovy.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualbox.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/nodejs.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openstack.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rackspace.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/haskell.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/uptime.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/os.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/softlayer.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ec2.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ps.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud_v2.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/packages.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/c.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/azure.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/mono.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/perl.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shells.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/kernel.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/uptime.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/os.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/kernel.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/elixir.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ip_scopes.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/gce.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/erlang.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/digital_ocean.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/machineid.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/lsb.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/block_device.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/fips.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/hostnamectl.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/mdadm.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/sessions.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem2.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linode.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network_listeners.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/init_package.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/network.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/system_profiler.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/memory.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/cpu.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/virtualization.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/platform.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem2.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/hardware.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/command.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rust.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/java.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/languages.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/hostname.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/powershell.rb
[2017-04-05T17:47:48+01:00] DEBUG: Loading plugin at /root/.chef/ohai/plugins/nginx.rb
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Network: default route table is 'main'
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Network: ran 'ip addr' and returned 0
[2017-04-05T17:47:48+01:00] DEBUG: Plugin Network: ran 'ip -d -s link' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: ran 'ip -f inet neigh show' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet route show table main' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing 10.0.2.0/24 dev eth0  proto kernel  scope link  src 10.0.2.15
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing 169.254.0.0/16 dev eth0  scope link  metric 1002
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing default via 10.0.2.2 dev eth0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: default_interface set to eth0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: default_gateway set to 10.0.2.2
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: ran 'ip -f inet6 neigh show' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: ran 'ip -o -f inet6 route show table main' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable ::/96 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable ::ffff:0.0.0.0/96 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:a00::/24 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:7f00::/24 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:a9fe::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:ac10::/28 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:c0a8::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 2002:e000::/19 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing unreachable 3ffe:ffff::/32 dev lo  metric 1024  error -113 mtu 65536
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing fe80::/64 dev eth0  proto kernel  metric 256  mtu 1500
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Unable to determine 'default_inet6_interface' as no default routes were found for that interface family
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool eth0' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: Settings for eth0:
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported ports: [ TP ]
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported link modes:   10baseT/Half 10baseT/Full 
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        1000baseT/Full 
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supported pause frame use: No
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supports auto-negotiation: Yes
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised link modes:  10baseT/Half 10baseT/Full 
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        100baseT/Half 100baseT/Full 
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	                        1000baseT/Full 
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised pause frame use: No
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Advertised auto-negotiation: Yes
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Speed: 1000Mb/s
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Duplex: Full
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Port: Twisted Pair
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	PHYAD: 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Transceiver: internal
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Auto-negotiation: on
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	MDI-X: off (auto)
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Supports Wake-on: umbg
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Wake-on: d
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Current message level: 0x00000007 (7)
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 			       drv probe link
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: 	Link detected: yes
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: ran '/sbin/ethtool -g eth0' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: Parsing ethtool output: Ring parameters for eth0:
Pre-set maximums:
RX:		4096
RX Mini:	0
RX Jumbo:	0
TX:		4096
Current hardware settings:
RX:		256
RX Mini:	0
RX Jumbo:	0
TX:		256


[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: [inet] Using default interface eth0 and default gateway 10.0.2.2 to set the default ip to 10.0.2.15
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Network: [inet6] no default interface, picking the first ipaddress
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Lua: ran 'lua -v' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Python: ran 'python -c "import sys; print (sys.version)"' and returned 0
[2017-04-05T17:47:49+01:00] DEBUG: Plugin Go: ran 'go version' and failed #<Errno::ENOENT: No such file or directory - go>
[2017-04-05T17:47:49+01:00] DEBUG: Go plugin: Could not shell_out "go version". Skipping plugin
[2017-04-05T17:47:49+01:00] DEBUG: Plugin PHP: ran 'php -v' and failed #<Errno::ENOENT: No such file or directory - php>
[2017-04-05T17:47:49+01:00] DEBUG: Php plugin: Could not shell_out "php -v". Skipping plugin
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %Q(platform=#{RUBY_PLATFORM},version=#{RUBY_VERSION},release_date=#{RUBY_RELEASE_DATE},target=#{RbConfig::CONFIG['target']},target_cpu=#{RbConfig::CONFIG['target_cpu']},target_vendor=#{RbConfig::CONFIG['target_vendor']},target_os=#{RbConfig::CONFIG['target_os']},host=#{RbConfig::CONFIG['host']},host_cpu=#{RbConfig::CONFIG['host_cpu']},host_os=#{RbConfig::CONFIG['host_os']},host_vendor=#{RbConfig::CONFIG['host_vendor']},bin_dir=#{RbConfig::CONFIG['bindir']},ruby_bin=#{::File.join(RbConfig::CONFIG['bindir'], RbConfig::CONFIG['ruby_install_name'])},)"' and returned 0
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; require 'rubygems'; puts ::Gem.default_exec_format % 'gem'"' and returned 0
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Ruby: ran 'ruby -e "require 'rbconfig'; puts %x{/opt/chefdk/embedded/bin/ruby /opt/chefdk/embedded/bin/gem env gemdir}.chomp!"' and returned 0
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Scala: ran 'scala -version' and failed #<Errno::ENOENT: No such file or directory - scala>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Scala: Could not shell_out "scala -version". Skipping data
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Scala: ran 'sbt --version' and failed #<Errno::ENOENT: No such file or directory - sbt>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Scala: Could not shell_out "sbt --version". Skipping data
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Groovy: ran 'groovy -v' and failed #<Errno::ENOENT: No such file or directory - groovy>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Groovy: Could not shell_out "groovy -v". Skipping plugin
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Nodejs: ran 'node -v' and failed #<Errno::ENOENT: No such file or directory - node>
[2017-04-05T17:47:50+01:00] DEBUG: Nodejs plugin: Could not shell_out "node -v". Skipping plugin
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: ran 'ghc --version' and failed #<Errno::ENOENT: No such file or directory - ghc>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: Could not shell_out "ghc --version". Skipping data
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: ran 'ghci --version' and failed #<Errno::ENOENT: No such file or directory - ghci>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: Could not shell_out "ghci --version". Skipping data
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: ran 'cabal --version' and failed #<Errno::ENOENT: No such file or directory - cabal>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: Could not shell_out "cabal --version". Skipping data
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: ran 'stack --version' and failed #<Errno::ENOENT: No such file or directory - stack>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin Haskell: Could not shell_out "stack --version". Skipping data
[2017-04-05T17:47:50+01:00] DEBUG: Plugin C: ran 'gcc -v' and returned 0
[2017-04-05T17:47:50+01:00] DEBUG: Plugin C: ran '/lib/libc.so.6' and failed #<Errno::ENOENT: No such file or directory - /lib/libc.so.6>
[2017-04-05T17:47:50+01:00] DEBUG: Plugin C: '/lib/libc.so.6' binary could not be found. Skipping data.
[2017-04-05T17:47:51+01:00] DEBUG: Plugin C: ran '/lib64/libc.so.6' and returned 0
[2017-04-05T17:47:51+01:00] DEBUG: Plugin C: ran 'cc -V -flags' and returned 0
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Mono: ran 'mono -V' and failed #<Errno::ENOENT: No such file or directory - mono>
[2017-04-05T17:47:51+01:00] DEBUG: Mono plugin: Could not shell_out "mono -V". Skipping plugin
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Perl: ran 'perl -V:version -V:archname' and returned 0
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Elixir: ran 'elixir -v' and failed #<Errno::ENOENT: No such file or directory - elixir>
[2017-04-05T17:47:51+01:00] DEBUG: Elixir plugin: Could not shell_out "elixir -v". Skipping plugin
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Erlang: ran 'erl -eval '{ok, Ver} = file:read_file(filename:join([code:root_dir(), "releases", erlang:system_info(otp_release), "OTP_VERSION"])), Vsn = binary:bin_to_list(Ver, {0, byte_size(Ver) - 1}), io:format("~s,~s,~s", [Vsn, erlang:system_info(version), erlang:system_info(nif_version)]), halt().' -noshell' and returned 127
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Erlang: ran 'erl +V' and failed #<Errno::ENOENT: No such file or directory - erl>
[2017-04-05T17:47:51+01:00] DEBUG: Erlang plugin: Could not shell_out "erl +V". Skipping data
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Rust: ran 'rustc --version' and failed #<Errno::ENOENT: No such file or directory - rustc>
[2017-04-05T17:47:51+01:00] DEBUG: Rust plugin: Could not shell_out "rustc --version". Skipping plugin
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Java: ran 'java -mx64m -version' and failed #<Errno::ENOENT: No such file or directory - java>
[2017-04-05T17:47:51+01:00] DEBUG: Java plugin: Could not shell_out "java -mx64m -version". Skipping plugin
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Powershell: No data to collect. Skipping...
[2017-04-05T17:47:51+01:00] DEBUG: Plugin Kernel: ran 'uname -s' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Kernel: ran 'uname -r' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Kernel: ran 'uname -v' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Kernel: ran 'uname -m' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Kernel: ran 'uname -p' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Kernel: ran 'uname -o' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Kernel: ran 'env lsmod' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Skipping LSB, cannot find /etc/lsb-release or /usr/bin/lsb_release
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Virtualization: /proc/modules contains vboxguest. Detecting as vbox guest
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Virtualization: did not find nova
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Virtualization: did not find lxc-version
[2017-04-05T17:47:52+01:00] DEBUG: Plugin DMI: ran 'dmidecode' and failed #<Errno::ENOENT: No such file or directory - dmidecode>
[2017-04-05T17:47:52+01:00] DEBUG: Plugin DMI threw #<Ohai::Exceptions::Exec: No such file or directory - dmidecode>
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/mixin/command.rb:43:in `rescue in shell_out'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/mixin/command.rb:37:in `shell_out'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb:47:in `block (2 levels) in <main>'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:90:in `instance_eval'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:90:in `run_plugin'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:100:in `run'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:184:in `safe_run'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:43:in `run_plugin'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:98:in `block in run_plugins'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `each'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `run_plugins'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:75:in `all_plugins'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:44:in `block (2 levels) in <class:Ohai>'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/why_run.rb:52:in `add_action'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:176:in `converge_by'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:37:in `block in <class:Ohai>'
[2017-04-05T17:47:52+01:00] DEBUG: (eval):2:in `block in action_reload'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `instance_eval'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `compile_and_converge_action'
[2017-04-05T17:47:52+01:00] DEBUG: (eval):2:in `action_reload'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:69:in `run_action'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block (2 levels) in converge'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `each'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block in converge'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `execute_each_resource'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:96:in `converge'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:362:in `compile_and_converge_action'
[2017-04-05T17:47:52+01:00] DEBUG: (eval):2:in `action_create'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:52+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:131:in `block in after_created'
[2017-04-05T17:47:52+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `each'
[2017-04-05T17:47:52+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `after_created'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_builder.rb:92:in `build'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:291:in `build_resource'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:248:in `declare_resource'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/resources.rb:40:in `ohai_plugin'
[2017-04-05T17:47:52+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/ohai_plugin.rb:29:in `from_file'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/package.rb:21:in `from_file'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/default.rb:22:in `from_file'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:141:in `block in compile_recipes'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `each'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `compile_recipes'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:75:in `compile'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:187:in `load'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/policy_builder/expand_node_object.rb:97:in `setup_run_context'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `setup_run_context'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:511:in `setup_run_context'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:281:in `run'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:295:in `block in fork_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:248:in `block in run_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:236:in `run_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `loop'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:434:in `run_application'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:59:in `run'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/solo.rb:226:in `run'
[2017-04-05T17:47:52+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/bin/chef-solo:25:in `<top (required)>'
[2017-04-05T17:47:52+01:00] DEBUG: /usr/bin/chef-solo:57:in `load'
[2017-04-05T17:47:52+01:00] DEBUG: /usr/bin/chef-solo:57:in `<main>'
[2017-04-05T17:47:52+01:00] DEBUG: Could not load sigar gem. Skipping NetworkListeners plugin
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Sysconf: found getconf at /usr/bin/getconf
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Sysconf: ran '/usr/bin/getconf -a' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint eucalyptus.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Eucalyptus: has_euca_mac? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Eucalyptus: looks_like_euca? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Filesystem: ran 'df -P' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Filesystem: ran 'df -iP' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Filesystem: ran 'mount' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,FSTYPE' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,UUID' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Filesystem: ran 'lsblk -P -n -o NAME,LABEL' and returned 0
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Drivers: No data to collect. Skipping...
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint ec2.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin EC2: has_ec2_xen_uuid? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin EC2: has_ec2_dmi? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin EC2: has_amazon_org? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin EC2: looks_like_ec2? == false
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint gce.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Mixin GCE: can_metadata_connect? failed setting up socket: getaddrinfo: Name or service not known
[2017-04-05T17:47:52+01:00] DEBUG: Plugin GCE: looks_like_gce? == false
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint rackspace.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Rackspace: ran 'xenstore-read vm-data/provider_data/provider' and failed #<Errno::ENOENT: No such file or directory - xenstore-read>
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint linode.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Linode: looks_like_linode? == false
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint openstack.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Openstack: openstack hint not present
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Openstack: has_openstack_dmi? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Openstack: Node does not appear to be an Openstack node
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint azure.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Azure: No hints present for azure and doesn't appear to be azure.
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint digital_ocean.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Digitalocean: No hints present for and doesn't look like digitalocean
[2017-04-05T17:47:52+01:00] DEBUG: Did not find hint softlayer.json in the hint path(s): /etc/chef/ohai/hints 
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Softlayer: looks_like_softlayer? == false
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Zpools: No data to collect. Skipping...
[2017-04-05T17:47:52+01:00] DEBUG: Plugin Virtualbox: ran 'VBoxControl guestproperty enumerate' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Packages: ran 'rpm -qa --qf '%{NAME}\t%|EPOCH?{%{EPOCH}}:{0}|\t%{VERSION}\t%{RELEASE}\t%{INSTALLTIME}\t%{ARCH}\n'' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Hostname: ran 'hostname -s' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Hostname: ran 'hostname' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Hostname: ran 'hostname --fqdn' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin ShardSeed threw #<NoMethodError: undefined method `[]' for nil:NilClass>
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:27:in `block in get_dmi_property'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:26:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:26:in `get_dmi_property'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:74:in `block (3 levels) in <main>'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:53:in `block in create_seed'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:42:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:42:in `create_seed'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb:71:in `block (2 levels) in <main>'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:88:in `instance_eval'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin/versionvii.rb:88:in `run_plugin'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:100:in `run'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/dsl/plugin.rb:184:in `safe_run'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:84:in `run_v7_plugin'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/runner.rb:43:in `run_plugin'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:98:in `block in run_plugins'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:97:in `run_plugins'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/system.rb:75:in `all_plugins'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:44:in `block (2 levels) in <class:Ohai>'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/why_run.rb:52:in `add_action'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:176:in `converge_by'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/ohai.rb:37:in `block in <class:Ohai>'
[2017-04-05T17:47:53+01:00] DEBUG: (eval):2:in `block in action_reload'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `instance_eval'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:361:in `compile_and_converge_action'
[2017-04-05T17:47:53+01:00] DEBUG: (eval):2:in `action_reload'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:69:in `run_action'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block (2 levels) in converge'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:97:in `block in converge'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:94:in `block in execute_each_resource'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:114:in `call_iterator_block'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:85:in `step'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:103:in `iterate'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/stepable_iterator.rb:55:in `each_with_index'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_collection/resource_list.rb:92:in `execute_each_resource'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `execute_each_resource'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/runner.rb:96:in `converge'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:362:in `compile_and_converge_action'
[2017-04-05T17:47:53+01:00] DEBUG: (eval):2:in `action_create'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider.rb:145:in `run_action'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource.rb:622:in `run_action'
[2017-04-05T17:47:53+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:131:in `block in after_created'
[2017-04-05T17:47:53+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /root/.chef/cookbooks/ohai/resources/plugin.rb:130:in `after_created'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/resource_builder.rb:92:in `build'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:291:in `build_resource'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/declare_resource.rb:248:in `declare_resource'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/resources.rb:40:in `ohai_plugin'
[2017-04-05T17:47:53+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/ohai_plugin.rb:29:in `from_file'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/package.rb:21:in `from_file'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:294:in `block in include_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:293:in `include_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/dsl/include_recipe.rb:26:in `include_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /root/.chef/cookbooks/chef_nginx/recipes/default.rb:22:in `from_file'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `instance_eval'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/mixin/from_file.rb:30:in `from_file'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/cookbook_version.rb:233:in `load_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:338:in `load_recipe'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:141:in `block in compile_recipes'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `each'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:138:in `compile_recipes'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context/cookbook_compiler.rb:75:in `compile'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/run_context.rb:187:in `load'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/policy_builder/expand_node_object.rb:97:in `setup_run_context'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/2.3.0/forwardable.rb:189:in `setup_run_context'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:511:in `setup_run_context'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/client.rb:281:in `run'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:295:in `block in fork_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:283:in `fork_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:248:in `block in run_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/local_mode.rb:44:in `with_server_connectivity'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:236:in `run_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:464:in `sleep_then_run_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:451:in `block in interval_run_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `loop'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:450:in `interval_run_chef_client'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/client.rb:434:in `run_application'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application.rb:59:in `run'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/application/solo.rb:226:in `run'
[2017-04-05T17:47:53+01:00] DEBUG: /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/bin/chef-solo:25:in `<top (required)>'
[2017-04-05T17:47:53+01:00] DEBUG: /usr/bin/chef-solo:57:in `load'
[2017-04-05T17:47:53+01:00] DEBUG: /usr/bin/chef-solo:57:in `<main>'
[2017-04-05T17:47:53+01:00] DEBUG: Plugin IpScopes: cannot load gem, plugin disabled: cannot load such file -- ipaddr_extensions
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Hostnamectl: did not find hostnamectl
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Sessions: did not find loginctl
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Sessions: Could not find loginctl. Skipping plugin.
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Filesystem2: ran 'df -P' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Filesystem2: ran 'df -iP' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Filesystem2: ran 'mount' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Filesystem2: ran 'lsblk -n -P -o NAME,UUID,LABEL,FSTYPE' and returned 0
[2017-04-05T17:47:53+01:00] DEBUG: Plugin SystemProfile: No data to collect. Skipping...
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Hardware: No data to collect. Skipping...
[2017-04-05T17:47:53+01:00] DEBUG: Plugin Nginx: ran '/usr/sbin/nginx -V' and failed #<Errno::ENOENT: No such file or directory - /usr/sbin/nginx>
[2017-04-05T17:47:53+01:00] DEBUG: Nginx plugin: Could not shell_out "/usr/sbin/nginx -V"
[2017-04-05T17:47:53+01:00] INFO: ohai[nginx] reloaded
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe chef_nginx::repo via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe repo in cookbook chef_nginx
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic yum_repository resource enabled on node include: [Chef::Resource::YumRepository]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for yum_repository is Chef::Resource::YumRepository
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic package resource enabled on node include: [Chef::Resource::YumPackage, Chef::Resource::Package]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for package is Chef::Resource::YumPackage
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic service resource enabled on node include: [Chef::Resource::Service]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for service is Chef::Resource::Service
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe chef_nginx::commons via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe commons in cookbook chef_nginx
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe chef_nginx::commons_dir via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe commons_dir in cookbook chef_nginx
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe chef_nginx::commons_script via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe commons_script in cookbook chef_nginx
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe chef_nginx::commons_conf via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe commons_conf in cookbook chef_nginx
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic nginx_site resource enabled on node include: [Custom resource chef_nginx_site from cookbook chef_nginx]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for nginx_site is Custom resource chef_nginx_site from cookbook chef_nginx
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe iptables::default via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe default in cookbook iptables
[2017-04-05T17:47:53+01:00] DEBUG: Loading recipe iptables::_package via include_recipe
[2017-04-05T17:47:53+01:00] DEBUG: Found recipe _package in cookbook iptables
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic package resource enabled on node include: [Chef::Resource::YumPackage, Chef::Resource::Package]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for package is Chef::Resource::YumPackage
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic file resource enabled on node include: [Chef::Resource::File]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for file is Chef::Resource::File
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic service resource enabled on node include: [Chef::Resource::Service]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for service is Chef::Resource::Service
[2017-04-05T17:47:53+01:00] DEBUG: Converging node epplkraw0381t1.budapest.epam.com
[2017-04-05T17:47:53+01:00] INFO: Processing ohai[reload_nginx] action nothing (chef_nginx::ohai_plugin line 24)
[2017-04-05T17:47:53+01:00] DEBUG: Skipping ohai[reload_nginx] due to action :nothing
[2017-04-05T17:47:53+01:00] INFO: Processing ohai_plugin[nginx] action create (chef_nginx::ohai_plugin line 29)
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic directory resource enabled on node include: [Chef::Resource::Directory]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for directory is Chef::Resource::Directory
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic ohai resource enabled on node include: [Chef::Resource::Ohai]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for ohai is Chef::Resource::Ohai
[2017-04-05T17:47:53+01:00] INFO: Processing directory[/root/.chef/ohai/plugins] action create (/root/.chef/cookbooks/ohai/resources/plugin.rb line 80)
[2017-04-05T17:47:53+01:00] DEBUG: Skipping directory[/root/.chef/ohai/plugins] due to not_if ruby block
[2017-04-05T17:47:53+01:00] INFO: Processing template[/root/.chef/ohai/plugins/nginx.rb] action create (/root/.chef/cookbooks/ohai/resources/plugin.rb line 93)
[2017-04-05T17:47:53+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Provider for action create on resource template[/root/.chef/ohai/plugins/nginx.rb] is Chef::Provider::Template
[2017-04-05T17:47:53+01:00] DEBUG: template[/root/.chef/ohai/plugins/nginx.rb] checksumming file at /root/.chef/ohai/plugins/nginx.rb.
[2017-04-05T17:47:53+01:00] DEBUG: Not fetching cookbooks/chef_nginx/templates/default/plugins/ohai-nginx.rb.erb, as the cache is up to date.
[2017-04-05T17:47:53+01:00] DEBUG: Current checksum: 0d7028b99bea2508b52ae30f3f72ab4b; manifest checksum: 0d7028b99bea2508b52ae30f3f72ab4b)
[2017-04-05T17:47:53+01:00] DEBUG: calculating checksum of /root/.chef/ohai/plugins/.chef-nginx20170405-7856-1s9h45t.rb to compare with 769636fc9e72ec104a226cb28b19421bd099168f005688be86910b49c59ee558
[2017-04-05T17:47:53+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:47:53+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:47:53+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:47:53+01:00] INFO: Processing ohai[nginx] action nothing (/root/.chef/cookbooks/ohai/resources/plugin.rb line 110)
[2017-04-05T17:47:53+01:00] DEBUG: Skipping ohai[nginx] due to action :nothing
[2017-04-05T17:47:53+01:00] INFO: Processing yum_repository[nginx] action create (chef_nginx::repo line 24)
[2017-04-05T17:47:53+01:00] DEBUG: Providers for generic yum_repository resource enabled on node include: [Chef::Provider::YumRepository, Chef::Provider::Noop]
[2017-04-05T17:47:53+01:00] DEBUG: Provider for action create on resource yum_repository[nginx] is Chef::Provider::YumRepository
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic template resource enabled on node include: [Chef::Resource::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for template is Chef::Resource::Template
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2017-04-05T17:47:53+01:00] DEBUG: Resources for generic ruby_block resource enabled on node include: [Chef::Resource::RubyBlock]
[2017-04-05T17:47:53+01:00] DEBUG: Resource for ruby_block is Chef::Resource::RubyBlock
[2017-04-05T17:47:53+01:00] INFO: Processing template[/etc/yum.repos.d/nginx.repo] action create (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 42)
[2017-04-05T17:47:53+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:47:53+01:00] DEBUG: Provider for action create on resource template[/etc/yum.repos.d/nginx.repo] is Chef::Provider::Template
[2017-04-05T17:47:53+01:00] DEBUG: Touching /etc/yum.repos.d/nginx.repo to create it
[2017-04-05T17:47:53+01:00] INFO: template[/etc/yum.repos.d/nginx.repo] created file /etc/yum.repos.d/nginx.repo
[2017-04-05T17:47:53+01:00] DEBUG: calculating checksum of /etc/yum.repos.d/.chef-nginx20170405-7856-w6qsb3.repo to compare with 
[2017-04-05T17:47:53+01:00] DEBUG: Running: diff -u /etc/yum.repos.d/nginx.repo /etc/yum.repos.d/.chef-nginx20170405-7856-w6qsb3.repo
[2017-04-05T17:47:53+01:00] DEBUG: Reading modes from /etc/yum.repos.d/nginx.repo file
[2017-04-05T17:47:53+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/yum.repos.d/.chef-nginx20170405-7856-w6qsb3.repo
[2017-04-05T17:47:53+01:00] DEBUG: Moving temporary file /etc/yum.repos.d/.chef-nginx20170405-7856-w6qsb3.repo into place at /etc/yum.repos.d/nginx.repo
[2017-04-05T17:47:53+01:00] INFO: template[/etc/yum.repos.d/nginx.repo] updated file contents /etc/yum.repos.d/nginx.repo
[2017-04-05T17:47:53+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:47:53+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:47:53+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:47:53+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:47:53+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:47:53+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:47:53+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:47:53+01:00] INFO: template[/etc/yum.repos.d/nginx.repo] mode changed to 644
[2017-04-05T17:47:53+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:47:53+01:00] INFO: template[/etc/yum.repos.d/nginx.repo] sending run action to execute[yum clean metadata nginx] (immediate)
[2017-04-05T17:47:53+01:00] INFO: Processing execute[yum clean metadata nginx] action run (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 59)
[2017-04-05T17:47:53+01:00] DEBUG: Providers for generic execute resource enabled on node include: [Chef::Provider::Execute]
[2017-04-05T17:47:53+01:00] DEBUG: Provider for action run on resource execute[yum clean metadata nginx] is Chef::Provider::Execute
[2017-04-05T17:47:54+01:00] INFO: execute[yum clean metadata nginx] ran successfully
[2017-04-05T17:47:54+01:00] INFO: template[/etc/yum.repos.d/nginx.repo] sending run action to execute[yum-makecache-nginx] (immediate)
[2017-04-05T17:47:54+01:00] INFO: Processing execute[yum-makecache-nginx] action run (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 65)
[2017-04-05T17:47:54+01:00] DEBUG: Providers for generic execute resource enabled on node include: [Chef::Provider::Execute]
[2017-04-05T17:47:54+01:00] DEBUG: Provider for action run on resource execute[yum-makecache-nginx] is Chef::Provider::Execute
[2017-04-05T17:47:55+01:00] INFO: execute[yum-makecache-nginx] ran successfully
[2017-04-05T17:47:55+01:00] INFO: template[/etc/yum.repos.d/nginx.repo] sending create action to ruby_block[yum-cache-reload-nginx] (immediate)
[2017-04-05T17:47:55+01:00] INFO: Processing ruby_block[yum-cache-reload-nginx] action create (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 72)
[2017-04-05T17:47:55+01:00] DEBUG: Providers for generic ruby_block resource enabled on node include: [Chef::Provider::RubyBlock]
[2017-04-05T17:47:55+01:00] DEBUG: Provider for action create on resource ruby_block[yum-cache-reload-nginx] is Chef::Provider::RubyBlock
[2017-04-05T17:47:55+01:00] INFO: ruby_block[yum-cache-reload-nginx] called
[2017-04-05T17:47:55+01:00] INFO: Processing execute[yum clean metadata nginx] action nothing (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 59)
[2017-04-05T17:47:55+01:00] DEBUG: Skipping execute[yum clean metadata nginx] due to action :nothing
[2017-04-05T17:47:55+01:00] INFO: Processing execute[yum-makecache-nginx] action nothing (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 65)
[2017-04-05T17:47:55+01:00] DEBUG: Skipping execute[yum-makecache-nginx] due to action :nothing
[2017-04-05T17:47:55+01:00] INFO: Processing ruby_block[yum-cache-reload-nginx] action nothing (/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib/chef/provider/yum_repository.rb line 72)
[2017-04-05T17:47:55+01:00] DEBUG: Skipping ruby_block[yum-cache-reload-nginx] due to action :nothing
[2017-04-05T17:47:55+01:00] INFO: Processing yum_package[nginx] action install (chef_nginx::package line 43)
[2017-04-05T17:47:55+01:00] DEBUG: Providers for generic yum_package resource enabled on node include: [Chef::Provider::Package::Yum]
[2017-04-05T17:47:55+01:00] DEBUG: Provider for action install on resource yum_package[nginx] is Chef::Provider::Package::Yum
[2017-04-05T17:47:56+01:00] DEBUG: yum_package[nginx] checking yum info for nginx
[2017-04-05T17:47:56+01:00] DEBUG: yum_package[nginx] installed version: [nil] candidate version: 1.10.3-1.el6.ngx
[2017-04-05T17:47:56+01:00] DEBUG: yum_package[nginx] nginx not installed, installing 1.10.3-1.el6.ngx
[2017-04-05T17:47:56+01:00] INFO: yum_package[nginx] installing nginx-1.10.3-1.el6.ngx from nginx repository
[2017-04-05T17:47:56+01:00] DEBUG: yum_package[nginx]: yum command: "yum -d0 -e0 -y --disablerepo=* --enablerepo=nginx install nginx-1.10.3-1.el6.ngx"
[2017-04-05T17:48:00+01:00] INFO: yum_package[nginx] installed nginx at 1.10.3-1.el6.ngx
[2017-04-05T17:48:00+01:00] INFO: yum_package[nginx] sending reload action to ohai[reload_nginx] (immediate)
[2017-04-05T17:48:00+01:00] INFO: Processing ohai[reload_nginx] action reload (chef_nginx::ohai_plugin line 24)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic ohai resource enabled on node include: [Chef::Provider::Ohai]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action reload on resource ohai[reload_nginx] is Chef::Provider::Ohai
[2017-04-05T17:48:00+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins", "/root/.chef/ohai/plugins"], :disabled_plugins=>[], :plugin=>{:shard_seed=>{}}, :hints_path=>["/etc/chef/ohai/hints"], :node_name=>"epplkraw0381t1.budapest.epam.com", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2017-04-05T17:48:00+01:00] DEBUG: Running Ohai with the following configuration: {:log_location=>#<IO:<STDOUT>>, :log_level=>:debug, :file_cache_path=>"/root/.chef/", :cookbook_path=>"/root/.chef/cookbooks", :json_attribs=>"/root/.chef/runlist.json", :config_file=>"/root/.chef/solo.rb", :force_logger=>false, :force_formatter=>false, :profile_ruby=>false, :color=>true, :specific_recipes=>[], :solo=>true, :local_mode=>true, :chef_server_url=>"chefzero://localhost:8889", :formatters=>[], :event_handlers=>[], :plugin_path=>["/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins", "/root/.chef/ohai/plugins"], :disabled_plugins=>[], :plugin=>{:shard_seed=>{}}, :hints_path=>["/etc/chef/ohai/hints"], :node_name=>"epplkraw0381t1.budapest.epam.com", :start_handlers=>[], :user_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :group_valid_regex=>[/^[^-+~:,\t\r\n\f\0]+[^:,\t\r\n\f\0]*$/], :internal_locale=>"en_US.UTF-8"}
[2017-04-05T17:48:00+01:00] DEBUG: Searching for Ohai plugins in /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins
[2017-04-05T17:48:00+01:00] DEBUG: Searching for Ohai plugins in /root/.chef/ohai/plugins
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/lua.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ssh_host_key.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/python.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/joyent.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dmi.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/os.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/freebsd/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sysconf.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/go.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/eucalyptus.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/netbsd/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/network_route.rb
[2017-04-05T17:48:00+01:00] DEBUG: Could not load sigar gem. Skipping NetworkRoutes plugin
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/sigar/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/vmware.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/os.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/dragonflybsd/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/drivers.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/fips.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/windows/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/chef.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/php.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/passwd.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/timezone.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/root_group.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ruby.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/keys.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/scala.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/dmi.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/solaris2/zpools.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ohai_time.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/groovy.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openbsd/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualbox.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/nodejs.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/bsd/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/openstack.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rackspace.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/haskell.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/uptime.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/os.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/softlayer.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ec2.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ps.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/cloud_v2.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/packages.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shard.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/c.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/azure.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/mono.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/perl.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/shells.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/kernel.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/uptime.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/os.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/kernel.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/aix/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/elixir.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/ip_scopes.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/gce.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/erlang.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/digital_ocean.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/machineid.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/lsb.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/block_device.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/fips.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/hostnamectl.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/mdadm.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/sessions.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linux/filesystem2.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/linode.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/network_listeners.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/init_package.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/network.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/system_profiler.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/memory.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/cpu.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/virtualization.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/platform.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/filesystem2.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/darwin/hardware.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/command.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/rust.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/java.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/languages.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/hostname.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai/plugins/powershell.rb
[2017-04-05T17:48:00+01:00] DEBUG: Loading plugin at /root/.chef/ohai/plugins/nginx.rb
[2017-04-05T17:48:00+01:00] DEBUG: Plugin Nginx: ran '/usr/sbin/nginx -V' and returned 0
[2017-04-05T17:48:00+01:00] INFO: ohai[reload_nginx] reloaded
[2017-04-05T17:48:00+01:00] INFO: Processing service[nginx] action start (chef_nginx::package line 48)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action start on resource service[nginx] is Chef::Provider::Service::Redhat
[2017-04-05T17:48:00+01:00] DEBUG: service[nginx] supports status, running
[2017-04-05T17:48:00+01:00] INFO: service[nginx] started
[2017-04-05T17:48:00+01:00] INFO: Processing service[nginx] action enable (chef_nginx::package line 48)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action enable on resource service[nginx] is Chef::Provider::Service::Redhat
[2017-04-05T17:48:00+01:00] DEBUG: service[nginx] supports status, running
[2017-04-05T17:48:00+01:00] DEBUG: service[nginx] is running
[2017-04-05T17:48:00+01:00] DEBUG: service[nginx] already enabled - nothing to do
[2017-04-05T17:48:00+01:00] INFO: Processing directory[/etc/nginx] action create (chef_nginx::commons_dir line 22)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx] is Chef::Provider::Directory
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] INFO: Processing directory[/var/log/nginx] action create (chef_nginx::commons_dir line 27)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource directory[/var/log/nginx] is Chef::Provider::Directory
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode != current_mode, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode != current_mode, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid != current_uid, updating owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid != current_uid, updating owner
[2017-04-05T17:48:00+01:00] INFO: directory[/var/log/nginx] owner changed to 497
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode != current_mode, updating mode
[2017-04-05T17:48:00+01:00] INFO: directory[/var/log/nginx] mode changed to 750
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: Processing directory[pid file directory] action create (chef_nginx::commons_dir line 34)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource directory[pid file directory] is Chef::Provider::Directory
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] INFO: Processing directory[/etc/nginx/sites-available] action create (chef_nginx::commons_dir line 41)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx/sites-available] is Chef::Provider::Directory
[2017-04-05T17:48:00+01:00] INFO: directory[/etc/nginx/sites-available] created directory /etc/nginx/sites-available
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] INFO: directory[/etc/nginx/sites-available] mode changed to 755
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: Processing directory[/etc/nginx/sites-enabled] action create (chef_nginx::commons_dir line 41)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx/sites-enabled] is Chef::Provider::Directory
[2017-04-05T17:48:00+01:00] INFO: directory[/etc/nginx/sites-enabled] created directory /etc/nginx/sites-enabled
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] INFO: directory[/etc/nginx/sites-enabled] mode changed to 755
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: Processing directory[/etc/nginx/conf.d] action create (chef_nginx::commons_dir line 41)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource directory[/etc/nginx/conf.d] is Chef::Provider::Directory
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] INFO: Processing template[/usr/sbin/nxensite] action create (chef_nginx::commons_script line 23)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource template[/usr/sbin/nxensite] is Chef::Provider::Template
[2017-04-05T17:48:00+01:00] DEBUG: Not fetching cookbooks/chef_nginx/templates/default/nxensite.erb, as the cache is up to date.
[2017-04-05T17:48:00+01:00] DEBUG: Current checksum: d0a082a3abd9fa78bc178f560d89c5d3; manifest checksum: d0a082a3abd9fa78bc178f560d89c5d3)
[2017-04-05T17:48:00+01:00] DEBUG: Touching /usr/sbin/nxensite to create it
[2017-04-05T17:48:00+01:00] INFO: template[/usr/sbin/nxensite] created file /usr/sbin/nxensite
[2017-04-05T17:48:00+01:00] DEBUG: calculating checksum of /usr/sbin/.chef-nxensite20170405-7856-145iri9 to compare with 
[2017-04-05T17:48:00+01:00] DEBUG: Running: diff -u /usr/sbin/nxensite /usr/sbin/.chef-nxensite20170405-7856-145iri9
[2017-04-05T17:48:00+01:00] DEBUG: Reading modes from /usr/sbin/nxensite file
[2017-04-05T17:48:00+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /usr/sbin/.chef-nxensite20170405-7856-145iri9
[2017-04-05T17:48:00+01:00] DEBUG: Moving temporary file /usr/sbin/.chef-nxensite20170405-7856-145iri9 into place at /usr/sbin/nxensite
[2017-04-05T17:48:00+01:00] INFO: template[/usr/sbin/nxensite] updated file contents /usr/sbin/nxensite
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] INFO: template[/usr/sbin/nxensite] mode changed to 755
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: Processing template[/usr/sbin/nxdissite] action create (chef_nginx::commons_script line 23)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource template[/usr/sbin/nxdissite] is Chef::Provider::Template
[2017-04-05T17:48:00+01:00] DEBUG: Not fetching cookbooks/chef_nginx/templates/default/nxdissite.erb, as the cache is up to date.
[2017-04-05T17:48:00+01:00] DEBUG: Current checksum: e54bbff0120a2342ef2ffd8f7c0b962b; manifest checksum: e54bbff0120a2342ef2ffd8f7c0b962b)
[2017-04-05T17:48:00+01:00] DEBUG: Touching /usr/sbin/nxdissite to create it
[2017-04-05T17:48:00+01:00] INFO: template[/usr/sbin/nxdissite] created file /usr/sbin/nxdissite
[2017-04-05T17:48:00+01:00] DEBUG: calculating checksum of /usr/sbin/.chef-nxdissite20170405-7856-potvcf to compare with 
[2017-04-05T17:48:00+01:00] DEBUG: Running: diff -u /usr/sbin/nxdissite /usr/sbin/.chef-nxdissite20170405-7856-potvcf
[2017-04-05T17:48:00+01:00] DEBUG: Reading modes from /usr/sbin/nxdissite file
[2017-04-05T17:48:00+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /usr/sbin/.chef-nxdissite20170405-7856-potvcf
[2017-04-05T17:48:00+01:00] DEBUG: Moving temporary file /usr/sbin/.chef-nxdissite20170405-7856-potvcf into place at /usr/sbin/nxdissite
[2017-04-05T17:48:00+01:00] INFO: template[/usr/sbin/nxdissite] updated file contents /usr/sbin/nxdissite
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:00+01:00] INFO: template[/usr/sbin/nxdissite] mode changed to 755
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: Processing template[nginx.conf] action create (chef_nginx::commons_conf line 22)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource template[nginx.conf] is Chef::Provider::Template
[2017-04-05T17:48:00+01:00] DEBUG: template[nginx.conf] checksumming file at /etc/nginx/nginx.conf.
[2017-04-05T17:48:00+01:00] DEBUG: Not fetching cookbooks/chef_nginx/templates/default/nginx.conf.erb, as the cache is up to date.
[2017-04-05T17:48:00+01:00] DEBUG: Current checksum: 997939f4cfb70e8895a24bc411a9a5b2; manifest checksum: 997939f4cfb70e8895a24bc411a9a5b2)
[2017-04-05T17:48:00+01:00] DEBUG: calculating checksum of /etc/nginx/.chef-nginx20170405-7856-fgyktp.conf to compare with 772e914d404163a563e888730a3d4c5d86fbb1a5d3ee6b8c58c7eeda9af1db5b
[2017-04-05T17:48:00+01:00] DEBUG: Running: diff -u /etc/nginx/nginx.conf /etc/nginx/.chef-nginx20170405-7856-fgyktp.conf
[2017-04-05T17:48:00+01:00] INFO: template[nginx.conf] backed up to /root/.chef/local-mode-cache/backup/etc/nginx/nginx.conf.chef-20170405174800.945735
[2017-04-05T17:48:00+01:00] DEBUG: Reading modes from /etc/nginx/nginx.conf file
[2017-04-05T17:48:00+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/nginx/.chef-nginx20170405-7856-fgyktp.conf
[2017-04-05T17:48:00+01:00] DEBUG: Moving temporary file /etc/nginx/.chef-nginx20170405-7856-fgyktp.conf into place at /etc/nginx/nginx.conf
[2017-04-05T17:48:00+01:00] INFO: template[nginx.conf] updated file contents /etc/nginx/nginx.conf
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: Processing template[/etc/nginx/sites-available/default] action create (chef_nginx::commons_conf line 30)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action create on resource template[/etc/nginx/sites-available/default] is Chef::Provider::Template
[2017-04-05T17:48:00+01:00] DEBUG: Not fetching cookbooks/chef_nginx/templates/default/default-site.erb, as the cache is up to date.
[2017-04-05T17:48:00+01:00] DEBUG: Current checksum: 282e5ef755b521b75e4daae9b72fee12; manifest checksum: 282e5ef755b521b75e4daae9b72fee12)
[2017-04-05T17:48:00+01:00] DEBUG: Touching /etc/nginx/sites-available/default to create it
[2017-04-05T17:48:00+01:00] INFO: template[/etc/nginx/sites-available/default] created file /etc/nginx/sites-available/default
[2017-04-05T17:48:00+01:00] DEBUG: calculating checksum of /etc/nginx/sites-available/.chef-default20170405-7856-v09xqb to compare with 
[2017-04-05T17:48:00+01:00] DEBUG: Running: diff -u /etc/nginx/sites-available/default /etc/nginx/sites-available/.chef-default20170405-7856-v09xqb
[2017-04-05T17:48:00+01:00] DEBUG: Reading modes from /etc/nginx/sites-available/default file
[2017-04-05T17:48:00+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/nginx/sites-available/.chef-default20170405-7856-v09xqb
[2017-04-05T17:48:00+01:00] DEBUG: Moving temporary file /etc/nginx/sites-available/.chef-default20170405-7856-v09xqb into place at /etc/nginx/sites-available/default
[2017-04-05T17:48:00+01:00] INFO: template[/etc/nginx/sites-available/default] updated file contents /etc/nginx/sites-available/default
[2017-04-05T17:48:00+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:48:00+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:00+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:00+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:00+01:00] INFO: template[/etc/nginx/sites-available/default] not queuing delayed action reload on service[nginx] (delayed), as it's already been queued
[2017-04-05T17:48:00+01:00] INFO: Processing chef_nginx_site[default] action enable (chef_nginx::commons_conf line 35)
[2017-04-05T17:48:00+01:00] DEBUG: Resources for generic execute resource enabled on node include: [Chef::Resource::Execute]
[2017-04-05T17:48:00+01:00] DEBUG: Resource for execute is Chef::Resource::Execute
[2017-04-05T17:48:00+01:00] INFO: Processing execute[nxensite default] action run (/root/.chef/cookbooks/chef_nginx/resources/site.rb line 52)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic execute resource enabled on node include: [Chef::Provider::Execute]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action run on resource execute[nxensite default] is Chef::Provider::Execute
[2017-04-05T17:48:00+01:00] INFO: execute[nxensite default] ran successfully
[2017-04-05T17:48:00+01:00] INFO: execute[nxensite default] not queuing delayed action reload on service[nginx] (delayed), as it's already been queued
[2017-04-05T17:48:00+01:00] INFO: Processing yum_package[iptables] action install (iptables::_package line 23)
[2017-04-05T17:48:00+01:00] DEBUG: Providers for generic yum_package resource enabled on node include: [Chef::Provider::Package::Yum]
[2017-04-05T17:48:00+01:00] DEBUG: Provider for action install on resource yum_package[iptables] is Chef::Provider::Package::Yum
[2017-04-05T17:48:03+01:00] DEBUG: yum_package[iptables] checking yum info for iptables
[2017-04-05T17:48:03+01:00] DEBUG: yum_package[iptables] installed version: ["1.4.7-16.el6"] candidate version: 1.4.7-16.el6
[2017-04-05T17:48:03+01:00] DEBUG: yum_package[iptables] iptables 1.4.7-16.el6 already installed
[2017-04-05T17:48:03+01:00] DEBUG: yum_package[iptables] is already installed - nothing to do
[2017-04-05T17:48:03+01:00] INFO: Processing execute[rebuild-iptables] action nothing (iptables::default line 24)
[2017-04-05T17:48:03+01:00] DEBUG: Skipping execute[rebuild-iptables] due to action :nothing
[2017-04-05T17:48:03+01:00] INFO: Processing directory[/etc/iptables.d] action create (iptables::default line 29)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic directory resource enabled on node include: [Chef::Provider::Directory]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action create on resource directory[/etc/iptables.d] is Chef::Provider::Directory
[2017-04-05T17:48:03+01:00] INFO: directory[/etc/iptables.d] created directory /etc/iptables.d
[2017-04-05T17:48:03+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:48:03+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:03+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:03+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:03+01:00] INFO: Processing template[/usr/sbin/rebuild-iptables] action create (iptables::default line 33)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action create on resource template[/usr/sbin/rebuild-iptables] is Chef::Provider::Template
[2017-04-05T17:48:03+01:00] DEBUG: Not fetching cookbooks/iptables/templates/default/rebuild-iptables.erb, as the cache is up to date.
[2017-04-05T17:48:03+01:00] DEBUG: Current checksum: 445723b2c440fb53f3425e6fbce7dedd; manifest checksum: 445723b2c440fb53f3425e6fbce7dedd)
[2017-04-05T17:48:03+01:00] DEBUG: Touching /usr/sbin/rebuild-iptables to create it
[2017-04-05T17:48:03+01:00] INFO: template[/usr/sbin/rebuild-iptables] created file /usr/sbin/rebuild-iptables
[2017-04-05T17:48:03+01:00] DEBUG: calculating checksum of /usr/sbin/.chef-rebuild-iptables20170405-7856-m124ej to compare with 
[2017-04-05T17:48:03+01:00] DEBUG: Running: diff -u /usr/sbin/rebuild-iptables /usr/sbin/.chef-rebuild-iptables20170405-7856-m124ej
[2017-04-05T17:48:03+01:00] DEBUG: Reading modes from /usr/sbin/rebuild-iptables file
[2017-04-05T17:48:03+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /usr/sbin/.chef-rebuild-iptables20170405-7856-m124ej
[2017-04-05T17:48:03+01:00] DEBUG: Moving temporary file /usr/sbin/.chef-rebuild-iptables20170405-7856-m124ej into place at /usr/sbin/rebuild-iptables
[2017-04-05T17:48:03+01:00] INFO: template[/usr/sbin/rebuild-iptables] updated file contents /usr/sbin/rebuild-iptables
[2017-04-05T17:48:03+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:03+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:03+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:03+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:03+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:03+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:03+01:00] DEBUG: Found current_mode == nil, so we are creating a new file, updating mode
[2017-04-05T17:48:03+01:00] INFO: template[/usr/sbin/rebuild-iptables] mode changed to 755
[2017-04-05T17:48:03+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:03+01:00] INFO: Processing template[/etc/network/if-pre-up.d/iptables_load] action create (iptables::default line 42)
[2017-04-05T17:48:03+01:00] DEBUG: Skipping template[/etc/network/if-pre-up.d/iptables_load] due to only_if ruby block
[2017-04-05T17:48:03+01:00] INFO: Processing file[/etc/sysconfig/iptables] action create_if_missing (iptables::default line 51)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic file resource enabled on node include: [Chef::Provider::File]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action create_if_missing on resource file[/etc/sysconfig/iptables] is Chef::Provider::File
[2017-04-05T17:48:03+01:00] DEBUG: Touching /etc/sysconfig/iptables to create it
[2017-04-05T17:48:03+01:00] INFO: file[/etc/sysconfig/iptables] created file /etc/sysconfig/iptables
[2017-04-05T17:48:03+01:00] DEBUG: calculating checksum of /etc/sysconfig/.chef-iptables20170405-7856-1ij1c8i to compare with 
[2017-04-05T17:48:03+01:00] DEBUG: Running: diff -u /etc/sysconfig/iptables /etc/sysconfig/.chef-iptables20170405-7856-1ij1c8i
[2017-04-05T17:48:03+01:00] DEBUG: Reading modes from /etc/sysconfig/iptables file
[2017-04-05T17:48:03+01:00] DEBUG: Applying mode = 644, uid = 0, gid = 0 to /etc/sysconfig/.chef-iptables20170405-7856-1ij1c8i
[2017-04-05T17:48:03+01:00] DEBUG: Moving temporary file /etc/sysconfig/.chef-iptables20170405-7856-1ij1c8i into place at /etc/sysconfig/iptables
[2017-04-05T17:48:03+01:00] INFO: file[/etc/sysconfig/iptables] updated file contents /etc/sysconfig/iptables
[2017-04-05T17:48:03+01:00] DEBUG: Found target_mode == nil, so no mode was specified on resource, not managing mode
[2017-04-05T17:48:03+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:03+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:03+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:03+01:00] INFO: Processing template[/etc/sysconfig/iptables-config] action create (iptables::default line 56)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action create on resource template[/etc/sysconfig/iptables-config] is Chef::Provider::Template
[2017-04-05T17:48:03+01:00] DEBUG: template[/etc/sysconfig/iptables-config] checksumming file at /etc/sysconfig/iptables-config.
[2017-04-05T17:48:03+01:00] DEBUG: Not fetching cookbooks/iptables/templates/default/iptables-config.erb, as the cache is up to date.
[2017-04-05T17:48:03+01:00] DEBUG: Current checksum: 375a02610e0c4703fe9ac43bcb19819b; manifest checksum: 375a02610e0c4703fe9ac43bcb19819b)
[2017-04-05T17:48:03+01:00] DEBUG: calculating checksum of /etc/sysconfig/.chef-iptables-config20170405-7856-1va1dji to compare with 97d756c35ea1a7a6d0293e51acffea1c8e1576014267f2625be507616df5652c
[2017-04-05T17:48:03+01:00] DEBUG: Running: diff -u /etc/sysconfig/iptables-config /etc/sysconfig/.chef-iptables-config20170405-7856-1va1dji
[2017-04-05T17:48:03+01:00] INFO: template[/etc/sysconfig/iptables-config] backed up to /root/.chef/local-mode-cache/backup/etc/sysconfig/iptables-config.chef-20170405174803.499472
[2017-04-05T17:48:03+01:00] DEBUG: Reading modes from /etc/sysconfig/iptables-config file
[2017-04-05T17:48:03+01:00] DEBUG: Applying mode = 600, uid = 0, gid = 0 to /etc/sysconfig/.chef-iptables-config20170405-7856-1va1dji
[2017-04-05T17:48:03+01:00] DEBUG: Moving temporary file /etc/sysconfig/.chef-iptables-config20170405-7856-1va1dji into place at /etc/sysconfig/iptables-config
[2017-04-05T17:48:03+01:00] INFO: template[/etc/sysconfig/iptables-config] updated file contents /etc/sysconfig/iptables-config
[2017-04-05T17:48:03+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2017-04-05T17:48:03+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:03+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:03+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:03+01:00] INFO: Processing template[/etc/sysconfig/ip6tables-config] action create (iptables::default line 62)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic template resource enabled on node include: [Chef::Provider::Template]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action create on resource template[/etc/sysconfig/ip6tables-config] is Chef::Provider::Template
[2017-04-05T17:48:03+01:00] DEBUG: template[/etc/sysconfig/ip6tables-config] checksumming file at /etc/sysconfig/ip6tables-config.
[2017-04-05T17:48:03+01:00] DEBUG: Not fetching cookbooks/iptables/templates/default/iptables-config.erb, as the cache is up to date.
[2017-04-05T17:48:03+01:00] DEBUG: Current checksum: 375a02610e0c4703fe9ac43bcb19819b; manifest checksum: 375a02610e0c4703fe9ac43bcb19819b)
[2017-04-05T17:48:03+01:00] DEBUG: calculating checksum of /etc/sysconfig/.chef-ip6tables-config20170405-7856-1ef2jxe to compare with 4f76ef600c72cdd5eebfbfd108d2f7be48a9cc3c59cddc7f667aba701dea0111
[2017-04-05T17:48:03+01:00] DEBUG: Running: diff -u /etc/sysconfig/ip6tables-config /etc/sysconfig/.chef-ip6tables-config20170405-7856-1ef2jxe
[2017-04-05T17:48:03+01:00] INFO: template[/etc/sysconfig/ip6tables-config] backed up to /root/.chef/local-mode-cache/backup/etc/sysconfig/ip6tables-config.chef-20170405174803.503292
[2017-04-05T17:48:03+01:00] DEBUG: Reading modes from /etc/sysconfig/ip6tables-config file
[2017-04-05T17:48:03+01:00] DEBUG: Applying mode = 600, uid = 0, gid = 0 to /etc/sysconfig/.chef-ip6tables-config20170405-7856-1ef2jxe
[2017-04-05T17:48:03+01:00] DEBUG: Moving temporary file /etc/sysconfig/.chef-ip6tables-config20170405-7856-1ef2jxe into place at /etc/sysconfig/ip6tables-config
[2017-04-05T17:48:03+01:00] INFO: template[/etc/sysconfig/ip6tables-config] updated file contents /etc/sysconfig/ip6tables-config
[2017-04-05T17:48:03+01:00] DEBUG: Found target_mode == current_mode, not updating mode
[2017-04-05T17:48:03+01:00] DEBUG: Found target_uid == nil, so no owner was specified on resource, not managing owner
[2017-04-05T17:48:03+01:00] DEBUG: Found target_gid == nil, so no group was specified on resource, not managing group
[2017-04-05T17:48:03+01:00] DEBUG: selinux utilities can not be found. Skipping selinux permission fixup.
[2017-04-05T17:48:03+01:00] INFO: Processing service[iptables] action enable (iptables::default line 68)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action enable on resource service[iptables] is Chef::Provider::Service::Redhat
[2017-04-05T17:48:03+01:00] DEBUG: service[iptables] supports status, running
[2017-04-05T17:48:03+01:00] DEBUG: service[iptables] already enabled - nothing to do
[2017-04-05T17:48:03+01:00] INFO: Processing service[iptables] action start (iptables::default line 68)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action start on resource service[iptables] is Chef::Provider::Service::Redhat
[2017-04-05T17:48:03+01:00] DEBUG: service[iptables] supports status, running
[2017-04-05T17:48:03+01:00] INFO: service[iptables] started
[2017-04-05T17:48:03+01:00] INFO: template[nginx.conf] sending reload action to service[nginx] (delayed)
[2017-04-05T17:48:03+01:00] INFO: Processing service[nginx] action reload (chef_nginx::package line 48)
[2017-04-05T17:48:03+01:00] DEBUG: Providers for generic service resource enabled on node include: [Chef::Provider::Service::Redhat, Chef::Provider::Service::Init]
[2017-04-05T17:48:03+01:00] DEBUG: Provider for action reload on resource service[nginx] is Chef::Provider::Service::Redhat
[2017-04-05T17:48:03+01:00] DEBUG: service[nginx] supports status, running
[2017-04-05T17:48:03+01:00] DEBUG: service[nginx] is running
[2017-04-05T17:48:04+01:00] INFO: service[nginx] reloaded
[2017-04-05T17:48:04+01:00] DEBUG: Saving the current state of node epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_request
[2017-04-05T17:48:04+01:00] DEBUG: PUT /organizations/chef/nodes/epplkraw0381t1.budapest.epam.com
--- PUT BODY ---
{"name":"epplkraw0381t1.budapest.epam.com","chef_environment":"_default","json_class":"Chef::Node","automatic":{"network":{"interfaces":{"lo":{"mtu":"65536","flags":["LOOPBACK","UP","LOWER_UP"],"encapsulation":"Loopback","addresses":{"127.0.0.1":{"family":"inet","prefixlen":"8","netmask":"255.0.0.0","scope":"Node"},"::1":{"family":"inet6","prefixlen":"128","scope":"Node","tags":[]}},"state":"unknown","routes":[{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"},{"destination":"unreachable","family":"inet6","metric":"1024"}]},"eth0":{"type":"eth","number":"0","mtu":"1500","flags":["BROADCAST","MULTICAST","UP","LOWER_UP"],"encapsulation":"Ethernet","addresses":{"08:00:27:14:BD:1C":{"family":"lladdr"},"10.0.2.15":{"family":"inet","prefixlen":"24","netmask":"255.255.255.0","broadcast":"10.0.2.255","scope":"Global"},"fe80::a00:27ff:fe14:bd1c":{"family":"inet6","prefixlen":"64","scope":"Link","tags":[]}},"state":"up","arp":{"10.0.2.3":"52:54:00:12:35:03","10.0.2.2":"52:54:00:12:35:02"},"routes":[{"destination":"10.0.2.0/24","family":"inet","scope":"link","proto":"kernel","src":"10.0.2.15"},{"destination":"169.254.0.0/16","family":"inet","scope":"link","metric":"1002"},{"destination":"default","family":"inet","via":"10.0.2.2"},{"destination":"fe80::/64","family":"inet6","metric":"256","proto":"kernel"}],"link_speed":1000,"duplex":"Full","port":"Twisted Pair","transceiver":"internal","auto_negotiation":"on","mdi_x":"off (auto)","ring_params":{"max_rx":4096,"max_rx_mini":0,"max_rx_jumbo":0,"max_tx":4096,"current_rx":256,"current_rx_mini":0,"current_rx_jumbo":0,"current_tx":256}}},"default_interface":"eth0","default_gateway":"10.0.2.2"},"counters":{"network":{"interfaces":{"lo":{"rx":{"bytes":"0","packets":"0","errors":"0","drop":"0","overrun":"0"},"tx":{"bytes":"0","packets":"0","errors":"0","drop":"0","carrier":"0","collisions":"0"}},"eth0":{"tx":{"queuelen":"1000","bytes":"5398361","packets":"86309","errors":"0","drop":"0","carrier":"0","collisions":"0"},"rx":{"bytes":"270901057","packets":"195138","errors":"0","drop":"0","overrun":"0"}}}}},"ipaddress":"10.0.2.15","macaddress":"08:00:27:14:BD:1C","ip6address":"fe80::a00:27ff:fe14:bd1c","languages":{"lua":{"version":"5.1.4"},"python":{"version":"2.6.6","builddate":"Aug 18 2016, 15:13:37"},"ruby":{"platform":"x86_64-linux","version":"2.3.1","release_date":"2016-04-26","target":"x86_64-pc-linux-gnu","target_cpu":"x86_64","target_vendor":"pc","target_os":"linux","host":"x86_64-pc-linux-gnu","host_cpu":"x86_64","host_os":"linux-gnu","host_vendor":"pc","bin_dir":"/opt/chefdk/embedded/bin","ruby_bin":"/opt/chefdk/embedded/bin/ruby","gems_dir":"/opt/chefdk/embedded/lib/ruby/gems/2.3.0","gem_bin":"/opt/chefdk/embedded/bin/gem"},"c":{"gcc":{"target":"x86_64-redhat-linux","configured_with":"../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux","thread_model":"posix","description":"gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ","version":"4.4.7"},"glibc":{"version":"2.12","description":"GNU C Library stable release version 2.12, by Roland McGrath et al."}},"perl":{"version":"5.10.1","archname":"x86_64-linux-thread-multi"}},"keys":{"ssh":{"host_dsa_public":"AAAAB3NzaC1kc3MAAACBANRg2eSCm2FL9pxKQZYQgvxstWOVn1GlBJhgXXSHd+vkbahn8r0Jx0B/zxArQDeEZLlahJ+UcKGYCK/R77qC8b0IrMgNRfIjtfJ/pscwA+fzP4v63jL1FssKLu2xfimH9xMD+UHf+wWmvJayiQ/zOBZp7cEK28jHBKrZ0JOdLPAnAAAAFQCrmWTAcfnC3FzwRfwUUzziZV3zAQAAAIEAwyyKL9vJn7kl7b1uYj294mTz+5Phoz/PiAPyo/r8OimbkFVzgfkPRsu+EMxtrUZ3cHnhpuM+U8gRjYyCuzPDyuUbeuy6TXXsKRO3g90EoXhbR7WfvPMEeT7FWBxpGaWX5h0FQSUk5s+9XCP2xL3DwcdSAajvb4QHF1CEzHJY2xgAAACBAInhe4M5RxOFOJpnoFBmCOw0NYZISp+hTVqf5+SznSpzctmz/klpvW70g9VkC+wvp6ylNEyAkB05a+aKd0l24hKSlhYiVyLv4dKrfS2sQoVR0Le70PiqN7SmlPvn7JfBPGk9eQ9N03IBfIkUPUIq6bagNj29B90MbuKi29pTYo5B","host_rsa_public":"AAAAB3NzaC1yc2EAAAABIwAAAQEA5VA60xxhdYmaAsYVU/jkVV7JkVDnIB6RkXmpL/y0FH6Y/1Qu0yop7FewxHy4lzTj80FcA6TKEStTT5R6fPVRoH8kd1s3hbajK7F/YYd96NOxq7W0ant7brRZLcBqrduSVGeVqOGMCQLuVDoO6AgjOGLfjRYFSZnQ5PW4pjmpnmL5Z/fOR7EyF/LIOFkwRRO6w+fSsR5Ye5Moy2dKyAT1c6lgdDXsBsZkBDWok8qjOJBTw5DBIMXjuyMAm8qgxQe6reyyM3RRoBYNecIEFf/0qcYOPa1LGuG8Si9D6ZswDT/ECu3xnqibs65MLw7n9ud0YIuAdUivhbHxYHIDe+aBzQ=="}},"kernel":{"name":"Linux","release":"2.6.32-642.13.1.el6.x86_64","version":"#1 SMP Wed Jan 11 20:56:24 UTC 2017","machine":"x86_64","processor":"x86_64","os":"GNU/Linux","modules":{"vboxsf":{"size":"37955","refcount":"1","version":"5.1.14 r112924"},"nls_utf8":{"size":"1455","refcount":"0"},"ipv6":{"size":"336282","refcount":"16"},"sg":{"size":"29318","refcount":"0","version":"3.5.34"},"i2c_piix4":{"size":"11232","refcount":"0"},"i2c_core":{"size":"29132","refcount":"1"},"e1000":{"size":"134895","refcount":"0","version":"7.3.21-k8-NAPI"},"vboxguest":{"size":"284807","refcount":"1","version":"5.0.26 r108824"},"ext4":{"size":"379559","refcount":"2"},"jbd2":{"size":"93252","refcount":"1"},"mbcache":{"size":"8193","refcount":"1"},"sd_mod":{"size":"37158","refcount":"3"},"crc_t10dif":{"size":"1209","refcount":"1"},"ahci":{"size":"43154","refcount":"2","version":"3.0"},"pata_acpi":{"size":"3701","refcount":"0","version":"0.2.3"},"ata_generic":{"size":"3837","refcount":"0","version":"0.2.15"},"ata_piix":{"size":"24409","refcount":"0","version":"2.13"},"video":{"size":"21654","refcount":"0"},"output":{"size":"2409","refcount":"1"},"dm_mirror":{"size":"14864","refcount":"0"},"dm_region_hash":{"size":"12085","refcount":"1"},"dm_log":{"size":"9930","refcount":"2"},"dm_mod":{"size":"102467","refcount":"8"}}},"os":"linux","os_version":"2.6.32-642.13.1.el6.x86_64","lsb":{},"platform":"centos","platform_version":"6.8","platform_family":"rhel","virtualization":{"systems":{"vbox":"guest"},"system":"vbox","role":"guest"},"dmi":{},"memory":{"swap":{"cached":"44kB","total":"1277948kB","free":"1277800kB"},"hugepages":{"total":"0","free":"0","reserved":"0","surplus":"0"},"total":"630788kB","free":"141964kB","buffers":"73104kB","cached":"182876kB","active":"300684kB","inactive":"101336kB","dirty":"5904kB","writeback":"0kB","anon_pages":"146008kB","mapped":"10796kB","slab":"69616kB","slab_reclaimable":"48000kB","slab_unreclaim":"21616kB","page_tables":"2684kB","nfs_unstable":"0kB","bounce":"0kB","commit_limit":"1593340kB","committed_as":"243096kB","vmalloc_total":"34359738367kB","vmalloc_used":"23956kB","vmalloc_chunk":"34359704568kB","hugepage_size":"2048kB"},"cpu":{"0":{"vendor_id":"GenuineIntel","family":"6","model":"58","model_name":"Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz","stepping":"9","mhz":"3221.842","cache_size":"6144 KB","physical_id":"0","core_id":"0","cores":"2","flags":["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","mmx","fxsr","sse","sse2","ht","syscall","nx","rdtscp","lm","constant_tsc","rep_good","xtopology","nonstop_tsc","unfair_spinlock","pni","pclmulqdq","ssse3","cx16","sse4_1","sse4_2","popcnt","aes","xsave","avx","rdrand","hypervisor","lahf_lm"]},"1":{"vendor_id":"GenuineIntel","family":"6","model":"58","model_name":"Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz","stepping":"9","mhz":"3221.842","cache_size":"6144 KB","physical_id":"0","core_id":"1","cores":"2","flags":["fpu","vme","de","pse","tsc","msr","pae","mce","cx8","apic","sep","mtrr","pge","mca","cmov","pat","pse36","clflush","mmx","fxsr","sse","sse2","ht","syscall","nx","rdtscp","lm","constant_tsc","rep_good","xtopology","nonstop_tsc","unfair_spinlock","pni","pclmulqdq","ssse3","cx16","sse4_1","sse4_2","popcnt","aes","xsave","avx","rdrand","hypervisor","lahf_lm"]},"total":2,"real":1,"cores":2},"sysconf":{"LINK_MAX":32000,"_POSIX_LINK_MAX":32000,"MAX_CANON":255,"_POSIX_MAX_CANON":255,"MAX_INPUT":255,"_POSIX_MAX_INPUT":255,"NAME_MAX":255,"_POSIX_NAME_MAX":255,"PATH_MAX":4096,"_POSIX_PATH_MAX":4096,"PIPE_BUF":4096,"_POSIX_PIPE_BUF":4096,"SOCK_MAXBUF":null,"_POSIX_ASYNC_IO":null,"_POSIX_CHOWN_RESTRICTED":1,"_POSIX_NO_TRUNC":1,"_POSIX_PRIO_IO":null,"_POSIX_SYNC_IO":null,"_POSIX_VDISABLE":0,"ARG_MAX":2621440,"ATEXIT_MAX":2147483647,"CHAR_BIT":8,"CHAR_MAX":127,"CHAR_MIN":-128,"CHILD_MAX":2380,"CLK_TCK":100,"INT_MAX":2147483647,"INT_MIN":-2147483648,"IOV_MAX":1024,"LOGNAME_MAX":256,"LONG_BIT":64,"MB_LEN_MAX":16,"NGROUPS_MAX":65536,"NL_ARGMAX":4096,"NL_LANGMAX":2048,"NL_MSGMAX":2147483647,"NL_NMAX":2147483647,"NL_SETMAX":2147483647,"NL_TEXTMAX":2147483647,"NSS_BUFLEN_GROUP":1024,"NSS_BUFLEN_PASSWD":1024,"NZERO":20,"OPEN_MAX":1024,"PAGESIZE":4096,"PAGE_SIZE":4096,"PASS_MAX":8192,"PTHREAD_DESTRUCTOR_ITERATIONS":4,"PTHREAD_KEYS_MAX":1024,"PTHREAD_STACK_MIN":16384,"PTHREAD_THREADS_MAX":null,"SCHAR_MAX":127,"SCHAR_MIN":-128,"SHRT_MAX":32767,"SHRT_MIN":-32768,"SSIZE_MAX":32767,"TTY_NAME_MAX":32,"TZNAME_MAX":6,"UCHAR_MAX":255,"UINT_MAX":4294967295,"UIO_MAXIOV":1024,"ULONG_MAX":18446744073709551615,"USHRT_MAX":65535,"WORD_BIT":32,"_AVPHYS_PAGES":35495,"_NPROCESSORS_CONF":2,"_NPROCESSORS_ONLN":2,"_PHYS_PAGES":157697,"_POSIX_ARG_MAX":2621440,"_POSIX_ASYNCHRONOUS_IO":200809,"_POSIX_CHILD_MAX":2380,"_POSIX_FSYNC":200809,"_POSIX_JOB_CONTROL":1,"_POSIX_MAPPED_FILES":200809,"_POSIX_MEMLOCK":200809,"_POSIX_MEMLOCK_RANGE":200809,"_POSIX_MEMORY_PROTECTION":200809,"_POSIX_MESSAGE_PASSING":200809,"_POSIX_NGROUPS_MAX":65536,"_POSIX_OPEN_MAX":1024,"_POSIX_PII":null,"_POSIX_PII_INTERNET":null,"_POSIX_PII_INTERNET_DGRAM":null,"_POSIX_PII_INTERNET_STREAM":null,"_POSIX_PII_OSI":null,"_POSIX_PII_OSI_CLTS":null,"_POSIX_PII_OSI_COTS":null,"_POSIX_PII_OSI_M":null,"_POSIX_PII_SOCKET":null,"_POSIX_PII_XTI":null,"_POSIX_POLL":null,"_POSIX_PRIORITIZED_IO":200809,"_POSIX_PRIORITY_SCHEDULING":200809,"_POSIX_REALTIME_SIGNALS":200809,"_POSIX_SAVED_IDS":1,"_POSIX_SELECT":null,"_POSIX_SEMAPHORES":200809,"_POSIX_SHARED_MEMORY_OBJECTS":200809,"_POSIX_SSIZE_MAX":32767,"_POSIX_STREAM_MAX":16,"_POSIX_SYNCHRONIZED_IO":200809,"_POSIX_THREADS":200809,"_POSIX_THREAD_ATTR_STACKADDR":200809,"_POSIX_THREAD_ATTR_STACKSIZE":200809,"_POSIX_THREAD_PRIORITY_SCHEDULING":200809,"_POSIX_THREAD_PRIO_INHERIT":200809,"_POSIX_THREAD_PRIO_PROTECT":200809,"_POSIX_THREAD_ROBUST_PRIO_INHERIT":null,"_POSIX_THREAD_ROBUST_PRIO_PROTECT":null,"_POSIX_THREAD_PROCESS_SHARED":200809,"_POSIX_THREAD_SAFE_FUNCTIONS":200809,"_POSIX_TIMERS":200809,"TIMER_MAX":null,"_POSIX_TZNAME_MAX":6,"_POSIX_VERSION":200809,"_T_IOV_MAX":null,"_XOPEN_CRYPT":1,"_XOPEN_ENH_I18N":1,"_XOPEN_LEGACY":1,"_XOPEN_REALTIME":1,"_XOPEN_REALTIME_THREADS":1,"_XOPEN_SHM":1,"_XOPEN_UNIX":1,"_XOPEN_VERSION":700,"_XOPEN_XCU_VERSION":4,"_XOPEN_XPG2":1,"_XOPEN_XPG3":1,"_XOPEN_XPG4":1,"BC_BASE_MAX":99,"BC_DIM_MAX":2048,"BC_SCALE_MAX":99,"BC_STRING_MAX":1000,"CHARCLASS_NAME_MAX":2048,"COLL_WEIGHTS_MAX":255,"EQUIV_CLASS_MAX":null,"EXPR_NEST_MAX":32,"LINE_MAX":2048,"POSIX2_BC_BASE_MAX":99,"POSIX2_BC_DIM_MAX":2048,"POSIX2_BC_SCALE_MAX":99,"POSIX2_BC_STRING_MAX":1000,"POSIX2_CHAR_TERM":200809,"POSIX2_COLL_WEIGHTS_MAX":255,"POSIX2_C_BIND":200809,"POSIX2_C_DEV":200809,"POSIX2_C_VERSION":null,"POSIX2_EXPR_NEST_MAX":32,"POSIX2_FORT_DEV":null,"POSIX2_FORT_RUN":null,"_POSIX2_LINE_MAX":2048,"POSIX2_LINE_MAX":2048,"POSIX2_LOCALEDEF":200809,"POSIX2_RE_DUP_MAX":32767,"POSIX2_SW_DEV":200809,"POSIX2_UPE":null,"POSIX2_VERSION":200809,"RE_DUP_MAX":32767,"PATH":"/bin:/usr/bin","CS_PATH":"/bin:/usr/bin","LFS_CFLAGS":null,"LFS_LDFLAGS":null,"LFS_LIBS":null,"LFS_LINTFLAGS":null,"LFS64_CFLAGS":"-D_LARGEFILE64_SOURCE","LFS64_LDFLAGS":null,"LFS64_LIBS":null,"LFS64_LINTFLAGS":"-D_LARGEFILE64_SOURCE","_XBS5_WIDTH_RESTRICTED_ENVS":"XBS5_LP64_OFF64","XBS5_WIDTH_RESTRICTED_ENVS":"XBS5_LP64_OFF64","_XBS5_ILP32_OFF32":null,"XBS5_ILP32_OFF32_CFLAGS":null,"XBS5_ILP32_OFF32_LDFLAGS":null,"XBS5_ILP32_OFF32_LIBS":null,"XBS5_ILP32_OFF32_LINTFLAGS":null,"_XBS5_ILP32_OFFBIG":null,"XBS5_ILP32_OFFBIG_CFLAGS":null,"XBS5_ILP32_OFFBIG_LDFLAGS":null,"XBS5_ILP32_OFFBIG_LIBS":null,"XBS5_ILP32_OFFBIG_LINTFLAGS":null,"_XBS5_LP64_OFF64":1,"XBS5_LP64_OFF64_CFLAGS":"-m64","XBS5_LP64_OFF64_LDFLAGS":"-m64","XBS5_LP64_OFF64_LIBS":null,"XBS5_LP64_OFF64_LINTFLAGS":null,"_XBS5_LPBIG_OFFBIG":null,"XBS5_LPBIG_OFFBIG_CFLAGS":null,"XBS5_LPBIG_OFFBIG_LDFLAGS":null,"XBS5_LPBIG_OFFBIG_LIBS":null,"XBS5_LPBIG_OFFBIG_LINTFLAGS":null,"_POSIX_V6_ILP32_OFF32":null,"POSIX_V6_ILP32_OFF32_CFLAGS":null,"POSIX_V6_ILP32_OFF32_LDFLAGS":null,"POSIX_V6_ILP32_OFF32_LIBS":null,"POSIX_V6_ILP32_OFF32_LINTFLAGS":null,"_POSIX_V6_WIDTH_RESTRICTED_ENVS":"POSIX_V6_LP64_OFF64","POSIX_V6_WIDTH_RESTRICTED_ENVS":"POSIX_V6_LP64_OFF64","_POSIX_V6_ILP32_OFFBIG":null,"POSIX_V6_ILP32_OFFBIG_CFLAGS":null,"POSIX_V6_ILP32_OFFBIG_LDFLAGS":null,"POSIX_V6_ILP32_OFFBIG_LIBS":null,"POSIX_V6_ILP32_OFFBIG_LINTFLAGS":null,"_POSIX_V6_LP64_OFF64":1,"POSIX_V6_LP64_OFF64_CFLAGS":"-m64","POSIX_V6_LP64_OFF64_LDFLAGS":"-m64","POSIX_V6_LP64_OFF64_LIBS":null,"POSIX_V6_LP64_OFF64_LINTFLAGS":null,"_POSIX_V6_LPBIG_OFFBIG":null,"POSIX_V6_LPBIG_OFFBIG_CFLAGS":null,"POSIX_V6_LPBIG_OFFBIG_LDFLAGS":null,"POSIX_V6_LPBIG_OFFBIG_LIBS":null,"POSIX_V6_LPBIG_OFFBIG_LINTFLAGS":null,"_POSIX_V7_ILP32_OFF32":null,"POSIX_V7_ILP32_OFF32_CFLAGS":null,"POSIX_V7_ILP32_OFF32_LDFLAGS":null,"POSIX_V7_ILP32_OFF32_LIBS":null,"POSIX_V7_ILP32_OFF32_LINTFLAGS":null,"_POSIX_V7_WIDTH_RESTRICTED_ENVS":"POSIX_V7_LP64_OFF64","POSIX_V7_WIDTH_RESTRICTED_ENVS":"POSIX_V7_LP64_OFF64","_POSIX_V7_ILP32_OFFBIG":null,"POSIX_V7_ILP32_OFFBIG_CFLAGS":null,"POSIX_V7_ILP32_OFFBIG_LDFLAGS":null,"POSIX_V7_ILP32_OFFBIG_LIBS":null,"POSIX_V7_ILP32_OFFBIG_LINTFLAGS":null,"_POSIX_V7_LP64_OFF64":1,"POSIX_V7_LP64_OFF64_CFLAGS":"-m64","POSIX_V7_LP64_OFF64_LDFLAGS":"-m64","POSIX_V7_LP64_OFF64_LIBS":null,"POSIX_V7_LP64_OFF64_LINTFLAGS":null,"_POSIX_V7_LPBIG_OFFBIG":null,"POSIX_V7_LPBIG_OFFBIG_CFLAGS":null,"POSIX_V7_LPBIG_OFFBIG_LDFLAGS":null,"POSIX_V7_LPBIG_OFFBIG_LIBS":null,"POSIX_V7_LPBIG_OFFBIG_LINTFLAGS":null,"_POSIX_ADVISORY_INFO":200809,"_POSIX_BARRIERS":200809,"_POSIX_BASE":null,"_POSIX_C_LANG_SUPPORT":null,"_POSIX_C_LANG_SUPPORT_R":null,"_POSIX_CLOCK_SELECTION":200809,"_POSIX_CPUTIME":200809,"_POSIX_THREAD_CPUTIME":200809,"_POSIX_DEVICE_SPECIFIC":null,"_POSIX_DEVICE_SPECIFIC_R":null,"_POSIX_FD_MGMT":null,"_POSIX_FIFO":null,"_POSIX_PIPE":null,"_POSIX_FILE_ATTRIBUTES":null,"_POSIX_FILE_LOCKING":null,"_POSIX_FILE_SYSTEM":null,"_POSIX_MONOTONIC_CLOCK":200809,"_POSIX_MULTI_PROCESS":null,"_POSIX_SINGLE_PROCESS":null,"_POSIX_NETWORKING":null,"_POSIX_READER_WRITER_LOCKS":200809,"_POSIX_SPIN_LOCKS":200809,"_POSIX_REGEXP":1,"_REGEX_VERSION":null,"_POSIX_SHELL":1,"_POSIX_SIGNALS":null,"_POSIX_SPAWN":200809,"_POSIX_SPORADIC_SERVER":null,"_POSIX_THREAD_SPORADIC_SERVER":null,"_POSIX_SYSTEM_DATABASE":null,"_POSIX_SYSTEM_DATABASE_R":null,"_POSIX_TIMEOUTS":200809,"_POSIX_TYPED_MEMORY_OBJECTS":null,"_POSIX_USER_GROUPS":null,"_POSIX_USER_GROUPS_R":null,"POSIX2_PBS":null,"POSIX2_PBS_ACCOUNTING":null,"POSIX2_PBS_LOCATE":null,"POSIX2_PBS_TRACK":null,"POSIX2_PBS_MESSAGE":null,"SYMLOOP_MAX":null,"STREAM_MAX":16,"AIO_LISTIO_MAX":null,"AIO_MAX":null,"AIO_PRIO_DELTA_MAX":20,"DELAYTIMER_MAX":2147483647,"HOST_NAME_MAX":64,"LOGIN_NAME_MAX":256,"MQ_OPEN_MAX":null,"MQ_PRIO_MAX":32768,"_POSIX_DEVICE_IO":null,"_POSIX_TRACE":null,"_POSIX_TRACE_EVENT_FILTER":null,"_POSIX_TRACE_INHERIT":null,"_POSIX_TRACE_LOG":null,"RTSIG_MAX":32,"SEM_NSEMS_MAX":null,"SEM_VALUE_MAX":2147483647,"SIGQUEUE_MAX":2380,"FILESIZEBITS":64,"POSIX_ALLOC_SIZE_MIN":4096,"POSIX_REC_INCR_XFER_SIZE":null,"POSIX_REC_MAX_XFER_SIZE":null,"POSIX_REC_MIN_XFER_SIZE":4096,"POSIX_REC_XFER_ALIGN":4096,"SYMLINK_MAX":null,"GNU_LIBC_VERSION":"glibc 2.12","GNU_LIBPTHREAD_VERSION":"NPTL 2.12","POSIX2_SYMLINKS":1,"LEVEL1_ICACHE_SIZE":32768,"LEVEL1_ICACHE_ASSOC":8,"LEVEL1_ICACHE_LINESIZE":64,"LEVEL1_DCACHE_SIZE":32768,"LEVEL1_DCACHE_ASSOC":8,"LEVEL1_DCACHE_LINESIZE":64,"LEVEL2_CACHE_SIZE":262144,"LEVEL2_CACHE_ASSOC":8,"LEVEL2_CACHE_LINESIZE":64,"LEVEL3_CACHE_SIZE":6291456,"LEVEL3_CACHE_ASSOC":12,"LEVEL3_CACHE_LINESIZE":64,"LEVEL4_CACHE_SIZE":0,"LEVEL4_CACHE_ASSOC":0,"LEVEL4_CACHE_LINESIZE":0,"IPV6":200809,"RAW_SOCKETS":200809},"filesystem":{"/dev/mapper/vg_epplkraw0381t1-lv_root":{"kb_size":"18261312","kb_used":"2069776","kb_available":"15257240","percent_used":"12%","mount":"/","total_inodes":"1169168","inodes_used":"109582","inodes_available":"1059586","inodes_percent_used":"10%","fs_type":"ext4","mount_options":["rw"],"uuid":"22e7732c-8de5-4929-a338-4face887cb95"},"tmpfs":{"kb_size":"315392","kb_used":"0","kb_available":"315392","percent_used":"0%","mount":"/dev/shm","total_inodes":"78848","inodes_used":"1","inodes_available":"78847","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"]},"/dev/sda1":{"kb_size":"487652","kb_used":"52777","kb_available":"409275","percent_used":"12%","mount":"/boot","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"afc9d16e-72b3-46bd-995d-0ff5bd489127"},"vagrant":{"kb_size":"741980832","kb_used":"115032236","kb_available":"626948596","percent_used":"16%","mount":"/vagrant","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"]},"proc":{"mount":"/proc","fs_type":"proc","mount_options":["rw"]},"sysfs":{"mount":"/sys","fs_type":"sysfs","mount_options":["rw"]},"devpts":{"mount":"/dev/pts","fs_type":"devpts","mount_options":["rw","gid=5","mode=620"]},"none":{"mount":"/proc/sys/fs/binfmt_misc","fs_type":"binfmt_misc","mount_options":["rw"]},"/dev/sda2":{"fs_type":"LVM2_member","uuid":"xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa"},"/dev/mapper/vg_epplkraw0381t1-lv_swap":{"fs_type":"swap","uuid":"35eb589b-770a-4fd0-82be-2f2a95ca8eb7"},"rootfs":{"mount":"/","fs_type":"rootfs","mount_options":["rw"]},"devtmpfs":{"mount":"/dev","fs_type":"devtmpfs","mount_options":["rw","relatime","size=304660k","nr_inodes=76165","mode=755"]},"/proc/bus/usb":{"mount":"/proc/bus/usb","fs_type":"usbfs","mount_options":["rw","relatime"]}},"fips":{"kernel":{"enabled":false}},"etc":{"passwd":{"root":{"dir":"/root","gid":0,"uid":0,"shell":"/bin/bash","gecos":"root"},"bin":{"dir":"/bin","gid":1,"uid":1,"shell":"/sbin/nologin","gecos":"bin"},"daemon":{"dir":"/sbin","gid":2,"uid":2,"shell":"/sbin/nologin","gecos":"daemon"},"adm":{"dir":"/var/adm","gid":4,"uid":3,"shell":"/sbin/nologin","gecos":"adm"},"lp":{"dir":"/var/spool/lpd","gid":7,"uid":4,"shell":"/sbin/nologin","gecos":"lp"},"sync":{"dir":"/sbin","gid":0,"uid":5,"shell":"/bin/sync","gecos":"sync"},"shutdown":{"dir":"/sbin","gid":0,"uid":6,"shell":"/sbin/shutdown","gecos":"shutdown"},"halt":{"dir":"/sbin","gid":0,"uid":7,"shell":"/sbin/halt","gecos":"halt"},"mail":{"dir":"/var/spool/mail","gid":12,"uid":8,"shell":"/sbin/nologin","gecos":"mail"},"uucp":{"dir":"/var/spool/uucp","gid":14,"uid":10,"shell":"/sbin/nologin","gecos":"uucp"},"operator":{"dir":"/root","gid":0,"uid":11,"shell":"/sbin/nologin","gecos":"operator"},"games":{"dir":"/usr/games","gid":100,"uid":12,"shell":"/sbin/nologin","gecos":"games"},"gopher":{"dir":"/var/gopher","gid":30,"uid":13,"shell":"/sbin/nologin","gecos":"gopher"},"ftp":{"dir":"/var/ftp","gid":50,"uid":14,"shell":"/sbin/nologin","gecos":"FTP User"},"nobody":{"dir":"/","gid":99,"uid":99,"shell":"/sbin/nologin","gecos":"Nobody"},"vcsa":{"dir":"/dev","gid":69,"uid":69,"shell":"/sbin/nologin","gecos":"virtual console memory owner"},"saslauth":{"dir":"/var/empty/saslauth","gid":76,"uid":499,"shell":"/sbin/nologin","gecos":"Saslauthd user"},"postfix":{"dir":"/var/spool/postfix","gid":89,"uid":89,"shell":"/sbin/nologin","gecos":""},"sshd":{"dir":"/var/empty/sshd","gid":74,"uid":74,"shell":"/sbin/nologin","gecos":"Privilege-separated SSH"},"vagrant":{"dir":"/home/vagrant","gid":500,"uid":500,"shell":"/bin/bash","gecos":"vagrant"},"vboxadd":{"dir":"/var/run/vboxadd","gid":1,"uid":498,"shell":"/bin/false","gecos":""}},"group":{"root":{"gid":0,"members":[]},"bin":{"gid":1,"members":["bin","daemon"]},"daemon":{"gid":2,"members":["bin","daemon"]},"sys":{"gid":3,"members":["bin","adm"]},"adm":{"gid":4,"members":["adm","daemon"]},"tty":{"gid":5,"members":[]},"disk":{"gid":6,"members":[]},"lp":{"gid":7,"members":["daemon"]},"mem":{"gid":8,"members":[]},"kmem":{"gid":9,"members":[]},"wheel":{"gid":10,"members":[]},"mail":{"gid":12,"members":["mail","postfix"]},"uucp":{"gid":14,"members":[]},"man":{"gid":15,"members":[]},"games":{"gid":20,"members":[]},"gopher":{"gid":30,"members":[]},"video":{"gid":39,"members":[]},"dip":{"gid":40,"members":[]},"ftp":{"gid":50,"members":[]},"lock":{"gid":54,"members":[]},"audio":{"gid":63,"members":[]},"nobody":{"gid":99,"members":[]},"users":{"gid":100,"members":[]},"floppy":{"gid":19,"members":[]},"vcsa":{"gid":69,"members":[]},"utmp":{"gid":22,"members":[]},"utempter":{"gid":35,"members":[]},"cdrom":{"gid":11,"members":[]},"tape":{"gid":33,"members":[]},"dialout":{"gid":18,"members":[]},"saslauth":{"gid":76,"members":[]},"postdrop":{"gid":90,"members":[]},"postfix":{"gid":89,"members":[]},"fuse":{"gid":499,"members":[]},"sshd":{"gid":74,"members":[]},"vagrant":{"gid":500,"members":["vagrant"]},"vboxsf":{"gid":498,"members":[]}}},"current_user":"root","chef_packages":{"chef":{"version":"12.18.31","chef_root":"/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib"},"ohai":{"version":"8.23.0","ohai_root":"/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai"}},"time":{"timezone":"BST"},"root_group":"root","ohai_time":1491410872.9440804,"virtualbox":{"host":{"language":"en_US","revision":"112924","version":"5.1.14"},"guest":{"guest_additions_version":"5.0.26","guest_additions_revision":"108824"}},"uptime_seconds":4538,"uptime":"1 hours 15 minutes 38 seconds","idletime_seconds":8888,"idletime":"2 hours 28 minutes 08 seconds","command":{"ps":"ps -ef"},"cloud_v2":null,"packages":{"vim-minimal":{"epoch":"2","version":"7.4.629","release":"5.el6_8.1","installdate":"1485473413","arch":"x86_64"},"setup":{"epoch":"0","version":"2.8.14","release":"20.el6_4.1","installdate":"1485473162","arch":"noarch"},"python":{"epoch":"0","version":"2.6.6","release":"66.el6_8","installdate":"1485473414","arch":"x86_64"},"basesystem":{"epoch":"0","version":"10.0","release":"4.el6","installdate":"1485473163","arch":"noarch"},"iscsi-initiator-utils":{"epoch":"0","version":"6.2.0.873","release":"22.el6_8","installdate":"1485473416","arch":"x86_64"},"sudo":{"epoch":"0","version":"1.8.6p3","release":"25.el6_8","installdate":"1485473416","arch":"x86_64"},"glibc-common":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1485473172","arch":"x86_64"},"selinux-policy-targeted":{"epoch":"0","version":"3.7.19","release":"292.el6_8.2","installdate":"1485473417","arch":"noarch"},"glibc":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1485473177","arch":"x86_64"},"openssh-server":{"epoch":"0","version":"5.3p1","release":"118.1.el6_8","installdate":"1485473440","arch":"x86_64"},"db4-utils":{"epoch":"0","version":"4.7.25","release":"20.el6_8.1","installdate":"1485473441","arch":"x86_64"},"libcap":{"epoch":"0","version":"2.16","release":"5.5.el6","installdate":"1485473177","arch":"x86_64"},"kernel-devel":{"epoch":"0","version":"2.6.32","release":"642.el6","installdate":"1485473365","arch":"x86_64"},"info":{"epoch":"0","version":"4.13a","release":"8.el6","installdate":"1485473177","arch":"x86_64"},"tzdata":{"epoch":"0","version":"2016j","release":"1.el6","installdate":"1485473446","arch":"noarch"},"audit-libs":{"epoch":"0","version":"2.4.5","release":"3.el6","installdate":"1485473178","arch":"x86_64"},"libgcc":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406422","arch":"x86_64"},"libacl":{"epoch":"0","version":"2.2.49","release":"6.el6","installdate":"1485473178","arch":"x86_64"},"libstdc++-devel":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406424","arch":"x86_64"},"nspr":{"epoch":"0","version":"4.11.0","release":"1.el6","installdate":"1485473178","arch":"x86_64"},"perl-libs":{"epoch":"4","version":"5.10.1","release":"144.el6","installdate":"1491406424","arch":"x86_64"},"libselinux":{"epoch":"0","version":"2.0.94","release":"7.el6","installdate":"1485473178","arch":"x86_64"},"perl-Module-Pluggable":{"epoch":"1","version":"3.90","release":"144.el6","installdate":"1491406425","arch":"x86_64"},"sed":{"epoch":"0","version":"4.2.1","release":"10.el6","installdate":"1485473178","arch":"x86_64"},"perl":{"epoch":"4","version":"5.10.1","release":"144.el6","installdate":"1491406427","arch":"x86_64"},"readline":{"epoch":"0","version":"6.0","release":"4.el6","installdate":"1485473179","arch":"x86_64"},"libgomp":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406427","arch":"x86_64"},"gawk":{"epoch":"0","version":"3.1.7","release":"10.el6_7.3","installdate":"1485473179","arch":"x86_64"},"gcc":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406429","arch":"x86_64"},"chef":{"epoch":"0","version":"12.19.36","release":"1.el6","installdate":"1491408707","arch":"x86_64"},"libgpg-error":{"epoch":"0","version":"1.7","release":"4.el6","installdate":"1485473179","arch":"x86_64"},"unzip":{"epoch":"0","version":"6.0","release":"5.el6","installdate":"1491409251","arch":"x86_64"},"rsync":{"epoch":"0","version":"3.0.6","release":"12.el6","installdate":"1491409504","arch":"x86_64"},"pcre":{"epoch":"0","version":"7.8","release":"7.el6","installdate":"1485473179","arch":"x86_64"},"git":{"epoch":"0","version":"1.7.1","release":"8.el6","installdate":"1491409505","arch":"x86_64"},"lua":{"epoch":"0","version":"5.1.4","release":"4.1.el6","installdate":"1485473179","arch":"x86_64"},"cyrus-sasl-lib":{"epoch":"0","version":"2.1.23","release":"15.el6_6.2","installdate":"1485473179","arch":"x86_64"},"elfutils-libelf":{"epoch":"0","version":"0.164","release":"2.el6","installdate":"1485473180","arch":"x86_64"},"findutils":{"epoch":"1","version":"4.4.2","release":"9.el6","installdate":"1485473180","arch":"x86_64"},"checkpolicy":{"epoch":"0","version":"2.0.22","release":"1.el6","installdate":"1485473180","arch":"x86_64"},"which":{"epoch":"0","version":"2.19","release":"6.el6","installdate":"1485473180","arch":"x86_64"},"pth":{"epoch":"0","version":"2.0.7","release":"9.3.el6","installdate":"1485473180","arch":"x86_64"},"sysvinit-tools":{"epoch":"0","version":"2.87","release":"6.dsf.el6","installdate":"1485473181","arch":"x86_64"},"libtasn1":{"epoch":"0","version":"2.3","release":"6.el6_5","installdate":"1485473181","arch":"x86_64"},"p11-kit-trust":{"epoch":"0","version":"0.18.5","release":"2.el6_5.2","installdate":"1485473182","arch":"x86_64"},"gmp":{"epoch":"0","version":"4.3.1","release":"10.el6","installdate":"1485473182","arch":"x86_64"},"libnih":{"epoch":"0","version":"1.0.1","release":"7.el6","installdate":"1485473182","arch":"x86_64"},"file":{"epoch":"0","version":"5.04","release":"30.el6","installdate":"1485473182","arch":"x86_64"},"psmisc":{"epoch":"0","version":"22.6","release":"19.el6_5","installdate":"1485473182","arch":"x86_64"},"procps":{"epoch":"0","version":"3.2.8","release":"36.el6","installdate":"1485473182","arch":"x86_64"},"e2fsprogs-libs":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1485473183","arch":"x86_64"},"diffutils":{"epoch":"0","version":"2.8.1","release":"28.el6","installdate":"1485473183","arch":"x86_64"},"dash":{"epoch":"0","version":"0.5.5.1","release":"4.el6","installdate":"1485473184","arch":"x86_64"},"groff":{"epoch":"0","version":"1.18.1.4","release":"21.el6","installdate":"1485473185","arch":"x86_64"},"coreutils-libs":{"epoch":"0","version":"8.4","release":"43.el6","installdate":"1485473185","arch":"x86_64"},"cracklib":{"epoch":"0","version":"2.8.16","release":"4.el6","installdate":"1485473185","arch":"x86_64"},"coreutils":{"epoch":"0","version":"8.4","release":"43.el6","installdate":"1485473186","arch":"x86_64"},"module-init-tools":{"epoch":"0","version":"3.9","release":"25.el6","installdate":"1485473187","arch":"x86_64"},"redhat-logos":{"epoch":"0","version":"60.0.14","release":"12.el6.centos","installdate":"1485473188","arch":"noarch"},"libpciaccess":{"epoch":"0","version":"0.13.4","release":"1.el6","installdate":"1485473188","arch":"x86_64"},"libedit":{"epoch":"0","version":"2.11","release":"4.20080712cvs.1.el6","installdate":"1485473189","arch":"x86_64"},"mingetty":{"epoch":"0","version":"1.08","release":"5.el6","installdate":"1485473190","arch":"x86_64"},"krb5-libs":{"epoch":"0","version":"1.10.3","release":"57.el6","installdate":"1485473190","arch":"x86_64"},"libssh2":{"epoch":"0","version":"1.4.2","release":"2.el6_7.1","installdate":"1485473190","arch":"x86_64"},"rpm-libs":{"epoch":"0","version":"4.8.0","release":"55.el6","installdate":"1485473190","arch":"x86_64"},"rpm":{"epoch":"0","version":"4.8.0","release":"55.el6","installdate":"1485473191","arch":"x86_64"},"gnupg2":{"epoch":"0","version":"2.0.14","release":"8.el6","installdate":"1485473191","arch":"x86_64"},"fipscheck-lib":{"epoch":"0","version":"1.2.0","release":"7.el6","installdate":"1485473191","arch":"x86_64"},"mysql-libs":{"epoch":"0","version":"5.1.73","release":"7.el6","installdate":"1485473192","arch":"x86_64"},"pciutils-libs":{"epoch":"0","version":"3.1.10","release":"4.el6","installdate":"1485473192","arch":"x86_64"},"libcap-ng":{"epoch":"0","version":"0.6.4","release":"3.el6_0.1","installdate":"1485473192","arch":"x86_64"},"python-pycurl":{"epoch":"0","version":"7.19.0","release":"9.el6","installdate":"1485473197","arch":"x86_64"},"pygpgme":{"epoch":"0","version":"0.1","release":"18.20090824bzr68.el6","installdate":"1485473197","arch":"x86_64"},"python-iniparse":{"epoch":"0","version":"0.3.1","release":"2.1.el6","installdate":"1485473197","arch":"noarch"},"newt":{"epoch":"0","version":"0.52.11","release":"3.el6","installdate":"1485473197","arch":"x86_64"},"ustr":{"epoch":"0","version":"1.0.4","release":"9.1.el6","installdate":"1485473197","arch":"x86_64"},"shadow-utils":{"epoch":"2","version":"4.1.5.1","release":"5.el6","installdate":"1485473198","arch":"x86_64"},"libutempter":{"epoch":"0","version":"1.1.5","release":"4.1.el6","installdate":"1485473199","arch":"x86_64"},"gamin":{"epoch":"0","version":"0.1.10","release":"9.el6","installdate":"1485473199","arch":"x86_64"},"shared-mime-info":{"epoch":"0","version":"0.70","release":"6.el6","installdate":"1485473199","arch":"x86_64"},"grubby":{"epoch":"0","version":"7.0.15","release":"7.el6","installdate":"1485473200","arch":"x86_64"},"yum-plugin-fastestmirror":{"epoch":"0","version":"1.1.30","release":"37.el6","installdate":"1485473200","arch":"noarch"},"dbus-glib":{"epoch":"0","version":"0.86","release":"6.el6","installdate":"1485473200","arch":"x86_64"},"centos-release":{"epoch":"0","version":"6","release":"8.el6.centos.12.3","installdate":"1485473200","arch":"x86_64"},"iptables":{"epoch":"0","version":"1.4.7","release":"16.el6","installdate":"1485473201","arch":"x86_64"},"libdrm":{"epoch":"0","version":"2.4.65","release":"2.el6","installdate":"1485473201","arch":"x86_64"},"plymouth":{"epoch":"0","version":"0.8.3","release":"27.el6.centos.1","installdate":"1485473201","arch":"x86_64"},"cryptsetup-luks-libs":{"epoch":"0","version":"1.2.0","release":"11.el6","installdate":"1485473203","arch":"x86_64"},"kpartx":{"epoch":"0","version":"0.4.9","release":"93.el6","installdate":"1485473203","arch":"x86_64"},"cyrus-sasl":{"epoch":"0","version":"2.1.23","release":"15.el6_6.2","installdate":"1485473203","arch":"x86_64"},"crontabs":{"epoch":"0","version":"1.10","release":"33.el6","installdate":"1485473205","arch":"noarch"},"kbd":{"epoch":"0","version":"1.15","release":"11.el6","installdate":"1485473207","arch":"x86_64"},"fuse":{"epoch":"0","version":"2.8.3","release":"5.el6","installdate":"1485473213","arch":"x86_64"},"system-config-firewall-base":{"epoch":"0","version":"1.2.27","release":"7.2.el6_6","installdate":"1485473243","arch":"noarch"},"cryptsetup-luks":{"epoch":"0","version":"1.2.0","release":"11.el6","installdate":"1485473244","arch":"x86_64"},"dhclient":{"epoch":"12","version":"4.1.1","release":"51.P1.el6.centos","installdate":"1485473245","arch":"x86_64"},"passwd":{"epoch":"0","version":"0.77","release":"7.el6","installdate":"1485473246","arch":"x86_64"},"grub":{"epoch":"1","version":"0.97","release":"94.el6_7.1","installdate":"1485473246","arch":"x86_64"},"e2fsprogs":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1485473247","arch":"x86_64"},"acl":{"epoch":"0","version":"2.2.49","release":"6.el6","installdate":"1485473247","arch":"x86_64"},"bridge-utils":{"epoch":"0","version":"1.2","release":"10.el6","installdate":"1485473247","arch":"x86_64"},"epel-release":{"epoch":"0","version":"6","release":"8","installdate":"1485473332","arch":"noarch"},"mpfr":{"epoch":"0","version":"2.4.1","release":"6.el6","installdate":"1485473356","arch":"x86_64"},"ppl":{"epoch":"0","version":"0.10.2","release":"11.el6","installdate":"1485473359","arch":"x86_64"},"glibc-headers":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1485473360","arch":"x86_64"},"openssl":{"epoch":"0","version":"1.0.1e","release":"48.el6_8.3","installdate":"1485473400","arch":"x86_64"},"nss-util":{"epoch":"0","version":"3.21.3","release":"1.el6_8","installdate":"1485473401","arch":"x86_64"},"nss-softokn-freebl":{"epoch":"0","version":"3.14.3","release":"23.3.el6_8","installdate":"1485473401","arch":"x86_64"},"nss-sysinit":{"epoch":"0","version":"3.21.3","release":"2.el6_8","installdate":"1485473401","arch":"x86_64"},"db4":{"epoch":"0","version":"4.7.25","release":"20.el6_8.1","installdate":"1485473402","arch":"x86_64"},"libblkid":{"epoch":"0","version":"2.17.2","release":"12.24.el6_8.1","installdate":"1485473402","arch":"x86_64"},"kernel-firmware":{"epoch":"0","version":"2.6.32","release":"642.13.1.el6","installdate":"1485473405","arch":"noarch"},"dracut-kernel":{"epoch":"0","version":"004","release":"409.el6_8.2","installdate":"1485473405","arch":"noarch"},"kernel":{"epoch":"0","version":"2.6.32","release":"642.el6","installdate":"1485473212","arch":"x86_64"},"udev":{"epoch":"0","version":"147","release":"2.73.el6_8.2","installdate":"1485473411","arch":"x86_64"},"device-mapper":{"epoch":"0","version":"1.02.117","release":"7.el6_8.1","installdate":"1485473412","arch":"x86_64"},"openssh":{"epoch":"0","version":"5.3p1","release":"118.1.el6_8","installdate":"1485473412","arch":"x86_64"},"selinux-policy":{"epoch":"0","version":"3.7.19","release":"292.el6_8.2","installdate":"1485473413","arch":"noarch"},"lvm2-libs":{"epoch":"0","version":"2.02.143","release":"7.el6_8.1","installdate":"1485473413","arch":"x86_64"},"cronie":{"epoch":"0","version":"1.4.4","release":"16.el6_8.2","installdate":"1485473413","arch":"x86_64"},"expat":{"epoch":"0","version":"2.0.1","release":"13.el6_8","installdate":"1485473414","arch":"x86_64"},"filesystem":{"epoch":"0","version":"2.4.30","release":"3.el6","installdate":"1485473163","arch":"x86_64"},"python-libs":{"epoch":"0","version":"2.6.6","release":"66.el6_8","installdate":"1485473415","arch":"x86_64"},"ncurses-base":{"epoch":"0","version":"5.7","release":"4.20090207.el6","installdate":"1485473163","arch":"x86_64"},"yum":{"epoch":"0","version":"3.2.29","release":"75.el6.centos","installdate":"1485473416","arch":"noarch"},"lvm2":{"epoch":"0","version":"2.02.143","release":"7.el6_8.1","installdate":"1485473416","arch":"x86_64"},"openssh-clients":{"epoch":"0","version":"5.3p1","release":"118.1.el6_8","installdate":"1485473440","arch":"x86_64"},"ncurses-libs":{"epoch":"0","version":"5.7","release":"4.20090207.el6","installdate":"1485473177","arch":"x86_64"},"mdadm":{"epoch":"0","version":"3.3.4","release":"1.el6_8.5","installdate":"1485473441","arch":"x86_64"},"libattr":{"epoch":"0","version":"2.4.44","release":"7.el6","installdate":"1485473177","arch":"x86_64"},"nss-tools":{"epoch":"0","version":"3.21.3","release":"2.el6_8","installdate":"1485473441","arch":"x86_64"},"zlib":{"epoch":"0","version":"1.2.3","release":"29.el6","installdate":"1485473177","arch":"x86_64"},"libxml2":{"epoch":"0","version":"2.7.6","release":"21.el6_8.1","installdate":"1485473445","arch":"x86_64"},"popt":{"epoch":"0","version":"1.13","release":"7.el6","installdate":"1485473178","arch":"x86_64"},"libgcrypt":{"epoch":"0","version":"1.4.5","release":"12.el6_8","installdate":"1485473447","arch":"x86_64"},"libcom_err":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1485473178","arch":"x86_64"},"libstdc++":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406423","arch":"x86_64"},"perl-Pod-Escapes":{"epoch":"1","version":"1.04","release":"144.el6","installdate":"1491406424","arch":"x86_64"},"libsepol":{"epoch":"0","version":"2.0.41","release":"4.el6","installdate":"1485473178","arch":"x86_64"},"perl-Pod-Simple":{"epoch":"1","version":"3.13","release":"144.el6","installdate":"1491406425","arch":"x86_64"},"chkconfig":{"epoch":"0","version":"1.3.49.5","release":"1.el6","installdate":"1485473178","arch":"x86_64"},"perl-version":{"epoch":"3","version":"0.77","release":"144.el6","installdate":"1491406425","arch":"x86_64"},"binutils":{"epoch":"0","version":"2.20.51.0.2","release":"5.46.el6","installdate":"1491406427","arch":"x86_64"},"bzip2-libs":{"epoch":"0","version":"1.0.5","release":"7.el6_0","installdate":"1485473179","arch":"x86_64"},"cpp":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406428","arch":"x86_64"},"gcc-c++":{"epoch":"0","version":"4.4.7","release":"18.el6","installdate":"1491406430","arch":"x86_64"},"file-libs":{"epoch":"0","version":"5.04","release":"30.el6","installdate":"1485473179","arch":"x86_64"},"chefdk":{"epoch":"0","version":"1.2.22","release":"1.el6","installdate":"1491408734","arch":"x86_64"},"dbus-libs":{"epoch":"1","version":"1.2.24","release":"8.el6_6","installdate":"1485473179","arch":"x86_64"},"perl-Error":{"epoch":"1","version":"0.17015","release":"4.el6","installdate":"1491409503","arch":"noarch"},"perl-Git":{"epoch":"0","version":"1.7.1","release":"8.el6","installdate":"1491409504","arch":"noarch"},"sqlite":{"epoch":"0","version":"3.6.20","release":"1.el6_7.2","installdate":"1485473179","arch":"x86_64"},"libidn":{"epoch":"0","version":"1.18","release":"2.el6","installdate":"1485473180","arch":"x86_64"},"xz-libs":{"epoch":"0","version":"4.999.9","release":"0.5.beta.20091007git.el6","installdate":"1485473180","arch":"x86_64"},"bzip2":{"epoch":"0","version":"1.0.5","release":"7.el6_0","installdate":"1485473180","arch":"x86_64"},"libselinux-utils":{"epoch":"0","version":"2.0.94","release":"7.el6","installdate":"1485473180","arch":"x86_64"},"cpio":{"epoch":"0","version":"2.10","release":"12.el6_5","installdate":"1485473180","arch":"x86_64"},"tcp_wrappers-libs":{"epoch":"0","version":"7.6","release":"58.el6","installdate":"1485473180","arch":"x86_64"},"libaio":{"epoch":"0","version":"0.3.107","release":"10.el6","installdate":"1485473181","arch":"x86_64"},"p11-kit":{"epoch":"0","version":"0.18.5","release":"2.el6_5.2","installdate":"1485473181","arch":"x86_64"},"device-mapper-persistent-data":{"epoch":"0","version":"0.6.2","release":"0.1.rc7.el6","installdate":"1485473182","arch":"x86_64"},"libusb":{"epoch":"0","version":"0.1.12","release":"23.el6","installdate":"1485473182","arch":"x86_64"},"upstart":{"epoch":"0","version":"0.6.5","release":"16.el6","installdate":"1485473182","arch":"x86_64"},"pinentry":{"epoch":"0","version":"0.7.6","release":"8.el6","installdate":"1485473182","arch":"x86_64"},"net-tools":{"epoch":"0","version":"1.60","release":"110.el6_2","installdate":"1485473182","arch":"x86_64"},"libss":{"epoch":"0","version":"1.41.12","release":"22.el6","installdate":"1485473183","arch":"x86_64"},"m4":{"epoch":"0","version":"1.4.13","release":"5.el6","installdate":"1485473183","arch":"x86_64"},"make":{"epoch":"1","version":"3.81","release":"23.el6","installdate":"1485473183","arch":"x86_64"},"ncurses":{"epoch":"0","version":"5.7","release":"4.20090207.el6","installdate":"1485473184","arch":"x86_64"},"less":{"epoch":"0","version":"436","release":"13.el6","installdate":"1485473185","arch":"x86_64"},"gzip":{"epoch":"0","version":"1.3.12","release":"22.el6","installdate":"1485473185","arch":"x86_64"},"cracklib-dicts":{"epoch":"0","version":"2.8.16","release":"4.el6","installdate":"1485473185","arch":"x86_64"},"pam":{"epoch":"0","version":"1.1.1","release":"22.el6","installdate":"1485473187","arch":"x86_64"},"hwdata":{"epoch":"0","version":"0.233","release":"16.1.el6","installdate":"1485473187","arch":"noarch"},"plymouth-scripts":{"epoch":"0","version":"0.8.3","release":"27.el6.centos.1","installdate":"1485473188","arch":"x86_64"},"ca-certificates":{"epoch":"0","version":"2015.2.6","release":"65.0.1.el6_7","installdate":"1485473188","arch":"noarch"},"logrotate":{"epoch":"0","version":"3.7.8","release":"26.el6_7","installdate":"1485473189","arch":"x86_64"},"gdbm":{"epoch":"0","version":"1.8.0","release":"39.el6","installdate":"1485473190","arch":"x86_64"},"keyutils-libs":{"epoch":"0","version":"1.4","release":"5.el6","installdate":"1485473190","arch":"x86_64"},"libcurl":{"epoch":"0","version":"7.19.7","release":"52.el6","installdate":"1485473190","arch":"x86_64"},"curl":{"epoch":"0","version":"7.19.7","release":"52.el6","installdate":"1485473190","arch":"x86_64"},"openldap":{"epoch":"0","version":"2.4.40","release":"12.el6","installdate":"1485473191","arch":"x86_64"},"gpgme":{"epoch":"0","version":"1.1.8","release":"3.el6","installdate":"1485473191","arch":"x86_64"},"fipscheck":{"epoch":"0","version":"1.2.0","release":"7.el6","installdate":"1485473191","arch":"x86_64"},"ethtool":{"epoch":"2","version":"3.5","release":"6.el6","installdate":"1485473192","arch":"x86_64"},"plymouth-core-libs":{"epoch":"0","version":"0.8.3","release":"27.el6.centos.1","installdate":"1485473192","arch":"x86_64"},"libffi":{"epoch":"0","version":"3.0.5","release":"3.2.el6","installdate":"1485473192","arch":"x86_64"},"python-urlgrabber":{"epoch":"0","version":"3.9.1","release":"11.el6","installdate":"1485473197","arch":"noarch"},"rpm-python":{"epoch":"0","version":"4.8.0","release":"55.el6","installdate":"1485473197","arch":"x86_64"},"slang":{"epoch":"0","version":"2.2.1","release":"1.el6","installdate":"1485473197","arch":"x86_64"},"newt-python":{"epoch":"0","version":"0.52.11","release":"3.el6","installdate":"1485473197","arch":"x86_64"},"libsemanage":{"epoch":"0","version":"2.0.43","release":"5.1.el6","installdate":"1485473198","arch":"x86_64"},"MAKEDEV":{"epoch":"0","version":"3.24","release":"6.el6","installdate":"1485473199","arch":"x86_64"},"pkgconfig":{"epoch":"1","version":"0.23","release":"9.1.el6","installdate":"1485473199","arch":"x86_64"},"glib2":{"epoch":"0","version":"2.28.8","release":"5.el6","installdate":"1485473199","arch":"x86_64"},"libuser":{"epoch":"0","version":"0.56.13","release":"8.el6_7","installdate":"1485473200","arch":"x86_64"},"yum-metadata-parser":{"epoch":"0","version":"1.1.2","release":"16.el6","installdate":"1485473200","arch":"x86_64"},"dhcp-common":{"epoch":"12","version":"4.1.1","release":"51.P1.el6.centos","installdate":"1485473200","arch":"x86_64"},"iproute":{"epoch":"0","version":"2.6.32","release":"54.el6","installdate":"1485473201","arch":"x86_64"},"iputils":{"epoch":"0","version":"20071127","release":"21.el6","installdate":"1485473201","arch":"x86_64"},"device-mapper-multipath-libs":{"epoch":"0","version":"0.4.9","release":"93.el6","installdate":"1485473203","arch":"x86_64"},"rsyslog":{"epoch":"0","version":"5.8.10","release":"10.el6_6","installdate":"1485473203","arch":"x86_64"},"postfix":{"epoch":"2","version":"2.6.6","release":"6.el6_7.1","installdate":"1485473204","arch":"x86_64"},"iptables-ipv6":{"epoch":"0","version":"1.4.7","release":"16.el6","installdate":"1485473205","arch":"x86_64"},"kbd-misc":{"epoch":"0","version":"1.15","release":"11.el6","installdate":"1485473206","arch":"noarch"},"device-mapper-multipath":{"epoch":"0","version":"0.4.9","release":"93.el6","installdate":"1485473243","arch":"x86_64"},"b43-openfwwf":{"epoch":"0","version":"5.2","release":"10.el6","installdate":"1485473245","arch":"noarch"},"authconfig":{"epoch":"0","version":"6.1.12","release":"23.el6","installdate":"1485473246","arch":"x86_64"},"efibootmgr":{"epoch":"0","version":"0.5.4","release":"13.el6","installdate":"1485473246","arch":"x86_64"},"audit":{"epoch":"0","version":"2.4.5","release":"3.el6","installdate":"1485473246","arch":"x86_64"},"xfsprogs":{"epoch":"0","version":"3.1.1","release":"19.el6","installdate":"1485473247","arch":"x86_64"},"attr":{"epoch":"0","version":"2.4.44","release":"7.el6","installdate":"1485473247","arch":"x86_64"},"rootfiles":{"epoch":"0","version":"8.1","release":"6.1.el6","installdate":"1485473247","arch":"noarch"},"gpg-pubkey":{"epoch":"0","version":"c105b9de","release":"4e0fd3a3","installdate":"1485473342","arch":"(none)"},"cloog-ppl":{"epoch":"0","version":"0.15.7","release":"1.2.el6","installdate":"1485473359","arch":"x86_64"},"kernel-headers":{"epoch":"0","version":"2.6.32","release":"642.13.1.el6","installdate":"1485473360","arch":"x86_64"},"glibc-devel":{"epoch":"0","version":"2.12","release":"1.192.el6","installdate":"1485473360","arch":"x86_64"},"wget":{"epoch":"0","version":"1.12","release":"8.el6","installdate":"1485473362","arch":"x86_64"},"bash":{"epoch":"0","version":"4.1.2","release":"41.el6_8","installdate":"1485473399","arch":"x86_64"},"libudev":{"epoch":"0","version":"147","release":"2.73.el6_8.2","installdate":"1485473400","arch":"x86_64"},"grep":{"epoch":"0","version":"2.20","release":"5.el6_8","installdate":"1485473401","arch":"x86_64"},"nss-softokn":{"epoch":"0","version":"3.14.3","release":"23.3.el6_8","installdate":"1485473401","arch":"x86_64"},"nss":{"epoch":"0","version":"3.21.3","release":"2.el6_8","installdate":"1485473401","arch":"x86_64"},"libuuid":{"epoch":"0","version":"2.17.2","release":"12.24.el6_8.1","installdate":"1485473402","arch":"x86_64"},"tar":{"epoch":"2","version":"1.23","release":"15.el6_8","installdate":"1485473402","arch":"x86_64"},"dracut":{"epoch":"0","version":"004","release":"409.el6_8.2","installdate":"1485473405","arch":"noarch"},"initscripts":{"epoch":"0","version":"9.03.53","release":"1.el6.centos.1","installdate":"1485473406","arch":"x86_64"},"util-linux-ng":{"epoch":"0","version":"2.17.2","release":"12.24.el6_8.1","installdate":"1485473411","arch":"x86_64"},"device-mapper-libs":{"epoch":"0","version":"1.02.117","release":"7.el6_8.1","installdate":"1485473412","arch":"x86_64"},"device-mapper-event-libs":{"epoch":"0","version":"1.02.117","release":"7.el6_8.1","installdate":"1485473412","arch":"x86_64"},"policycoreutils":{"epoch":"0","version":"2.0.83","release":"30.1.el6_8","installdate":"1485473412","arch":"x86_64"},"device-mapper-event":{"epoch":"0","version":"1.02.117","release":"7.el6_8.1","installdate":"1485473413","arch":"x86_64"},"cronie-anacron":{"epoch":"0","version":"1.4.4","release":"16.el6_8.2","installdate":"1485473413","arch":"x86_64"}},"hostname":"epplkraw0381t1","machinename":"epplkraw0381t1.budapest.epam.com","fqdn":"epplkraw0381t1.budapest.epam.com","domain":"budapest.epam.com","shells":["/bin/sh","/bin/bash","/sbin/nologin","/bin/dash"],"block_device":{"ram0":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram1":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram2":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram3":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram4":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram5":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram6":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram7":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram8":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram9":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram10":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram11":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram12":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram13":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram14":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"ram15":{"size":"32768","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop0":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop1":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop2":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop3":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop4":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop5":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop6":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"loop7":{"size":"0","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"sda":{"size":"40960000","removable":"0","model":"VBOX HARDDISK","rev":"1.0","state":"running","timeout":"30","vendor":"ATA","queue_depth":"31","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"dm-0":{"size":"37371904","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"},"dm-1":{"size":"2555904","removable":"0","rotational":"1","physical_block_size":"512","logical_block_size":"512"}},"hostnamectl":{},"filesystem2":{"by_device":{"/dev/mapper/vg_epplkraw0381t1-lv_root":{"kb_size":"18261312","kb_used":"2069792","kb_available":"15257224","percent_used":"12%","total_inodes":"1169168","inodes_used":"109582","inodes_available":"1059586","inodes_percent_used":"10%","fs_type":"ext4","mount_options":["rw"],"uuid":"22e7732c-8de5-4929-a338-4face887cb95","mounts":["/"]},"tmpfs":{"kb_size":"315392","kb_used":"0","kb_available":"315392","percent_used":"0%","total_inodes":"78848","inodes_used":"1","inodes_available":"78847","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"],"mounts":["/dev/shm"]},"/dev/sda1":{"kb_size":"487652","kb_used":"52777","kb_available":"409275","percent_used":"12%","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"afc9d16e-72b3-46bd-995d-0ff5bd489127","mounts":["/boot"]},"vagrant":{"kb_size":"741980832","kb_used":"115032236","kb_available":"626948596","percent_used":"16%","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"],"mounts":["/vagrant"]},"proc":{"fs_type":"proc","mount_options":["rw"],"mounts":["/proc"]},"sysfs":{"fs_type":"sysfs","mount_options":["rw"],"mounts":["/sys"]},"devpts":{"fs_type":"devpts","mount_options":["rw","gid=5","mode=620"],"mounts":["/dev/pts"]},"none":{"fs_type":"binfmt_misc","mount_options":["rw"],"mounts":["/proc/sys/fs/binfmt_misc"]},"/dev/sda":{},"/dev/sda2":{"fs_type":"LVM2_member","uuid":"xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa"},"/dev/mapper/vg_epplkraw0381t1-lv_swap":{"fs_type":"swap","uuid":"35eb589b-770a-4fd0-82be-2f2a95ca8eb7"},"rootfs":{"fs_type":"rootfs","mount_options":["rw"],"mounts":["/"]},"devtmpfs":{"fs_type":"devtmpfs","mount_options":["rw","relatime","size=304660k","nr_inodes=76165","mode=755"],"mounts":["/dev"]},"/proc/bus/usb":{"fs_type":"usbfs","mount_options":["rw","relatime"],"mounts":["/proc/bus/usb"]}},"by_mountpoint":{"/":{"kb_size":"18261312","kb_used":"2069792","kb_available":"15257224","percent_used":"12%","total_inodes":"1169168","inodes_used":"109582","inodes_available":"1059586","inodes_percent_used":"10%","fs_type":"rootfs","mount_options":["rw"],"uuid":"22e7732c-8de5-4929-a338-4face887cb95","devices":["/dev/mapper/vg_epplkraw0381t1-lv_root","rootfs"]},"/dev/shm":{"kb_size":"315392","kb_used":"0","kb_available":"315392","percent_used":"0%","total_inodes":"78848","inodes_used":"1","inodes_available":"78847","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"],"devices":["tmpfs"]},"/boot":{"kb_size":"487652","kb_used":"52777","kb_available":"409275","percent_used":"12%","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"afc9d16e-72b3-46bd-995d-0ff5bd489127","devices":["/dev/sda1"]},"/vagrant":{"kb_size":"741980832","kb_used":"115032236","kb_available":"626948596","percent_used":"16%","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"],"devices":["vagrant"]},"/proc":{"fs_type":"proc","mount_options":["rw"],"devices":["proc"]},"/sys":{"fs_type":"sysfs","mount_options":["rw"],"devices":["sysfs"]},"/dev/pts":{"fs_type":"devpts","mount_options":["rw","gid=5","mode=620"],"devices":["devpts"]},"/proc/sys/fs/binfmt_misc":{"fs_type":"binfmt_misc","mount_options":["rw"],"devices":["none"]},"/dev":{"fs_type":"devtmpfs","mount_options":["rw","relatime","size=304660k","nr_inodes=76165","mode=755"],"devices":["devtmpfs"]},"/proc/bus/usb":{"fs_type":"usbfs","mount_options":["rw","relatime"],"devices":["/proc/bus/usb"]}},"by_pair":{"/dev/mapper/vg_epplkraw0381t1-lv_root,/":{"device":"/dev/mapper/vg_epplkraw0381t1-lv_root","kb_size":"18261312","kb_used":"2069792","kb_available":"15257224","percent_used":"12%","mount":"/","total_inodes":"1169168","inodes_used":"109582","inodes_available":"1059586","inodes_percent_used":"10%","fs_type":"ext4","mount_options":["rw"],"uuid":"22e7732c-8de5-4929-a338-4face887cb95"},"tmpfs,/dev/shm":{"device":"tmpfs","kb_size":"315392","kb_used":"0","kb_available":"315392","percent_used":"0%","mount":"/dev/shm","total_inodes":"78848","inodes_used":"1","inodes_available":"78847","inodes_percent_used":"1%","fs_type":"tmpfs","mount_options":["rw"]},"/dev/sda1,/boot":{"device":"/dev/sda1","kb_size":"487652","kb_used":"52777","kb_available":"409275","percent_used":"12%","mount":"/boot","total_inodes":"128016","inodes_used":"44","inodes_available":"127972","inodes_percent_used":"1%","fs_type":"ext4","mount_options":["rw"],"uuid":"afc9d16e-72b3-46bd-995d-0ff5bd489127"},"vagrant,/vagrant":{"device":"vagrant","kb_size":"741980832","kb_used":"115032236","kb_available":"626948596","percent_used":"16%","mount":"/vagrant","total_inodes":"1000","inodes_used":"0","inodes_available":"1000","inodes_percent_used":"0%","fs_type":"vboxsf","mount_options":["uid=500","gid=500","rw"]},"proc,/proc":{"device":"proc","mount":"/proc","fs_type":"proc","mount_options":["rw"]},"sysfs,/sys":{"device":"sysfs","mount":"/sys","fs_type":"sysfs","mount_options":["rw"]},"devpts,/dev/pts":{"device":"devpts","mount":"/dev/pts","fs_type":"devpts","mount_options":["rw","gid=5","mode=620"]},"none,/proc/sys/fs/binfmt_misc":{"device":"none","mount":"/proc/sys/fs/binfmt_misc","fs_type":"binfmt_misc","mount_options":["rw"]},"/dev/sda,":{"device":"/dev/sda"},"/dev/sda2,":{"device":"/dev/sda2","fs_type":"LVM2_member","uuid":"xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa"},"/dev/mapper/vg_epplkraw0381t1-lv_swap,":{"device":"/dev/mapper/vg_epplkraw0381t1-lv_swap","fs_type":"swap","uuid":"35eb589b-770a-4fd0-82be-2f2a95ca8eb7"},"rootfs,/":{"device":"rootfs","mount":"/","fs_type":"rootfs","mount_options":["rw"]},"devtmpfs,/dev":{"device":"devtmpfs","mount":"/dev","fs_type":"devtmpfs","mount_options":["rw","relatime","size=304660k","nr_inodes=76165","mode=755"]},"/proc/bus/usb,/proc/bus/usb":{"device":"/proc/bus/usb","mount":"/proc/bus/usb","fs_type":"usbfs","mount_options":["rw","relatime"]}}},"init_package":"init","recipes":["chef_nginx::default","iptables::default","chef_nginx::package","chef_nginx::ohai_plugin","chef_nginx::repo","chef_nginx::commons","chef_nginx::commons_dir","chef_nginx::commons_script","chef_nginx::commons_conf","iptables::_package"],"expanded_run_list":["chef_nginx::default","iptables::default"],"roles":[],"cookbooks":{"chef_nginx":{"version":"6.0.1"},"iptables":{"version":"4.0.1"},"build-essential":{"version":"8.0.0"},"ohai":{"version":"5.0.2"},"yum-epel":{"version":"2.1.1"},"compat_resource":{"version":"12.16.3"},"zypper":{"version":"0.3.0"},"seven_zip":{"version":"2.0.2"},"mingw":{"version":"2.0.0"},"windows":{"version":"3.0.4"}},"nginx":{"version":"1.10.3","configure_arguments":["--prefix=/etc/nginx","--sbin-path=/usr/sbin/nginx","--modules-path=/usr/lib64/nginx/modules","--conf-path=/etc/nginx/nginx.conf","--error-log-path=/var/log/nginx/error.log","--http-log-path=/var/log/nginx/access.log","--pid-path=/var/run/nginx.pid","--lock-path=/var/run/nginx.lock","--http-client-body-temp-path=/var/cache/nginx/client_temp","--http-proxy-temp-path=/var/cache/nginx/proxy_temp","--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp","--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp","--http-scgi-temp-path=/var/cache/nginx/scgi_temp","--user=nginx","--group=nginx","--with-file-aio","--with-threads","--with-ipv6","--with-http_addition_module","--with-http_auth_request_module","--with-http_dav_module","--with-http_flv_module","--with-http_gunzip_module","--with-http_gzip_static_module","--with-http_mp4_module","--with-http_random_index_module","--with-http_realip_module","--with-http_secure_link_module","--with-http_slice_module","--with-http_ssl_module","--with-http_stub_status_module","--with-http_sub_module","--with-http_v2_module","--with-mail","--with-mail_ssl_module","--with-stream","--with-stream_ssl_module","--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC'","--with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie'"],"prefix":"/etc/nginx","conf_path":"/etc/nginx/nginx.conf"}},"normal":{"tags":[],"nginx":{"default_root":"/usr/share/nginx/html"}},"chef_type":"node","default":{"windows":{"rubyzipversion":null},"seven_zip":{"url":"http://www.7-zip.org/a/7z1514-x64.msi","checksum":"cefe1a9092d8a6be68468c33910d6206b40e934fb63cab686c5cccf369fbf712","package_name":"7-Zip 15.14 (x64 edition)","default_extract_timeout":600},"build-essential":{"compile_time":false,"msys2":{"path":"\\msys2"}},"yum-epel":{"repos":["epel","epel-debuginfo","epel-source","epel-testing","epel-testing-debuginfo","epel-testing-source"]},"yum":{"epel-debuginfo":{"repositoryid":"epel-debuginfo","description":"Extra Packages for 6 - $basearch - Debug","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-source":{"repositoryid":"epel-source","description":"Extra Packages for 6 - $basearch - Source","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-testing-debuginfo":{"repositoryid":"epel-testing-debuginfo","description":"Extra Packages for 6 - $basearch - Testing Debug","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-testing-source":{"repositoryid":"epel-testing-source","description":"Extra Packages for 6 - $basearch - Testing Source","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel-testing":{"repositoryid":"epel-testing","description":"Extra Packages for 6 - $basearch - Testing ","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-epel6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":false,"managed":false,"make_cache":true},"epel":{"repositoryid":"epel","description":"Extra Packages for 6 - $basearch","mirrorlist":"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch","gpgkey":"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6","failovermethod":"priority","gpgcheck":true,"enabled":true,"managed":true,"make_cache":true}},"zypper":{"smt_host":null},"nginx":{"version":"1.10.3","package_name":"nginx","port":"80","dir":"/etc/nginx","script_dir":"/usr/sbin","log_dir":"/var/log/nginx","log_dir_perm":"0750","binary":"/usr/sbin/nginx","default_root":"/var/www/nginx-default","ulimit":"1024","repo_source":"nginx","install_method":"package","user":"nginx","upstart":{"runlevels":"2345","respawn_limit":null,"foreground":true},"group":"nginx","gzip":"on","gzip_static":"off","gzip_http_version":"1.0","gzip_comp_level":"2","gzip_proxied":"any","gzip_vary":"off","gzip_buffers":null,"gzip_types":["text/plain","text/css","application/x-javascript","text/xml","application/xml","application/rss+xml","application/atom+xml","image/svg+xml","text/javascript","application/javascript","application/json","text/mathml"],"gzip_min_length":1000,"gzip_disable":"MSIE [1-6]\\.","keepalive":"on","keepalive_requests":100,"keepalive_timeout":65,"worker_processes":2,"worker_connections":1024,"worker_rlimit_nofile":null,"multi_accept":false,"event":null,"accept_mutex_delay":null,"server_tokens":null,"server_names_hash_bucket_size":64,"variables_hash_max_size":1024,"variables_hash_bucket_size":64,"sendfile":"on","underscores_in_headers":null,"tcp_nodelay":"on","tcp_nopush":"on","access_log_options":null,"error_log_options":null,"disable_access_log":false,"log_formats":{},"default_site_enabled":true,"types_hash_max_size":2048,"types_hash_bucket_size":64,"proxy_read_timeout":null,"client_body_buffer_size":null,"client_max_body_size":null,"large_client_header_buffers":null,"default":{"modules":[]},"extra_configs":{},"load_modules":[],"auth_request":{"url":"http://mdounin.ru/hg/ngx_http_auth_request_module/archive/662785733552.tar.gz","checksum":"2057bdefd2137a5000d9dbdbfca049d1ba7832ad2b9f8855a88ea5dfa70bd8c1"},"devel":{"version":"0.3.0","url":"https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz","checksum":"88e05a99a8a7419066f5ae75966fb1efc409bad4522d14986da074554ae61619"},"echo":{"version":"0.59","url":"https://github.com/openresty/echo-nginx-module/archive/v0.59.tar.gz","checksum":"9b319ad7836202883128d2b9c24ed818082541df57ef7f2065b7557085c603cd"},"geoip":{"path":"/srv/geoip","enable_city":true,"country_dat_url":"http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz","country_dat_checksum":null,"city_dat_url":"http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz","city_dat_checksum":null,"lib_version":"1.6.9","lib_url":"https://github.com/maxmind/geoip-api-c/releases/download/v1.6.9/GeoIP-1.6.9.tar.gz","lib_checksum":"4b446491843de67c1af9b887da17a3e5939e0aeed4826923a5f4bf09d845096f"},"headers_more":{"version":"0.30","source_url":"https://github.com/openresty/headers-more-nginx-module/archive/v0.30.tar.gz","source_checksum":"2aad309a9313c21c7c06ee4e71a39c99d4d829e31c8b3e7d76f8c964ea8047f5"},"lua":{"version":"0.10.7","url":"https://github.com/chaoslawful/lua-nginx-module/archive/v0.10.7.tar.gz","checksum":"c21c8937dcdd6fc2b6a955f929e3f4d1388610f47180e60126e6dcab06786f77"},"luajit":{"version":"2.0.4","url":"http://luajit.org/download/LuaJIT-2.0.4.tar.gz","checksum":"620fa4eb12375021bef6e4f237cbd2dd5d49e56beb414bee052c746beef1807d"},"naxsi":{"version":"0.54","url":"https://github.com/nbs-system/naxsi/archive/0.54.tar.gz","checksum":"9cc2c09405bc71f78ef26a8b6d70afcea3fccbe8125df70cb0cfc480133daba5"},"openssl_source":{"version":"1.0.2k","url":"http://www.openssl.org/source/openssl-1.0.2k.tar.gz"},"pagespeed":{"version":"1.11.33.2","url":"https://github.com/pagespeed/ngx_pagespeed/archive/release-1.11.33.2-beta.tar.gz","packages":{"rhel":["pcre-devel","zlib-devel"],"debian":["zlib1g-dev","libpcre3","libpcre3-dev"]}},"psol":{"url":"https://dl.google.com/dl/page-speed/psol/1.11.33.2.tar.gz"},"passenger":{"version":"4.0.57","root":"/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/passenger-4.0.57","ruby":"/opt/chefdk/embedded/bin/ruby","packages":{"rhel":["ruby-devel","libcurl-devel"],"fedora":["ruby-devel","libcurl-devel"],"debian":["ruby-dev","libcurl4-gnutls-dev"]},"install_rake":true,"spawn_method":"smart-lv2","buffer_response":"on","max_pool_size":6,"min_instances":1,"max_instances_per_app":0,"pool_idle_time":300,"max_requests":0,"gem_binary":null,"show_version_in_header":"on","passenger_log_file":null,"nodejs":null},"enable_rate_limiting":false,"rate_limiting_zone_name":"default","rate_limiting_backoff":"10m","rate_limit":"1r/s","upstream_repository":"http://nginx.org/packages/centos/6/$basearch/","set_misc":{"version":"0.30","url":"https://github.com/agentzh/set-misc-nginx-module/archive/v0.30.tar.gz","checksum":"59920dd3f92c2be32627121605751b52eae32b5884be09f2e4c53fb2fae8aabc"},"socketproxy":{"root":"/usr/share/nginx/apps","app_owner":"root","logname":"socketproxy","log_level":"error"},"init_style":"init","source":{"version":"1.10.3","prefix":"/opt/nginx-1.10.3","conf_path":"/etc/nginx/nginx.conf","sbin_path":"/opt/nginx-1.10.3/sbin/nginx","default_configure_flags":["--prefix=/opt/nginx-1.10.3","--conf-path=/etc/nginx/nginx.conf","--sbin-path=/opt/nginx-1.10.3/sbin/nginx"],"url":"http://nginx.org/download/nginx-1.10.3.tar.gz","checksum":"75020f1364cac459cb733c4e1caed2d00376e40ea05588fb8793076a4c69dd90","modules":["chef_nginx::http_ssl_module","chef_nginx::http_gzip_static_module"],"use_existing_user":false},"configure_flags":[],"status":{"port":"8090"},"syslog":{"git_repo":"https://github.com/yaoweibin/nginx_syslog_patch.git","git_revision":"master"},"upload_progress":{"url":"https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0","checksum":"3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2","javascript_output":true,"zone_name":"proxied","zone_size":"1m"}},"iptables":{"iptables_sysconfig":{"IPTABLES_MODULES":"","IPTABLES_MODULES_UNLOAD":"yes","IPTABLES_SAVE_ON_STOP":"no","IPTABLES_SAVE_ON_RESTART":"no","IPTABLES_SAVE_COUNTER":"no","IPTABLES_STATUS_NUMERIC":"yes","IPTABLES_STATUS_VERBOSE":"no","IPTABLES_STATUS_LINENUMBERS":"yes"},"ip6tables_sysconfig":{"IP6TABLES_MODULES":"","IP6TABLES_MODULES_UNLOAD":"yes","IP6TABLES_SAVE_ON_STOP":"no","IP6TABLES_SAVE_ON_RESTART":"no","IP6TABLES_SAVE_COUNTER":"no","IP6TABLES_STATUS_NUMERIC":"yes","IP6TABLES_STATUS_VERBOSE":"no","IP6TABLES_STATUS_LINENUMBERS":"yes"},"system_ruby":"/usr/bin/ruby"}},"override":{},"run_list":["recipe[chef_nginx::default]","recipe[iptables::default]"]}
--- END PUT BODY ---
[2017-04-05T17:48:04+01:00] DEBUG: #<ChefZero::RestRequest:0x00000006554a00
 @body=
  "{\"name\":\"epplkraw0381t1.budapest.epam.com\",\"chef_environment\":\"_default\",\"json_class\":\"Chef::Node\",\"automatic\":{\"network\":{\"interfaces\":{\"lo\":{\"mtu\":\"65536\",\"flags\":[\"LOOPBACK\",\"UP\",\"LOWER_UP\"],\"encapsulation\":\"Loopback\",\"addresses\":{\"127.0.0.1\":{\"family\":\"inet\",\"prefixlen\":\"8\",\"netmask\":\"255.0.0.0\",\"scope\":\"Node\"},\"::1\":{\"family\":\"inet6\",\"prefixlen\":\"128\",\"scope\":\"Node\",\"tags\":[]}},\"state\":\"unknown\",\"routes\":[{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"},{\"destination\":\"unreachable\",\"family\":\"inet6\",\"metric\":\"1024\"}]},\"eth0\":{\"type\":\"eth\",\"number\":\"0\",\"mtu\":\"1500\",\"flags\":[\"BROADCAST\",\"MULTICAST\",\"UP\",\"LOWER_UP\"],\"encapsulation\":\"Ethernet\",\"addresses\":{\"08:00:27:14:BD:1C\":{\"family\":\"lladdr\"},\"10.0.2.15\":{\"family\":\"inet\",\"prefixlen\":\"24\",\"netmask\":\"255.255.255.0\",\"broadcast\":\"10.0.2.255\",\"scope\":\"Global\"},\"fe80::a00:27ff:fe14:bd1c\":{\"family\":\"inet6\",\"prefixlen\":\"64\",\"scope\":\"Link\",\"tags\":[]}},\"state\":\"up\",\"arp\":{\"10.0.2.3\":\"52:54:00:12:35:03\",\"10.0.2.2\":\"52:54:00:12:35:02\"},\"routes\":[{\"destination\":\"10.0.2.0/24\",\"family\":\"inet\",\"scope\":\"link\",\"proto\":\"kernel\",\"src\":\"10.0.2.15\"},{\"destination\":\"169.254.0.0/16\",\"family\":\"inet\",\"scope\":\"link\",\"metric\":\"1002\"},{\"destination\":\"default\",\"family\":\"inet\",\"via\":\"10.0.2.2\"},{\"destination\":\"fe80::/64\",\"family\":\"inet6\",\"metric\":\"256\",\"proto\":\"kernel\"}],\"link_speed\":1000,\"duplex\":\"Full\",\"port\":\"Twisted Pair\",\"transceiver\":\"internal\",\"auto_negotiation\":\"on\",\"mdi_x\":\"off (auto)\",\"ring_params\":{\"max_rx\":4096,\"max_rx_mini\":0,\"max_rx_jumbo\":0,\"max_tx\":4096,\"current_rx\":256,\"current_rx_mini\":0,\"current_rx_jumbo\":0,\"current_tx\":256}}},\"default_interface\":\"eth0\",\"default_gateway\":\"10.0.2.2\"},\"counters\":{\"network\":{\"interfaces\":{\"lo\":{\"rx\":{\"bytes\":\"0\",\"packets\":\"0\",\"errors\":\"0\",\"drop\":\"0\",\"overrun\":\"0\"},\"tx\":{\"bytes\":\"0\",\"packets\":\"0\",\"errors\":\"0\",\"drop\":\"0\",\"carrier\":\"0\",\"collisions\":\"0\"}},\"eth0\":{\"tx\":{\"queuelen\":\"1000\",\"bytes\":\"5398361\",\"packets\":\"86309\",\"errors\":\"0\",\"drop\":\"0\",\"carrier\":\"0\",\"collisions\":\"0\"},\"rx\":{\"bytes\":\"270901057\",\"packets\":\"195138\",\"errors\":\"0\",\"drop\":\"0\",\"overrun\":\"0\"}}}}},\"ipaddress\":\"10.0.2.15\",\"macaddress\":\"08:00:27:14:BD:1C\",\"ip6address\":\"fe80::a00:27ff:fe14:bd1c\",\"languages\":{\"lua\":{\"version\":\"5.1.4\"},\"python\":{\"version\":\"2.6.6\",\"builddate\":\"Aug 18 2016, 15:13:37\"},\"ruby\":{\"platform\":\"x86_64-linux\",\"version\":\"2.3.1\",\"release_date\":\"2016-04-26\",\"target\":\"x86_64-pc-linux-gnu\",\"target_cpu\":\"x86_64\",\"target_vendor\":\"pc\",\"target_os\":\"linux\",\"host\":\"x86_64-pc-linux-gnu\",\"host_cpu\":\"x86_64\",\"host_os\":\"linux-gnu\",\"host_vendor\":\"pc\",\"bin_dir\":\"/opt/chefdk/embedded/bin\",\"ruby_bin\":\"/opt/chefdk/embedded/bin/ruby\",\"gems_dir\":\"/opt/chefdk/embedded/lib/ruby/gems/2.3.0\",\"gem_bin\":\"/opt/chefdk/embedded/bin/gem\"},\"c\":{\"gcc\":{\"target\":\"x86_64-redhat-linux\",\"configured_with\":\"../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux\",\"thread_model\":\"posix\",\"description\":\"gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) \",\"version\":\"4.4.7\"},\"glibc\":{\"version\":\"2.12\",\"description\":\"GNU C Library stable release version 2.12, by Roland McGrath et al.\"}},\"perl\":{\"version\":\"5.10.1\",\"archname\":\"x86_64-linux-thread-multi\"}},\"keys\":{\"ssh\":{\"host_dsa_public\":\"AAAAB3NzaC1kc3MAAACBANRg2eSCm2FL9pxKQZYQgvxstWOVn1GlBJhgXXSHd+vkbahn8r0Jx0B/zxArQDeEZLlahJ+UcKGYCK/R77qC8b0IrMgNRfIjtfJ/pscwA+fzP4v63jL1FssKLu2xfimH9xMD+UHf+wWmvJayiQ/zOBZp7cEK28jHBKrZ0JOdLPAnAAAAFQCrmWTAcfnC3FzwRfwUUzziZV3zAQAAAIEAwyyKL9vJn7kl7b1uYj294mTz+5Phoz/PiAPyo/r8OimbkFVzgfkPRsu+EMxtrUZ3cHnhpuM+U8gRjYyCuzPDyuUbeuy6TXXsKRO3g90EoXhbR7WfvPMEeT7FWBxpGaWX5h0FQSUk5s+9XCP2xL3DwcdSAajvb4QHF1CEzHJY2xgAAACBAInhe4M5RxOFOJpnoFBmCOw0NYZISp+hTVqf5+SznSpzctmz/klpvW70g9VkC+wvp6ylNEyAkB05a+aKd0l24hKSlhYiVyLv4dKrfS2sQoVR0Le70PiqN7SmlPvn7JfBPGk9eQ9N03IBfIkUPUIq6bagNj29B90MbuKi29pTYo5B\",\"host_rsa_public\":\"AAAAB3NzaC1yc2EAAAABIwAAAQEA5VA60xxhdYmaAsYVU/jkVV7JkVDnIB6RkXmpL/y0FH6Y/1Qu0yop7FewxHy4lzTj80FcA6TKEStTT5R6fPVRoH8kd1s3hbajK7F/YYd96NOxq7W0ant7brRZLcBqrduSVGeVqOGMCQLuVDoO6AgjOGLfjRYFSZnQ5PW4pjmpnmL5Z/fOR7EyF/LIOFkwRRO6w+fSsR5Ye5Moy2dKyAT1c6lgdDXsBsZkBDWok8qjOJBTw5DBIMXjuyMAm8qgxQe6reyyM3RRoBYNecIEFf/0qcYOPa1LGuG8Si9D6ZswDT/ECu3xnqibs65MLw7n9ud0YIuAdUivhbHxYHIDe+aBzQ==\"}},\"kernel\":{\"name\":\"Linux\",\"release\":\"2.6.32-642.13.1.el6.x86_64\",\"version\":\"#1 SMP Wed Jan 11 20:56:24 UTC 2017\",\"machine\":\"x86_64\",\"processor\":\"x86_64\",\"os\":\"GNU/Linux\",\"modules\":{\"vboxsf\":{\"size\":\"37955\",\"refcount\":\"1\",\"version\":\"5.1.14 r112924\"},\"nls_utf8\":{\"size\":\"1455\",\"refcount\":\"0\"},\"ipv6\":{\"size\":\"336282\",\"refcount\":\"16\"},\"sg\":{\"size\":\"29318\",\"refcount\":\"0\",\"version\":\"3.5.34\"},\"i2c_piix4\":{\"size\":\"11232\",\"refcount\":\"0\"},\"i2c_core\":{\"size\":\"29132\",\"refcount\":\"1\"},\"e1000\":{\"size\":\"134895\",\"refcount\":\"0\",\"version\":\"7.3.21-k8-NAPI\"},\"vboxguest\":{\"size\":\"284807\",\"refcount\":\"1\",\"version\":\"5.0.26 r108824\"},\"ext4\":{\"size\":\"379559\",\"refcount\":\"2\"},\"jbd2\":{\"size\":\"93252\",\"refcount\":\"1\"},\"mbcache\":{\"size\":\"8193\",\"refcount\":\"1\"},\"sd_mod\":{\"size\":\"37158\",\"refcount\":\"3\"},\"crc_t10dif\":{\"size\":\"1209\",\"refcount\":\"1\"},\"ahci\":{\"size\":\"43154\",\"refcount\":\"2\",\"version\":\"3.0\"},\"pata_acpi\":{\"size\":\"3701\",\"refcount\":\"0\",\"version\":\"0.2.3\"},\"ata_generic\":{\"size\":\"3837\",\"refcount\":\"0\",\"version\":\"0.2.15\"},\"ata_piix\":{\"size\":\"24409\",\"refcount\":\"0\",\"version\":\"2.13\"},\"video\":{\"size\":\"21654\",\"refcount\":\"0\"},\"output\":{\"size\":\"2409\",\"refcount\":\"1\"},\"dm_mirror\":{\"size\":\"14864\",\"refcount\":\"0\"},\"dm_region_hash\":{\"size\":\"12085\",\"refcount\":\"1\"},\"dm_log\":{\"size\":\"9930\",\"refcount\":\"2\"},\"dm_mod\":{\"size\":\"102467\",\"refcount\":\"8\"}}},\"os\":\"linux\",\"os_version\":\"2.6.32-642.13.1.el6.x86_64\",\"lsb\":{},\"platform\":\"centos\",\"platform_version\":\"6.8\",\"platform_family\":\"rhel\",\"virtualization\":{\"systems\":{\"vbox\":\"guest\"},\"system\":\"vbox\",\"role\":\"guest\"},\"dmi\":{},\"memory\":{\"swap\":{\"cached\":\"44kB\",\"total\":\"1277948kB\",\"free\":\"1277800kB\"},\"hugepages\":{\"total\":\"0\",\"free\":\"0\",\"reserved\":\"0\",\"surplus\":\"0\"},\"total\":\"630788kB\",\"free\":\"141964kB\",\"buffers\":\"73104kB\",\"cached\":\"182876kB\",\"active\":\"300684kB\",\"inactive\":\"101336kB\",\"dirty\":\"5904kB\",\"writeback\":\"0kB\",\"anon_pages\":\"146008kB\",\"mapped\":\"10796kB\",\"slab\":\"69616kB\",\"slab_reclaimable\":\"48000kB\",\"slab_unreclaim\":\"21616kB\",\"page_tables\":\"2684kB\",\"nfs_unstable\":\"0kB\",\"bounce\":\"0kB\",\"commit_limit\":\"1593340kB\",\"committed_as\":\"243096kB\",\"vmalloc_total\":\"34359738367kB\",\"vmalloc_used\":\"23956kB\",\"vmalloc_chunk\":\"34359704568kB\",\"hugepage_size\":\"2048kB\"},\"cpu\":{\"0\":{\"vendor_id\":\"GenuineIntel\",\"family\":\"6\",\"model\":\"58\",\"model_name\":\"Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz\",\"stepping\":\"9\",\"mhz\":\"3221.842\",\"cache_size\":\"6144 KB\",\"physical_id\":\"0\",\"core_id\":\"0\",\"cores\":\"2\",\"flags\":[\"fpu\",\"vme\",\"de\",\"pse\",\"tsc\",\"msr\",\"pae\",\"mce\",\"cx8\",\"apic\",\"sep\",\"mtrr\",\"pge\",\"mca\",\"cmov\",\"pat\",\"pse36\",\"clflush\",\"mmx\",\"fxsr\",\"sse\",\"sse2\",\"ht\",\"syscall\",\"nx\",\"rdtscp\",\"lm\",\"constant_tsc\",\"rep_good\",\"xtopology\",\"nonstop_tsc\",\"unfair_spinlock\",\"pni\",\"pclmulqdq\",\"ssse3\",\"cx16\",\"sse4_1\",\"sse4_2\",\"popcnt\",\"aes\",\"xsave\",\"avx\",\"rdrand\",\"hypervisor\",\"lahf_lm\"]},\"1\":{\"vendor_id\":\"GenuineIntel\",\"family\":\"6\",\"model\":\"58\",\"model_name\":\"Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz\",\"stepping\":\"9\",\"mhz\":\"3221.842\",\"cache_size\":\"6144 KB\",\"physical_id\":\"0\",\"core_id\":\"1\",\"cores\":\"2\",\"flags\":[\"fpu\",\"vme\",\"de\",\"pse\",\"tsc\",\"msr\",\"pae\",\"mce\",\"cx8\",\"apic\",\"sep\",\"mtrr\",\"pge\",\"mca\",\"cmov\",\"pat\",\"pse36\",\"clflush\",\"mmx\",\"fxsr\",\"sse\",\"sse2\",\"ht\",\"syscall\",\"nx\",\"rdtscp\",\"lm\",\"constant_tsc\",\"rep_good\",\"xtopology\",\"nonstop_tsc\",\"unfair_spinlock\",\"pni\",\"pclmulqdq\",\"ssse3\",\"cx16\",\"sse4_1\",\"sse4_2\",\"popcnt\",\"aes\",\"xsave\",\"avx\",\"rdrand\",\"hypervisor\",\"lahf_lm\"]},\"total\":2,\"real\":1,\"cores\":2},\"sysconf\":{\"LINK_MAX\":32000,\"_POSIX_LINK_MAX\":32000,\"MAX_CANON\":255,\"_POSIX_MAX_CANON\":255,\"MAX_INPUT\":255,\"_POSIX_MAX_INPUT\":255,\"NAME_MAX\":255,\"_POSIX_NAME_MAX\":255,\"PATH_MAX\":4096,\"_POSIX_PATH_MAX\":4096,\"PIPE_BUF\":4096,\"_POSIX_PIPE_BUF\":4096,\"SOCK_MAXBUF\":null,\"_POSIX_ASYNC_IO\":null,\"_POSIX_CHOWN_RESTRICTED\":1,\"_POSIX_NO_TRUNC\":1,\"_POSIX_PRIO_IO\":null,\"_POSIX_SYNC_IO\":null,\"_POSIX_VDISABLE\":0,\"ARG_MAX\":2621440,\"ATEXIT_MAX\":2147483647,\"CHAR_BIT\":8,\"CHAR_MAX\":127,\"CHAR_MIN\":-128,\"CHILD_MAX\":2380,\"CLK_TCK\":100,\"INT_MAX\":2147483647,\"INT_MIN\":-2147483648,\"IOV_MAX\":1024,\"LOGNAME_MAX\":256,\"LONG_BIT\":64,\"MB_LEN_MAX\":16,\"NGROUPS_MAX\":65536,\"NL_ARGMAX\":4096,\"NL_LANGMAX\":2048,\"NL_MSGMAX\":2147483647,\"NL_NMAX\":2147483647,\"NL_SETMAX\":2147483647,\"NL_TEXTMAX\":2147483647,\"NSS_BUFLEN_GROUP\":1024,\"NSS_BUFLEN_PASSWD\":1024,\"NZERO\":20,\"OPEN_MAX\":1024,\"PAGESIZE\":4096,\"PAGE_SIZE\":4096,\"PASS_MAX\":8192,\"PTHREAD_DESTRUCTOR_ITERATIONS\":4,\"PTHREAD_KEYS_MAX\":1024,\"PTHREAD_STACK_MIN\":16384,\"PTHREAD_THREADS_MAX\":null,\"SCHAR_MAX\":127,\"SCHAR_MIN\":-128,\"SHRT_MAX\":32767,\"SHRT_MIN\":-32768,\"SSIZE_MAX\":32767,\"TTY_NAME_MAX\":32,\"TZNAME_MAX\":6,\"UCHAR_MAX\":255,\"UINT_MAX\":4294967295,\"UIO_MAXIOV\":1024,\"ULONG_MAX\":18446744073709551615,\"USHRT_MAX\":65535,\"WORD_BIT\":32,\"_AVPHYS_PAGES\":35495,\"_NPROCESSORS_CONF\":2,\"_NPROCESSORS_ONLN\":2,\"_PHYS_PAGES\":157697,\"_POSIX_ARG_MAX\":2621440,\"_POSIX_ASYNCHRONOUS_IO\":200809,\"_POSIX_CHILD_MAX\":2380,\"_POSIX_FSYNC\":200809,\"_POSIX_JOB_CONTROL\":1,\"_POSIX_MAPPED_FILES\":200809,\"_POSIX_MEMLOCK\":200809,\"_POSIX_MEMLOCK_RANGE\":200809,\"_POSIX_MEMORY_PROTECTION\":200809,\"_POSIX_MESSAGE_PASSING\":200809,\"_POSIX_NGROUPS_MAX\":65536,\"_POSIX_OPEN_MAX\":1024,\"_POSIX_PII\":null,\"_POSIX_PII_INTERNET\":null,\"_POSIX_PII_INTERNET_DGRAM\":null,\"_POSIX_PII_INTERNET_STREAM\":null,\"_POSIX_PII_OSI\":null,\"_POSIX_PII_OSI_CLTS\":null,\"_POSIX_PII_OSI_COTS\":null,\"_POSIX_PII_OSI_M\":null,\"_POSIX_PII_SOCKET\":null,\"_POSIX_PII_XTI\":null,\"_POSIX_POLL\":null,\"_POSIX_PRIORITIZED_IO\":200809,\"_POSIX_PRIORITY_SCHEDULING\":200809,\"_POSIX_REALTIME_SIGNALS\":200809,\"_POSIX_SAVED_IDS\":1,\"_POSIX_SELECT\":null,\"_POSIX_SEMAPHORES\":200809,\"_POSIX_SHARED_MEMORY_OBJECTS\":200809,\"_POSIX_SSIZE_MAX\":32767,\"_POSIX_STREAM_MAX\":16,\"_POSIX_SYNCHRONIZED_IO\":200809,\"_POSIX_THREADS\":200809,\"_POSIX_THREAD_ATTR_STACKADDR\":200809,\"_POSIX_THREAD_ATTR_STACKSIZE\":200809,\"_POSIX_THREAD_PRIORITY_SCHEDULING\":200809,\"_POSIX_THREAD_PRIO_INHERIT\":200809,\"_POSIX_THREAD_PRIO_PROTECT\":200809,\"_POSIX_THREAD_ROBUST_PRIO_INHERIT\":null,\"_POSIX_THREAD_ROBUST_PRIO_PROTECT\":null,\"_POSIX_THREAD_PROCESS_SHARED\":200809,\"_POSIX_THREAD_SAFE_FUNCTIONS\":200809,\"_POSIX_TIMERS\":200809,\"TIMER_MAX\":null,\"_POSIX_TZNAME_MAX\":6,\"_POSIX_VERSION\":200809,\"_T_IOV_MAX\":null,\"_XOPEN_CRYPT\":1,\"_XOPEN_ENH_I18N\":1,\"_XOPEN_LEGACY\":1,\"_XOPEN_REALTIME\":1,\"_XOPEN_REALTIME_THREADS\":1,\"_XOPEN_SHM\":1,\"_XOPEN_UNIX\":1,\"_XOPEN_VERSION\":700,\"_XOPEN_XCU_VERSION\":4,\"_XOPEN_XPG2\":1,\"_XOPEN_XPG3\":1,\"_XOPEN_XPG4\":1,\"BC_BASE_MAX\":99,\"BC_DIM_MAX\":2048,\"BC_SCALE_MAX\":99,\"BC_STRING_MAX\":1000,\"CHARCLASS_NAME_MAX\":2048,\"COLL_WEIGHTS_MAX\":255,\"EQUIV_CLASS_MAX\":null,\"EXPR_NEST_MAX\":32,\"LINE_MAX\":2048,\"POSIX2_BC_BASE_MAX\":99,\"POSIX2_BC_DIM_MAX\":2048,\"POSIX2_BC_SCALE_MAX\":99,\"POSIX2_BC_STRING_MAX\":1000,\"POSIX2_CHAR_TERM\":200809,\"POSIX2_COLL_WEIGHTS_MAX\":255,\"POSIX2_C_BIND\":200809,\"POSIX2_C_DEV\":200809,\"POSIX2_C_VERSION\":null,\"POSIX2_EXPR_NEST_MAX\":32,\"POSIX2_FORT_DEV\":null,\"POSIX2_FORT_RUN\":null,\"_POSIX2_LINE_MAX\":2048,\"POSIX2_LINE_MAX\":2048,\"POSIX2_LOCALEDEF\":200809,\"POSIX2_RE_DUP_MAX\":32767,\"POSIX2_SW_DEV\":200809,\"POSIX2_UPE\":null,\"POSIX2_VERSION\":200809,\"RE_DUP_MAX\":32767,\"PATH\":\"/bin:/usr/bin\",\"CS_PATH\":\"/bin:/usr/bin\",\"LFS_CFLAGS\":null,\"LFS_LDFLAGS\":null,\"LFS_LIBS\":null,\"LFS_LINTFLAGS\":null,\"LFS64_CFLAGS\":\"-D_LARGEFILE64_SOURCE\",\"LFS64_LDFLAGS\":null,\"LFS64_LIBS\":null,\"LFS64_LINTFLAGS\":\"-D_LARGEFILE64_SOURCE\",\"_XBS5_WIDTH_RESTRICTED_ENVS\":\"XBS5_LP64_OFF64\",\"XBS5_WIDTH_RESTRICTED_ENVS\":\"XBS5_LP64_OFF64\",\"_XBS5_ILP32_OFF32\":null,\"XBS5_ILP32_OFF32_CFLAGS\":null,\"XBS5_ILP32_OFF32_LDFLAGS\":null,\"XBS5_ILP32_OFF32_LIBS\":null,\"XBS5_ILP32_OFF32_LINTFLAGS\":null,\"_XBS5_ILP32_OFFBIG\":null,\"XBS5_ILP32_OFFBIG_CFLAGS\":null,\"XBS5_ILP32_OFFBIG_LDFLAGS\":null,\"XBS5_ILP32_OFFBIG_LIBS\":null,\"XBS5_ILP32_OFFBIG_LINTFLAGS\":null,\"_XBS5_LP64_OFF64\":1,\"XBS5_LP64_OFF64_CFLAGS\":\"-m64\",\"XBS5_LP64_OFF64_LDFLAGS\":\"-m64\",\"XBS5_LP64_OFF64_LIBS\":null,\"XBS5_LP64_OFF64_LINTFLAGS\":null,\"_XBS5_LPBIG_OFFBIG\":null,\"XBS5_LPBIG_OFFBIG_CFLAGS\":null,\"XBS5_LPBIG_OFFBIG_LDFLAGS\":null,\"XBS5_LPBIG_OFFBIG_LIBS\":null,\"XBS5_LPBIG_OFFBIG_LINTFLAGS\":null,\"_POSIX_V6_ILP32_OFF32\":null,\"POSIX_V6_ILP32_OFF32_CFLAGS\":null,\"POSIX_V6_ILP32_OFF32_LDFLAGS\":null,\"POSIX_V6_ILP32_OFF32_LIBS\":null,\"POSIX_V6_ILP32_OFF32_LINTFLAGS\":null,\"_POSIX_V6_WIDTH_RESTRICTED_ENVS\":\"POSIX_V6_LP64_OFF64\",\"POSIX_V6_WIDTH_RESTRICTED_ENVS\":\"POSIX_V6_LP64_OFF64\",\"_POSIX_V6_ILP32_OFFBIG\":null,\"POSIX_V6_ILP32_OFFBIG_CFLAGS\":null,\"POSIX_V6_ILP32_OFFBIG_LDFLAGS\":null,\"POSIX_V6_ILP32_OFFBIG_LIBS\":null,\"POSIX_V6_ILP32_OFFBIG_LINTFLAGS\":null,\"_POSIX_V6_LP64_OFF64\":1,\"POSIX_V6_LP64_OFF64_CFLAGS\":\"-m64\",\"POSIX_V6_LP64_OFF64_LDFLAGS\":\"-m64\",\"POSIX_V6_LP64_OFF64_LIBS\":null,\"POSIX_V6_LP64_OFF64_LINTFLAGS\":null,\"_POSIX_V6_LPBIG_OFFBIG\":null,\"POSIX_V6_LPBIG_OFFBIG_CFLAGS\":null,\"POSIX_V6_LPBIG_OFFBIG_LDFLAGS\":null,\"POSIX_V6_LPBIG_OFFBIG_LIBS\":null,\"POSIX_V6_LPBIG_OFFBIG_LINTFLAGS\":null,\"_POSIX_V7_ILP32_OFF32\":null,\"POSIX_V7_ILP32_OFF32_CFLAGS\":null,\"POSIX_V7_ILP32_OFF32_LDFLAGS\":null,\"POSIX_V7_ILP32_OFF32_LIBS\":null,\"POSIX_V7_ILP32_OFF32_LINTFLAGS\":null,\"_POSIX_V7_WIDTH_RESTRICTED_ENVS\":\"POSIX_V7_LP64_OFF64\",\"POSIX_V7_WIDTH_RESTRICTED_ENVS\":\"POSIX_V7_LP64_OFF64\",\"_POSIX_V7_ILP32_OFFBIG\":null,\"POSIX_V7_ILP32_OFFBIG_CFLAGS\":null,\"POSIX_V7_ILP32_OFFBIG_LDFLAGS\":null,\"POSIX_V7_ILP32_OFFBIG_LIBS\":null,\"POSIX_V7_ILP32_OFFBIG_LINTFLAGS\":null,\"_POSIX_V7_LP64_OFF64\":1,\"POSIX_V7_LP64_OFF64_CFLAGS\":\"-m64\",\"POSIX_V7_LP64_OFF64_LDFLAGS\":\"-m64\",\"POSIX_V7_LP64_OFF64_LIBS\":null,\"POSIX_V7_LP64_OFF64_LINTFLAGS\":null,\"_POSIX_V7_LPBIG_OFFBIG\":null,\"POSIX_V7_LPBIG_OFFBIG_CFLAGS\":null,\"POSIX_V7_LPBIG_OFFBIG_LDFLAGS\":null,\"POSIX_V7_LPBIG_OFFBIG_LIBS\":null,\"POSIX_V7_LPBIG_OFFBIG_LINTFLAGS\":null,\"_POSIX_ADVISORY_INFO\":200809,\"_POSIX_BARRIERS\":200809,\"_POSIX_BASE\":null,\"_POSIX_C_LANG_SUPPORT\":null,\"_POSIX_C_LANG_SUPPORT_R\":null,\"_POSIX_CLOCK_SELECTION\":200809,\"_POSIX_CPUTIME\":200809,\"_POSIX_THREAD_CPUTIME\":200809,\"_POSIX_DEVICE_SPECIFIC\":null,\"_POSIX_DEVICE_SPECIFIC_R\":null,\"_POSIX_FD_MGMT\":null,\"_POSIX_FIFO\":null,\"_POSIX_PIPE\":null,\"_POSIX_FILE_ATTRIBUTES\":null,\"_POSIX_FILE_LOCKING\":null,\"_POSIX_FILE_SYSTEM\":null,\"_POSIX_MONOTONIC_CLOCK\":200809,\"_POSIX_MULTI_PROCESS\":null,\"_POSIX_SINGLE_PROCESS\":null,\"_POSIX_NETWORKING\":null,\"_POSIX_READER_WRITER_LOCKS\":200809,\"_POSIX_SPIN_LOCKS\":200809,\"_POSIX_REGEXP\":1,\"_REGEX_VERSION\":null,\"_POSIX_SHELL\":1,\"_POSIX_SIGNALS\":null,\"_POSIX_SPAWN\":200809,\"_POSIX_SPORADIC_SERVER\":null,\"_POSIX_THREAD_SPORADIC_SERVER\":null,\"_POSIX_SYSTEM_DATABASE\":null,\"_POSIX_SYSTEM_DATABASE_R\":null,\"_POSIX_TIMEOUTS\":200809,\"_POSIX_TYPED_MEMORY_OBJECTS\":null,\"_POSIX_USER_GROUPS\":null,\"_POSIX_USER_GROUPS_R\":null,\"POSIX2_PBS\":null,\"POSIX2_PBS_ACCOUNTING\":null,\"POSIX2_PBS_LOCATE\":null,\"POSIX2_PBS_TRACK\":null,\"POSIX2_PBS_MESSAGE\":null,\"SYMLOOP_MAX\":null,\"STREAM_MAX\":16,\"AIO_LISTIO_MAX\":null,\"AIO_MAX\":null,\"AIO_PRIO_DELTA_MAX\":20,\"DELAYTIMER_MAX\":2147483647,\"HOST_NAME_MAX\":64,\"LOGIN_NAME_MAX\":256,\"MQ_OPEN_MAX\":null,\"MQ_PRIO_MAX\":32768,\"_POSIX_DEVICE_IO\":null,\"_POSIX_TRACE\":null,\"_POSIX_TRACE_EVENT_FILTER\":null,\"_POSIX_TRACE_INHERIT\":null,\"_POSIX_TRACE_LOG\":null,\"RTSIG_MAX\":32,\"SEM_NSEMS_MAX\":null,\"SEM_VALUE_MAX\":2147483647,\"SIGQUEUE_MAX\":2380,\"FILESIZEBITS\":64,\"POSIX_ALLOC_SIZE_MIN\":4096,\"POSIX_REC_INCR_XFER_SIZE\":null,\"POSIX_REC_MAX_XFER_SIZE\":null,\"POSIX_REC_MIN_XFER_SIZE\":4096,\"POSIX_REC_XFER_ALIGN\":4096,\"SYMLINK_MAX\":null,\"GNU_LIBC_VERSION\":\"glibc 2.12\",\"GNU_LIBPTHREAD_VERSION\":\"NPTL 2.12\",\"POSIX2_SYMLINKS\":1,\"LEVEL1_ICACHE_SIZE\":32768,\"LEVEL1_ICACHE_ASSOC\":8,\"LEVEL1_ICACHE_LINESIZE\":64,\"LEVEL1_DCACHE_SIZE\":32768,\"LEVEL1_DCACHE_ASSOC\":8,\"LEVEL1_DCACHE_LINESIZE\":64,\"LEVEL2_CACHE_SIZE\":262144,\"LEVEL2_CACHE_ASSOC\":8,\"LEVEL2_CACHE_LINESIZE\":64,\"LEVEL3_CACHE_SIZE\":6291456,\"LEVEL3_CACHE_ASSOC\":12,\"LEVEL3_CACHE_LINESIZE\":64,\"LEVEL4_CACHE_SIZE\":0,\"LEVEL4_CACHE_ASSOC\":0,\"LEVEL4_CACHE_LINESIZE\":0,\"IPV6\":200809,\"RAW_SOCKETS\":200809},\"filesystem\":{\"/dev/mapper/vg_epplkraw0381t1-lv_root\":{\"kb_size\":\"18261312\",\"kb_used\":\"2069776\",\"kb_available\":\"15257240\",\"percent_used\":\"12%\",\"mount\":\"/\",\"total_inodes\":\"1169168\",\"inodes_used\":\"109582\",\"inodes_available\":\"1059586\",\"inodes_percent_used\":\"10%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"22e7732c-8de5-4929-a338-4face887cb95\"},\"tmpfs\":{\"kb_size\":\"315392\",\"kb_used\":\"0\",\"kb_available\":\"315392\",\"percent_used\":\"0%\",\"mount\":\"/dev/shm\",\"total_inodes\":\"78848\",\"inodes_used\":\"1\",\"inodes_available\":\"78847\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"]},\"/dev/sda1\":{\"kb_size\":\"487652\",\"kb_used\":\"52777\",\"kb_available\":\"409275\",\"percent_used\":\"12%\",\"mount\":\"/boot\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"afc9d16e-72b3-46bd-995d-0ff5bd489127\"},\"vagrant\":{\"kb_size\":\"741980832\",\"kb_used\":\"115032236\",\"kb_available\":\"626948596\",\"percent_used\":\"16%\",\"mount\":\"/vagrant\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"]},\"proc\":{\"mount\":\"/proc\",\"fs_type\":\"proc\",\"mount_options\":[\"rw\"]},\"sysfs\":{\"mount\":\"/sys\",\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"]},\"devpts\":{\"mount\":\"/dev/pts\",\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"]},\"none\":{\"mount\":\"/proc/sys/fs/binfmt_misc\",\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"]},\"/dev/sda2\":{\"fs_type\":\"LVM2_member\",\"uuid\":\"xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa\"},\"/dev/mapper/vg_epplkraw0381t1-lv_swap\":{\"fs_type\":\"swap\",\"uuid\":\"35eb589b-770a-4fd0-82be-2f2a95ca8eb7\"},\"rootfs\":{\"mount\":\"/\",\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"]},\"devtmpfs\":{\"mount\":\"/dev\",\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=304660k\",\"nr_inodes=76165\",\"mode=755\"]},\"/proc/bus/usb\":{\"mount\":\"/proc/bus/usb\",\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"]}},\"fips\":{\"kernel\":{\"enabled\":false}},\"etc\":{\"passwd\":{\"root\":{\"dir\":\"/root\",\"gid\":0,\"uid\":0,\"shell\":\"/bin/bash\",\"gecos\":\"root\"},\"bin\":{\"dir\":\"/bin\",\"gid\":1,\"uid\":1,\"shell\":\"/sbin/nologin\",\"gecos\":\"bin\"},\"daemon\":{\"dir\":\"/sbin\",\"gid\":2,\"uid\":2,\"shell\":\"/sbin/nologin\",\"gecos\":\"daemon\"},\"adm\":{\"dir\":\"/var/adm\",\"gid\":4,\"uid\":3,\"shell\":\"/sbin/nologin\",\"gecos\":\"adm\"},\"lp\":{\"dir\":\"/var/spool/lpd\",\"gid\":7,\"uid\":4,\"shell\":\"/sbin/nologin\",\"gecos\":\"lp\"},\"sync\":{\"dir\":\"/sbin\",\"gid\":0,\"uid\":5,\"shell\":\"/bin/sync\",\"gecos\":\"sync\"},\"shutdown\":{\"dir\":\"/sbin\",\"gid\":0,\"uid\":6,\"shell\":\"/sbin/shutdown\",\"gecos\":\"shutdown\"},\"halt\":{\"dir\":\"/sbin\",\"gid\":0,\"uid\":7,\"shell\":\"/sbin/halt\",\"gecos\":\"halt\"},\"mail\":{\"dir\":\"/var/spool/mail\",\"gid\":12,\"uid\":8,\"shell\":\"/sbin/nologin\",\"gecos\":\"mail\"},\"uucp\":{\"dir\":\"/var/spool/uucp\",\"gid\":14,\"uid\":10,\"shell\":\"/sbin/nologin\",\"gecos\":\"uucp\"},\"operator\":{\"dir\":\"/root\",\"gid\":0,\"uid\":11,\"shell\":\"/sbin/nologin\",\"gecos\":\"operator\"},\"games\":{\"dir\":\"/usr/games\",\"gid\":100,\"uid\":12,\"shell\":\"/sbin/nologin\",\"gecos\":\"games\"},\"gopher\":{\"dir\":\"/var/gopher\",\"gid\":30,\"uid\":13,\"shell\":\"/sbin/nologin\",\"gecos\":\"gopher\"},\"ftp\":{\"dir\":\"/var/ftp\",\"gid\":50,\"uid\":14,\"shell\":\"/sbin/nologin\",\"gecos\":\"FTP User\"},\"nobody\":{\"dir\":\"/\",\"gid\":99,\"uid\":99,\"shell\":\"/sbin/nologin\",\"gecos\":\"Nobody\"},\"vcsa\":{\"dir\":\"/dev\",\"gid\":69,\"uid\":69,\"shell\":\"/sbin/nologin\",\"gecos\":\"virtual console memory owner\"},\"saslauth\":{\"dir\":\"/var/empty/saslauth\",\"gid\":76,\"uid\":499,\"shell\":\"/sbin/nologin\",\"gecos\":\"Saslauthd user\"},\"postfix\":{\"dir\":\"/var/spool/postfix\",\"gid\":89,\"uid\":89,\"shell\":\"/sbin/nologin\",\"gecos\":\"\"},\"sshd\":{\"dir\":\"/var/empty/sshd\",\"gid\":74,\"uid\":74,\"shell\":\"/sbin/nologin\",\"gecos\":\"Privilege-separated SSH\"},\"vagrant\":{\"dir\":\"/home/vagrant\",\"gid\":500,\"uid\":500,\"shell\":\"/bin/bash\",\"gecos\":\"vagrant\"},\"vboxadd\":{\"dir\":\"/var/run/vboxadd\",\"gid\":1,\"uid\":498,\"shell\":\"/bin/false\",\"gecos\":\"\"}},\"group\":{\"root\":{\"gid\":0,\"members\":[]},\"bin\":{\"gid\":1,\"members\":[\"bin\",\"daemon\"]},\"daemon\":{\"gid\":2,\"members\":[\"bin\",\"daemon\"]},\"sys\":{\"gid\":3,\"members\":[\"bin\",\"adm\"]},\"adm\":{\"gid\":4,\"members\":[\"adm\",\"daemon\"]},\"tty\":{\"gid\":5,\"members\":[]},\"disk\":{\"gid\":6,\"members\":[]},\"lp\":{\"gid\":7,\"members\":[\"daemon\"]},\"mem\":{\"gid\":8,\"members\":[]},\"kmem\":{\"gid\":9,\"members\":[]},\"wheel\":{\"gid\":10,\"members\":[]},\"mail\":{\"gid\":12,\"members\":[\"mail\",\"postfix\"]},\"uucp\":{\"gid\":14,\"members\":[]},\"man\":{\"gid\":15,\"members\":[]},\"games\":{\"gid\":20,\"members\":[]},\"gopher\":{\"gid\":30,\"members\":[]},\"video\":{\"gid\":39,\"members\":[]},\"dip\":{\"gid\":40,\"members\":[]},\"ftp\":{\"gid\":50,\"members\":[]},\"lock\":{\"gid\":54,\"members\":[]},\"audio\":{\"gid\":63,\"members\":[]},\"nobody\":{\"gid\":99,\"members\":[]},\"users\":{\"gid\":100,\"members\":[]},\"floppy\":{\"gid\":19,\"members\":[]},\"vcsa\":{\"gid\":69,\"members\":[]},\"utmp\":{\"gid\":22,\"members\":[]},\"utempter\":{\"gid\":35,\"members\":[]},\"cdrom\":{\"gid\":11,\"members\":[]},\"tape\":{\"gid\":33,\"members\":[]},\"dialout\":{\"gid\":18,\"members\":[]},\"saslauth\":{\"gid\":76,\"members\":[]},\"postdrop\":{\"gid\":90,\"members\":[]},\"postfix\":{\"gid\":89,\"members\":[]},\"fuse\":{\"gid\":499,\"members\":[]},\"sshd\":{\"gid\":74,\"members\":[]},\"vagrant\":{\"gid\":500,\"members\":[\"vagrant\"]},\"vboxsf\":{\"gid\":498,\"members\":[]}}},\"current_user\":\"root\",\"chef_packages\":{\"chef\":{\"version\":\"12.18.31\",\"chef_root\":\"/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib\"},\"ohai\":{\"version\":\"8.23.0\",\"ohai_root\":\"/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai\"}},\"time\":{\"timezone\":\"BST\"},\"root_group\":\"root\",\"ohai_time\":1491410872.9440804,\"virtualbox\":{\"host\":{\"language\":\"en_US\",\"revision\":\"112924\",\"version\":\"5.1.14\"},\"guest\":{\"guest_additions_version\":\"5.0.26\",\"guest_additions_revision\":\"108824\"}},\"uptime_seconds\":4538,\"uptime\":\"1 hours 15 minutes 38 seconds\",\"idletime_seconds\":8888,\"idletime\":\"2 hours 28 minutes 08 seconds\",\"command\":{\"ps\":\"ps -ef\"},\"cloud_v2\":null,\"packages\":{\"vim-minimal\":{\"epoch\":\"2\",\"version\":\"7.4.629\",\"release\":\"5.el6_8.1\",\"installdate\":\"1485473413\",\"arch\":\"x86_64\"},\"setup\":{\"epoch\":\"0\",\"version\":\"2.8.14\",\"release\":\"20.el6_4.1\",\"installdate\":\"1485473162\",\"arch\":\"noarch\"},\"python\":{\"epoch\":\"0\",\"version\":\"2.6.6\",\"release\":\"66.el6_8\",\"installdate\":\"1485473414\",\"arch\":\"x86_64\"},\"basesystem\":{\"epoch\":\"0\",\"version\":\"10.0\",\"release\":\"4.el6\",\"installdate\":\"1485473163\",\"arch\":\"noarch\"},\"iscsi-initiator-utils\":{\"epoch\":\"0\",\"version\":\"6.2.0.873\",\"release\":\"22.el6_8\",\"installdate\":\"1485473416\",\"arch\":\"x86_64\"},\"sudo\":{\"epoch\":\"0\",\"version\":\"1.8.6p3\",\"release\":\"25.el6_8\",\"installdate\":\"1485473416\",\"arch\":\"x86_64\"},\"glibc-common\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1485473172\",\"arch\":\"x86_64\"},\"selinux-policy-targeted\":{\"epoch\":\"0\",\"version\":\"3.7.19\",\"release\":\"292.el6_8.2\",\"installdate\":\"1485473417\",\"arch\":\"noarch\"},\"glibc\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1485473177\",\"arch\":\"x86_64\"},\"openssh-server\":{\"epoch\":\"0\",\"version\":\"5.3p1\",\"release\":\"118.1.el6_8\",\"installdate\":\"1485473440\",\"arch\":\"x86_64\"},\"db4-utils\":{\"epoch\":\"0\",\"version\":\"4.7.25\",\"release\":\"20.el6_8.1\",\"installdate\":\"1485473441\",\"arch\":\"x86_64\"},\"libcap\":{\"epoch\":\"0\",\"version\":\"2.16\",\"release\":\"5.5.el6\",\"installdate\":\"1485473177\",\"arch\":\"x86_64\"},\"kernel-devel\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.el6\",\"installdate\":\"1485473365\",\"arch\":\"x86_64\"},\"info\":{\"epoch\":\"0\",\"version\":\"4.13a\",\"release\":\"8.el6\",\"installdate\":\"1485473177\",\"arch\":\"x86_64\"},\"tzdata\":{\"epoch\":\"0\",\"version\":\"2016j\",\"release\":\"1.el6\",\"installdate\":\"1485473446\",\"arch\":\"noarch\"},\"audit-libs\":{\"epoch\":\"0\",\"version\":\"2.4.5\",\"release\":\"3.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"libgcc\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406422\",\"arch\":\"x86_64\"},\"libacl\":{\"epoch\":\"0\",\"version\":\"2.2.49\",\"release\":\"6.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"libstdc++-devel\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406424\",\"arch\":\"x86_64\"},\"nspr\":{\"epoch\":\"0\",\"version\":\"4.11.0\",\"release\":\"1.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"perl-libs\":{\"epoch\":\"4\",\"version\":\"5.10.1\",\"release\":\"144.el6\",\"installdate\":\"1491406424\",\"arch\":\"x86_64\"},\"libselinux\":{\"epoch\":\"0\",\"version\":\"2.0.94\",\"release\":\"7.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"perl-Module-Pluggable\":{\"epoch\":\"1\",\"version\":\"3.90\",\"release\":\"144.el6\",\"installdate\":\"1491406425\",\"arch\":\"x86_64\"},\"sed\":{\"epoch\":\"0\",\"version\":\"4.2.1\",\"release\":\"10.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"perl\":{\"epoch\":\"4\",\"version\":\"5.10.1\",\"release\":\"144.el6\",\"installdate\":\"1491406427\",\"arch\":\"x86_64\"},\"readline\":{\"epoch\":\"0\",\"version\":\"6.0\",\"release\":\"4.el6\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"libgomp\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406427\",\"arch\":\"x86_64\"},\"gawk\":{\"epoch\":\"0\",\"version\":\"3.1.7\",\"release\":\"10.el6_7.3\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"gcc\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406429\",\"arch\":\"x86_64\"},\"chef\":{\"epoch\":\"0\",\"version\":\"12.19.36\",\"release\":\"1.el6\",\"installdate\":\"1491408707\",\"arch\":\"x86_64\"},\"libgpg-error\":{\"epoch\":\"0\",\"version\":\"1.7\",\"release\":\"4.el6\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"unzip\":{\"epoch\":\"0\",\"version\":\"6.0\",\"release\":\"5.el6\",\"installdate\":\"1491409251\",\"arch\":\"x86_64\"},\"rsync\":{\"epoch\":\"0\",\"version\":\"3.0.6\",\"release\":\"12.el6\",\"installdate\":\"1491409504\",\"arch\":\"x86_64\"},\"pcre\":{\"epoch\":\"0\",\"version\":\"7.8\",\"release\":\"7.el6\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"git\":{\"epoch\":\"0\",\"version\":\"1.7.1\",\"release\":\"8.el6\",\"installdate\":\"1491409505\",\"arch\":\"x86_64\"},\"lua\":{\"epoch\":\"0\",\"version\":\"5.1.4\",\"release\":\"4.1.el6\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"cyrus-sasl-lib\":{\"epoch\":\"0\",\"version\":\"2.1.23\",\"release\":\"15.el6_6.2\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"elfutils-libelf\":{\"epoch\":\"0\",\"version\":\"0.164\",\"release\":\"2.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"findutils\":{\"epoch\":\"1\",\"version\":\"4.4.2\",\"release\":\"9.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"checkpolicy\":{\"epoch\":\"0\",\"version\":\"2.0.22\",\"release\":\"1.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"which\":{\"epoch\":\"0\",\"version\":\"2.19\",\"release\":\"6.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"pth\":{\"epoch\":\"0\",\"version\":\"2.0.7\",\"release\":\"9.3.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"sysvinit-tools\":{\"epoch\":\"0\",\"version\":\"2.87\",\"release\":\"6.dsf.el6\",\"installdate\":\"1485473181\",\"arch\":\"x86_64\"},\"libtasn1\":{\"epoch\":\"0\",\"version\":\"2.3\",\"release\":\"6.el6_5\",\"installdate\":\"1485473181\",\"arch\":\"x86_64\"},\"p11-kit-trust\":{\"epoch\":\"0\",\"version\":\"0.18.5\",\"release\":\"2.el6_5.2\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"gmp\":{\"epoch\":\"0\",\"version\":\"4.3.1\",\"release\":\"10.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"libnih\":{\"epoch\":\"0\",\"version\":\"1.0.1\",\"release\":\"7.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"file\":{\"epoch\":\"0\",\"version\":\"5.04\",\"release\":\"30.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"psmisc\":{\"epoch\":\"0\",\"version\":\"22.6\",\"release\":\"19.el6_5\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"procps\":{\"epoch\":\"0\",\"version\":\"3.2.8\",\"release\":\"36.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"e2fsprogs-libs\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1485473183\",\"arch\":\"x86_64\"},\"diffutils\":{\"epoch\":\"0\",\"version\":\"2.8.1\",\"release\":\"28.el6\",\"installdate\":\"1485473183\",\"arch\":\"x86_64\"},\"dash\":{\"epoch\":\"0\",\"version\":\"0.5.5.1\",\"release\":\"4.el6\",\"installdate\":\"1485473184\",\"arch\":\"x86_64\"},\"groff\":{\"epoch\":\"0\",\"version\":\"1.18.1.4\",\"release\":\"21.el6\",\"installdate\":\"1485473185\",\"arch\":\"x86_64\"},\"coreutils-libs\":{\"epoch\":\"0\",\"version\":\"8.4\",\"release\":\"43.el6\",\"installdate\":\"1485473185\",\"arch\":\"x86_64\"},\"cracklib\":{\"epoch\":\"0\",\"version\":\"2.8.16\",\"release\":\"4.el6\",\"installdate\":\"1485473185\",\"arch\":\"x86_64\"},\"coreutils\":{\"epoch\":\"0\",\"version\":\"8.4\",\"release\":\"43.el6\",\"installdate\":\"1485473186\",\"arch\":\"x86_64\"},\"module-init-tools\":{\"epoch\":\"0\",\"version\":\"3.9\",\"release\":\"25.el6\",\"installdate\":\"1485473187\",\"arch\":\"x86_64\"},\"redhat-logos\":{\"epoch\":\"0\",\"version\":\"60.0.14\",\"release\":\"12.el6.centos\",\"installdate\":\"1485473188\",\"arch\":\"noarch\"},\"libpciaccess\":{\"epoch\":\"0\",\"version\":\"0.13.4\",\"release\":\"1.el6\",\"installdate\":\"1485473188\",\"arch\":\"x86_64\"},\"libedit\":{\"epoch\":\"0\",\"version\":\"2.11\",\"release\":\"4.20080712cvs.1.el6\",\"installdate\":\"1485473189\",\"arch\":\"x86_64\"},\"mingetty\":{\"epoch\":\"0\",\"version\":\"1.08\",\"release\":\"5.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"krb5-libs\":{\"epoch\":\"0\",\"version\":\"1.10.3\",\"release\":\"57.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"libssh2\":{\"epoch\":\"0\",\"version\":\"1.4.2\",\"release\":\"2.el6_7.1\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"rpm-libs\":{\"epoch\":\"0\",\"version\":\"4.8.0\",\"release\":\"55.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"rpm\":{\"epoch\":\"0\",\"version\":\"4.8.0\",\"release\":\"55.el6\",\"installdate\":\"1485473191\",\"arch\":\"x86_64\"},\"gnupg2\":{\"epoch\":\"0\",\"version\":\"2.0.14\",\"release\":\"8.el6\",\"installdate\":\"1485473191\",\"arch\":\"x86_64\"},\"fipscheck-lib\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"7.el6\",\"installdate\":\"1485473191\",\"arch\":\"x86_64\"},\"mysql-libs\":{\"epoch\":\"0\",\"version\":\"5.1.73\",\"release\":\"7.el6\",\"installdate\":\"1485473192\",\"arch\":\"x86_64\"},\"pciutils-libs\":{\"epoch\":\"0\",\"version\":\"3.1.10\",\"release\":\"4.el6\",\"installdate\":\"1485473192\",\"arch\":\"x86_64\"},\"libcap-ng\":{\"epoch\":\"0\",\"version\":\"0.6.4\",\"release\":\"3.el6_0.1\",\"installdate\":\"1485473192\",\"arch\":\"x86_64\"},\"python-pycurl\":{\"epoch\":\"0\",\"version\":\"7.19.0\",\"release\":\"9.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"pygpgme\":{\"epoch\":\"0\",\"version\":\"0.1\",\"release\":\"18.20090824bzr68.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"python-iniparse\":{\"epoch\":\"0\",\"version\":\"0.3.1\",\"release\":\"2.1.el6\",\"installdate\":\"1485473197\",\"arch\":\"noarch\"},\"newt\":{\"epoch\":\"0\",\"version\":\"0.52.11\",\"release\":\"3.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"ustr\":{\"epoch\":\"0\",\"version\":\"1.0.4\",\"release\":\"9.1.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"shadow-utils\":{\"epoch\":\"2\",\"version\":\"4.1.5.1\",\"release\":\"5.el6\",\"installdate\":\"1485473198\",\"arch\":\"x86_64\"},\"libutempter\":{\"epoch\":\"0\",\"version\":\"1.1.5\",\"release\":\"4.1.el6\",\"installdate\":\"1485473199\",\"arch\":\"x86_64\"},\"gamin\":{\"epoch\":\"0\",\"version\":\"0.1.10\",\"release\":\"9.el6\",\"installdate\":\"1485473199\",\"arch\":\"x86_64\"},\"shared-mime-info\":{\"epoch\":\"0\",\"version\":\"0.70\",\"release\":\"6.el6\",\"installdate\":\"1485473199\",\"arch\":\"x86_64\"},\"grubby\":{\"epoch\":\"0\",\"version\":\"7.0.15\",\"release\":\"7.el6\",\"installdate\":\"1485473200\",\"arch\":\"x86_64\"},\"yum-plugin-fastestmirror\":{\"epoch\":\"0\",\"version\":\"1.1.30\",\"release\":\"37.el6\",\"installdate\":\"1485473200\",\"arch\":\"noarch\"},\"dbus-glib\":{\"epoch\":\"0\",\"version\":\"0.86\",\"release\":\"6.el6\",\"installdate\":\"1485473200\",\"arch\":\"x86_64\"},\"centos-release\":{\"epoch\":\"0\",\"version\":\"6\",\"release\":\"8.el6.centos.12.3\",\"installdate\":\"1485473200\",\"arch\":\"x86_64\"},\"iptables\":{\"epoch\":\"0\",\"version\":\"1.4.7\",\"release\":\"16.el6\",\"installdate\":\"1485473201\",\"arch\":\"x86_64\"},\"libdrm\":{\"epoch\":\"0\",\"version\":\"2.4.65\",\"release\":\"2.el6\",\"installdate\":\"1485473201\",\"arch\":\"x86_64\"},\"plymouth\":{\"epoch\":\"0\",\"version\":\"0.8.3\",\"release\":\"27.el6.centos.1\",\"installdate\":\"1485473201\",\"arch\":\"x86_64\"},\"cryptsetup-luks-libs\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"11.el6\",\"installdate\":\"1485473203\",\"arch\":\"x86_64\"},\"kpartx\":{\"epoch\":\"0\",\"version\":\"0.4.9\",\"release\":\"93.el6\",\"installdate\":\"1485473203\",\"arch\":\"x86_64\"},\"cyrus-sasl\":{\"epoch\":\"0\",\"version\":\"2.1.23\",\"release\":\"15.el6_6.2\",\"installdate\":\"1485473203\",\"arch\":\"x86_64\"},\"crontabs\":{\"epoch\":\"0\",\"version\":\"1.10\",\"release\":\"33.el6\",\"installdate\":\"1485473205\",\"arch\":\"noarch\"},\"kbd\":{\"epoch\":\"0\",\"version\":\"1.15\",\"release\":\"11.el6\",\"installdate\":\"1485473207\",\"arch\":\"x86_64\"},\"fuse\":{\"epoch\":\"0\",\"version\":\"2.8.3\",\"release\":\"5.el6\",\"installdate\":\"1485473213\",\"arch\":\"x86_64\"},\"system-config-firewall-base\":{\"epoch\":\"0\",\"version\":\"1.2.27\",\"release\":\"7.2.el6_6\",\"installdate\":\"1485473243\",\"arch\":\"noarch\"},\"cryptsetup-luks\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"11.el6\",\"installdate\":\"1485473244\",\"arch\":\"x86_64\"},\"dhclient\":{\"epoch\":\"12\",\"version\":\"4.1.1\",\"release\":\"51.P1.el6.centos\",\"installdate\":\"1485473245\",\"arch\":\"x86_64\"},\"passwd\":{\"epoch\":\"0\",\"version\":\"0.77\",\"release\":\"7.el6\",\"installdate\":\"1485473246\",\"arch\":\"x86_64\"},\"grub\":{\"epoch\":\"1\",\"version\":\"0.97\",\"release\":\"94.el6_7.1\",\"installdate\":\"1485473246\",\"arch\":\"x86_64\"},\"e2fsprogs\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1485473247\",\"arch\":\"x86_64\"},\"acl\":{\"epoch\":\"0\",\"version\":\"2.2.49\",\"release\":\"6.el6\",\"installdate\":\"1485473247\",\"arch\":\"x86_64\"},\"bridge-utils\":{\"epoch\":\"0\",\"version\":\"1.2\",\"release\":\"10.el6\",\"installdate\":\"1485473247\",\"arch\":\"x86_64\"},\"epel-release\":{\"epoch\":\"0\",\"version\":\"6\",\"release\":\"8\",\"installdate\":\"1485473332\",\"arch\":\"noarch\"},\"mpfr\":{\"epoch\":\"0\",\"version\":\"2.4.1\",\"release\":\"6.el6\",\"installdate\":\"1485473356\",\"arch\":\"x86_64\"},\"ppl\":{\"epoch\":\"0\",\"version\":\"0.10.2\",\"release\":\"11.el6\",\"installdate\":\"1485473359\",\"arch\":\"x86_64\"},\"glibc-headers\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1485473360\",\"arch\":\"x86_64\"},\"openssl\":{\"epoch\":\"0\",\"version\":\"1.0.1e\",\"release\":\"48.el6_8.3\",\"installdate\":\"1485473400\",\"arch\":\"x86_64\"},\"nss-util\":{\"epoch\":\"0\",\"version\":\"3.21.3\",\"release\":\"1.el6_8\",\"installdate\":\"1485473401\",\"arch\":\"x86_64\"},\"nss-softokn-freebl\":{\"epoch\":\"0\",\"version\":\"3.14.3\",\"release\":\"23.3.el6_8\",\"installdate\":\"1485473401\",\"arch\":\"x86_64\"},\"nss-sysinit\":{\"epoch\":\"0\",\"version\":\"3.21.3\",\"release\":\"2.el6_8\",\"installdate\":\"1485473401\",\"arch\":\"x86_64\"},\"db4\":{\"epoch\":\"0\",\"version\":\"4.7.25\",\"release\":\"20.el6_8.1\",\"installdate\":\"1485473402\",\"arch\":\"x86_64\"},\"libblkid\":{\"epoch\":\"0\",\"version\":\"2.17.2\",\"release\":\"12.24.el6_8.1\",\"installdate\":\"1485473402\",\"arch\":\"x86_64\"},\"kernel-firmware\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.13.1.el6\",\"installdate\":\"1485473405\",\"arch\":\"noarch\"},\"dracut-kernel\":{\"epoch\":\"0\",\"version\":\"004\",\"release\":\"409.el6_8.2\",\"installdate\":\"1485473405\",\"arch\":\"noarch\"},\"kernel\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.el6\",\"installdate\":\"1485473212\",\"arch\":\"x86_64\"},\"udev\":{\"epoch\":\"0\",\"version\":\"147\",\"release\":\"2.73.el6_8.2\",\"installdate\":\"1485473411\",\"arch\":\"x86_64\"},\"device-mapper\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6_8.1\",\"installdate\":\"1485473412\",\"arch\":\"x86_64\"},\"openssh\":{\"epoch\":\"0\",\"version\":\"5.3p1\",\"release\":\"118.1.el6_8\",\"installdate\":\"1485473412\",\"arch\":\"x86_64\"},\"selinux-policy\":{\"epoch\":\"0\",\"version\":\"3.7.19\",\"release\":\"292.el6_8.2\",\"installdate\":\"1485473413\",\"arch\":\"noarch\"},\"lvm2-libs\":{\"epoch\":\"0\",\"version\":\"2.02.143\",\"release\":\"7.el6_8.1\",\"installdate\":\"1485473413\",\"arch\":\"x86_64\"},\"cronie\":{\"epoch\":\"0\",\"version\":\"1.4.4\",\"release\":\"16.el6_8.2\",\"installdate\":\"1485473413\",\"arch\":\"x86_64\"},\"expat\":{\"epoch\":\"0\",\"version\":\"2.0.1\",\"release\":\"13.el6_8\",\"installdate\":\"1485473414\",\"arch\":\"x86_64\"},\"filesystem\":{\"epoch\":\"0\",\"version\":\"2.4.30\",\"release\":\"3.el6\",\"installdate\":\"1485473163\",\"arch\":\"x86_64\"},\"python-libs\":{\"epoch\":\"0\",\"version\":\"2.6.6\",\"release\":\"66.el6_8\",\"installdate\":\"1485473415\",\"arch\":\"x86_64\"},\"ncurses-base\":{\"epoch\":\"0\",\"version\":\"5.7\",\"release\":\"4.20090207.el6\",\"installdate\":\"1485473163\",\"arch\":\"x86_64\"},\"yum\":{\"epoch\":\"0\",\"version\":\"3.2.29\",\"release\":\"75.el6.centos\",\"installdate\":\"1485473416\",\"arch\":\"noarch\"},\"lvm2\":{\"epoch\":\"0\",\"version\":\"2.02.143\",\"release\":\"7.el6_8.1\",\"installdate\":\"1485473416\",\"arch\":\"x86_64\"},\"openssh-clients\":{\"epoch\":\"0\",\"version\":\"5.3p1\",\"release\":\"118.1.el6_8\",\"installdate\":\"1485473440\",\"arch\":\"x86_64\"},\"ncurses-libs\":{\"epoch\":\"0\",\"version\":\"5.7\",\"release\":\"4.20090207.el6\",\"installdate\":\"1485473177\",\"arch\":\"x86_64\"},\"mdadm\":{\"epoch\":\"0\",\"version\":\"3.3.4\",\"release\":\"1.el6_8.5\",\"installdate\":\"1485473441\",\"arch\":\"x86_64\"},\"libattr\":{\"epoch\":\"0\",\"version\":\"2.4.44\",\"release\":\"7.el6\",\"installdate\":\"1485473177\",\"arch\":\"x86_64\"},\"nss-tools\":{\"epoch\":\"0\",\"version\":\"3.21.3\",\"release\":\"2.el6_8\",\"installdate\":\"1485473441\",\"arch\":\"x86_64\"},\"zlib\":{\"epoch\":\"0\",\"version\":\"1.2.3\",\"release\":\"29.el6\",\"installdate\":\"1485473177\",\"arch\":\"x86_64\"},\"libxml2\":{\"epoch\":\"0\",\"version\":\"2.7.6\",\"release\":\"21.el6_8.1\",\"installdate\":\"1485473445\",\"arch\":\"x86_64\"},\"popt\":{\"epoch\":\"0\",\"version\":\"1.13\",\"release\":\"7.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"libgcrypt\":{\"epoch\":\"0\",\"version\":\"1.4.5\",\"release\":\"12.el6_8\",\"installdate\":\"1485473447\",\"arch\":\"x86_64\"},\"libcom_err\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"libstdc++\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406423\",\"arch\":\"x86_64\"},\"perl-Pod-Escapes\":{\"epoch\":\"1\",\"version\":\"1.04\",\"release\":\"144.el6\",\"installdate\":\"1491406424\",\"arch\":\"x86_64\"},\"libsepol\":{\"epoch\":\"0\",\"version\":\"2.0.41\",\"release\":\"4.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"perl-Pod-Simple\":{\"epoch\":\"1\",\"version\":\"3.13\",\"release\":\"144.el6\",\"installdate\":\"1491406425\",\"arch\":\"x86_64\"},\"chkconfig\":{\"epoch\":\"0\",\"version\":\"1.3.49.5\",\"release\":\"1.el6\",\"installdate\":\"1485473178\",\"arch\":\"x86_64\"},\"perl-version\":{\"epoch\":\"3\",\"version\":\"0.77\",\"release\":\"144.el6\",\"installdate\":\"1491406425\",\"arch\":\"x86_64\"},\"binutils\":{\"epoch\":\"0\",\"version\":\"2.20.51.0.2\",\"release\":\"5.46.el6\",\"installdate\":\"1491406427\",\"arch\":\"x86_64\"},\"bzip2-libs\":{\"epoch\":\"0\",\"version\":\"1.0.5\",\"release\":\"7.el6_0\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"cpp\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406428\",\"arch\":\"x86_64\"},\"gcc-c++\":{\"epoch\":\"0\",\"version\":\"4.4.7\",\"release\":\"18.el6\",\"installdate\":\"1491406430\",\"arch\":\"x86_64\"},\"file-libs\":{\"epoch\":\"0\",\"version\":\"5.04\",\"release\":\"30.el6\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"chefdk\":{\"epoch\":\"0\",\"version\":\"1.2.22\",\"release\":\"1.el6\",\"installdate\":\"1491408734\",\"arch\":\"x86_64\"},\"dbus-libs\":{\"epoch\":\"1\",\"version\":\"1.2.24\",\"release\":\"8.el6_6\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"perl-Error\":{\"epoch\":\"1\",\"version\":\"0.17015\",\"release\":\"4.el6\",\"installdate\":\"1491409503\",\"arch\":\"noarch\"},\"perl-Git\":{\"epoch\":\"0\",\"version\":\"1.7.1\",\"release\":\"8.el6\",\"installdate\":\"1491409504\",\"arch\":\"noarch\"},\"sqlite\":{\"epoch\":\"0\",\"version\":\"3.6.20\",\"release\":\"1.el6_7.2\",\"installdate\":\"1485473179\",\"arch\":\"x86_64\"},\"libidn\":{\"epoch\":\"0\",\"version\":\"1.18\",\"release\":\"2.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"xz-libs\":{\"epoch\":\"0\",\"version\":\"4.999.9\",\"release\":\"0.5.beta.20091007git.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"bzip2\":{\"epoch\":\"0\",\"version\":\"1.0.5\",\"release\":\"7.el6_0\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"libselinux-utils\":{\"epoch\":\"0\",\"version\":\"2.0.94\",\"release\":\"7.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"cpio\":{\"epoch\":\"0\",\"version\":\"2.10\",\"release\":\"12.el6_5\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"tcp_wrappers-libs\":{\"epoch\":\"0\",\"version\":\"7.6\",\"release\":\"58.el6\",\"installdate\":\"1485473180\",\"arch\":\"x86_64\"},\"libaio\":{\"epoch\":\"0\",\"version\":\"0.3.107\",\"release\":\"10.el6\",\"installdate\":\"1485473181\",\"arch\":\"x86_64\"},\"p11-kit\":{\"epoch\":\"0\",\"version\":\"0.18.5\",\"release\":\"2.el6_5.2\",\"installdate\":\"1485473181\",\"arch\":\"x86_64\"},\"device-mapper-persistent-data\":{\"epoch\":\"0\",\"version\":\"0.6.2\",\"release\":\"0.1.rc7.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"libusb\":{\"epoch\":\"0\",\"version\":\"0.1.12\",\"release\":\"23.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"upstart\":{\"epoch\":\"0\",\"version\":\"0.6.5\",\"release\":\"16.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"pinentry\":{\"epoch\":\"0\",\"version\":\"0.7.6\",\"release\":\"8.el6\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"net-tools\":{\"epoch\":\"0\",\"version\":\"1.60\",\"release\":\"110.el6_2\",\"installdate\":\"1485473182\",\"arch\":\"x86_64\"},\"libss\":{\"epoch\":\"0\",\"version\":\"1.41.12\",\"release\":\"22.el6\",\"installdate\":\"1485473183\",\"arch\":\"x86_64\"},\"m4\":{\"epoch\":\"0\",\"version\":\"1.4.13\",\"release\":\"5.el6\",\"installdate\":\"1485473183\",\"arch\":\"x86_64\"},\"make\":{\"epoch\":\"1\",\"version\":\"3.81\",\"release\":\"23.el6\",\"installdate\":\"1485473183\",\"arch\":\"x86_64\"},\"ncurses\":{\"epoch\":\"0\",\"version\":\"5.7\",\"release\":\"4.20090207.el6\",\"installdate\":\"1485473184\",\"arch\":\"x86_64\"},\"less\":{\"epoch\":\"0\",\"version\":\"436\",\"release\":\"13.el6\",\"installdate\":\"1485473185\",\"arch\":\"x86_64\"},\"gzip\":{\"epoch\":\"0\",\"version\":\"1.3.12\",\"release\":\"22.el6\",\"installdate\":\"1485473185\",\"arch\":\"x86_64\"},\"cracklib-dicts\":{\"epoch\":\"0\",\"version\":\"2.8.16\",\"release\":\"4.el6\",\"installdate\":\"1485473185\",\"arch\":\"x86_64\"},\"pam\":{\"epoch\":\"0\",\"version\":\"1.1.1\",\"release\":\"22.el6\",\"installdate\":\"1485473187\",\"arch\":\"x86_64\"},\"hwdata\":{\"epoch\":\"0\",\"version\":\"0.233\",\"release\":\"16.1.el6\",\"installdate\":\"1485473187\",\"arch\":\"noarch\"},\"plymouth-scripts\":{\"epoch\":\"0\",\"version\":\"0.8.3\",\"release\":\"27.el6.centos.1\",\"installdate\":\"1485473188\",\"arch\":\"x86_64\"},\"ca-certificates\":{\"epoch\":\"0\",\"version\":\"2015.2.6\",\"release\":\"65.0.1.el6_7\",\"installdate\":\"1485473188\",\"arch\":\"noarch\"},\"logrotate\":{\"epoch\":\"0\",\"version\":\"3.7.8\",\"release\":\"26.el6_7\",\"installdate\":\"1485473189\",\"arch\":\"x86_64\"},\"gdbm\":{\"epoch\":\"0\",\"version\":\"1.8.0\",\"release\":\"39.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"keyutils-libs\":{\"epoch\":\"0\",\"version\":\"1.4\",\"release\":\"5.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"libcurl\":{\"epoch\":\"0\",\"version\":\"7.19.7\",\"release\":\"52.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"curl\":{\"epoch\":\"0\",\"version\":\"7.19.7\",\"release\":\"52.el6\",\"installdate\":\"1485473190\",\"arch\":\"x86_64\"},\"openldap\":{\"epoch\":\"0\",\"version\":\"2.4.40\",\"release\":\"12.el6\",\"installdate\":\"1485473191\",\"arch\":\"x86_64\"},\"gpgme\":{\"epoch\":\"0\",\"version\":\"1.1.8\",\"release\":\"3.el6\",\"installdate\":\"1485473191\",\"arch\":\"x86_64\"},\"fipscheck\":{\"epoch\":\"0\",\"version\":\"1.2.0\",\"release\":\"7.el6\",\"installdate\":\"1485473191\",\"arch\":\"x86_64\"},\"ethtool\":{\"epoch\":\"2\",\"version\":\"3.5\",\"release\":\"6.el6\",\"installdate\":\"1485473192\",\"arch\":\"x86_64\"},\"plymouth-core-libs\":{\"epoch\":\"0\",\"version\":\"0.8.3\",\"release\":\"27.el6.centos.1\",\"installdate\":\"1485473192\",\"arch\":\"x86_64\"},\"libffi\":{\"epoch\":\"0\",\"version\":\"3.0.5\",\"release\":\"3.2.el6\",\"installdate\":\"1485473192\",\"arch\":\"x86_64\"},\"python-urlgrabber\":{\"epoch\":\"0\",\"version\":\"3.9.1\",\"release\":\"11.el6\",\"installdate\":\"1485473197\",\"arch\":\"noarch\"},\"rpm-python\":{\"epoch\":\"0\",\"version\":\"4.8.0\",\"release\":\"55.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"slang\":{\"epoch\":\"0\",\"version\":\"2.2.1\",\"release\":\"1.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"newt-python\":{\"epoch\":\"0\",\"version\":\"0.52.11\",\"release\":\"3.el6\",\"installdate\":\"1485473197\",\"arch\":\"x86_64\"},\"libsemanage\":{\"epoch\":\"0\",\"version\":\"2.0.43\",\"release\":\"5.1.el6\",\"installdate\":\"1485473198\",\"arch\":\"x86_64\"},\"MAKEDEV\":{\"epoch\":\"0\",\"version\":\"3.24\",\"release\":\"6.el6\",\"installdate\":\"1485473199\",\"arch\":\"x86_64\"},\"pkgconfig\":{\"epoch\":\"1\",\"version\":\"0.23\",\"release\":\"9.1.el6\",\"installdate\":\"1485473199\",\"arch\":\"x86_64\"},\"glib2\":{\"epoch\":\"0\",\"version\":\"2.28.8\",\"release\":\"5.el6\",\"installdate\":\"1485473199\",\"arch\":\"x86_64\"},\"libuser\":{\"epoch\":\"0\",\"version\":\"0.56.13\",\"release\":\"8.el6_7\",\"installdate\":\"1485473200\",\"arch\":\"x86_64\"},\"yum-metadata-parser\":{\"epoch\":\"0\",\"version\":\"1.1.2\",\"release\":\"16.el6\",\"installdate\":\"1485473200\",\"arch\":\"x86_64\"},\"dhcp-common\":{\"epoch\":\"12\",\"version\":\"4.1.1\",\"release\":\"51.P1.el6.centos\",\"installdate\":\"1485473200\",\"arch\":\"x86_64\"},\"iproute\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"54.el6\",\"installdate\":\"1485473201\",\"arch\":\"x86_64\"},\"iputils\":{\"epoch\":\"0\",\"version\":\"20071127\",\"release\":\"21.el6\",\"installdate\":\"1485473201\",\"arch\":\"x86_64\"},\"device-mapper-multipath-libs\":{\"epoch\":\"0\",\"version\":\"0.4.9\",\"release\":\"93.el6\",\"installdate\":\"1485473203\",\"arch\":\"x86_64\"},\"rsyslog\":{\"epoch\":\"0\",\"version\":\"5.8.10\",\"release\":\"10.el6_6\",\"installdate\":\"1485473203\",\"arch\":\"x86_64\"},\"postfix\":{\"epoch\":\"2\",\"version\":\"2.6.6\",\"release\":\"6.el6_7.1\",\"installdate\":\"1485473204\",\"arch\":\"x86_64\"},\"iptables-ipv6\":{\"epoch\":\"0\",\"version\":\"1.4.7\",\"release\":\"16.el6\",\"installdate\":\"1485473205\",\"arch\":\"x86_64\"},\"kbd-misc\":{\"epoch\":\"0\",\"version\":\"1.15\",\"release\":\"11.el6\",\"installdate\":\"1485473206\",\"arch\":\"noarch\"},\"device-mapper-multipath\":{\"epoch\":\"0\",\"version\":\"0.4.9\",\"release\":\"93.el6\",\"installdate\":\"1485473243\",\"arch\":\"x86_64\"},\"b43-openfwwf\":{\"epoch\":\"0\",\"version\":\"5.2\",\"release\":\"10.el6\",\"installdate\":\"1485473245\",\"arch\":\"noarch\"},\"authconfig\":{\"epoch\":\"0\",\"version\":\"6.1.12\",\"release\":\"23.el6\",\"installdate\":\"1485473246\",\"arch\":\"x86_64\"},\"efibootmgr\":{\"epoch\":\"0\",\"version\":\"0.5.4\",\"release\":\"13.el6\",\"installdate\":\"1485473246\",\"arch\":\"x86_64\"},\"audit\":{\"epoch\":\"0\",\"version\":\"2.4.5\",\"release\":\"3.el6\",\"installdate\":\"1485473246\",\"arch\":\"x86_64\"},\"xfsprogs\":{\"epoch\":\"0\",\"version\":\"3.1.1\",\"release\":\"19.el6\",\"installdate\":\"1485473247\",\"arch\":\"x86_64\"},\"attr\":{\"epoch\":\"0\",\"version\":\"2.4.44\",\"release\":\"7.el6\",\"installdate\":\"1485473247\",\"arch\":\"x86_64\"},\"rootfiles\":{\"epoch\":\"0\",\"version\":\"8.1\",\"release\":\"6.1.el6\",\"installdate\":\"1485473247\",\"arch\":\"noarch\"},\"gpg-pubkey\":{\"epoch\":\"0\",\"version\":\"c105b9de\",\"release\":\"4e0fd3a3\",\"installdate\":\"1485473342\",\"arch\":\"(none)\"},\"cloog-ppl\":{\"epoch\":\"0\",\"version\":\"0.15.7\",\"release\":\"1.2.el6\",\"installdate\":\"1485473359\",\"arch\":\"x86_64\"},\"kernel-headers\":{\"epoch\":\"0\",\"version\":\"2.6.32\",\"release\":\"642.13.1.el6\",\"installdate\":\"1485473360\",\"arch\":\"x86_64\"},\"glibc-devel\":{\"epoch\":\"0\",\"version\":\"2.12\",\"release\":\"1.192.el6\",\"installdate\":\"1485473360\",\"arch\":\"x86_64\"},\"wget\":{\"epoch\":\"0\",\"version\":\"1.12\",\"release\":\"8.el6\",\"installdate\":\"1485473362\",\"arch\":\"x86_64\"},\"bash\":{\"epoch\":\"0\",\"version\":\"4.1.2\",\"release\":\"41.el6_8\",\"installdate\":\"1485473399\",\"arch\":\"x86_64\"},\"libudev\":{\"epoch\":\"0\",\"version\":\"147\",\"release\":\"2.73.el6_8.2\",\"installdate\":\"1485473400\",\"arch\":\"x86_64\"},\"grep\":{\"epoch\":\"0\",\"version\":\"2.20\",\"release\":\"5.el6_8\",\"installdate\":\"1485473401\",\"arch\":\"x86_64\"},\"nss-softokn\":{\"epoch\":\"0\",\"version\":\"3.14.3\",\"release\":\"23.3.el6_8\",\"installdate\":\"1485473401\",\"arch\":\"x86_64\"},\"nss\":{\"epoch\":\"0\",\"version\":\"3.21.3\",\"release\":\"2.el6_8\",\"installdate\":\"1485473401\",\"arch\":\"x86_64\"},\"libuuid\":{\"epoch\":\"0\",\"version\":\"2.17.2\",\"release\":\"12.24.el6_8.1\",\"installdate\":\"1485473402\",\"arch\":\"x86_64\"},\"tar\":{\"epoch\":\"2\",\"version\":\"1.23\",\"release\":\"15.el6_8\",\"installdate\":\"1485473402\",\"arch\":\"x86_64\"},\"dracut\":{\"epoch\":\"0\",\"version\":\"004\",\"release\":\"409.el6_8.2\",\"installdate\":\"1485473405\",\"arch\":\"noarch\"},\"initscripts\":{\"epoch\":\"0\",\"version\":\"9.03.53\",\"release\":\"1.el6.centos.1\",\"installdate\":\"1485473406\",\"arch\":\"x86_64\"},\"util-linux-ng\":{\"epoch\":\"0\",\"version\":\"2.17.2\",\"release\":\"12.24.el6_8.1\",\"installdate\":\"1485473411\",\"arch\":\"x86_64\"},\"device-mapper-libs\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6_8.1\",\"installdate\":\"1485473412\",\"arch\":\"x86_64\"},\"device-mapper-event-libs\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6_8.1\",\"installdate\":\"1485473412\",\"arch\":\"x86_64\"},\"policycoreutils\":{\"epoch\":\"0\",\"version\":\"2.0.83\",\"release\":\"30.1.el6_8\",\"installdate\":\"1485473412\",\"arch\":\"x86_64\"},\"device-mapper-event\":{\"epoch\":\"0\",\"version\":\"1.02.117\",\"release\":\"7.el6_8.1\",\"installdate\":\"1485473413\",\"arch\":\"x86_64\"},\"cronie-anacron\":{\"epoch\":\"0\",\"version\":\"1.4.4\",\"release\":\"16.el6_8.2\",\"installdate\":\"1485473413\",\"arch\":\"x86_64\"}},\"hostname\":\"epplkraw0381t1\",\"machinename\":\"epplkraw0381t1.budapest.epam.com\",\"fqdn\":\"epplkraw0381t1.budapest.epam.com\",\"domain\":\"budapest.epam.com\",\"shells\":[\"/bin/sh\",\"/bin/bash\",\"/sbin/nologin\",\"/bin/dash\"],\"block_device\":{\"ram0\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram1\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram2\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram3\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram4\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram5\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram6\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram7\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram8\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram9\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram10\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram11\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram12\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram13\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram14\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"ram15\":{\"size\":\"32768\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop0\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop1\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop2\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop3\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop4\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop5\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop6\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"loop7\":{\"size\":\"0\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"sda\":{\"size\":\"40960000\",\"removable\":\"0\",\"model\":\"VBOX HARDDISK\",\"rev\":\"1.0\",\"state\":\"running\",\"timeout\":\"30\",\"vendor\":\"ATA\",\"queue_depth\":\"31\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"dm-0\":{\"size\":\"37371904\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"},\"dm-1\":{\"size\":\"2555904\",\"removable\":\"0\",\"rotational\":\"1\",\"physical_block_size\":\"512\",\"logical_block_size\":\"512\"}},\"hostnamectl\":{},\"filesystem2\":{\"by_device\":{\"/dev/mapper/vg_epplkraw0381t1-lv_root\":{\"kb_size\":\"18261312\",\"kb_used\":\"2069792\",\"kb_available\":\"15257224\",\"percent_used\":\"12%\",\"total_inodes\":\"1169168\",\"inodes_used\":\"109582\",\"inodes_available\":\"1059586\",\"inodes_percent_used\":\"10%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"22e7732c-8de5-4929-a338-4face887cb95\",\"mounts\":[\"/\"]},\"tmpfs\":{\"kb_size\":\"315392\",\"kb_used\":\"0\",\"kb_available\":\"315392\",\"percent_used\":\"0%\",\"total_inodes\":\"78848\",\"inodes_used\":\"1\",\"inodes_available\":\"78847\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"],\"mounts\":[\"/dev/shm\"]},\"/dev/sda1\":{\"kb_size\":\"487652\",\"kb_used\":\"52777\",\"kb_available\":\"409275\",\"percent_used\":\"12%\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"afc9d16e-72b3-46bd-995d-0ff5bd489127\",\"mounts\":[\"/boot\"]},\"vagrant\":{\"kb_size\":\"741980832\",\"kb_used\":\"115032236\",\"kb_available\":\"626948596\",\"percent_used\":\"16%\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"],\"mounts\":[\"/vagrant\"]},\"proc\":{\"fs_type\":\"proc\",\"mount_options\":[\"rw\"],\"mounts\":[\"/proc\"]},\"sysfs\":{\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"],\"mounts\":[\"/sys\"]},\"devpts\":{\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"],\"mounts\":[\"/dev/pts\"]},\"none\":{\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"],\"mounts\":[\"/proc/sys/fs/binfmt_misc\"]},\"/dev/sda\":{},\"/dev/sda2\":{\"fs_type\":\"LVM2_member\",\"uuid\":\"xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa\"},\"/dev/mapper/vg_epplkraw0381t1-lv_swap\":{\"fs_type\":\"swap\",\"uuid\":\"35eb589b-770a-4fd0-82be-2f2a95ca8eb7\"},\"rootfs\":{\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"],\"mounts\":[\"/\"]},\"devtmpfs\":{\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=304660k\",\"nr_inodes=76165\",\"mode=755\"],\"mounts\":[\"/dev\"]},\"/proc/bus/usb\":{\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"],\"mounts\":[\"/proc/bus/usb\"]}},\"by_mountpoint\":{\"/\":{\"kb_size\":\"18261312\",\"kb_used\":\"2069792\",\"kb_available\":\"15257224\",\"percent_used\":\"12%\",\"total_inodes\":\"1169168\",\"inodes_used\":\"109582\",\"inodes_available\":\"1059586\",\"inodes_percent_used\":\"10%\",\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"],\"uuid\":\"22e7732c-8de5-4929-a338-4face887cb95\",\"devices\":[\"/dev/mapper/vg_epplkraw0381t1-lv_root\",\"rootfs\"]},\"/dev/shm\":{\"kb_size\":\"315392\",\"kb_used\":\"0\",\"kb_available\":\"315392\",\"percent_used\":\"0%\",\"total_inodes\":\"78848\",\"inodes_used\":\"1\",\"inodes_available\":\"78847\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"],\"devices\":[\"tmpfs\"]},\"/boot\":{\"kb_size\":\"487652\",\"kb_used\":\"52777\",\"kb_available\":\"409275\",\"percent_used\":\"12%\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"afc9d16e-72b3-46bd-995d-0ff5bd489127\",\"devices\":[\"/dev/sda1\"]},\"/vagrant\":{\"kb_size\":\"741980832\",\"kb_used\":\"115032236\",\"kb_available\":\"626948596\",\"percent_used\":\"16%\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"],\"devices\":[\"vagrant\"]},\"/proc\":{\"fs_type\":\"proc\",\"mount_options\":[\"rw\"],\"devices\":[\"proc\"]},\"/sys\":{\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"],\"devices\":[\"sysfs\"]},\"/dev/pts\":{\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"],\"devices\":[\"devpts\"]},\"/proc/sys/fs/binfmt_misc\":{\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"],\"devices\":[\"none\"]},\"/dev\":{\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=304660k\",\"nr_inodes=76165\",\"mode=755\"],\"devices\":[\"devtmpfs\"]},\"/proc/bus/usb\":{\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"],\"devices\":[\"/proc/bus/usb\"]}},\"by_pair\":{\"/dev/mapper/vg_epplkraw0381t1-lv_root,/\":{\"device\":\"/dev/mapper/vg_epplkraw0381t1-lv_root\",\"kb_size\":\"18261312\",\"kb_used\":\"2069792\",\"kb_available\":\"15257224\",\"percent_used\":\"12%\",\"mount\":\"/\",\"total_inodes\":\"1169168\",\"inodes_used\":\"109582\",\"inodes_available\":\"1059586\",\"inodes_percent_used\":\"10%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"22e7732c-8de5-4929-a338-4face887cb95\"},\"tmpfs,/dev/shm\":{\"device\":\"tmpfs\",\"kb_size\":\"315392\",\"kb_used\":\"0\",\"kb_available\":\"315392\",\"percent_used\":\"0%\",\"mount\":\"/dev/shm\",\"total_inodes\":\"78848\",\"inodes_used\":\"1\",\"inodes_available\":\"78847\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"tmpfs\",\"mount_options\":[\"rw\"]},\"/dev/sda1,/boot\":{\"device\":\"/dev/sda1\",\"kb_size\":\"487652\",\"kb_used\":\"52777\",\"kb_available\":\"409275\",\"percent_used\":\"12%\",\"mount\":\"/boot\",\"total_inodes\":\"128016\",\"inodes_used\":\"44\",\"inodes_available\":\"127972\",\"inodes_percent_used\":\"1%\",\"fs_type\":\"ext4\",\"mount_options\":[\"rw\"],\"uuid\":\"afc9d16e-72b3-46bd-995d-0ff5bd489127\"},\"vagrant,/vagrant\":{\"device\":\"vagrant\",\"kb_size\":\"741980832\",\"kb_used\":\"115032236\",\"kb_available\":\"626948596\",\"percent_used\":\"16%\",\"mount\":\"/vagrant\",\"total_inodes\":\"1000\",\"inodes_used\":\"0\",\"inodes_available\":\"1000\",\"inodes_percent_used\":\"0%\",\"fs_type\":\"vboxsf\",\"mount_options\":[\"uid=500\",\"gid=500\",\"rw\"]},\"proc,/proc\":{\"device\":\"proc\",\"mount\":\"/proc\",\"fs_type\":\"proc\",\"mount_options\":[\"rw\"]},\"sysfs,/sys\":{\"device\":\"sysfs\",\"mount\":\"/sys\",\"fs_type\":\"sysfs\",\"mount_options\":[\"rw\"]},\"devpts,/dev/pts\":{\"device\":\"devpts\",\"mount\":\"/dev/pts\",\"fs_type\":\"devpts\",\"mount_options\":[\"rw\",\"gid=5\",\"mode=620\"]},\"none,/proc/sys/fs/binfmt_misc\":{\"device\":\"none\",\"mount\":\"/proc/sys/fs/binfmt_misc\",\"fs_type\":\"binfmt_misc\",\"mount_options\":[\"rw\"]},\"/dev/sda,\":{\"device\":\"/dev/sda\"},\"/dev/sda2,\":{\"device\":\"/dev/sda2\",\"fs_type\":\"LVM2_member\",\"uuid\":\"xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa\"},\"/dev/mapper/vg_epplkraw0381t1-lv_swap,\":{\"device\":\"/dev/mapper/vg_epplkraw0381t1-lv_swap\",\"fs_type\":\"swap\",\"uuid\":\"35eb589b-770a-4fd0-82be-2f2a95ca8eb7\"},\"rootfs,/\":{\"device\":\"rootfs\",\"mount\":\"/\",\"fs_type\":\"rootfs\",\"mount_options\":[\"rw\"]},\"devtmpfs,/dev\":{\"device\":\"devtmpfs\",\"mount\":\"/dev\",\"fs_type\":\"devtmpfs\",\"mount_options\":[\"rw\",\"relatime\",\"size=304660k\",\"nr_inodes=76165\",\"mode=755\"]},\"/proc/bus/usb,/proc/bus/usb\":{\"device\":\"/proc/bus/usb\",\"mount\":\"/proc/bus/usb\",\"fs_type\":\"usbfs\",\"mount_options\":[\"rw\",\"relatime\"]}}},\"init_package\":\"init\",\"recipes\":[\"chef_nginx::default\",\"iptables::default\",\"chef_nginx::package\",\"chef_nginx::ohai_plugin\",\"chef_nginx::repo\",\"chef_nginx::commons\",\"chef_nginx::commons_dir\",\"chef_nginx::commons_script\",\"chef_nginx::commons_conf\",\"iptables::_package\"],\"expanded_run_list\":[\"chef_nginx::default\",\"iptables::default\"],\"roles\":[],\"cookbooks\":{\"chef_nginx\":{\"version\":\"6.0.1\"},\"iptables\":{\"version\":\"4.0.1\"},\"build-essential\":{\"version\":\"8.0.0\"},\"ohai\":{\"version\":\"5.0.2\"},\"yum-epel\":{\"version\":\"2.1.1\"},\"compat_resource\":{\"version\":\"12.16.3\"},\"zypper\":{\"version\":\"0.3.0\"},\"seven_zip\":{\"version\":\"2.0.2\"},\"mingw\":{\"version\":\"2.0.0\"},\"windows\":{\"version\":\"3.0.4\"}},\"nginx\":{\"version\":\"1.10.3\",\"configure_arguments\":[\"--prefix=/etc/nginx\",\"--sbin-path=/usr/sbin/nginx\",\"--modules-path=/usr/lib64/nginx/modules\",\"--conf-path=/etc/nginx/nginx.conf\",\"--error-log-path=/var/log/nginx/error.log\",\"--http-log-path=/var/log/nginx/access.log\",\"--pid-path=/var/run/nginx.pid\",\"--lock-path=/var/run/nginx.lock\",\"--http-client-body-temp-path=/var/cache/nginx/client_temp\",\"--http-proxy-temp-path=/var/cache/nginx/proxy_temp\",\"--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp\",\"--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp\",\"--http-scgi-temp-path=/var/cache/nginx/scgi_temp\",\"--user=nginx\",\"--group=nginx\",\"--with-file-aio\",\"--with-threads\",\"--with-ipv6\",\"--with-http_addition_module\",\"--with-http_auth_request_module\",\"--with-http_dav_module\",\"--with-http_flv_module\",\"--with-http_gunzip_module\",\"--with-http_gzip_static_module\",\"--with-http_mp4_module\",\"--with-http_random_index_module\",\"--with-http_realip_module\",\"--with-http_secure_link_module\",\"--with-http_slice_module\",\"--with-http_ssl_module\",\"--with-http_stub_status_module\",\"--with-http_sub_module\",\"--with-http_v2_module\",\"--with-mail\",\"--with-mail_ssl_module\",\"--with-stream\",\"--with-stream_ssl_module\",\"--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC'\",\"--with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie'\"],\"prefix\":\"/etc/nginx\",\"conf_path\":\"/etc/nginx/nginx.conf\"}},\"normal\":{\"tags\":[],\"nginx\":{\"default_root\":\"/usr/share/nginx/html\"}},\"chef_type\":\"node\",\"default\":{\"windows\":{\"rubyzipversion\":null},\"seven_zip\":{\"url\":\"http://www.7-zip.org/a/7z1514-x64.msi\",\"checksum\":\"cefe1a9092d8a6be68468c33910d6206b40e934fb63cab686c5cccf369fbf712\",\"package_name\":\"7-Zip 15.14 (x64 edition)\",\"default_extract_timeout\":600},\"build-essential\":{\"compile_time\":false,\"msys2\":{\"path\":\"\\\\msys2\"}},\"yum-epel\":{\"repos\":[\"epel\",\"epel-debuginfo\",\"epel-source\",\"epel-testing\",\"epel-testing-debuginfo\",\"epel-testing-source\"]},\"yum\":{\"epel-debuginfo\":{\"repositoryid\":\"epel-debuginfo\",\"description\":\"Extra Packages for 6 - $basearch - Debug\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-source\":{\"repositoryid\":\"epel-source\",\"description\":\"Extra Packages for 6 - $basearch - Source\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-testing-debuginfo\":{\"repositoryid\":\"epel-testing-debuginfo\",\"description\":\"Extra Packages for 6 - $basearch - Testing Debug\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-testing-source\":{\"repositoryid\":\"epel-testing-source\",\"description\":\"Extra Packages for 6 - $basearch - Testing Source\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel-testing\":{\"repositoryid\":\"epel-testing\",\"description\":\"Extra Packages for 6 - $basearch - Testing \",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=testing-epel6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":false,\"managed\":false,\"make_cache\":true},\"epel\":{\"repositoryid\":\"epel\",\"description\":\"Extra Packages for 6 - $basearch\",\"mirrorlist\":\"http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch\",\"gpgkey\":\"https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6\",\"failovermethod\":\"priority\",\"gpgcheck\":true,\"enabled\":true,\"managed\":true,\"make_cache\":true}},\"zypper\":{\"smt_host\":null},\"nginx\":{\"version\":\"1.10.3\",\"package_name\":\"nginx\",\"port\":\"80\",\"dir\":\"/etc/nginx\",\"script_dir\":\"/usr/sbin\",\"log_dir\":\"/var/log/nginx\",\"log_dir_perm\":\"0750\",\"binary\":\"/usr/sbin/nginx\",\"default_root\":\"/var/www/nginx-default\",\"ulimit\":\"1024\",\"repo_source\":\"nginx\",\"install_method\":\"package\",\"user\":\"nginx\",\"upstart\":{\"runlevels\":\"2345\",\"respawn_limit\":null,\"foreground\":true},\"group\":\"nginx\",\"gzip\":\"on\",\"gzip_static\":\"off\",\"gzip_http_version\":\"1.0\",\"gzip_comp_level\":\"2\",\"gzip_proxied\":\"any\",\"gzip_vary\":\"off\",\"gzip_buffers\":null,\"gzip_types\":[\"text/plain\",\"text/css\",\"application/x-javascript\",\"text/xml\",\"application/xml\",\"application/rss+xml\",\"application/atom+xml\",\"image/svg+xml\",\"text/javascript\",\"application/javascript\",\"application/json\",\"text/mathml\"],\"gzip_min_length\":1000,\"gzip_disable\":\"MSIE [1-6]\\\\.\",\"keepalive\":\"on\",\"keepalive_requests\":100,\"keepalive_timeout\":65,\"worker_processes\":2,\"worker_connections\":1024,\"worker_rlimit_nofile\":null,\"multi_accept\":false,\"event\":null,\"accept_mutex_delay\":null,\"server_tokens\":null,\"server_names_hash_bucket_size\":64,\"variables_hash_max_size\":1024,\"variables_hash_bucket_size\":64,\"sendfile\":\"on\",\"underscores_in_headers\":null,\"tcp_nodelay\":\"on\",\"tcp_nopush\":\"on\",\"access_log_options\":null,\"error_log_options\":null,\"disable_access_log\":false,\"log_formats\":{},\"default_site_enabled\":true,\"types_hash_max_size\":2048,\"types_hash_bucket_size\":64,\"proxy_read_timeout\":null,\"client_body_buffer_size\":null,\"client_max_body_size\":null,\"large_client_header_buffers\":null,\"default\":{\"modules\":[]},\"extra_configs\":{},\"load_modules\":[],\"auth_request\":{\"url\":\"http://mdounin.ru/hg/ngx_http_auth_request_module/archive/662785733552.tar.gz\",\"checksum\":\"2057bdefd2137a5000d9dbdbfca049d1ba7832ad2b9f8855a88ea5dfa70bd8c1\"},\"devel\":{\"version\":\"0.3.0\",\"url\":\"https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz\",\"checksum\":\"88e05a99a8a7419066f5ae75966fb1efc409bad4522d14986da074554ae61619\"},\"echo\":{\"version\":\"0.59\",\"url\":\"https://github.com/openresty/echo-nginx-module/archive/v0.59.tar.gz\",\"checksum\":\"9b319ad7836202883128d2b9c24ed818082541df57ef7f2065b7557085c603cd\"},\"geoip\":{\"path\":\"/srv/geoip\",\"enable_city\":true,\"country_dat_url\":\"http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz\",\"country_dat_checksum\":null,\"city_dat_url\":\"http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz\",\"city_dat_checksum\":null,\"lib_version\":\"1.6.9\",\"lib_url\":\"https://github.com/maxmind/geoip-api-c/releases/download/v1.6.9/GeoIP-1.6.9.tar.gz\",\"lib_checksum\":\"4b446491843de67c1af9b887da17a3e5939e0aeed4826923a5f4bf09d845096f\"},\"headers_more\":{\"version\":\"0.30\",\"source_url\":\"https://github.com/openresty/headers-more-nginx-module/archive/v0.30.tar.gz\",\"source_checksum\":\"2aad309a9313c21c7c06ee4e71a39c99d4d829e31c8b3e7d76f8c964ea8047f5\"},\"lua\":{\"version\":\"0.10.7\",\"url\":\"https://github.com/chaoslawful/lua-nginx-module/archive/v0.10.7.tar.gz\",\"checksum\":\"c21c8937dcdd6fc2b6a955f929e3f4d1388610f47180e60126e6dcab06786f77\"},\"luajit\":{\"version\":\"2.0.4\",\"url\":\"http://luajit.org/download/LuaJIT-2.0.4.tar.gz\",\"checksum\":\"620fa4eb12375021bef6e4f237cbd2dd5d49e56beb414bee052c746beef1807d\"},\"naxsi\":{\"version\":\"0.54\",\"url\":\"https://github.com/nbs-system/naxsi/archive/0.54.tar.gz\",\"checksum\":\"9cc2c09405bc71f78ef26a8b6d70afcea3fccbe8125df70cb0cfc480133daba5\"},\"openssl_source\":{\"version\":\"1.0.2k\",\"url\":\"http://www.openssl.org/source/openssl-1.0.2k.tar.gz\"},\"pagespeed\":{\"version\":\"1.11.33.2\",\"url\":\"https://github.com/pagespeed/ngx_pagespeed/archive/release-1.11.33.2-beta.tar.gz\",\"packages\":{\"rhel\":[\"pcre-devel\",\"zlib-devel\"],\"debian\":[\"zlib1g-dev\",\"libpcre3\",\"libpcre3-dev\"]}},\"psol\":{\"url\":\"https://dl.google.com/dl/page-speed/psol/1.11.33.2.tar.gz\"},\"passenger\":{\"version\":\"4.0.57\",\"root\":\"/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/passenger-4.0.57\",\"ruby\":\"/opt/chefdk/embedded/bin/ruby\",\"packages\":{\"rhel\":[\"ruby-devel\",\"libcurl-devel\"],\"fedora\":[\"ruby-devel\",\"libcurl-devel\"],\"debian\":[\"ruby-dev\",\"libcurl4-gnutls-dev\"]},\"install_rake\":true,\"spawn_method\":\"smart-lv2\",\"buffer_response\":\"on\",\"max_pool_size\":6,\"min_instances\":1,\"max_instances_per_app\":0,\"pool_idle_time\":300,\"max_requests\":0,\"gem_binary\":null,\"show_version_in_header\":\"on\",\"passenger_log_file\":null,\"nodejs\":null},\"enable_rate_limiting\":false,\"rate_limiting_zone_name\":\"default\",\"rate_limiting_backoff\":\"10m\",\"rate_limit\":\"1r/s\",\"upstream_repository\":\"http://nginx.org/packages/centos/6/$basearch/\",\"set_misc\":{\"version\":\"0.30\",\"url\":\"https://github.com/agentzh/set-misc-nginx-module/archive/v0.30.tar.gz\",\"checksum\":\"59920dd3f92c2be32627121605751b52eae32b5884be09f2e4c53fb2fae8aabc\"},\"socketproxy\":{\"root\":\"/usr/share/nginx/apps\",\"app_owner\":\"root\",\"logname\":\"socketproxy\",\"log_level\":\"error\"},\"init_style\":\"init\",\"source\":{\"version\":\"1.10.3\",\"prefix\":\"/opt/nginx-1.10.3\",\"conf_path\":\"/etc/nginx/nginx.conf\",\"sbin_path\":\"/opt/nginx-1.10.3/sbin/nginx\",\"default_configure_flags\":[\"--prefix=/opt/nginx-1.10.3\",\"--conf-path=/etc/nginx/nginx.conf\",\"--sbin-path=/opt/nginx-1.10.3/sbin/nginx\"],\"url\":\"http://nginx.org/download/nginx-1.10.3.tar.gz\",\"checksum\":\"75020f1364cac459cb733c4e1caed2d00376e40ea05588fb8793076a4c69dd90\",\"modules\":[\"chef_nginx::http_ssl_module\",\"chef_nginx::http_gzip_static_module\"],\"use_existing_user\":false},\"configure_flags\":[],\"status\":{\"port\":\"8090\"},\"syslog\":{\"git_repo\":\"https://github.com/yaoweibin/nginx_syslog_patch.git\",\"git_revision\":\"master\"},\"upload_progress\":{\"url\":\"https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0\",\"checksum\":\"3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2\",\"javascript_output\":true,\"zone_name\":\"proxied\",\"zone_size\":\"1m\"}},\"iptables\":{\"iptables_sysconfig\":{\"IPTABLES_MODULES\":\"\",\"IPTABLES_MODULES_UNLOAD\":\"yes\",\"IPTABLES_SAVE_ON_STOP\":\"no\",\"IPTABLES_SAVE_ON_RESTART\":\"no\",\"IPTABLES_SAVE_COUNTER\":\"no\",\"IPTABLES_STATUS_NUMERIC\":\"yes\",\"IPTABLES_STATUS_VERBOSE\":\"no\",\"IPTABLES_STATUS_LINENUMBERS\":\"yes\"},\"ip6tables_sysconfig\":{\"IP6TABLES_MODULES\":\"\",\"IP6TABLES_MODULES_UNLOAD\":\"yes\",\"IP6TABLES_SAVE_ON_STOP\":\"no\",\"IP6TABLES_SAVE_ON_RESTART\":\"no\",\"IP6TABLES_SAVE_COUNTER\":\"no\",\"IP6TABLES_STATUS_NUMERIC\":\"yes\",\"IP6TABLES_STATUS_VERBOSE\":\"no\",\"IP6TABLES_STATUS_LINENUMBERS\":\"yes\"},\"system_ruby\":\"/usr/bin/ruby\"}},\"override\":{},\"run_list\":[\"recipe[chef_nginx::default]\",\"recipe[iptables::default]\"]}",
 @env=
  {"SCRIPT_NAME"=>"",
   "SERVER_NAME"=>"localhost",
   "REQUEST_METHOD"=>"PUT",
   "PATH_INFO"=>"/nodes/epplkraw0381t1.budapest.epam.com",
   "QUERY_STRING"=>nil,
   "SERVER_PORT"=>8889,
   "HTTP_HOST"=>"localhost:8889",
   "rack.url_scheme"=>"chefzero",
   "rack.input"=>#<StringIO:0x00000006554a50>},
 @rest_base_prefix=["organizations", "chef"],
 @rest_path=
  ["organizations", "chef", "nodes", "epplkraw0381t1.budapest.epam.com"]>

[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: Detecting file extension for epplkraw0381t1.budapest.epam.com
[2017-04-05T17:48:04+01:00] DEBUG: BaseFile: got a file path of /root/nodes/epplkraw0381t1.budapest.epam.com.json for epplkraw0381t1.budapest.epam.com.json
[2017-04-05T17:48:04+01:00] DEBUG: 
--- RESPONSE (200) ---
{
  "name": "epplkraw0381t1.budapest.epam.com",
  "chef_environment": "_default",
  "json_class": "Chef::Node",
  "automatic": {
    "network": {
      "interfaces": {
        "lo": {
          "mtu": "65536",
          "flags": [
            "LOOPBACK",
            "UP",
            "LOWER_UP"
          ],
          "encapsulation": "Loopback",
          "addresses": {
            "127.0.0.1": {
              "family": "inet",
              "prefixlen": "8",
              "netmask": "255.0.0.0",
              "scope": "Node"
            },
            "::1": {
              "family": "inet6",
              "prefixlen": "128",
              "scope": "Node",
              "tags": [

              ]
            }
          },
          "state": "unknown",
          "routes": [
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            },
            {
              "destination": "unreachable",
              "family": "inet6",
              "metric": "1024"
            }
          ]
        },
        "eth0": {
          "type": "eth",
          "number": "0",
          "mtu": "1500",
          "flags": [
            "BROADCAST",
            "MULTICAST",
            "UP",
            "LOWER_UP"
          ],
          "encapsulation": "Ethernet",
          "addresses": {
            "08:00:27:14:BD:1C": {
              "family": "lladdr"
            },
            "10.0.2.15": {
              "family": "inet",
              "prefixlen": "24",
              "netmask": "255.255.255.0",
              "broadcast": "10.0.2.255",
              "scope": "Global"
            },
            "fe80::a00:27ff:fe14:bd1c": {
              "family": "inet6",
              "prefixlen": "64",
              "scope": "Link",
              "tags": [

              ]
            }
          },
          "state": "up",
          "arp": {
            "10.0.2.3": "52:54:00:12:35:03",
            "10.0.2.2": "52:54:00:12:35:02"
          },
          "routes": [
            {
              "destination": "10.0.2.0/24",
              "family": "inet",
              "scope": "link",
              "proto": "kernel",
              "src": "10.0.2.15"
            },
            {
              "destination": "169.254.0.0/16",
              "family": "inet",
              "scope": "link",
              "metric": "1002"
            },
            {
              "destination": "default",
              "family": "inet",
              "via": "10.0.2.2"
            },
            {
              "destination": "fe80::/64",
              "family": "inet6",
              "metric": "256",
              "proto": "kernel"
            }
          ],
          "link_speed": 1000,
          "duplex": "Full",
          "port": "Twisted Pair",
          "transceiver": "internal",
          "auto_negotiation": "on",
          "mdi_x": "off (auto)",
          "ring_params": {
            "max_rx": 4096,
            "max_rx_mini": 0,
            "max_rx_jumbo": 0,
            "max_tx": 4096,
            "current_rx": 256,
            "current_rx_mini": 0,
            "current_rx_jumbo": 0,
            "current_tx": 256
          }
        }
      },
      "default_interface": "eth0",
      "default_gateway": "10.0.2.2"
    },
    "counters": {
      "network": {
        "interfaces": {
          "lo": {
            "rx": {
              "bytes": "0",
              "packets": "0",
              "errors": "0",
              "drop": "0",
              "overrun": "0"
            },
            "tx": {
              "bytes": "0",
              "packets": "0",
              "errors": "0",
              "drop": "0",
              "carrier": "0",
              "collisions": "0"
            }
          },
          "eth0": {
            "tx": {
              "queuelen": "1000",
              "bytes": "5398361",
              "packets": "86309",
              "errors": "0",
              "drop": "0",
              "carrier": "0",
              "collisions": "0"
            },
            "rx": {
              "bytes": "270901057",
              "packets": "195138",
              "errors": "0",
              "drop": "0",
              "overrun": "0"
            }
          }
        }
      }
    },
    "ipaddress": "10.0.2.15",
    "macaddress": "08:00:27:14:BD:1C",
    "ip6address": "fe80::a00:27ff:fe14:bd1c",
    "languages": {
      "lua": {
        "version": "5.1.4"
      },
      "python": {
        "version": "2.6.6",
        "builddate": "Aug 18 2016, 15:13:37"
      },
      "ruby": {
        "platform": "x86_64-linux",
        "version": "2.3.1",
        "release_date": "2016-04-26",
        "target": "x86_64-pc-linux-gnu",
        "target_cpu": "x86_64",
        "target_vendor": "pc",
        "target_os": "linux",
        "host": "x86_64-pc-linux-gnu",
        "host_cpu": "x86_64",
        "host_os": "linux-gnu",
        "host_vendor": "pc",
        "bin_dir": "/opt/chefdk/embedded/bin",
        "ruby_bin": "/opt/chefdk/embedded/bin/ruby",
        "gems_dir": "/opt/chefdk/embedded/lib/ruby/gems/2.3.0",
        "gem_bin": "/opt/chefdk/embedded/bin/gem"
      },
      "c": {
        "gcc": {
          "target": "x86_64-redhat-linux",
          "configured_with": "../configure --prefix=/usr --mandir=/usr/share/man --infodir=/usr/share/info --with-bugurl=http://bugzilla.redhat.com/bugzilla --enable-bootstrap --enable-shared --enable-threads=posix --enable-checking=release --with-system-zlib --enable-__cxa_atexit --disable-libunwind-exceptions --enable-gnu-unique-object --enable-languages=c,c++,objc,obj-c++,java,fortran,ada --enable-java-awt=gtk --disable-dssi --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-1.5.0.0/jre --enable-libgcj-multifile --enable-java-maintainer-mode --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --disable-libjava-multilib --with-ppl --with-cloog --with-tune=generic --with-arch_32=i686 --build=x86_64-redhat-linux",
          "thread_model": "posix",
          "description": "gcc version 4.4.7 20120313 (Red Hat 4.4.7-18) (GCC) ",
          "version": "4.4.7"
        },
        "glibc": {
          "version": "2.12",
          "description": "GNU C Library stable release version 2.12, by Roland McGrath et al."
        }
      },
      "perl": {
        "version": "5.10.1",
        "archname": "x86_64-linux-thread-multi"
      }
    },
    "keys": {
      "ssh": {
        "host_dsa_public": "AAAAB3NzaC1kc3MAAACBANRg2eSCm2FL9pxKQZYQgvxstWOVn1GlBJhgXXSHd+vkbahn8r0Jx0B/zxArQDeEZLlahJ+UcKGYCK/R77qC8b0IrMgNRfIjtfJ/pscwA+fzP4v63jL1FssKLu2xfimH9xMD+UHf+wWmvJayiQ/zOBZp7cEK28jHBKrZ0JOdLPAnAAAAFQCrmWTAcfnC3FzwRfwUUzziZV3zAQAAAIEAwyyKL9vJn7kl7b1uYj294mTz+5Phoz/PiAPyo/r8OimbkFVzgfkPRsu+EMxtrUZ3cHnhpuM+U8gRjYyCuzPDyuUbeuy6TXXsKRO3g90EoXhbR7WfvPMEeT7FWBxpGaWX5h0FQSUk5s+9XCP2xL3DwcdSAajvb4QHF1CEzHJY2xgAAACBAInhe4M5RxOFOJpnoFBmCOw0NYZISp+hTVqf5+SznSpzctmz/klpvW70g9VkC+wvp6ylNEyAkB05a+aKd0l24hKSlhYiVyLv4dKrfS2sQoVR0Le70PiqN7SmlPvn7JfBPGk9eQ9N03IBfIkUPUIq6bagNj29B90MbuKi29pTYo5B",
        "host_rsa_public": "AAAAB3NzaC1yc2EAAAABIwAAAQEA5VA60xxhdYmaAsYVU/jkVV7JkVDnIB6RkXmpL/y0FH6Y/1Qu0yop7FewxHy4lzTj80FcA6TKEStTT5R6fPVRoH8kd1s3hbajK7F/YYd96NOxq7W0ant7brRZLcBqrduSVGeVqOGMCQLuVDoO6AgjOGLfjRYFSZnQ5PW4pjmpnmL5Z/fOR7EyF/LIOFkwRRO6w+fSsR5Ye5Moy2dKyAT1c6lgdDXsBsZkBDWok8qjOJBTw5DBIMXjuyMAm8qgxQe6reyyM3RRoBYNecIEFf/0qcYOPa1LGuG8Si9D6ZswDT/ECu3xnqibs65MLw7n9ud0YIuAdUivhbHxYHIDe+aBzQ=="
      }
    },
    "kernel": {
      "name": "Linux",
      "release": "2.6.32-642.13.1.el6.x86_64",
      "version": "#1 SMP Wed Jan 11 20:56:24 UTC 2017",
      "machine": "x86_64",
      "processor": "x86_64",
      "os": "GNU/Linux",
      "modules": {
        "vboxsf": {
          "size": "37955",
          "refcount": "1",
          "version": "5.1.14 r112924"
        },
        "nls_utf8": {
          "size": "1455",
          "refcount": "0"
        },
        "ipv6": {
          "size": "336282",
          "refcount": "16"
        },
        "sg": {
          "size": "29318",
          "refcount": "0",
          "version": "3.5.34"
        },
        "i2c_piix4": {
          "size": "11232",
          "refcount": "0"
        },
        "i2c_core": {
          "size": "29132",
          "refcount": "1"
        },
        "e1000": {
          "size": "134895",
          "refcount": "0",
          "version": "7.3.21-k8-NAPI"
        },
        "vboxguest": {
          "size": "284807",
          "refcount": "1",
          "version": "5.0.26 r108824"
        },
        "ext4": {
          "size": "379559",
          "refcount": "2"
        },
        "jbd2": {
          "size": "93252",
          "refcount": "1"
        },
        "mbcache": {
          "size": "8193",
          "refcount": "1"
        },
        "sd_mod": {
          "size": "37158",
          "refcount": "3"
        },
        "crc_t10dif": {
          "size": "1209",
          "refcount": "1"
        },
        "ahci": {
          "size": "43154",
          "refcount": "2",
          "version": "3.0"
        },
        "pata_acpi": {
          "size": "3701",
          "refcount": "0",
          "version": "0.2.3"
        },
        "ata_generic": {
          "size": "3837",
          "refcount": "0",
          "version": "0.2.15"
        },
        "ata_piix": {
          "size": "24409",
          "refcount": "0",
          "version": "2.13"
        },
        "video": {
          "size": "21654",
          "refcount": "0"
        },
        "output": {
          "size": "2409",
          "refcount": "1"
        },
        "dm_mirror": {
          "size": "14864",
          "refcount": "0"
        },
        "dm_region_hash": {
          "size": "12085",
          "refcount": "1"
        },
        "dm_log": {
          "size": "9930",
          "refcount": "2"
        },
        "dm_mod": {
          "size": "102467",
          "refcount": "8"
        }
      }
    },
    "os": "linux",
    "os_version": "2.6.32-642.13.1.el6.x86_64",
    "lsb": {

    },
    "platform": "centos",
    "platform_version": "6.8",
    "platform_family": "rhel",
    "virtualization": {
      "systems": {
        "vbox": "guest"
      },
      "system": "vbox",
      "role": "guest"
    },
    "dmi": {

    },
    "memory": {
      "swap": {
        "cached": "44kB",
        "total": "1277948kB",
        "free": "1277800kB"
      },
      "hugepages": {
        "total": "0",
        "free": "0",
        "reserved": "0",
        "surplus": "0"
      },
      "total": "630788kB",
      "free": "141964kB",
      "buffers": "73104kB",
      "cached": "182876kB",
      "active": "300684kB",
      "inactive": "101336kB",
      "dirty": "5904kB",
      "writeback": "0kB",
      "anon_pages": "146008kB",
      "mapped": "10796kB",
      "slab": "69616kB",
      "slab_reclaimable": "48000kB",
      "slab_unreclaim": "21616kB",
      "page_tables": "2684kB",
      "nfs_unstable": "0kB",
      "bounce": "0kB",
      "commit_limit": "1593340kB",
      "committed_as": "243096kB",
      "vmalloc_total": "34359738367kB",
      "vmalloc_used": "23956kB",
      "vmalloc_chunk": "34359704568kB",
      "hugepage_size": "2048kB"
    },
    "cpu": {
      "0": {
        "vendor_id": "GenuineIntel",
        "family": "6",
        "model": "58",
        "model_name": "Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz",
        "stepping": "9",
        "mhz": "3221.842",
        "cache_size": "6144 KB",
        "physical_id": "0",
        "core_id": "0",
        "cores": "2",
        "flags": [
          "fpu",
          "vme",
          "de",
          "pse",
          "tsc",
          "msr",
          "pae",
          "mce",
          "cx8",
          "apic",
          "sep",
          "mtrr",
          "pge",
          "mca",
          "cmov",
          "pat",
          "pse36",
          "clflush",
          "mmx",
          "fxsr",
          "sse",
          "sse2",
          "ht",
          "syscall",
          "nx",
          "rdtscp",
          "lm",
          "constant_tsc",
          "rep_good",
          "xtopology",
          "nonstop_tsc",
          "unfair_spinlock",
          "pni",
          "pclmulqdq",
          "ssse3",
          "cx16",
          "sse4_1",
          "sse4_2",
          "popcnt",
          "aes",
          "xsave",
          "avx",
          "rdrand",
          "hypervisor",
          "lahf_lm"
        ]
      },
      "1": {
        "vendor_id": "GenuineIntel",
        "family": "6",
        "model": "58",
        "model_name": "Intel(R) Core(TM) i5-3470 CPU @ 3.20GHz",
        "stepping": "9",
        "mhz": "3221.842",
        "cache_size": "6144 KB",
        "physical_id": "0",
        "core_id": "1",
        "cores": "2",
        "flags": [
          "fpu",
          "vme",
          "de",
          "pse",
          "tsc",
          "msr",
          "pae",
          "mce",
          "cx8",
          "apic",
          "sep",
          "mtrr",
          "pge",
          "mca",
          "cmov",
          "pat",
          "pse36",
          "clflush",
          "mmx",
          "fxsr",
          "sse",
          "sse2",
          "ht",
          "syscall",
          "nx",
          "rdtscp",
          "lm",
          "constant_tsc",
          "rep_good",
          "xtopology",
          "nonstop_tsc",
          "unfair_spinlock",
          "pni",
          "pclmulqdq",
          "ssse3",
          "cx16",
          "sse4_1",
          "sse4_2",
          "popcnt",
          "aes",
          "xsave",
          "avx",
          "rdrand",
          "hypervisor",
          "lahf_lm"
        ]
      },
      "total": 2,
      "real": 1,
      "cores": 2
    },
    "sysconf": {
      "LINK_MAX": 32000,
      "_POSIX_LINK_MAX": 32000,
      "MAX_CANON": 255,
      "_POSIX_MAX_CANON": 255,
      "MAX_INPUT": 255,
      "_POSIX_MAX_INPUT": 255,
      "NAME_MAX": 255,
      "_POSIX_NAME_MAX": 255,
      "PATH_MAX": 4096,
      "_POSIX_PATH_MAX": 4096,
      "PIPE_BUF": 4096,
      "_POSIX_PIPE_BUF": 4096,
      "SOCK_MAXBUF": null,
      "_POSIX_ASYNC_IO": null,
      "_POSIX_CHOWN_RESTRICTED": 1,
      "_POSIX_NO_TRUNC": 1,
      "_POSIX_PRIO_IO": null,
      "_POSIX_SYNC_IO": null,
      "_POSIX_VDISABLE": 0,
      "ARG_MAX": 2621440,
      "ATEXIT_MAX": 2147483647,
      "CHAR_BIT": 8,
      "CHAR_MAX": 127,
      "CHAR_MIN": -128,
      "CHILD_MAX": 2380,
      "CLK_TCK": 100,
      "INT_MAX": 2147483647,
      "INT_MIN": -2147483648,
      "IOV_MAX": 1024,
      "LOGNAME_MAX": 256,
      "LONG_BIT": 64,
      "MB_LEN_MAX": 16,
      "NGROUPS_MAX": 65536,
      "NL_ARGMAX": 4096,
      "NL_LANGMAX": 2048,
      "NL_MSGMAX": 2147483647,
      "NL_NMAX": 2147483647,
      "NL_SETMAX": 2147483647,
      "NL_TEXTMAX": 2147483647,
      "NSS_BUFLEN_GROUP": 1024,
      "NSS_BUFLEN_PASSWD": 1024,
      "NZERO": 20,
      "OPEN_MAX": 1024,
      "PAGESIZE": 4096,
      "PAGE_SIZE": 4096,
      "PASS_MAX": 8192,
      "PTHREAD_DESTRUCTOR_ITERATIONS": 4,
      "PTHREAD_KEYS_MAX": 1024,
      "PTHREAD_STACK_MIN": 16384,
      "PTHREAD_THREADS_MAX": null,
      "SCHAR_MAX": 127,
      "SCHAR_MIN": -128,
      "SHRT_MAX": 32767,
      "SHRT_MIN": -32768,
      "SSIZE_MAX": 32767,
      "TTY_NAME_MAX": 32,
      "TZNAME_MAX": 6,
      "UCHAR_MAX": 255,
      "UINT_MAX": 4294967295,
      "UIO_MAXIOV": 1024,
      "ULONG_MAX": 18446744073709551615,
      "USHRT_MAX": 65535,
      "WORD_BIT": 32,
      "_AVPHYS_PAGES": 35495,
      "_NPROCESSORS_CONF": 2,
      "_NPROCESSORS_ONLN": 2,
      "_PHYS_PAGES": 157697,
      "_POSIX_ARG_MAX": 2621440,
      "_POSIX_ASYNCHRONOUS_IO": 200809,
      "_POSIX_CHILD_MAX": 2380,
      "_POSIX_FSYNC": 200809,
      "_POSIX_JOB_CONTROL": 1,
      "_POSIX_MAPPED_FILES": 200809,
      "_POSIX_MEMLOCK": 200809,
      "_POSIX_MEMLOCK_RANGE": 200809,
      "_POSIX_MEMORY_PROTECTION": 200809,
      "_POSIX_MESSAGE_PASSING": 200809,
      "_POSIX_NGROUPS_MAX": 65536,
      "_POSIX_OPEN_MAX": 1024,
      "_POSIX_PII": null,
      "_POSIX_PII_INTERNET": null,
      "_POSIX_PII_INTERNET_DGRAM": null,
      "_POSIX_PII_INTERNET_STREAM": null,
      "_POSIX_PII_OSI": null,
      "_POSIX_PII_OSI_CLTS": null,
      "_POSIX_PII_OSI_COTS": null,
      "_POSIX_PII_OSI_M": null,
      "_POSIX_PII_SOCKET": null,
      "_POSIX_PII_XTI": null,
      "_POSIX_POLL": null,
      "_POSIX_PRIORITIZED_IO": 200809,
      "_POSIX_PRIORITY_SCHEDULING": 200809,
      "_POSIX_REALTIME_SIGNALS": 200809,
      "_POSIX_SAVED_IDS": 1,
      "_POSIX_SELECT": null,
      "_POSIX_SEMAPHORES": 200809,
      "_POSIX_SHARED_MEMORY_OBJECTS": 200809,
      "_POSIX_SSIZE_MAX": 32767,
      "_POSIX_STREAM_MAX": 16,
      "_POSIX_SYNCHRONIZED_IO": 200809,
      "_POSIX_THREADS": 200809,
      "_POSIX_THREAD_ATTR_STACKADDR": 200809,
      "_POSIX_THREAD_ATTR_STACKSIZE": 200809,
      "_POSIX_THREAD_PRIORITY_SCHEDULING": 200809,
      "_POSIX_THREAD_PRIO_INHERIT": 200809,
      "_POSIX_THREAD_PRIO_PROTECT": 200809,
      "_POSIX_THREAD_ROBUST_PRIO_INHERIT": null,
      "_POSIX_THREAD_ROBUST_PRIO_PROTECT": null,
      "_POSIX_THREAD_PROCESS_SHARED": 200809,
      "_POSIX_THREAD_SAFE_FUNCTIONS": 200809,
      "_POSIX_TIMERS": 200809,
      "TIMER_MAX": null,
      "_POSIX_TZNAME_MAX": 6,
      "_POSIX_VERSION": 200809,
      "_T_IOV_MAX": null,
      "_XOPEN_CRYPT": 1,
      "_XOPEN_ENH_I18N": 1,
      "_XOPEN_LEGACY": 1,
      "_XOPEN_REALTIME": 1,
      "_XOPEN_REALTIME_THREADS": 1,
      "_XOPEN_SHM": 1,
      "_XOPEN_UNIX": 1,
      "_XOPEN_VERSION": 700,
      "_XOPEN_XCU_VERSION": 4,
      "_XOPEN_XPG2": 1,
      "_XOPEN_XPG3": 1,
      "_XOPEN_XPG4": 1,
      "BC_BASE_MAX": 99,
      "BC_DIM_MAX": 2048,
      "BC_SCALE_MAX": 99,
      "BC_STRING_MAX": 1000,
      "CHARCLASS_NAME_MAX": 2048,
      "COLL_WEIGHTS_MAX": 255,
      "EQUIV_CLASS_MAX": null,
      "EXPR_NEST_MAX": 32,
      "LINE_MAX": 2048,
      "POSIX2_BC_BASE_MAX": 99,
      "POSIX2_BC_DIM_MAX": 2048,
      "POSIX2_BC_SCALE_MAX": 99,
      "POSIX2_BC_STRING_MAX": 1000,
      "POSIX2_CHAR_TERM": 200809,
      "POSIX2_COLL_WEIGHTS_MAX": 255,
      "POSIX2_C_BIND": 200809,
      "POSIX2_C_DEV": 200809,
      "POSIX2_C_VERSION": null,
      "POSIX2_EXPR_NEST_MAX": 32,
      "POSIX2_FORT_DEV": null,
      "POSIX2_FORT_RUN": null,
      "_POSIX2_LINE_MAX": 2048,
      "POSIX2_LINE_MAX": 2048,
      "POSIX2_LOCALEDEF": 200809,
      "POSIX2_RE_DUP_MAX": 32767,
      "POSIX2_SW_DEV": 200809,
      "POSIX2_UPE": null,
      "POSIX2_VERSION": 200809,
      "RE_DUP_MAX": 32767,
      "PATH": "/bin:/usr/bin",
      "CS_PATH": "/bin:/usr/bin",
      "LFS_CFLAGS": null,
      "LFS_LDFLAGS": null,
      "LFS_LIBS": null,
      "LFS_LINTFLAGS": null,
      "LFS64_CFLAGS": "-D_LARGEFILE64_SOURCE",
      "LFS64_LDFLAGS": null,
      "LFS64_LIBS": null,
      "LFS64_LINTFLAGS": "-D_LARGEFILE64_SOURCE",
      "_XBS5_WIDTH_RESTRICTED_ENVS": "XBS5_LP64_OFF64",
      "XBS5_WIDTH_RESTRICTED_ENVS": "XBS5_LP64_OFF64",
      "_XBS5_ILP32_OFF32": null,
      "XBS5_ILP32_OFF32_CFLAGS": null,
      "XBS5_ILP32_OFF32_LDFLAGS": null,
      "XBS5_ILP32_OFF32_LIBS": null,
      "XBS5_ILP32_OFF32_LINTFLAGS": null,
      "_XBS5_ILP32_OFFBIG": null,
      "XBS5_ILP32_OFFBIG_CFLAGS": null,
      "XBS5_ILP32_OFFBIG_LDFLAGS": null,
      "XBS5_ILP32_OFFBIG_LIBS": null,
      "XBS5_ILP32_OFFBIG_LINTFLAGS": null,
      "_XBS5_LP64_OFF64": 1,
      "XBS5_LP64_OFF64_CFLAGS": "-m64",
      "XBS5_LP64_OFF64_LDFLAGS": "-m64",
      "XBS5_LP64_OFF64_LIBS": null,
      "XBS5_LP64_OFF64_LINTFLAGS": null,
      "_XBS5_LPBIG_OFFBIG": null,
      "XBS5_LPBIG_OFFBIG_CFLAGS": null,
      "XBS5_LPBIG_OFFBIG_LDFLAGS": null,
      "XBS5_LPBIG_OFFBIG_LIBS": null,
      "XBS5_LPBIG_OFFBIG_LINTFLAGS": null,
      "_POSIX_V6_ILP32_OFF32": null,
      "POSIX_V6_ILP32_OFF32_CFLAGS": null,
      "POSIX_V6_ILP32_OFF32_LDFLAGS": null,
      "POSIX_V6_ILP32_OFF32_LIBS": null,
      "POSIX_V6_ILP32_OFF32_LINTFLAGS": null,
      "_POSIX_V6_WIDTH_RESTRICTED_ENVS": "POSIX_V6_LP64_OFF64",
      "POSIX_V6_WIDTH_RESTRICTED_ENVS": "POSIX_V6_LP64_OFF64",
      "_POSIX_V6_ILP32_OFFBIG": null,
      "POSIX_V6_ILP32_OFFBIG_CFLAGS": null,
      "POSIX_V6_ILP32_OFFBIG_LDFLAGS": null,
      "POSIX_V6_ILP32_OFFBIG_LIBS": null,
      "POSIX_V6_ILP32_OFFBIG_LINTFLAGS": null,
      "_POSIX_V6_LP64_OFF64": 1,
      "POSIX_V6_LP64_OFF64_CFLAGS": "-m64",
      "POSIX_V6_LP64_OFF64_LDFLAGS": "-m64",
      "POSIX_V6_LP64_OFF64_LIBS": null,
      "POSIX_V6_LP64_OFF64_LINTFLAGS": null,
      "_POSIX_V6_LPBIG_OFFBIG": null,
      "POSIX_V6_LPBIG_OFFBIG_CFLAGS": null,
      "POSIX_V6_LPBIG_OFFBIG_LDFLAGS": null,
      "POSIX_V6_LPBIG_OFFBIG_LIBS": null,
      "POSIX_V6_LPBIG_OFFBIG_LINTFLAGS": null,
      "_POSIX_V7_ILP32_OFF32": null,
      "POSIX_V7_ILP32_OFF32_CFLAGS": null,
      "POSIX_V7_ILP32_OFF32_LDFLAGS": null,
      "POSIX_V7_ILP32_OFF32_LIBS": null,
      "POSIX_V7_ILP32_OFF32_LINTFLAGS": null,
      "_POSIX_V7_WIDTH_RESTRICTED_ENVS": "POSIX_V7_LP64_OFF64",
      "POSIX_V7_WIDTH_RESTRICTED_ENVS": "POSIX_V7_LP64_OFF64",
      "_POSIX_V7_ILP32_OFFBIG": null,
      "POSIX_V7_ILP32_OFFBIG_CFLAGS": null,
      "POSIX_V7_ILP32_OFFBIG_LDFLAGS": null,
      "POSIX_V7_ILP32_OFFBIG_LIBS": null,
      "POSIX_V7_ILP32_OFFBIG_LINTFLAGS": null,
      "_POSIX_V7_LP64_OFF64": 1,
      "POSIX_V7_LP64_OFF64_CFLAGS": "-m64",
      "POSIX_V7_LP64_OFF64_LDFLAGS": "-m64",
      "POSIX_V7_LP64_OFF64_LIBS": null,
      "POSIX_V7_LP64_OFF64_LINTFLAGS": null,
      "_POSIX_V7_LPBIG_OFFBIG": null,
      "POSIX_V7_LPBIG_OFFBIG_CFLAGS": null,
      "POSIX_V7_LPBIG_OFFBIG_LDFLAGS": null,
      "POSIX_V7_LPBIG_OFFBIG_LIBS": null,
      "POSIX_V7_LPBIG_OFFBIG_LINTFLAGS": null,
      "_POSIX_ADVISORY_INFO": 200809,
      "_POSIX_BARRIERS": 200809,
      "_POSIX_BASE": null,
      "_POSIX_C_LANG_SUPPORT": null,
      "_POSIX_C_LANG_SUPPORT_R": null,
      "_POSIX_CLOCK_SELECTION": 200809,
      "_POSIX_CPUTIME": 200809,
      "_POSIX_THREAD_CPUTIME": 200809,
      "_POSIX_DEVICE_SPECIFIC": null,
      "_POSIX_DEVICE_SPECIFIC_R": null,
      "_POSIX_FD_MGMT": null,
      "_POSIX_FIFO": null,
      "_POSIX_PIPE": null,
      "_POSIX_FILE_ATTRIBUTES": null,
      "_POSIX_FILE_LOCKING": null,
      "_POSIX_FILE_SYSTEM": null,
      "_POSIX_MONOTONIC_CLOCK": 200809,
      "_POSIX_MULTI_PROCESS": null,
      "_POSIX_SINGLE_PROCESS": null,
      "_POSIX_NETWORKING": null,
      "_POSIX_READER_WRITER_LOCKS": 200809,
      "_POSIX_SPIN_LOCKS": 200809,
      "_POSIX_REGEXP": 1,
      "_REGEX_VERSION": null,
      "_POSIX_SHELL": 1,
      "_POSIX_SIGNALS": null,
      "_POSIX_SPAWN": 200809,
      "_POSIX_SPORADIC_SERVER": null,
      "_POSIX_THREAD_SPORADIC_SERVER": null,
      "_POSIX_SYSTEM_DATABASE": null,
      "_POSIX_SYSTEM_DATABASE_R": null,
      "_POSIX_TIMEOUTS": 200809,
      "_POSIX_TYPED_MEMORY_OBJECTS": null,
      "_POSIX_USER_GROUPS": null,
      "_POSIX_USER_GROUPS_R": null,
      "POSIX2_PBS": null,
      "POSIX2_PBS_ACCOUNTING": null,
      "POSIX2_PBS_LOCATE": null,
      "POSIX2_PBS_TRACK": null,
      "POSIX2_PBS_MESSAGE": null,
      "SYMLOOP_MAX": null,
      "STREAM_MAX": 16,
      "AIO_LISTIO_MAX": null,
      "AIO_MAX": null,
      "AIO_PRIO_DELTA_MAX": 20,
      "DELAYTIMER_MAX": 2147483647,
      "HOST_NAME_MAX": 64,
      "LOGIN_NAME_MAX": 256,
      "MQ_OPEN_MAX": null,
      "MQ_PRIO_MAX": 32768,
      "_POSIX_DEVICE_IO": null,
      "_POSIX_TRACE": null,
      "_POSIX_TRACE_EVENT_FILTER": null,
      "_POSIX_TRACE_INHERIT": null,
      "_POSIX_TRACE_LOG": null,
      "RTSIG_MAX": 32,
      "SEM_NSEMS_MAX": null,
      "SEM_VALUE_MAX": 2147483647,
      "SIGQUEUE_MAX": 2380,
      "FILESIZEBITS": 64,
      "POSIX_ALLOC_SIZE_MIN": 4096,
      "POSIX_REC_INCR_XFER_SIZE": null,
      "POSIX_REC_MAX_XFER_SIZE": null,
      "POSIX_REC_MIN_XFER_SIZE": 4096,
      "POSIX_REC_XFER_ALIGN": 4096,
      "SYMLINK_MAX": null,
      "GNU_LIBC_VERSION": "glibc 2.12",
      "GNU_LIBPTHREAD_VERSION": "NPTL 2.12",
      "POSIX2_SYMLINKS": 1,
      "LEVEL1_ICACHE_SIZE": 32768,
      "LEVEL1_ICACHE_ASSOC": 8,
      "LEVEL1_ICACHE_LINESIZE": 64,
      "LEVEL1_DCACHE_SIZE": 32768,
      "LEVEL1_DCACHE_ASSOC": 8,
      "LEVEL1_DCACHE_LINESIZE": 64,
      "LEVEL2_CACHE_SIZE": 262144,
      "LEVEL2_CACHE_ASSOC": 8,
      "LEVEL2_CACHE_LINESIZE": 64,
      "LEVEL3_CACHE_SIZE": 6291456,
      "LEVEL3_CACHE_ASSOC": 12,
      "LEVEL3_CACHE_LINESIZE": 64,
      "LEVEL4_CACHE_SIZE": 0,
      "LEVEL4_CACHE_ASSOC": 0,
      "LEVEL4_CACHE_LINESIZE": 0,
      "IPV6": 200809,
      "RAW_SOCKETS": 200809
    },
    "filesystem": {
      "/dev/mapper/vg_epplkraw0381t1-lv_root": {
        "kb_size": "18261312",
        "kb_used": "2069776",
        "kb_available": "15257240",
        "percent_used": "12%",
        "mount": "/",
        "total_inodes": "1169168",
        "inodes_used": "109582",
        "inodes_available": "1059586",
        "inodes_percent_used": "10%",
        "fs_type": "ext4",
        "mount_options": [
          "rw"
        ],
        "uuid": "22e7732c-8de5-4929-a338-4face887cb95"
      },
      "tmpfs": {
        "kb_size": "315392",
        "kb_used": "0",
        "kb_available": "315392",
        "percent_used": "0%",
        "mount": "/dev/shm",
        "total_inodes": "78848",
        "inodes_used": "1",
        "inodes_available": "78847",
        "inodes_percent_used": "1%",
        "fs_type": "tmpfs",
        "mount_options": [
          "rw"
        ]
      },
      "/dev/sda1": {
        "kb_size": "487652",
        "kb_used": "52777",
        "kb_available": "409275",
        "percent_used": "12%",
        "mount": "/boot",
        "total_inodes": "128016",
        "inodes_used": "44",
        "inodes_available": "127972",
        "inodes_percent_used": "1%",
        "fs_type": "ext4",
        "mount_options": [
          "rw"
        ],
        "uuid": "afc9d16e-72b3-46bd-995d-0ff5bd489127"
      },
      "vagrant": {
        "kb_size": "741980832",
        "kb_used": "115032236",
        "kb_available": "626948596",
        "percent_used": "16%",
        "mount": "/vagrant",
        "total_inodes": "1000",
        "inodes_used": "0",
        "inodes_available": "1000",
        "inodes_percent_used": "0%",
        "fs_type": "vboxsf",
        "mount_options": [
          "uid=500",
          "gid=500",
          "rw"
        ]
      },
      "proc": {
        "mount": "/proc",
        "fs_type": "proc",
        "mount_options": [
          "rw"
        ]
      },
      "sysfs": {
        "mount": "/sys",
        "fs_type": "sysfs",
        "mount_options": [
          "rw"
        ]
      },
      "devpts": {
        "mount": "/dev/pts",
        "fs_type": "devpts",
        "mount_options": [
          "rw",
          "gid=5",
          "mode=620"
        ]
      },
      "none": {
        "mount": "/proc/sys/fs/binfmt_misc",
        "fs_type": "binfmt_misc",
        "mount_options": [
          "rw"
        ]
      },
      "/dev/sda2": {
        "fs_type": "LVM2_member",
        "uuid": "xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa"
      },
      "/dev/mapper/vg_epplkraw0381t1-lv_swap": {
        "fs_type": "swap",
        "uuid": "35eb589b-770a-4fd0-82be-2f2a95ca8eb7"
      },
      "rootfs": {
        "mount": "/",
        "fs_type": "rootfs",
        "mount_options": [
          "rw"
        ]
      },
      "devtmpfs": {
        "mount": "/dev",
        "fs_type": "devtmpfs",
        "mount_options": [
          "rw",
          "relatime",
          "size=304660k",
          "nr_inodes=76165",
          "mode=755"
        ]
      },
      "/proc/bus/usb": {
        "mount": "/proc/bus/usb",
        "fs_type": "usbfs",
        "mount_options": [
          "rw",
          "relatime"
        ]
      }
    },
    "fips": {
      "kernel": {
        "enabled": false
      }
    },
    "etc": {
      "passwd": {
        "root": {
          "dir": "/root",
          "gid": 0,
          "uid": 0,
          "shell": "/bin/bash",
          "gecos": "root"
        },
        "bin": {
          "dir": "/bin",
          "gid": 1,
          "uid": 1,
          "shell": "/sbin/nologin",
          "gecos": "bin"
        },
        "daemon": {
          "dir": "/sbin",
          "gid": 2,
          "uid": 2,
          "shell": "/sbin/nologin",
          "gecos": "daemon"
        },
        "adm": {
          "dir": "/var/adm",
          "gid": 4,
          "uid": 3,
          "shell": "/sbin/nologin",
          "gecos": "adm"
        },
        "lp": {
          "dir": "/var/spool/lpd",
          "gid": 7,
          "uid": 4,
          "shell": "/sbin/nologin",
          "gecos": "lp"
        },
        "sync": {
          "dir": "/sbin",
          "gid": 0,
          "uid": 5,
          "shell": "/bin/sync",
          "gecos": "sync"
        },
        "shutdown": {
          "dir": "/sbin",
          "gid": 0,
          "uid": 6,
          "shell": "/sbin/shutdown",
          "gecos": "shutdown"
        },
        "halt": {
          "dir": "/sbin",
          "gid": 0,
          "uid": 7,
          "shell": "/sbin/halt",
          "gecos": "halt"
        },
        "mail": {
          "dir": "/var/spool/mail",
          "gid": 12,
          "uid": 8,
          "shell": "/sbin/nologin",
          "gecos": "mail"
        },
        "uucp": {
          "dir": "/var/spool/uucp",
          "gid": 14,
          "uid": 10,
          "shell": "/sbin/nologin",
          "gecos": "uucp"
        },
        "operator": {
          "dir": "/root",
          "gid": 0,
          "uid": 11,
          "shell": "/sbin/nologin",
          "gecos": "operator"
        },
        "games": {
          "dir": "/usr/games",
          "gid": 100,
          "uid": 12,
          "shell": "/sbin/nologin",
          "gecos": "games"
        },
        "gopher": {
          "dir": "/var/gopher",
          "gid": 30,
          "uid": 13,
          "shell": "/sbin/nologin",
          "gecos": "gopher"
        },
        "ftp": {
          "dir": "/var/ftp",
          "gid": 50,
          "uid": 14,
          "shell": "/sbin/nologin",
          "gecos": "FTP User"
        },
        "nobody": {
          "dir": "/",
          "gid": 99,
          "uid": 99,
          "shell": "/sbin/nologin",
          "gecos": "Nobody"
        },
        "vcsa": {
          "dir": "/dev",
          "gid": 69,
          "uid": 69,
          "shell": "/sbin/nologin",
          "gecos": "virtual console memory owner"
        },
        "saslauth": {
          "dir": "/var/empty/saslauth",
          "gid": 76,
          "uid": 499,
          "shell": "/sbin/nologin",
          "gecos": "Saslauthd user"
        },
        "postfix": {
          "dir": "/var/spool/postfix",
          "gid": 89,
          "uid": 89,
          "shell": "/sbin/nologin",
          "gecos": ""
        },
        "sshd": {
          "dir": "/var/empty/sshd",
          "gid": 74,
          "uid": 74,
          "shell": "/sbin/nologin",
          "gecos": "Privilege-separated SSH"
        },
        "vagrant": {
          "dir": "/home/vagrant",
          "gid": 500,
          "uid": 500,
          "shell": "/bin/bash",
          "gecos": "vagrant"
        },
        "vboxadd": {
          "dir": "/var/run/vboxadd",
          "gid": 1,
          "uid": 498,
          "shell": "/bin/false",
          "gecos": ""
        }
      },
      "group": {
        "root": {
          "gid": 0,
          "members": [

          ]
        },
        "bin": {
          "gid": 1,
          "members": [
            "bin",
            "daemon"
          ]
        },
        "daemon": {
          "gid": 2,
          "members": [
            "bin",
            "daemon"
          ]
        },
        "sys": {
          "gid": 3,
          "members": [
            "bin",
            "adm"
          ]
        },
        "adm": {
          "gid": 4,
          "members": [
            "adm",
            "daemon"
          ]
        },
        "tty": {
          "gid": 5,
          "members": [

          ]
        },
        "disk": {
          "gid": 6,
          "members": [

          ]
        },
        "lp": {
          "gid": 7,
          "members": [
            "daemon"
          ]
        },
        "mem": {
          "gid": 8,
          "members": [

          ]
        },
        "kmem": {
          "gid": 9,
          "members": [

          ]
        },
        "wheel": {
          "gid": 10,
          "members": [

          ]
        },
        "mail": {
          "gid": 12,
          "members": [
            "mail",
            "postfix"
          ]
        },
        "uucp": {
          "gid": 14,
          "members": [

          ]
        },
        "man": {
          "gid": 15,
          "members": [

          ]
        },
        "games": {
          "gid": 20,
          "members": [

          ]
        },
        "gopher": {
          "gid": 30,
          "members": [

          ]
        },
        "video": {
          "gid": 39,
          "members": [

          ]
        },
        "dip": {
          "gid": 40,
          "members": [

          ]
        },
        "ftp": {
          "gid": 50,
          "members": [

          ]
        },
        "lock": {
          "gid": 54,
          "members": [

          ]
        },
        "audio": {
          "gid": 63,
          "members": [

          ]
        },
        "nobody": {
          "gid": 99,
          "members": [

          ]
        },
        "users": {
          "gid": 100,
          "members": [

          ]
        },
        "floppy": {
          "gid": 19,
          "members": [

          ]
        },
        "vcsa": {
          "gid": 69,
          "members": [

          ]
        },
        "utmp": {
          "gid": 22,
          "members": [

          ]
        },
        "utempter": {
          "gid": 35,
          "members": [

          ]
        },
        "cdrom": {
          "gid": 11,
          "members": [

          ]
        },
        "tape": {
          "gid": 33,
          "members": [

          ]
        },
        "dialout": {
          "gid": 18,
          "members": [

          ]
        },
        "saslauth": {
          "gid": 76,
          "members": [

          ]
        },
        "postdrop": {
          "gid": 90,
          "members": [

          ]
        },
        "postfix": {
          "gid": 89,
          "members": [

          ]
        },
        "fuse": {
          "gid": 499,
          "members": [

          ]
        },
        "sshd": {
          "gid": 74,
          "members": [

          ]
        },
        "vagrant": {
          "gid": 500,
          "members": [
            "vagrant"
          ]
        },
        "vboxsf": {
          "gid": 498,
          "members": [

          ]
        }
      }
    },
    "current_user": "root",
    "chef_packages": {
      "chef": {
        "version": "12.18.31",
        "chef_root": "/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/chef-12.18.31/lib"
      },
      "ohai": {
        "version": "8.23.0",
        "ohai_root": "/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/ohai-8.23.0/lib/ohai"
      }
    },
    "time": {
      "timezone": "BST"
    },
    "root_group": "root",
    "ohai_time": 1491410872.9440804,
    "virtualbox": {
      "host": {
        "language": "en_US",
        "revision": "112924",
        "version": "5.1.14"
      },
      "guest": {
        "guest_additions_version": "5.0.26",
        "guest_additions_revision": "108824"
      }
    },
    "uptime_seconds": 4538,
    "uptime": "1 hours 15 minutes 38 seconds",
    "idletime_seconds": 8888,
    "idletime": "2 hours 28 minutes 08 seconds",
    "command": {
      "ps": "ps -ef"
    },
    "cloud_v2": null,
    "packages": {
      "vim-minimal": {
        "epoch": "2",
        "version": "7.4.629",
        "release": "5.el6_8.1",
        "installdate": "1485473413",
        "arch": "x86_64"
      },
      "setup": {
        "epoch": "0",
        "version": "2.8.14",
        "release": "20.el6_4.1",
        "installdate": "1485473162",
        "arch": "noarch"
      },
      "python": {
        "epoch": "0",
        "version": "2.6.6",
        "release": "66.el6_8",
        "installdate": "1485473414",
        "arch": "x86_64"
      },
      "basesystem": {
        "epoch": "0",
        "version": "10.0",
        "release": "4.el6",
        "installdate": "1485473163",
        "arch": "noarch"
      },
      "iscsi-initiator-utils": {
        "epoch": "0",
        "version": "6.2.0.873",
        "release": "22.el6_8",
        "installdate": "1485473416",
        "arch": "x86_64"
      },
      "sudo": {
        "epoch": "0",
        "version": "1.8.6p3",
        "release": "25.el6_8",
        "installdate": "1485473416",
        "arch": "x86_64"
      },
      "glibc-common": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1485473172",
        "arch": "x86_64"
      },
      "selinux-policy-targeted": {
        "epoch": "0",
        "version": "3.7.19",
        "release": "292.el6_8.2",
        "installdate": "1485473417",
        "arch": "noarch"
      },
      "glibc": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1485473177",
        "arch": "x86_64"
      },
      "openssh-server": {
        "epoch": "0",
        "version": "5.3p1",
        "release": "118.1.el6_8",
        "installdate": "1485473440",
        "arch": "x86_64"
      },
      "db4-utils": {
        "epoch": "0",
        "version": "4.7.25",
        "release": "20.el6_8.1",
        "installdate": "1485473441",
        "arch": "x86_64"
      },
      "libcap": {
        "epoch": "0",
        "version": "2.16",
        "release": "5.5.el6",
        "installdate": "1485473177",
        "arch": "x86_64"
      },
      "kernel-devel": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.el6",
        "installdate": "1485473365",
        "arch": "x86_64"
      },
      "info": {
        "epoch": "0",
        "version": "4.13a",
        "release": "8.el6",
        "installdate": "1485473177",
        "arch": "x86_64"
      },
      "tzdata": {
        "epoch": "0",
        "version": "2016j",
        "release": "1.el6",
        "installdate": "1485473446",
        "arch": "noarch"
      },
      "audit-libs": {
        "epoch": "0",
        "version": "2.4.5",
        "release": "3.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "libgcc": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406422",
        "arch": "x86_64"
      },
      "libacl": {
        "epoch": "0",
        "version": "2.2.49",
        "release": "6.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "libstdc++-devel": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406424",
        "arch": "x86_64"
      },
      "nspr": {
        "epoch": "0",
        "version": "4.11.0",
        "release": "1.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "perl-libs": {
        "epoch": "4",
        "version": "5.10.1",
        "release": "144.el6",
        "installdate": "1491406424",
        "arch": "x86_64"
      },
      "libselinux": {
        "epoch": "0",
        "version": "2.0.94",
        "release": "7.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "perl-Module-Pluggable": {
        "epoch": "1",
        "version": "3.90",
        "release": "144.el6",
        "installdate": "1491406425",
        "arch": "x86_64"
      },
      "sed": {
        "epoch": "0",
        "version": "4.2.1",
        "release": "10.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "perl": {
        "epoch": "4",
        "version": "5.10.1",
        "release": "144.el6",
        "installdate": "1491406427",
        "arch": "x86_64"
      },
      "readline": {
        "epoch": "0",
        "version": "6.0",
        "release": "4.el6",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "libgomp": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406427",
        "arch": "x86_64"
      },
      "gawk": {
        "epoch": "0",
        "version": "3.1.7",
        "release": "10.el6_7.3",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "gcc": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406429",
        "arch": "x86_64"
      },
      "chef": {
        "epoch": "0",
        "version": "12.19.36",
        "release": "1.el6",
        "installdate": "1491408707",
        "arch": "x86_64"
      },
      "libgpg-error": {
        "epoch": "0",
        "version": "1.7",
        "release": "4.el6",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "unzip": {
        "epoch": "0",
        "version": "6.0",
        "release": "5.el6",
        "installdate": "1491409251",
        "arch": "x86_64"
      },
      "rsync": {
        "epoch": "0",
        "version": "3.0.6",
        "release": "12.el6",
        "installdate": "1491409504",
        "arch": "x86_64"
      },
      "pcre": {
        "epoch": "0",
        "version": "7.8",
        "release": "7.el6",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "git": {
        "epoch": "0",
        "version": "1.7.1",
        "release": "8.el6",
        "installdate": "1491409505",
        "arch": "x86_64"
      },
      "lua": {
        "epoch": "0",
        "version": "5.1.4",
        "release": "4.1.el6",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "cyrus-sasl-lib": {
        "epoch": "0",
        "version": "2.1.23",
        "release": "15.el6_6.2",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "elfutils-libelf": {
        "epoch": "0",
        "version": "0.164",
        "release": "2.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "findutils": {
        "epoch": "1",
        "version": "4.4.2",
        "release": "9.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "checkpolicy": {
        "epoch": "0",
        "version": "2.0.22",
        "release": "1.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "which": {
        "epoch": "0",
        "version": "2.19",
        "release": "6.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "pth": {
        "epoch": "0",
        "version": "2.0.7",
        "release": "9.3.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "sysvinit-tools": {
        "epoch": "0",
        "version": "2.87",
        "release": "6.dsf.el6",
        "installdate": "1485473181",
        "arch": "x86_64"
      },
      "libtasn1": {
        "epoch": "0",
        "version": "2.3",
        "release": "6.el6_5",
        "installdate": "1485473181",
        "arch": "x86_64"
      },
      "p11-kit-trust": {
        "epoch": "0",
        "version": "0.18.5",
        "release": "2.el6_5.2",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "gmp": {
        "epoch": "0",
        "version": "4.3.1",
        "release": "10.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "libnih": {
        "epoch": "0",
        "version": "1.0.1",
        "release": "7.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "file": {
        "epoch": "0",
        "version": "5.04",
        "release": "30.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "psmisc": {
        "epoch": "0",
        "version": "22.6",
        "release": "19.el6_5",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "procps": {
        "epoch": "0",
        "version": "3.2.8",
        "release": "36.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "e2fsprogs-libs": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1485473183",
        "arch": "x86_64"
      },
      "diffutils": {
        "epoch": "0",
        "version": "2.8.1",
        "release": "28.el6",
        "installdate": "1485473183",
        "arch": "x86_64"
      },
      "dash": {
        "epoch": "0",
        "version": "0.5.5.1",
        "release": "4.el6",
        "installdate": "1485473184",
        "arch": "x86_64"
      },
      "groff": {
        "epoch": "0",
        "version": "1.18.1.4",
        "release": "21.el6",
        "installdate": "1485473185",
        "arch": "x86_64"
      },
      "coreutils-libs": {
        "epoch": "0",
        "version": "8.4",
        "release": "43.el6",
        "installdate": "1485473185",
        "arch": "x86_64"
      },
      "cracklib": {
        "epoch": "0",
        "version": "2.8.16",
        "release": "4.el6",
        "installdate": "1485473185",
        "arch": "x86_64"
      },
      "coreutils": {
        "epoch": "0",
        "version": "8.4",
        "release": "43.el6",
        "installdate": "1485473186",
        "arch": "x86_64"
      },
      "module-init-tools": {
        "epoch": "0",
        "version": "3.9",
        "release": "25.el6",
        "installdate": "1485473187",
        "arch": "x86_64"
      },
      "redhat-logos": {
        "epoch": "0",
        "version": "60.0.14",
        "release": "12.el6.centos",
        "installdate": "1485473188",
        "arch": "noarch"
      },
      "libpciaccess": {
        "epoch": "0",
        "version": "0.13.4",
        "release": "1.el6",
        "installdate": "1485473188",
        "arch": "x86_64"
      },
      "libedit": {
        "epoch": "0",
        "version": "2.11",
        "release": "4.20080712cvs.1.el6",
        "installdate": "1485473189",
        "arch": "x86_64"
      },
      "mingetty": {
        "epoch": "0",
        "version": "1.08",
        "release": "5.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "krb5-libs": {
        "epoch": "0",
        "version": "1.10.3",
        "release": "57.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "libssh2": {
        "epoch": "0",
        "version": "1.4.2",
        "release": "2.el6_7.1",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "rpm-libs": {
        "epoch": "0",
        "version": "4.8.0",
        "release": "55.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "rpm": {
        "epoch": "0",
        "version": "4.8.0",
        "release": "55.el6",
        "installdate": "1485473191",
        "arch": "x86_64"
      },
      "gnupg2": {
        "epoch": "0",
        "version": "2.0.14",
        "release": "8.el6",
        "installdate": "1485473191",
        "arch": "x86_64"
      },
      "fipscheck-lib": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "7.el6",
        "installdate": "1485473191",
        "arch": "x86_64"
      },
      "mysql-libs": {
        "epoch": "0",
        "version": "5.1.73",
        "release": "7.el6",
        "installdate": "1485473192",
        "arch": "x86_64"
      },
      "pciutils-libs": {
        "epoch": "0",
        "version": "3.1.10",
        "release": "4.el6",
        "installdate": "1485473192",
        "arch": "x86_64"
      },
      "libcap-ng": {
        "epoch": "0",
        "version": "0.6.4",
        "release": "3.el6_0.1",
        "installdate": "1485473192",
        "arch": "x86_64"
      },
      "python-pycurl": {
        "epoch": "0",
        "version": "7.19.0",
        "release": "9.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "pygpgme": {
        "epoch": "0",
        "version": "0.1",
        "release": "18.20090824bzr68.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "python-iniparse": {
        "epoch": "0",
        "version": "0.3.1",
        "release": "2.1.el6",
        "installdate": "1485473197",
        "arch": "noarch"
      },
      "newt": {
        "epoch": "0",
        "version": "0.52.11",
        "release": "3.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "ustr": {
        "epoch": "0",
        "version": "1.0.4",
        "release": "9.1.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "shadow-utils": {
        "epoch": "2",
        "version": "4.1.5.1",
        "release": "5.el6",
        "installdate": "1485473198",
        "arch": "x86_64"
      },
      "libutempter": {
        "epoch": "0",
        "version": "1.1.5",
        "release": "4.1.el6",
        "installdate": "1485473199",
        "arch": "x86_64"
      },
      "gamin": {
        "epoch": "0",
        "version": "0.1.10",
        "release": "9.el6",
        "installdate": "1485473199",
        "arch": "x86_64"
      },
      "shared-mime-info": {
        "epoch": "0",
        "version": "0.70",
        "release": "6.el6",
        "installdate": "1485473199",
        "arch": "x86_64"
      },
      "grubby": {
        "epoch": "0",
        "version": "7.0.15",
        "release": "7.el6",
        "installdate": "1485473200",
        "arch": "x86_64"
      },
      "yum-plugin-fastestmirror": {
        "epoch": "0",
        "version": "1.1.30",
        "release": "37.el6",
        "installdate": "1485473200",
        "arch": "noarch"
      },
      "dbus-glib": {
        "epoch": "0",
        "version": "0.86",
        "release": "6.el6",
        "installdate": "1485473200",
        "arch": "x86_64"
      },
      "centos-release": {
        "epoch": "0",
        "version": "6",
        "release": "8.el6.centos.12.3",
        "installdate": "1485473200",
        "arch": "x86_64"
      },
      "iptables": {
        "epoch": "0",
        "version": "1.4.7",
        "release": "16.el6",
        "installdate": "1485473201",
        "arch": "x86_64"
      },
      "libdrm": {
        "epoch": "0",
        "version": "2.4.65",
        "release": "2.el6",
        "installdate": "1485473201",
        "arch": "x86_64"
      },
      "plymouth": {
        "epoch": "0",
        "version": "0.8.3",
        "release": "27.el6.centos.1",
        "installdate": "1485473201",
        "arch": "x86_64"
      },
      "cryptsetup-luks-libs": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "11.el6",
        "installdate": "1485473203",
        "arch": "x86_64"
      },
      "kpartx": {
        "epoch": "0",
        "version": "0.4.9",
        "release": "93.el6",
        "installdate": "1485473203",
        "arch": "x86_64"
      },
      "cyrus-sasl": {
        "epoch": "0",
        "version": "2.1.23",
        "release": "15.el6_6.2",
        "installdate": "1485473203",
        "arch": "x86_64"
      },
      "crontabs": {
        "epoch": "0",
        "version": "1.10",
        "release": "33.el6",
        "installdate": "1485473205",
        "arch": "noarch"
      },
      "kbd": {
        "epoch": "0",
        "version": "1.15",
        "release": "11.el6",
        "installdate": "1485473207",
        "arch": "x86_64"
      },
      "fuse": {
        "epoch": "0",
        "version": "2.8.3",
        "release": "5.el6",
        "installdate": "1485473213",
        "arch": "x86_64"
      },
      "system-config-firewall-base": {
        "epoch": "0",
        "version": "1.2.27",
        "release": "7.2.el6_6",
        "installdate": "1485473243",
        "arch": "noarch"
      },
      "cryptsetup-luks": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "11.el6",
        "installdate": "1485473244",
        "arch": "x86_64"
      },
      "dhclient": {
        "epoch": "12",
        "version": "4.1.1",
        "release": "51.P1.el6.centos",
        "installdate": "1485473245",
        "arch": "x86_64"
      },
      "passwd": {
        "epoch": "0",
        "version": "0.77",
        "release": "7.el6",
        "installdate": "1485473246",
        "arch": "x86_64"
      },
      "grub": {
        "epoch": "1",
        "version": "0.97",
        "release": "94.el6_7.1",
        "installdate": "1485473246",
        "arch": "x86_64"
      },
      "e2fsprogs": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1485473247",
        "arch": "x86_64"
      },
      "acl": {
        "epoch": "0",
        "version": "2.2.49",
        "release": "6.el6",
        "installdate": "1485473247",
        "arch": "x86_64"
      },
      "bridge-utils": {
        "epoch": "0",
        "version": "1.2",
        "release": "10.el6",
        "installdate": "1485473247",
        "arch": "x86_64"
      },
      "epel-release": {
        "epoch": "0",
        "version": "6",
        "release": "8",
        "installdate": "1485473332",
        "arch": "noarch"
      },
      "mpfr": {
        "epoch": "0",
        "version": "2.4.1",
        "release": "6.el6",
        "installdate": "1485473356",
        "arch": "x86_64"
      },
      "ppl": {
        "epoch": "0",
        "version": "0.10.2",
        "release": "11.el6",
        "installdate": "1485473359",
        "arch": "x86_64"
      },
      "glibc-headers": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1485473360",
        "arch": "x86_64"
      },
      "openssl": {
        "epoch": "0",
        "version": "1.0.1e",
        "release": "48.el6_8.3",
        "installdate": "1485473400",
        "arch": "x86_64"
      },
      "nss-util": {
        "epoch": "0",
        "version": "3.21.3",
        "release": "1.el6_8",
        "installdate": "1485473401",
        "arch": "x86_64"
      },
      "nss-softokn-freebl": {
        "epoch": "0",
        "version": "3.14.3",
        "release": "23.3.el6_8",
        "installdate": "1485473401",
        "arch": "x86_64"
      },
      "nss-sysinit": {
        "epoch": "0",
        "version": "3.21.3",
        "release": "2.el6_8",
        "installdate": "1485473401",
        "arch": "x86_64"
      },
      "db4": {
        "epoch": "0",
        "version": "4.7.25",
        "release": "20.el6_8.1",
        "installdate": "1485473402",
        "arch": "x86_64"
      },
      "libblkid": {
        "epoch": "0",
        "version": "2.17.2",
        "release": "12.24.el6_8.1",
        "installdate": "1485473402",
        "arch": "x86_64"
      },
      "kernel-firmware": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.13.1.el6",
        "installdate": "1485473405",
        "arch": "noarch"
      },
      "dracut-kernel": {
        "epoch": "0",
        "version": "004",
        "release": "409.el6_8.2",
        "installdate": "1485473405",
        "arch": "noarch"
      },
      "kernel": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.el6",
        "installdate": "1485473212",
        "arch": "x86_64"
      },
      "udev": {
        "epoch": "0",
        "version": "147",
        "release": "2.73.el6_8.2",
        "installdate": "1485473411",
        "arch": "x86_64"
      },
      "device-mapper": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6_8.1",
        "installdate": "1485473412",
        "arch": "x86_64"
      },
      "openssh": {
        "epoch": "0",
        "version": "5.3p1",
        "release": "118.1.el6_8",
        "installdate": "1485473412",
        "arch": "x86_64"
      },
      "selinux-policy": {
        "epoch": "0",
        "version": "3.7.19",
        "release": "292.el6_8.2",
        "installdate": "1485473413",
        "arch": "noarch"
      },
      "lvm2-libs": {
        "epoch": "0",
        "version": "2.02.143",
        "release": "7.el6_8.1",
        "installdate": "1485473413",
        "arch": "x86_64"
      },
      "cronie": {
        "epoch": "0",
        "version": "1.4.4",
        "release": "16.el6_8.2",
        "installdate": "1485473413",
        "arch": "x86_64"
      },
      "expat": {
        "epoch": "0",
        "version": "2.0.1",
        "release": "13.el6_8",
        "installdate": "1485473414",
        "arch": "x86_64"
      },
      "filesystem": {
        "epoch": "0",
        "version": "2.4.30",
        "release": "3.el6",
        "installdate": "1485473163",
        "arch": "x86_64"
      },
      "python-libs": {
        "epoch": "0",
        "version": "2.6.6",
        "release": "66.el6_8",
        "installdate": "1485473415",
        "arch": "x86_64"
      },
      "ncurses-base": {
        "epoch": "0",
        "version": "5.7",
        "release": "4.20090207.el6",
        "installdate": "1485473163",
        "arch": "x86_64"
      },
      "yum": {
        "epoch": "0",
        "version": "3.2.29",
        "release": "75.el6.centos",
        "installdate": "1485473416",
        "arch": "noarch"
      },
      "lvm2": {
        "epoch": "0",
        "version": "2.02.143",
        "release": "7.el6_8.1",
        "installdate": "1485473416",
        "arch": "x86_64"
      },
      "openssh-clients": {
        "epoch": "0",
        "version": "5.3p1",
        "release": "118.1.el6_8",
        "installdate": "1485473440",
        "arch": "x86_64"
      },
      "ncurses-libs": {
        "epoch": "0",
        "version": "5.7",
        "release": "4.20090207.el6",
        "installdate": "1485473177",
        "arch": "x86_64"
      },
      "mdadm": {
        "epoch": "0",
        "version": "3.3.4",
        "release": "1.el6_8.5",
        "installdate": "1485473441",
        "arch": "x86_64"
      },
      "libattr": {
        "epoch": "0",
        "version": "2.4.44",
        "release": "7.el6",
        "installdate": "1485473177",
        "arch": "x86_64"
      },
      "nss-tools": {
        "epoch": "0",
        "version": "3.21.3",
        "release": "2.el6_8",
        "installdate": "1485473441",
        "arch": "x86_64"
      },
      "zlib": {
        "epoch": "0",
        "version": "1.2.3",
        "release": "29.el6",
        "installdate": "1485473177",
        "arch": "x86_64"
      },
      "libxml2": {
        "epoch": "0",
        "version": "2.7.6",
        "release": "21.el6_8.1",
        "installdate": "1485473445",
        "arch": "x86_64"
      },
      "popt": {
        "epoch": "0",
        "version": "1.13",
        "release": "7.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "libgcrypt": {
        "epoch": "0",
        "version": "1.4.5",
        "release": "12.el6_8",
        "installdate": "1485473447",
        "arch": "x86_64"
      },
      "libcom_err": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "libstdc++": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406423",
        "arch": "x86_64"
      },
      "perl-Pod-Escapes": {
        "epoch": "1",
        "version": "1.04",
        "release": "144.el6",
        "installdate": "1491406424",
        "arch": "x86_64"
      },
      "libsepol": {
        "epoch": "0",
        "version": "2.0.41",
        "release": "4.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "perl-Pod-Simple": {
        "epoch": "1",
        "version": "3.13",
        "release": "144.el6",
        "installdate": "1491406425",
        "arch": "x86_64"
      },
      "chkconfig": {
        "epoch": "0",
        "version": "1.3.49.5",
        "release": "1.el6",
        "installdate": "1485473178",
        "arch": "x86_64"
      },
      "perl-version": {
        "epoch": "3",
        "version": "0.77",
        "release": "144.el6",
        "installdate": "1491406425",
        "arch": "x86_64"
      },
      "binutils": {
        "epoch": "0",
        "version": "2.20.51.0.2",
        "release": "5.46.el6",
        "installdate": "1491406427",
        "arch": "x86_64"
      },
      "bzip2-libs": {
        "epoch": "0",
        "version": "1.0.5",
        "release": "7.el6_0",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "cpp": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406428",
        "arch": "x86_64"
      },
      "gcc-c++": {
        "epoch": "0",
        "version": "4.4.7",
        "release": "18.el6",
        "installdate": "1491406430",
        "arch": "x86_64"
      },
      "file-libs": {
        "epoch": "0",
        "version": "5.04",
        "release": "30.el6",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "chefdk": {
        "epoch": "0",
        "version": "1.2.22",
        "release": "1.el6",
        "installdate": "1491408734",
        "arch": "x86_64"
      },
      "dbus-libs": {
        "epoch": "1",
        "version": "1.2.24",
        "release": "8.el6_6",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "perl-Error": {
        "epoch": "1",
        "version": "0.17015",
        "release": "4.el6",
        "installdate": "1491409503",
        "arch": "noarch"
      },
      "perl-Git": {
        "epoch": "0",
        "version": "1.7.1",
        "release": "8.el6",
        "installdate": "1491409504",
        "arch": "noarch"
      },
      "sqlite": {
        "epoch": "0",
        "version": "3.6.20",
        "release": "1.el6_7.2",
        "installdate": "1485473179",
        "arch": "x86_64"
      },
      "libidn": {
        "epoch": "0",
        "version": "1.18",
        "release": "2.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "xz-libs": {
        "epoch": "0",
        "version": "4.999.9",
        "release": "0.5.beta.20091007git.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "bzip2": {
        "epoch": "0",
        "version": "1.0.5",
        "release": "7.el6_0",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "libselinux-utils": {
        "epoch": "0",
        "version": "2.0.94",
        "release": "7.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "cpio": {
        "epoch": "0",
        "version": "2.10",
        "release": "12.el6_5",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "tcp_wrappers-libs": {
        "epoch": "0",
        "version": "7.6",
        "release": "58.el6",
        "installdate": "1485473180",
        "arch": "x86_64"
      },
      "libaio": {
        "epoch": "0",
        "version": "0.3.107",
        "release": "10.el6",
        "installdate": "1485473181",
        "arch": "x86_64"
      },
      "p11-kit": {
        "epoch": "0",
        "version": "0.18.5",
        "release": "2.el6_5.2",
        "installdate": "1485473181",
        "arch": "x86_64"
      },
      "device-mapper-persistent-data": {
        "epoch": "0",
        "version": "0.6.2",
        "release": "0.1.rc7.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "libusb": {
        "epoch": "0",
        "version": "0.1.12",
        "release": "23.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "upstart": {
        "epoch": "0",
        "version": "0.6.5",
        "release": "16.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "pinentry": {
        "epoch": "0",
        "version": "0.7.6",
        "release": "8.el6",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "net-tools": {
        "epoch": "0",
        "version": "1.60",
        "release": "110.el6_2",
        "installdate": "1485473182",
        "arch": "x86_64"
      },
      "libss": {
        "epoch": "0",
        "version": "1.41.12",
        "release": "22.el6",
        "installdate": "1485473183",
        "arch": "x86_64"
      },
      "m4": {
        "epoch": "0",
        "version": "1.4.13",
        "release": "5.el6",
        "installdate": "1485473183",
        "arch": "x86_64"
      },
      "make": {
        "epoch": "1",
        "version": "3.81",
        "release": "23.el6",
        "installdate": "1485473183",
        "arch": "x86_64"
      },
      "ncurses": {
        "epoch": "0",
        "version": "5.7",
        "release": "4.20090207.el6",
        "installdate": "1485473184",
        "arch": "x86_64"
      },
      "less": {
        "epoch": "0",
        "version": "436",
        "release": "13.el6",
        "installdate": "1485473185",
        "arch": "x86_64"
      },
      "gzip": {
        "epoch": "0",
        "version": "1.3.12",
        "release": "22.el6",
        "installdate": "1485473185",
        "arch": "x86_64"
      },
      "cracklib-dicts": {
        "epoch": "0",
        "version": "2.8.16",
        "release": "4.el6",
        "installdate": "1485473185",
        "arch": "x86_64"
      },
      "pam": {
        "epoch": "0",
        "version": "1.1.1",
        "release": "22.el6",
        "installdate": "1485473187",
        "arch": "x86_64"
      },
      "hwdata": {
        "epoch": "0",
        "version": "0.233",
        "release": "16.1.el6",
        "installdate": "1485473187",
        "arch": "noarch"
      },
      "plymouth-scripts": {
        "epoch": "0",
        "version": "0.8.3",
        "release": "27.el6.centos.1",
        "installdate": "1485473188",
        "arch": "x86_64"
      },
      "ca-certificates": {
        "epoch": "0",
        "version": "2015.2.6",
        "release": "65.0.1.el6_7",
        "installdate": "1485473188",
        "arch": "noarch"
      },
      "logrotate": {
        "epoch": "0",
        "version": "3.7.8",
        "release": "26.el6_7",
        "installdate": "1485473189",
        "arch": "x86_64"
      },
      "gdbm": {
        "epoch": "0",
        "version": "1.8.0",
        "release": "39.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "keyutils-libs": {
        "epoch": "0",
        "version": "1.4",
        "release": "5.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "libcurl": {
        "epoch": "0",
        "version": "7.19.7",
        "release": "52.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "curl": {
        "epoch": "0",
        "version": "7.19.7",
        "release": "52.el6",
        "installdate": "1485473190",
        "arch": "x86_64"
      },
      "openldap": {
        "epoch": "0",
        "version": "2.4.40",
        "release": "12.el6",
        "installdate": "1485473191",
        "arch": "x86_64"
      },
      "gpgme": {
        "epoch": "0",
        "version": "1.1.8",
        "release": "3.el6",
        "installdate": "1485473191",
        "arch": "x86_64"
      },
      "fipscheck": {
        "epoch": "0",
        "version": "1.2.0",
        "release": "7.el6",
        "installdate": "1485473191",
        "arch": "x86_64"
      },
      "ethtool": {
        "epoch": "2",
        "version": "3.5",
        "release": "6.el6",
        "installdate": "1485473192",
        "arch": "x86_64"
      },
      "plymouth-core-libs": {
        "epoch": "0",
        "version": "0.8.3",
        "release": "27.el6.centos.1",
        "installdate": "1485473192",
        "arch": "x86_64"
      },
      "libffi": {
        "epoch": "0",
        "version": "3.0.5",
        "release": "3.2.el6",
        "installdate": "1485473192",
        "arch": "x86_64"
      },
      "python-urlgrabber": {
        "epoch": "0",
        "version": "3.9.1",
        "release": "11.el6",
        "installdate": "1485473197",
        "arch": "noarch"
      },
      "rpm-python": {
        "epoch": "0",
        "version": "4.8.0",
        "release": "55.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "slang": {
        "epoch": "0",
        "version": "2.2.1",
        "release": "1.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "newt-python": {
        "epoch": "0",
        "version": "0.52.11",
        "release": "3.el6",
        "installdate": "1485473197",
        "arch": "x86_64"
      },
      "libsemanage": {
        "epoch": "0",
        "version": "2.0.43",
        "release": "5.1.el6",
        "installdate": "1485473198",
        "arch": "x86_64"
      },
      "MAKEDEV": {
        "epoch": "0",
        "version": "3.24",
        "release": "6.el6",
        "installdate": "1485473199",
        "arch": "x86_64"
      },
      "pkgconfig": {
        "epoch": "1",
        "version": "0.23",
        "release": "9.1.el6",
        "installdate": "1485473199",
        "arch": "x86_64"
      },
      "glib2": {
        "epoch": "0",
        "version": "2.28.8",
        "release": "5.el6",
        "installdate": "1485473199",
        "arch": "x86_64"
      },
      "libuser": {
        "epoch": "0",
        "version": "0.56.13",
        "release": "8.el6_7",
        "installdate": "1485473200",
        "arch": "x86_64"
      },
      "yum-metadata-parser": {
        "epoch": "0",
        "version": "1.1.2",
        "release": "16.el6",
        "installdate": "1485473200",
        "arch": "x86_64"
      },
      "dhcp-common": {
        "epoch": "12",
        "version": "4.1.1",
        "release": "51.P1.el6.centos",
        "installdate": "1485473200",
        "arch": "x86_64"
      },
      "iproute": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "54.el6",
        "installdate": "1485473201",
        "arch": "x86_64"
      },
      "iputils": {
        "epoch": "0",
        "version": "20071127",
        "release": "21.el6",
        "installdate": "1485473201",
        "arch": "x86_64"
      },
      "device-mapper-multipath-libs": {
        "epoch": "0",
        "version": "0.4.9",
        "release": "93.el6",
        "installdate": "1485473203",
        "arch": "x86_64"
      },
      "rsyslog": {
        "epoch": "0",
        "version": "5.8.10",
        "release": "10.el6_6",
        "installdate": "1485473203",
        "arch": "x86_64"
      },
      "postfix": {
        "epoch": "2",
        "version": "2.6.6",
        "release": "6.el6_7.1",
        "installdate": "1485473204",
        "arch": "x86_64"
      },
      "iptables-ipv6": {
        "epoch": "0",
        "version": "1.4.7",
        "release": "16.el6",
        "installdate": "1485473205",
        "arch": "x86_64"
      },
      "kbd-misc": {
        "epoch": "0",
        "version": "1.15",
        "release": "11.el6",
        "installdate": "1485473206",
        "arch": "noarch"
      },
      "device-mapper-multipath": {
        "epoch": "0",
        "version": "0.4.9",
        "release": "93.el6",
        "installdate": "1485473243",
        "arch": "x86_64"
      },
      "b43-openfwwf": {
        "epoch": "0",
        "version": "5.2",
        "release": "10.el6",
        "installdate": "1485473245",
        "arch": "noarch"
      },
      "authconfig": {
        "epoch": "0",
        "version": "6.1.12",
        "release": "23.el6",
        "installdate": "1485473246",
        "arch": "x86_64"
      },
      "efibootmgr": {
        "epoch": "0",
        "version": "0.5.4",
        "release": "13.el6",
        "installdate": "1485473246",
        "arch": "x86_64"
      },
      "audit": {
        "epoch": "0",
        "version": "2.4.5",
        "release": "3.el6",
        "installdate": "1485473246",
        "arch": "x86_64"
      },
      "xfsprogs": {
        "epoch": "0",
        "version": "3.1.1",
        "release": "19.el6",
        "installdate": "1485473247",
        "arch": "x86_64"
      },
      "attr": {
        "epoch": "0",
        "version": "2.4.44",
        "release": "7.el6",
        "installdate": "1485473247",
        "arch": "x86_64"
      },
      "rootfiles": {
        "epoch": "0",
        "version": "8.1",
        "release": "6.1.el6",
        "installdate": "1485473247",
        "arch": "noarch"
      },
      "gpg-pubkey": {
        "epoch": "0",
        "version": "c105b9de",
        "release": "4e0fd3a3",
        "installdate": "1485473342",
        "arch": "(none)"
      },
      "cloog-ppl": {
        "epoch": "0",
        "version": "0.15.7",
        "release": "1.2.el6",
        "installdate": "1485473359",
        "arch": "x86_64"
      },
      "kernel-headers": {
        "epoch": "0",
        "version": "2.6.32",
        "release": "642.13.1.el6",
        "installdate": "1485473360",
        "arch": "x86_64"
      },
      "glibc-devel": {
        "epoch": "0",
        "version": "2.12",
        "release": "1.192.el6",
        "installdate": "1485473360",
        "arch": "x86_64"
      },
      "wget": {
        "epoch": "0",
        "version": "1.12",
        "release": "8.el6",
        "installdate": "1485473362",
        "arch": "x86_64"
      },
      "bash": {
        "epoch": "0",
        "version": "4.1.2",
        "release": "41.el6_8",
        "installdate": "1485473399",
        "arch": "x86_64"
      },
      "libudev": {
        "epoch": "0",
        "version": "147",
        "release": "2.73.el6_8.2",
        "installdate": "1485473400",
        "arch": "x86_64"
      },
      "grep": {
        "epoch": "0",
        "version": "2.20",
        "release": "5.el6_8",
        "installdate": "1485473401",
        "arch": "x86_64"
      },
      "nss-softokn": {
        "epoch": "0",
        "version": "3.14.3",
        "release": "23.3.el6_8",
        "installdate": "1485473401",
        "arch": "x86_64"
      },
      "nss": {
        "epoch": "0",
        "version": "3.21.3",
        "release": "2.el6_8",
        "installdate": "1485473401",
        "arch": "x86_64"
      },
      "libuuid": {
        "epoch": "0",
        "version": "2.17.2",
        "release": "12.24.el6_8.1",
        "installdate": "1485473402",
        "arch": "x86_64"
      },
      "tar": {
        "epoch": "2",
        "version": "1.23",
        "release": "15.el6_8",
        "installdate": "1485473402",
        "arch": "x86_64"
      },
      "dracut": {
        "epoch": "0",
        "version": "004",
        "release": "409.el6_8.2",
        "installdate": "1485473405",
        "arch": "noarch"
      },
      "initscripts": {
        "epoch": "0",
        "version": "9.03.53",
        "release": "1.el6.centos.1",
        "installdate": "1485473406",
        "arch": "x86_64"
      },
      "util-linux-ng": {
        "epoch": "0",
        "version": "2.17.2",
        "release": "12.24.el6_8.1",
        "installdate": "1485473411",
        "arch": "x86_64"
      },
      "device-mapper-libs": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6_8.1",
        "installdate": "1485473412",
        "arch": "x86_64"
      },
      "device-mapper-event-libs": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6_8.1",
        "installdate": "1485473412",
        "arch": "x86_64"
      },
      "policycoreutils": {
        "epoch": "0",
        "version": "2.0.83",
        "release": "30.1.el6_8",
        "installdate": "1485473412",
        "arch": "x86_64"
      },
      "device-mapper-event": {
        "epoch": "0",
        "version": "1.02.117",
        "release": "7.el6_8.1",
        "installdate": "1485473413",
        "arch": "x86_64"
      },
      "cronie-anacron": {
        "epoch": "0",
        "version": "1.4.4",
        "release": "16.el6_8.2",
        "installdate": "1485473413",
        "arch": "x86_64"
      }
    },
    "hostname": "epplkraw0381t1",
    "machinename": "epplkraw0381t1.budapest.epam.com",
    "fqdn": "epplkraw0381t1.budapest.epam.com",
    "domain": "budapest.epam.com",
    "shells": [
      "/bin/sh",
      "/bin/bash",
      "/sbin/nologin",
      "/bin/dash"
    ],
    "block_device": {
      "ram0": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram1": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram2": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram3": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram4": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram5": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram6": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram7": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram8": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram9": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram10": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram11": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram12": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram13": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram14": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "ram15": {
        "size": "32768",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop0": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop1": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop2": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop3": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop4": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop5": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop6": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "loop7": {
        "size": "0",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "sda": {
        "size": "40960000",
        "removable": "0",
        "model": "VBOX HARDDISK",
        "rev": "1.0",
        "state": "running",
        "timeout": "30",
        "vendor": "ATA",
        "queue_depth": "31",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "dm-0": {
        "size": "37371904",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      },
      "dm-1": {
        "size": "2555904",
        "removable": "0",
        "rotational": "1",
        "physical_block_size": "512",
        "logical_block_size": "512"
      }
    },
    "hostnamectl": {

    },
    "filesystem2": {
      "by_device": {
        "/dev/mapper/vg_epplkraw0381t1-lv_root": {
          "kb_size": "18261312",
          "kb_used": "2069792",
          "kb_available": "15257224",
          "percent_used": "12%",
          "total_inodes": "1169168",
          "inodes_used": "109582",
          "inodes_available": "1059586",
          "inodes_percent_used": "10%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "22e7732c-8de5-4929-a338-4face887cb95",
          "mounts": [
            "/"
          ]
        },
        "tmpfs": {
          "kb_size": "315392",
          "kb_used": "0",
          "kb_available": "315392",
          "percent_used": "0%",
          "total_inodes": "78848",
          "inodes_used": "1",
          "inodes_available": "78847",
          "inodes_percent_used": "1%",
          "fs_type": "tmpfs",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/dev/shm"
          ]
        },
        "/dev/sda1": {
          "kb_size": "487652",
          "kb_used": "52777",
          "kb_available": "409275",
          "percent_used": "12%",
          "total_inodes": "128016",
          "inodes_used": "44",
          "inodes_available": "127972",
          "inodes_percent_used": "1%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "afc9d16e-72b3-46bd-995d-0ff5bd489127",
          "mounts": [
            "/boot"
          ]
        },
        "vagrant": {
          "kb_size": "741980832",
          "kb_used": "115032236",
          "kb_available": "626948596",
          "percent_used": "16%",
          "total_inodes": "1000",
          "inodes_used": "0",
          "inodes_available": "1000",
          "inodes_percent_used": "0%",
          "fs_type": "vboxsf",
          "mount_options": [
            "uid=500",
            "gid=500",
            "rw"
          ],
          "mounts": [
            "/vagrant"
          ]
        },
        "proc": {
          "fs_type": "proc",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/proc"
          ]
        },
        "sysfs": {
          "fs_type": "sysfs",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/sys"
          ]
        },
        "devpts": {
          "fs_type": "devpts",
          "mount_options": [
            "rw",
            "gid=5",
            "mode=620"
          ],
          "mounts": [
            "/dev/pts"
          ]
        },
        "none": {
          "fs_type": "binfmt_misc",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/proc/sys/fs/binfmt_misc"
          ]
        },
        "/dev/sda": {

        },
        "/dev/sda2": {
          "fs_type": "LVM2_member",
          "uuid": "xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa"
        },
        "/dev/mapper/vg_epplkraw0381t1-lv_swap": {
          "fs_type": "swap",
          "uuid": "35eb589b-770a-4fd0-82be-2f2a95ca8eb7"
        },
        "rootfs": {
          "fs_type": "rootfs",
          "mount_options": [
            "rw"
          ],
          "mounts": [
            "/"
          ]
        },
        "devtmpfs": {
          "fs_type": "devtmpfs",
          "mount_options": [
            "rw",
            "relatime",
            "size=304660k",
            "nr_inodes=76165",
            "mode=755"
          ],
          "mounts": [
            "/dev"
          ]
        },
        "/proc/bus/usb": {
          "fs_type": "usbfs",
          "mount_options": [
            "rw",
            "relatime"
          ],
          "mounts": [
            "/proc/bus/usb"
          ]
        }
      },
      "by_mountpoint": {
        "/": {
          "kb_size": "18261312",
          "kb_used": "2069792",
          "kb_available": "15257224",
          "percent_used": "12%",
          "total_inodes": "1169168",
          "inodes_used": "109582",
          "inodes_available": "1059586",
          "inodes_percent_used": "10%",
          "fs_type": "rootfs",
          "mount_options": [
            "rw"
          ],
          "uuid": "22e7732c-8de5-4929-a338-4face887cb95",
          "devices": [
            "/dev/mapper/vg_epplkraw0381t1-lv_root",
            "rootfs"
          ]
        },
        "/dev/shm": {
          "kb_size": "315392",
          "kb_used": "0",
          "kb_available": "315392",
          "percent_used": "0%",
          "total_inodes": "78848",
          "inodes_used": "1",
          "inodes_available": "78847",
          "inodes_percent_used": "1%",
          "fs_type": "tmpfs",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "tmpfs"
          ]
        },
        "/boot": {
          "kb_size": "487652",
          "kb_used": "52777",
          "kb_available": "409275",
          "percent_used": "12%",
          "total_inodes": "128016",
          "inodes_used": "44",
          "inodes_available": "127972",
          "inodes_percent_used": "1%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "afc9d16e-72b3-46bd-995d-0ff5bd489127",
          "devices": [
            "/dev/sda1"
          ]
        },
        "/vagrant": {
          "kb_size": "741980832",
          "kb_used": "115032236",
          "kb_available": "626948596",
          "percent_used": "16%",
          "total_inodes": "1000",
          "inodes_used": "0",
          "inodes_available": "1000",
          "inodes_percent_used": "0%",
          "fs_type": "vboxsf",
          "mount_options": [
            "uid=500",
            "gid=500",
            "rw"
          ],
          "devices": [
            "vagrant"
          ]
        },
        "/proc": {
          "fs_type": "proc",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "proc"
          ]
        },
        "/sys": {
          "fs_type": "sysfs",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "sysfs"
          ]
        },
        "/dev/pts": {
          "fs_type": "devpts",
          "mount_options": [
            "rw",
            "gid=5",
            "mode=620"
          ],
          "devices": [
            "devpts"
          ]
        },
        "/proc/sys/fs/binfmt_misc": {
          "fs_type": "binfmt_misc",
          "mount_options": [
            "rw"
          ],
          "devices": [
            "none"
          ]
        },
        "/dev": {
          "fs_type": "devtmpfs",
          "mount_options": [
            "rw",
            "relatime",
            "size=304660k",
            "nr_inodes=76165",
            "mode=755"
          ],
          "devices": [
            "devtmpfs"
          ]
        },
        "/proc/bus/usb": {
          "fs_type": "usbfs",
          "mount_options": [
            "rw",
            "relatime"
          ],
          "devices": [
            "/proc/bus/usb"
          ]
        }
      },
      "by_pair": {
        "/dev/mapper/vg_epplkraw0381t1-lv_root,/": {
          "device": "/dev/mapper/vg_epplkraw0381t1-lv_root",
          "kb_size": "18261312",
          "kb_used": "2069792",
          "kb_available": "15257224",
          "percent_used": "12%",
          "mount": "/",
          "total_inodes": "1169168",
          "inodes_used": "109582",
          "inodes_available": "1059586",
          "inodes_percent_used": "10%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "22e7732c-8de5-4929-a338-4face887cb95"
        },
        "tmpfs,/dev/shm": {
          "device": "tmpfs",
          "kb_size": "315392",
          "kb_used": "0",
          "kb_available": "315392",
          "percent_used": "0%",
          "mount": "/dev/shm",
          "total_inodes": "78848",
          "inodes_used": "1",
          "inodes_available": "78847",
          "inodes_percent_used": "1%",
          "fs_type": "tmpfs",
          "mount_options": [
            "rw"
          ]
        },
        "/dev/sda1,/boot": {
          "device": "/dev/sda1",
          "kb_size": "487652",
          "kb_used": "52777",
          "kb_available": "409275",
          "percent_used": "12%",
          "mount": "/boot",
          "total_inodes": "128016",
          "inodes_used": "44",
          "inodes_available": "127972",
          "inodes_percent_used": "1%",
          "fs_type": "ext4",
          "mount_options": [
            "rw"
          ],
          "uuid": "afc9d16e-72b3-46bd-995d-0ff5bd489127"
        },
        "vagrant,/vagrant": {
          "device": "vagrant",
          "kb_size": "741980832",
          "kb_used": "115032236",
          "kb_available": "626948596",
          "percent_used": "16%",
          "mount": "/vagrant",
          "total_inodes": "1000",
          "inodes_used": "0",
          "inodes_available": "1000",
          "inodes_percent_used": "0%",
          "fs_type": "vboxsf",
          "mount_options": [
            "uid=500",
            "gid=500",
            "rw"
          ]
        },
        "proc,/proc": {
          "device": "proc",
          "mount": "/proc",
          "fs_type": "proc",
          "mount_options": [
            "rw"
          ]
        },
        "sysfs,/sys": {
          "device": "sysfs",
          "mount": "/sys",
          "fs_type": "sysfs",
          "mount_options": [
            "rw"
          ]
        },
        "devpts,/dev/pts": {
          "device": "devpts",
          "mount": "/dev/pts",
          "fs_type": "devpts",
          "mount_options": [
            "rw",
            "gid=5",
            "mode=620"
          ]
        },
        "none,/proc/sys/fs/binfmt_misc": {
          "device": "none",
          "mount": "/proc/sys/fs/binfmt_misc",
          "fs_type": "binfmt_misc",
          "mount_options": [
            "rw"
          ]
        },
        "/dev/sda,": {
          "device": "/dev/sda"
        },
        "/dev/sda2,": {
          "device": "/dev/sda2",
          "fs_type": "LVM2_member",
          "uuid": "xPDQLH-WmA9-vjfN-5BTj-Vjlg-JM21-jzBvaa"
        },
        "/dev/mapper/vg_epplkraw0381t1-lv_swap,": {
          "device": "/dev/mapper/vg_epplkraw0381t1-lv_swap",
          "fs_type": "swap",
          "uuid": "35eb589b-770a-4fd0-82be-2f2a95ca8eb7"
        },
        "rootfs,/": {
          "device": "rootfs",
          "mount": "/",
          "fs_type": "rootfs",
          "mount_options": [
            "rw"
          ]
        },
        "devtmpfs,/dev": {
          "device": "devtmpfs",
          "mount": "/dev",
          "fs_type": "devtmpfs",
          "mount_options": [
            "rw",
            "relatime",
            "size=304660k",
            "nr_inodes=76165",
            "mode=755"
          ]
        },
        "/proc/bus/usb,/proc/bus/usb": {
          "device": "/proc/bus/usb",
          "mount": "/proc/bus/usb",
          "fs_type": "usbfs",
          "mount_options": [
            "rw",
            "relatime"
          ]
        }
      }
    },
    "init_package": "init",
    "recipes": [
      "chef_nginx::default",
      "iptables::default",
      "chef_nginx::package",
      "chef_nginx::ohai_plugin",
      "chef_nginx::repo",
      "chef_nginx::commons",
      "chef_nginx::commons_dir",
      "chef_nginx::commons_script",
      "chef_nginx::commons_conf",
      "iptables::_package"
    ],
    "expanded_run_list": [
      "chef_nginx::default",
      "iptables::default"
    ],
    "roles": [

    ],
    "cookbooks": {
      "chef_nginx": {
        "version": "6.0.1"
      },
      "iptables": {
        "version": "4.0.1"
      },
      "build-essential": {
        "version": "8.0.0"
      },
      "ohai": {
        "version": "5.0.2"
      },
      "yum-epel": {
        "version": "2.1.1"
      },
      "compat_resource": {
        "version": "12.16.3"
      },
      "zypper": {
        "version": "0.3.0"
      },
      "seven_zip": {
        "version": "2.0.2"
      },
      "mingw": {
        "version": "2.0.0"
      },
      "windows": {
        "version": "3.0.4"
      }
    },
    "nginx": {
      "version": "1.10.3",
      "configure_arguments": [
        "--prefix=/etc/nginx",
        "--sbin-path=/usr/sbin/nginx",
        "--modules-path=/usr/lib64/nginx/modules",
        "--conf-path=/etc/nginx/nginx.conf",
        "--error-log-path=/var/log/nginx/error.log",
        "--http-log-path=/var/log/nginx/access.log",
        "--pid-path=/var/run/nginx.pid",
        "--lock-path=/var/run/nginx.lock",
        "--http-client-body-temp-path=/var/cache/nginx/client_temp",
        "--http-proxy-temp-path=/var/cache/nginx/proxy_temp",
        "--http-fastcgi-temp-path=/var/cache/nginx/fastcgi_temp",
        "--http-uwsgi-temp-path=/var/cache/nginx/uwsgi_temp",
        "--http-scgi-temp-path=/var/cache/nginx/scgi_temp",
        "--user=nginx",
        "--group=nginx",
        "--with-file-aio",
        "--with-threads",
        "--with-ipv6",
        "--with-http_addition_module",
        "--with-http_auth_request_module",
        "--with-http_dav_module",
        "--with-http_flv_module",
        "--with-http_gunzip_module",
        "--with-http_gzip_static_module",
        "--with-http_mp4_module",
        "--with-http_random_index_module",
        "--with-http_realip_module",
        "--with-http_secure_link_module",
        "--with-http_slice_module",
        "--with-http_ssl_module",
        "--with-http_stub_status_module",
        "--with-http_sub_module",
        "--with-http_v2_module",
        "--with-mail",
        "--with-mail_ssl_module",
        "--with-stream",
        "--with-stream_ssl_module",
        "--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector --param=ssp-buffer-size=4 -m64 -mtune=generic -fPIC'",
        "--with-ld-opt='-Wl,-z,relro -Wl,-z,now -pie'"
      ],
      "prefix": "/etc/nginx",
      "conf_path": "/etc/nginx/nginx.conf"
    }
  },
  "normal": {
    "tags": [

    ],
    "nginx": {
      "default_root": "/usr/share/nginx/html"
    }
  },
  "chef_type": "node",
  "default": {
    "windows": {
      "rubyzipversion": null
    },
    "seven_zip": {
      "url": "http://www.7-zip.org/a/7z1514-x64.msi",
      "checksum": "cefe1a9092d8a6be68468c33910d6206b40e934fb63cab686c5cccf369fbf712",
      "package_name": "7-Zip 15.14 (x64 edition)",
      "default_extract_timeout": 600
    },
    "build-essential": {
      "compile_time": false,
      "msys2": {
        "path": "\\msys2"
      }
    },
    "yum-epel": {
      "repos": [
        "epel",
        "epel-debuginfo",
        "epel-source",
        "epel-testing",
        "epel-testing-debuginfo",
        "epel-testing-source"
      ]
    },
    "yum": {
      "epel-debuginfo": {
        "repositoryid": "epel-debuginfo",
        "description": "Extra Packages for 6 - $basearch - Debug",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-debug-6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-source": {
        "repositoryid": "epel-source",
        "description": "Extra Packages for 6 - $basearch - Source",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-source-6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-testing-debuginfo": {
        "repositoryid": "epel-testing-debuginfo",
        "description": "Extra Packages for 6 - $basearch - Testing Debug",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-debug-epel6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-testing-source": {
        "repositoryid": "epel-testing-source",
        "description": "Extra Packages for 6 - $basearch - Testing Source",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-source-epel6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel-testing": {
        "repositoryid": "epel-testing",
        "description": "Extra Packages for 6 - $basearch - Testing ",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=testing-epel6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": false,
        "managed": false,
        "make_cache": true
      },
      "epel": {
        "repositoryid": "epel",
        "description": "Extra Packages for 6 - $basearch",
        "mirrorlist": "http://mirrors.fedoraproject.org/mirrorlist?repo=epel-6&arch=$basearch",
        "gpgkey": "https://dl.fedoraproject.org/pub/epel/RPM-GPG-KEY-EPEL-6",
        "failovermethod": "priority",
        "gpgcheck": true,
        "enabled": true,
        "managed": true,
        "make_cache": true
      }
    },
    "zypper": {
      "smt_host": null
    },
    "nginx": {
      "version": "1.10.3",
      "package_name": "nginx",
      "port": "80",
      "dir": "/etc/nginx",
      "script_dir": "/usr/sbin",
      "log_dir": "/var/log/nginx",
      "log_dir_perm": "0750",
      "binary": "/usr/sbin/nginx",
      "default_root": "/var/www/nginx-default",
      "ulimit": "1024",
      "repo_source": "nginx",
      "install_method": "package",
      "user": "nginx",
      "upstart": {
        "runlevels": "2345",
        "respawn_limit": null,
        "foreground": true
      },
      "group": "nginx",
      "gzip": "on",
      "gzip_static": "off",
      "gzip_http_version": "1.0",
      "gzip_comp_level": "2",
      "gzip_proxied": "any",
      "gzip_vary": "off",
      "gzip_buffers": null,
      "gzip_types": [
        "text/plain",
        "text/css",
        "application/x-javascript",
        "text/xml",
        "application/xml",
        "application/rss+xml",
        "application/atom+xml",
        "image/svg+xml",
        "text/javascript",
        "application/javascript",
        "application/json",
        "text/mathml"
      ],
      "gzip_min_length": 1000,
      "gzip_disable": "MSIE [1-6]\\.",
      "keepalive": "on",
      "keepalive_requests": 100,
      "keepalive_timeout": 65,
      "worker_processes": 2,
      "worker_connections": 1024,
      "worker_rlimit_nofile": null,
      "multi_accept": false,
      "event": null,
      "accept_mutex_delay": null,
      "server_tokens": null,
      "server_names_hash_bucket_size": 64,
      "variables_hash_max_size": 1024,
      "variables_hash_bucket_size": 64,
      "sendfile": "on",
      "underscores_in_headers": null,
      "tcp_nodelay": "on",
      "tcp_nopush": "on",
      "access_log_options": null,
      "error_log_options": null,
      "disable_access_log": false,
      "log_formats": {

      },
      "default_site_enabled": true,
      "types_hash_max_size": 2048,
      "types_hash_bucket_size": 64,
      "proxy_read_timeout": null,
      "client_body_buffer_size": null,
      "client_max_body_size": null,
      "large_client_header_buffers": null,
      "default": {
        "modules": [

        ]
      },
      "extra_configs": {

      },
      "load_modules": [

      ],
      "auth_request": {
        "url": "http://mdounin.ru/hg/ngx_http_auth_request_module/archive/662785733552.tar.gz",
        "checksum": "2057bdefd2137a5000d9dbdbfca049d1ba7832ad2b9f8855a88ea5dfa70bd8c1"
      },
      "devel": {
        "version": "0.3.0",
        "url": "https://github.com/simpl/ngx_devel_kit/archive/v0.3.0.tar.gz",
        "checksum": "88e05a99a8a7419066f5ae75966fb1efc409bad4522d14986da074554ae61619"
      },
      "echo": {
        "version": "0.59",
        "url": "https://github.com/openresty/echo-nginx-module/archive/v0.59.tar.gz",
        "checksum": "9b319ad7836202883128d2b9c24ed818082541df57ef7f2065b7557085c603cd"
      },
      "geoip": {
        "path": "/srv/geoip",
        "enable_city": true,
        "country_dat_url": "http://geolite.maxmind.com/download/geoip/database/GeoLiteCountry/GeoIP.dat.gz",
        "country_dat_checksum": null,
        "city_dat_url": "http://geolite.maxmind.com/download/geoip/database/GeoLiteCity.dat.gz",
        "city_dat_checksum": null,
        "lib_version": "1.6.9",
        "lib_url": "https://github.com/maxmind/geoip-api-c/releases/download/v1.6.9/GeoIP-1.6.9.tar.gz",
        "lib_checksum": "4b446491843de67c1af9b887da17a3e5939e0aeed4826923a5f4bf09d845096f"
      },
      "headers_more": {
        "version": "0.30",
        "source_url": "https://github.com/openresty/headers-more-nginx-module/archive/v0.30.tar.gz",
        "source_checksum": "2aad309a9313c21c7c06ee4e71a39c99d4d829e31c8b3e7d76f8c964ea8047f5"
      },
      "lua": {
        "version": "0.10.7",
        "url": "https://github.com/chaoslawful/lua-nginx-module/archive/v0.10.7.tar.gz",
        "checksum": "c21c8937dcdd6fc2b6a955f929e3f4d1388610f47180e60126e6dcab06786f77"
      },
      "luajit": {
        "version": "2.0.4",
        "url": "http://luajit.org/download/LuaJIT-2.0.4.tar.gz",
        "checksum": "620fa4eb12375021bef6e4f237cbd2dd5d49e56beb414bee052c746beef1807d"
      },
      "naxsi": {
        "version": "0.54",
        "url": "https://github.com/nbs-system/naxsi/archive/0.54.tar.gz",
        "checksum": "9cc2c09405bc71f78ef26a8b6d70afcea3fccbe8125df70cb0cfc480133daba5"
      },
      "openssl_source": {
        "version": "1.0.2k",
        "url": "http://www.openssl.org/source/openssl-1.0.2k.tar.gz"
      },
      "pagespeed": {
        "version": "1.11.33.2",
        "url": "https://github.com/pagespeed/ngx_pagespeed/archive/release-1.11.33.2-beta.tar.gz",
        "packages": {
          "rhel": [
            "pcre-devel",
            "zlib-devel"
          ],
          "debian": [
            "zlib1g-dev",
            "libpcre3",
            "libpcre3-dev"
          ]
        }
      },
      "psol": {
        "url": "https://dl.google.com/dl/page-speed/psol/1.11.33.2.tar.gz"
      },
      "passenger": {
        "version": "4.0.57",
        "root": "/opt/chefdk/embedded/lib/ruby/gems/2.3.0/gems/passenger-4.0.57",
        "ruby": "/opt/chefdk/embedded/bin/ruby",
        "packages": {
          "rhel": [
            "ruby-devel",
            "libcurl-devel"
          ],
          "fedora": [
            "ruby-devel",
            "libcurl-devel"
          ],
          "debian": [
            "ruby-dev",
            "libcurl4-gnutls-dev"
          ]
        },
        "install_rake": true,
        "spawn_method": "smart-lv2",
        "buffer_response": "on",
        "max_pool_size": 6,
        "min_instances": 1,
        "max_instances_per_app": 0,
        "pool_idle_time": 300,
        "max_requests": 0,
        "gem_binary": null,
        "show_version_in_header": "on",
        "passenger_log_file": null,
        "nodejs": null
      },
      "enable_rate_limiting": false,
      "rate_limiting_zone_name": "default",
      "rate_limiting_backoff": "10m",
      "rate_limit": "1r/s",
      "upstream_repository": "http://nginx.org/packages/centos/6/$basearch/",
      "set_misc": {
        "version": "0.30",
        "url": "https://github.com/agentzh/set-misc-nginx-module/archive/v0.30.tar.gz",
        "checksum": "59920dd3f92c2be32627121605751b52eae32b5884be09f2e4c53fb2fae8aabc"
      },
      "socketproxy": {
        "root": "/usr/share/nginx/apps",
        "app_owner": "root",
        "logname": "socketproxy",
        "log_level": "error"
      },
      "init_style": "init",
      "source": {
        "version": "1.10.3",
        "prefix": "/opt/nginx-1.10.3",
        "conf_path": "/etc/nginx/nginx.conf",
        "sbin_path": "/opt/nginx-1.10.3/sbin/nginx",
        "default_configure_flags": [
          "--prefix=/opt/nginx-1.10.3",
          "--conf-path=/etc/nginx/nginx.conf",
          "--sbin-path=/opt/nginx-1.10.3/sbin/nginx"
        ],
        "url": "http://nginx.org/download/nginx-1.10.3.tar.gz",
        "checksum": "75020f1364cac459cb733c4e1caed2d00376e40ea05588fb8793076a4c69dd90",
        "modules": [
          "chef_nginx::http_ssl_module",
          "chef_nginx::http_gzip_static_module"
        ],
        "use_existing_user": false
      },
      "configure_flags": [

      ],
      "status": {
        "port": "8090"
      },
      "syslog": {
        "git_repo": "https://github.com/yaoweibin/nginx_syslog_patch.git",
        "git_revision": "master"
      },
      "upload_progress": {
        "url": "https://github.com/masterzen/nginx-upload-progress-module/tarball/v0.9.0",
        "checksum": "3fb903dab595cf6656fa0fc5743a48daffbba2f6b5c554836be630800eaad4e2",
        "javascript_output": true,
        "zone_name": "proxied",
        "zone_size": "1m"
      }
    },
    "iptables": {
      "iptables_sysconfig": {
        "IPTABLES_MODULES": "",
        "IPTABLES_MODULES_UNLOAD": "yes",
        "IPTABLES_SAVE_ON_STOP": "no",
        "IPTABLES_SAVE_ON_RESTART": "no",
        "IPTABLES_SAVE_COUNTER": "no",
        "IPTABLES_STATUS_NUMERIC": "yes",
        "IPTABLES_STATUS_VERBOSE": "no",
        "IPTABLES_STATUS_LINENUMBERS": "yes"
      },
      "ip6tables_sysconfig": {
        "IP6TABLES_MODULES": "",
        "IP6TABLES_MODULES_UNLOAD": "yes",
        "IP6TABLES_SAVE_ON_STOP": "no",
        "IP6TABLES_SAVE_ON_RESTART": "no",
        "IP6TABLES_SAVE_COUNTER": "no",
        "IP6TABLES_STATUS_NUMERIC": "yes",
        "IP6TABLES_STATUS_VERBOSE": "no",
        "IP6TABLES_STATUS_LINENUMBERS": "yes"
      },
      "system_ruby": "/usr/bin/ruby"
    }
  },
  "override": {

  },
  "run_list": [
    "recipe[chef_nginx::default]",
    "recipe[iptables::default]"
  ]
}
--- END RESPONSE ---
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::ValidateContentLength#handle_response
[2017-04-05T17:48:04+01:00] DEBUG: HTTP server did not include a Content-Length header in response, cannot identify truncated downloads.
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::RemoteRequestID#handle_response
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Authenticator#handle_response
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::Decompressor#handle_response
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::CookieManager#handle_response
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONOutput#handle_response
[2017-04-05T17:48:04+01:00] DEBUG: Chef::HTTP calling Chef::HTTP::JSONInput#handle_response
[2017-04-05T17:48:04+01:00] INFO: Chef Run complete in 19.744315767 seconds
[2017-04-05T17:48:04+01:00] INFO: Running report handlers
[2017-04-05T17:48:04+01:00] INFO: Report handlers complete
[2017-04-05T17:48:04+01:00] DEBUG: Server doesn't support resource history, skipping resource report.
[2017-04-05T17:48:04+01:00] DEBUG: Audit Reports are disabled. Skipping sending reports.
[2017-04-05T17:48:04+01:00] DEBUG: Forked instance successfully reaped (pid: 7856)
[2017-04-05T17:48:04+01:00] DEBUG: Exiting
